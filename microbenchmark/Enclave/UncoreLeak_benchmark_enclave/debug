
enclave.signed.so:     file format elf64-x86-64


Disassembly of section .plt:

0000000000002000 <.plt>:
    2000:	ff 35 ba df 02 00    	push   0x2dfba(%rip)        # 2ffc0 <_GLOBAL_OFFSET_TABLE_+0x8>
    2006:	ff 25 bc df 02 00    	jmp    *0x2dfbc(%rip)        # 2ffc8 <_GLOBAL_OFFSET_TABLE_+0x10>
    200c:	0f 1f 40 00          	nopl   0x0(%rax)

Disassembly of section .plt.got:

0000000000002010 <_Z9pcl_entryPvS_@plt>:
    2010:	ff 25 ba df 02 00    	jmp    *0x2dfba(%rip)        # 2ffd0 <_Z9pcl_entryPvS_>
    2016:	66 90                	xchg   %ax,%ax

0000000000002018 <ippcpSetCpuFeatures@plt>:
    2018:	ff 25 d2 df 02 00    	jmp    *0x2dfd2(%rip)        # 2fff0 <ippcpSetCpuFeatures>
    201e:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000002020 <_ZSt9terminatev.cold>:
    2020:	48 8d 3d 11 18 04 00 	lea    0x41811(%rip),%rdi        # 43838 <_ZGVZSt9terminatevE4info>
    2027:	e8 54 f0 01 00       	call   21080 <__cxa_guard_abort>
    202c:	48 89 ef             	mov    %rbp,%rdi
    202f:	e8 dc b5 01 00       	call   1d610 <_Unwind_Resume>
    2034:	e8 e7 e5 01 00       	call   20620 <__cxa_begin_catch>
    2039:	e8 f9 3c 02 00       	call   25d37 <abort>
    203e:	e8 dd e5 01 00       	call   20620 <__cxa_begin_catch>
    2043:	e8 ef 3c 02 00       	call   25d37 <abort>
    2048:	f3 0f 1e fa          	endbr64 
    204c:	48 89 c5             	mov    %rax,%rbp
    204f:	e8 3c e6 01 00       	call   20690 <__cxa_end_catch>
    2054:	48 89 ef             	mov    %rbp,%rdi
    2057:	e8 b4 b5 01 00       	call   1d610 <_Unwind_Resume>
    205c:	f3 0f 1e fa          	endbr64 
    2060:	48 89 c5             	mov    %rax,%rbp
    2063:	e8 28 e6 01 00       	call   20690 <__cxa_end_catch>
    2068:	48 89 ef             	mov    %rbp,%rdi
    206b:	e8 a0 b5 01 00       	call   1d610 <_Unwind_Resume>

0000000000002070 <__cxa_free_exception.cold>:
    2070:	e8 ab e5 01 00       	call   20620 <__cxa_begin_catch>
    2075:	e8 76 e6 01 00       	call   206f0 <_ZSt9terminatev>
    207a:	f3 0f 1e fa          	endbr64 
    207e:	48 89 c5             	mov    %rax,%rbp
    2081:	e8 0a e6 01 00       	call   20690 <__cxa_end_catch>
    2086:	48 89 ef             	mov    %rbp,%rdi
    2089:	e8 82 b5 01 00       	call   1d610 <_Unwind_Resume>

000000000000208e <_Znwm.cold>:
    208e:	bf 08 00 00 00       	mov    $0x8,%edi
    2093:	e8 18 e8 01 00       	call   208b0 <__cxa_allocate_exception>
    2098:	48 89 c7             	mov    %rax,%rdi
    209b:	48 89 c5             	mov    %rax,%rbp
    209e:	e8 6d f0 01 00       	call   21110 <_ZNSt9bad_allocC1Ev>
    20a3:	48 8d 15 16 f0 01 00 	lea    0x1f016(%rip),%rdx        # 210c0 <_ZNSt9bad_allocD1Ev>
    20aa:	48 8d 35 8f dc 02 00 	lea    0x2dc8f(%rip),%rsi        # 2fd40 <_ZTISt9bad_alloc>
    20b1:	48 89 ef             	mov    %rbp,%rdi
    20b4:	e8 f7 e8 01 00       	call   209b0 <__cxa_throw>
    20b9:	90                   	nop

00000000000020ba <_ZNSt11logic_errorC2EPKc.cold>:
    20ba:	4c 89 e7             	mov    %r12,%rdi
    20bd:	e8 de ef 01 00       	call   210a0 <_ZNSt9exceptionD1Ev>
    20c2:	48 89 ef             	mov    %rbp,%rdi
    20c5:	e8 46 b5 01 00       	call   1d610 <_Unwind_Resume>

00000000000020ca <_ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE.cold>:
    20ca:	4c 89 e7             	mov    %r12,%rdi
    20cd:	e8 ce ef 01 00       	call   210a0 <_ZNSt9exceptionD1Ev>
    20d2:	48 89 ef             	mov    %rbp,%rdi
    20d5:	e8 36 b5 01 00       	call   1d610 <_Unwind_Resume>

00000000000020da <_ZNSt13runtime_errorC2EPKc.cold>:
    20da:	4c 89 e7             	mov    %r12,%rdi
    20dd:	e8 be ef 01 00       	call   210a0 <_ZNSt9exceptionD1Ev>
    20e2:	48 89 ef             	mov    %rbp,%rdi
    20e5:	e8 26 b5 01 00       	call   1d610 <_Unwind_Resume>

00000000000020ea <_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv>:
    20ea:	f3 0f 1e fa          	endbr64 
    20ee:	41 54                	push   %r12
    20f0:	bf 10 00 00 00       	mov    $0x10,%edi
    20f5:	55                   	push   %rbp
    20f6:	50                   	push   %rax
    20f7:	e8 b4 e7 01 00       	call   208b0 <__cxa_allocate_exception>
    20fc:	48 8d 35 ee 53 02 00 	lea    0x253ee(%rip),%rsi        # 274f1 <_ZTSSt12out_of_range+0x11>
    2103:	48 89 c7             	mov    %rax,%rdi
    2106:	48 89 c5             	mov    %rax,%rbp
    2109:	e8 02 f4 01 00       	call   21510 <_ZNSt11logic_errorC1EPKc>
    210e:	48 8d 15 cb f1 01 00 	lea    0x1f1cb(%rip),%rdx        # 212e0 <_ZNSt12length_errorD1Ev>
    2115:	48 8d 05 44 db 02 00 	lea    0x2db44(%rip),%rax        # 2fc60 <_ZTVSt12length_error+0x10>
    211c:	48 8d 35 f5 dc 02 00 	lea    0x2dcf5(%rip),%rsi        # 2fe18 <_ZTISt12length_error>
    2123:	48 89 ef             	mov    %rbp,%rdi
    2126:	48 89 45 00          	mov    %rax,0x0(%rbp)
    212a:	e8 81 e8 01 00       	call   209b0 <__cxa_throw>
    212f:	f3 0f 1e fa          	endbr64 
    2133:	49 89 c4             	mov    %rax,%r12
    2136:	48 89 ef             	mov    %rbp,%rdi
    2139:	e8 32 ee 01 00       	call   20f70 <__cxa_free_exception>
    213e:	4c 89 e7             	mov    %r12,%rdi
    2141:	e8 ca b4 01 00       	call   1d610 <_Unwind_Resume>

0000000000002146 <_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv>:
    2146:	f3 0f 1e fa          	endbr64 
    214a:	41 54                	push   %r12
    214c:	bf 10 00 00 00       	mov    $0x10,%edi
    2151:	55                   	push   %rbp
    2152:	50                   	push   %rax
    2153:	e8 58 e7 01 00       	call   208b0 <__cxa_allocate_exception>
    2158:	48 8d 35 92 53 02 00 	lea    0x25392(%rip),%rsi        # 274f1 <_ZTSSt12out_of_range+0x11>
    215f:	48 89 c7             	mov    %rax,%rdi
    2162:	48 89 c5             	mov    %rax,%rbp
    2165:	e8 a6 f3 01 00       	call   21510 <_ZNSt11logic_errorC1EPKc>
    216a:	48 8d 15 bf f1 01 00 	lea    0x1f1bf(%rip),%rdx        # 21330 <_ZNSt12out_of_rangeD1Ev>
    2171:	48 8d 05 10 db 02 00 	lea    0x2db10(%rip),%rax        # 2fc88 <_ZTVSt12out_of_range+0x10>
    2178:	48 8d 35 b1 dc 02 00 	lea    0x2dcb1(%rip),%rsi        # 2fe30 <_ZTISt12out_of_range>
    217f:	48 89 ef             	mov    %rbp,%rdi
    2182:	48 89 45 00          	mov    %rax,0x0(%rbp)
    2186:	e8 25 e8 01 00       	call   209b0 <__cxa_throw>
    218b:	f3 0f 1e fa          	endbr64 
    218f:	49 89 c4             	mov    %rax,%r12
    2192:	48 89 ef             	mov    %rbp,%rdi
    2195:	e8 d6 ed 01 00       	call   20f70 <__cxa_free_exception>
    219a:	4c 89 e7             	mov    %r12,%rdi
    219d:	e8 6e b4 01 00       	call   1d610 <_Unwind_Resume>

00000000000021a2 <_ULx86_64_r_uc_addr.cold>:
    21a2:	31 c0                	xor    %eax,%eax
    21a4:	c3                   	ret    

00000000000021a5 <_ULx86_64_access_reg.cold>:
    21a5:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    21aa:	e9 d9 04 02 00       	jmp    22688 <_ULx86_64_access_reg+0x58>
    21af:	90                   	nop

00000000000021b0 <trts_access_version_dummy1>:
    21b0:	f3 0f 1e fa          	endbr64 
    21b4:	48 8d 05 f5 e1 02 00 	lea    0x2e1f5(%rip),%rax        # 303b0 <sgx_trts_version>
    21bb:	c6 00 73             	movb   $0x73,(%rax)
    21be:	c3                   	ret    
    21bf:	90                   	nop

00000000000021c0 <tstdc_access_version_dummy1>:
    21c0:	f3 0f 1e fa          	endbr64 
    21c4:	c6 05 25 ff 02 00 73 	movb   $0x73,0x2ff25(%rip)        # 320f0 <sgx_tstdc_version>
    21cb:	48 8d 05 1e ff 02 00 	lea    0x2ff1e(%rip),%rax        # 320f0 <sgx_tstdc_version>
    21d2:	c3                   	ret    
    21d3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21da:	00 00 00 
    21dd:	0f 1f 00             	nopl   (%rax)

00000000000021e0 <tcxx_access_version_dummy1>:
    21e0:	f3 0f 1e fa          	endbr64 
    21e4:	c6 05 65 ff 02 00 73 	movb   $0x73,0x2ff65(%rip)        # 32150 <sgx_tcxx_version>
    21eb:	48 8d 05 5e ff 02 00 	lea    0x2ff5e(%rip),%rax        # 32150 <sgx_tcxx_version>
    21f2:	c3                   	ret    
    21f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21fa:	00 00 00 
    21fd:	0f 1f 00             	nopl   (%rax)

0000000000002200 <tcxx_access_version_dummy3>:
    2200:	f3 0f 1e fa          	endbr64 
    2204:	c6 05 45 ff 02 00 73 	movb   $0x73,0x2ff45(%rip)        # 32150 <sgx_tcxx_version>
    220b:	48 8d 05 3e ff 02 00 	lea    0x2ff3e(%rip),%rax        # 32150 <sgx_tcxx_version>
    2212:	c3                   	ret    
    2213:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    221a:	00 00 00 
    221d:	0f 1f 00             	nopl   (%rax)

0000000000002220 <tcxx_access_version_dummy5>:
    2220:	f3 0f 1e fa          	endbr64 
    2224:	c6 05 25 ff 02 00 73 	movb   $0x73,0x2ff25(%rip)        # 32150 <sgx_tcxx_version>
    222b:	48 8d 05 1e ff 02 00 	lea    0x2ff1e(%rip),%rax        # 32150 <sgx_tcxx_version>
    2232:	c3                   	ret    
    2233:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    223a:	00 00 00 
    223d:	0f 1f 00             	nopl   (%rax)

0000000000002240 <tcxx_access_version_dummy4>:
    2240:	f3 0f 1e fa          	endbr64 
    2244:	c6 05 05 ff 02 00 73 	movb   $0x73,0x2ff05(%rip)        # 32150 <sgx_tcxx_version>
    224b:	48 8d 05 fe fe 02 00 	lea    0x2fefe(%rip),%rax        # 32150 <sgx_tcxx_version>
    2252:	c3                   	ret    
    2253:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    225a:	00 00 00 
    225d:	0f 1f 00             	nopl   (%rax)

0000000000002260 <tcrypto_access_version_dummy1>:
    2260:	f3 0f 1e fa          	endbr64 
    2264:	c6 05 15 ff 02 00 73 	movb   $0x73,0x2ff15(%rip)        # 32180 <sgx_tcrypto_version>
    226b:	48 8d 05 0e ff 02 00 	lea    0x2ff0e(%rip),%rax        # 32180 <sgx_tcrypto_version>
    2272:	c3                   	ret    
    2273:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    227a:	00 00 00 
    227d:	0f 1f 00             	nopl   (%rax)

0000000000002280 <tservice_access_version_dummy1>:
    2280:	f3 0f 1e fa          	endbr64 
    2284:	c6 05 15 ff 02 00 73 	movb   $0x73,0x2ff15(%rip)        # 321a0 <sgx_tservice_version>
    228b:	48 8d 05 0e ff 02 00 	lea    0x2ff0e(%rip),%rax        # 321a0 <sgx_tservice_version>
    2292:	c3                   	ret    

0000000000002293 <sgx_allocate_and_loop_memory>:
    2293:	f3 0f 1e fa          	endbr64 
    2297:	55                   	push   %rbp
    2298:	48 89 e5             	mov    %rsp,%rbp
    229b:	48 83 ec 40          	sub    $0x40,%rsp
    229f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    22a3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    22aa:	00 00 
    22ac:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    22b0:	31 c0                	xor    %eax,%eax
    22b2:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    22b7:	74 15                	je     22ce <sgx_allocate_and_loop_memory+0x3b>
    22b9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    22bd:	be 08 00 00 00       	mov    $0x8,%esi
    22c2:	48 89 c7             	mov    %rax,%rdi
    22c5:	e8 36 82 00 00       	call   a500 <sgx_is_outside_enclave>
    22ca:	85 c0                	test   %eax,%eax
    22cc:	75 07                	jne    22d5 <sgx_allocate_and_loop_memory+0x42>
    22ce:	b8 02 00 00 00       	mov    $0x2,%eax
    22d3:	eb 6b                	jmp    2340 <sgx_allocate_and_loop_memory+0xad>
    22d5:	0f ae e8             	lfence 
    22d8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    22dc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    22e0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    22e4:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    22e8:	b9 08 00 00 00       	mov    $0x8,%ecx
    22ed:	be 08 00 00 00       	mov    $0x8,%esi
    22f2:	48 89 c7             	mov    %rax,%rdi
    22f5:	e8 b6 1e 01 00       	call   141b0 <memcpy_s>
    22fa:	85 c0                	test   %eax,%eax
    22fc:	74 07                	je     2305 <sgx_allocate_and_loop_memory+0x72>
    22fe:	b8 01 00 00 00       	mov    $0x1,%eax
    2303:	eb 3b                	jmp    2340 <sgx_allocate_and_loop_memory+0xad>
    2305:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    230c:	e8 7f 37 00 00       	call   5a90 <allocate_and_loop_memory>
    2311:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2315:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2319:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    231d:	b9 08 00 00 00       	mov    $0x8,%ecx
    2322:	be 08 00 00 00       	mov    $0x8,%esi
    2327:	48 89 c7             	mov    %rax,%rdi
    232a:	e8 01 1f 01 00       	call   14230 <memcpy_verw_s>
    232f:	85 c0                	test   %eax,%eax
    2331:	74 09                	je     233c <sgx_allocate_and_loop_memory+0xa9>
    2333:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
    233a:	eb 01                	jmp    233d <sgx_allocate_and_loop_memory+0xaa>
    233c:	90                   	nop
    233d:	8b 45 dc             	mov    -0x24(%rbp),%eax
    2340:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    2344:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    234b:	00 00 
    234d:	74 05                	je     2354 <sgx_allocate_and_loop_memory+0xc1>
    234f:	e8 ec 17 01 00       	call   13b40 <__stack_chk_fail>
    2354:	c9                   	leave  
    2355:	c3                   	ret    

0000000000002356 <sgx_ecall_type_char>:
    2356:	f3 0f 1e fa          	endbr64 
    235a:	55                   	push   %rbp
    235b:	48 89 e5             	mov    %rsp,%rbp
    235e:	48 83 ec 30          	sub    $0x30,%rsp
    2362:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2366:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    236d:	00 00 
    236f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2373:	31 c0                	xor    %eax,%eax
    2375:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    237a:	74 15                	je     2391 <sgx_ecall_type_char+0x3b>
    237c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2380:	be 01 00 00 00       	mov    $0x1,%esi
    2385:	48 89 c7             	mov    %rax,%rdi
    2388:	e8 73 81 00 00       	call   a500 <sgx_is_outside_enclave>
    238d:	85 c0                	test   %eax,%eax
    238f:	75 07                	jne    2398 <sgx_ecall_type_char+0x42>
    2391:	b8 02 00 00 00       	mov    $0x2,%eax
    2396:	eb 48                	jmp    23e0 <sgx_ecall_type_char+0x8a>
    2398:	0f ae e8             	lfence 
    239b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    239f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    23a3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    23a7:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
    23ab:	b9 01 00 00 00       	mov    $0x1,%ecx
    23b0:	be 01 00 00 00       	mov    $0x1,%esi
    23b5:	48 89 c7             	mov    %rax,%rdi
    23b8:	e8 f3 1d 01 00       	call   141b0 <memcpy_s>
    23bd:	85 c0                	test   %eax,%eax
    23bf:	74 07                	je     23c8 <sgx_ecall_type_char+0x72>
    23c1:	b8 01 00 00 00       	mov    $0x1,%eax
    23c6:	eb 18                	jmp    23e0 <sgx_ecall_type_char+0x8a>
    23c8:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    23cf:	0f b6 45 eb          	movzbl -0x15(%rbp),%eax
    23d3:	0f be c0             	movsbl %al,%eax
    23d6:	89 c7                	mov    %eax,%edi
    23d8:	e8 0a 33 00 00       	call   56e7 <ecall_type_char>
    23dd:	8b 45 ec             	mov    -0x14(%rbp),%eax
    23e0:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    23e4:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    23eb:	00 00 
    23ed:	74 05                	je     23f4 <sgx_ecall_type_char+0x9e>
    23ef:	e8 4c 17 01 00       	call   13b40 <__stack_chk_fail>
    23f4:	c9                   	leave  
    23f5:	c3                   	ret    

00000000000023f6 <sgx_ecall_type_int>:
    23f6:	f3 0f 1e fa          	endbr64 
    23fa:	55                   	push   %rbp
    23fb:	48 89 e5             	mov    %rsp,%rbp
    23fe:	48 83 ec 30          	sub    $0x30,%rsp
    2402:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2406:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    240d:	00 00 
    240f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2413:	31 c0                	xor    %eax,%eax
    2415:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    241a:	74 15                	je     2431 <sgx_ecall_type_int+0x3b>
    241c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2420:	be 04 00 00 00       	mov    $0x4,%esi
    2425:	48 89 c7             	mov    %rax,%rdi
    2428:	e8 d3 80 00 00       	call   a500 <sgx_is_outside_enclave>
    242d:	85 c0                	test   %eax,%eax
    242f:	75 07                	jne    2438 <sgx_ecall_type_int+0x42>
    2431:	b8 02 00 00 00       	mov    $0x2,%eax
    2436:	eb 44                	jmp    247c <sgx_ecall_type_int+0x86>
    2438:	0f ae e8             	lfence 
    243b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    243f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2443:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2447:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    244b:	b9 04 00 00 00       	mov    $0x4,%ecx
    2450:	be 04 00 00 00       	mov    $0x4,%esi
    2455:	48 89 c7             	mov    %rax,%rdi
    2458:	e8 53 1d 01 00       	call   141b0 <memcpy_s>
    245d:	85 c0                	test   %eax,%eax
    245f:	74 07                	je     2468 <sgx_ecall_type_int+0x72>
    2461:	b8 01 00 00 00       	mov    $0x1,%eax
    2466:	eb 14                	jmp    247c <sgx_ecall_type_int+0x86>
    2468:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    246f:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2472:	89 c7                	mov    %eax,%edi
    2474:	e8 a7 32 00 00       	call   5720 <ecall_type_int>
    2479:	8b 45 ec             	mov    -0x14(%rbp),%eax
    247c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    2480:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    2487:	00 00 
    2489:	74 05                	je     2490 <sgx_ecall_type_int+0x9a>
    248b:	e8 b0 16 01 00       	call   13b40 <__stack_chk_fail>
    2490:	c9                   	leave  
    2491:	c3                   	ret    

0000000000002492 <sgx_ecall_type_float>:
    2492:	f3 0f 1e fa          	endbr64 
    2496:	55                   	push   %rbp
    2497:	48 89 e5             	mov    %rsp,%rbp
    249a:	48 83 ec 30          	sub    $0x30,%rsp
    249e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    24a2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    24a9:	00 00 
    24ab:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    24af:	31 c0                	xor    %eax,%eax
    24b1:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    24b6:	74 15                	je     24cd <sgx_ecall_type_float+0x3b>
    24b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    24bc:	be 04 00 00 00       	mov    $0x4,%esi
    24c1:	48 89 c7             	mov    %rax,%rdi
    24c4:	e8 37 80 00 00       	call   a500 <sgx_is_outside_enclave>
    24c9:	85 c0                	test   %eax,%eax
    24cb:	75 07                	jne    24d4 <sgx_ecall_type_float+0x42>
    24cd:	b8 02 00 00 00       	mov    $0x2,%eax
    24d2:	eb 46                	jmp    251a <sgx_ecall_type_float+0x88>
    24d4:	0f ae e8             	lfence 
    24d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    24db:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    24df:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    24e3:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    24e7:	b9 04 00 00 00       	mov    $0x4,%ecx
    24ec:	be 04 00 00 00       	mov    $0x4,%esi
    24f1:	48 89 c7             	mov    %rax,%rdi
    24f4:	e8 b7 1c 01 00       	call   141b0 <memcpy_s>
    24f9:	85 c0                	test   %eax,%eax
    24fb:	74 07                	je     2504 <sgx_ecall_type_float+0x72>
    24fd:	b8 01 00 00 00       	mov    $0x1,%eax
    2502:	eb 16                	jmp    251a <sgx_ecall_type_float+0x88>
    2504:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    250b:	8b 45 e8             	mov    -0x18(%rbp),%eax
    250e:	66 0f 6e c0          	movd   %eax,%xmm0
    2512:	e8 43 32 00 00       	call   575a <ecall_type_float>
    2517:	8b 45 ec             	mov    -0x14(%rbp),%eax
    251a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    251e:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    2525:	00 00 
    2527:	74 05                	je     252e <sgx_ecall_type_float+0x9c>
    2529:	e8 12 16 01 00       	call   13b40 <__stack_chk_fail>
    252e:	c9                   	leave  
    252f:	c3                   	ret    

0000000000002530 <sgx_ecall_type_double>:
    2530:	f3 0f 1e fa          	endbr64 
    2534:	55                   	push   %rbp
    2535:	48 89 e5             	mov    %rsp,%rbp
    2538:	48 83 ec 30          	sub    $0x30,%rsp
    253c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2540:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2547:	00 00 
    2549:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    254d:	31 c0                	xor    %eax,%eax
    254f:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    2554:	74 15                	je     256b <sgx_ecall_type_double+0x3b>
    2556:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    255a:	be 08 00 00 00       	mov    $0x8,%esi
    255f:	48 89 c7             	mov    %rax,%rdi
    2562:	e8 99 7f 00 00       	call   a500 <sgx_is_outside_enclave>
    2567:	85 c0                	test   %eax,%eax
    2569:	75 07                	jne    2572 <sgx_ecall_type_double+0x42>
    256b:	b8 02 00 00 00       	mov    $0x2,%eax
    2570:	eb 48                	jmp    25ba <sgx_ecall_type_double+0x8a>
    2572:	0f ae e8             	lfence 
    2575:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2579:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    257d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2581:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    2585:	b9 08 00 00 00       	mov    $0x8,%ecx
    258a:	be 08 00 00 00       	mov    $0x8,%esi
    258f:	48 89 c7             	mov    %rax,%rdi
    2592:	e8 19 1c 01 00       	call   141b0 <memcpy_s>
    2597:	85 c0                	test   %eax,%eax
    2599:	74 07                	je     25a2 <sgx_ecall_type_double+0x72>
    259b:	b8 01 00 00 00       	mov    $0x1,%eax
    25a0:	eb 18                	jmp    25ba <sgx_ecall_type_double+0x8a>
    25a2:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    25a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    25ad:	66 48 0f 6e c0       	movq   %rax,%xmm0
    25b2:	e8 ee 31 00 00       	call   57a5 <ecall_type_double>
    25b7:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    25ba:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    25be:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    25c5:	00 00 
    25c7:	74 05                	je     25ce <sgx_ecall_type_double+0x9e>
    25c9:	e8 72 15 01 00       	call   13b40 <__stack_chk_fail>
    25ce:	c9                   	leave  
    25cf:	c3                   	ret    

00000000000025d0 <sgx_ecall_type_size_t>:
    25d0:	f3 0f 1e fa          	endbr64 
    25d4:	55                   	push   %rbp
    25d5:	48 89 e5             	mov    %rsp,%rbp
    25d8:	48 83 ec 30          	sub    $0x30,%rsp
    25dc:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    25e0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    25e7:	00 00 
    25e9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    25ed:	31 c0                	xor    %eax,%eax
    25ef:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    25f4:	74 15                	je     260b <sgx_ecall_type_size_t+0x3b>
    25f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    25fa:	be 08 00 00 00       	mov    $0x8,%esi
    25ff:	48 89 c7             	mov    %rax,%rdi
    2602:	e8 f9 7e 00 00       	call   a500 <sgx_is_outside_enclave>
    2607:	85 c0                	test   %eax,%eax
    2609:	75 07                	jne    2612 <sgx_ecall_type_size_t+0x42>
    260b:	b8 02 00 00 00       	mov    $0x2,%eax
    2610:	eb 46                	jmp    2658 <sgx_ecall_type_size_t+0x88>
    2612:	0f ae e8             	lfence 
    2615:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2619:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    261d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2621:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    2625:	b9 08 00 00 00       	mov    $0x8,%ecx
    262a:	be 08 00 00 00       	mov    $0x8,%esi
    262f:	48 89 c7             	mov    %rax,%rdi
    2632:	e8 79 1b 01 00       	call   141b0 <memcpy_s>
    2637:	85 c0                	test   %eax,%eax
    2639:	74 07                	je     2642 <sgx_ecall_type_size_t+0x72>
    263b:	b8 01 00 00 00       	mov    $0x1,%eax
    2640:	eb 16                	jmp    2658 <sgx_ecall_type_size_t+0x88>
    2642:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    2649:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    264d:	48 89 c7             	mov    %rax,%rdi
    2650:	e8 a1 31 00 00       	call   57f6 <ecall_type_size_t>
    2655:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    2658:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    265c:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    2663:	00 00 
    2665:	74 05                	je     266c <sgx_ecall_type_size_t+0x9c>
    2667:	e8 d4 14 01 00       	call   13b40 <__stack_chk_fail>
    266c:	c9                   	leave  
    266d:	c3                   	ret    

000000000000266e <sgx_ecall_type_wchar_t>:
    266e:	f3 0f 1e fa          	endbr64 
    2672:	55                   	push   %rbp
    2673:	48 89 e5             	mov    %rsp,%rbp
    2676:	48 83 ec 30          	sub    $0x30,%rsp
    267a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    267e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2685:	00 00 
    2687:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    268b:	31 c0                	xor    %eax,%eax
    268d:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    2692:	74 15                	je     26a9 <sgx_ecall_type_wchar_t+0x3b>
    2694:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2698:	be 04 00 00 00       	mov    $0x4,%esi
    269d:	48 89 c7             	mov    %rax,%rdi
    26a0:	e8 5b 7e 00 00       	call   a500 <sgx_is_outside_enclave>
    26a5:	85 c0                	test   %eax,%eax
    26a7:	75 07                	jne    26b0 <sgx_ecall_type_wchar_t+0x42>
    26a9:	b8 02 00 00 00       	mov    $0x2,%eax
    26ae:	eb 44                	jmp    26f4 <sgx_ecall_type_wchar_t+0x86>
    26b0:	0f ae e8             	lfence 
    26b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    26b7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    26bb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    26bf:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    26c3:	b9 04 00 00 00       	mov    $0x4,%ecx
    26c8:	be 04 00 00 00       	mov    $0x4,%esi
    26cd:	48 89 c7             	mov    %rax,%rdi
    26d0:	e8 db 1a 01 00       	call   141b0 <memcpy_s>
    26d5:	85 c0                	test   %eax,%eax
    26d7:	74 07                	je     26e0 <sgx_ecall_type_wchar_t+0x72>
    26d9:	b8 01 00 00 00       	mov    $0x1,%eax
    26de:	eb 14                	jmp    26f4 <sgx_ecall_type_wchar_t+0x86>
    26e0:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    26e7:	8b 45 e8             	mov    -0x18(%rbp),%eax
    26ea:	89 c7                	mov    %eax,%edi
    26ec:	e8 41 31 00 00       	call   5832 <ecall_type_wchar_t>
    26f1:	8b 45 ec             	mov    -0x14(%rbp),%eax
    26f4:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    26f8:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    26ff:	00 00 
    2701:	74 05                	je     2708 <sgx_ecall_type_wchar_t+0x9a>
    2703:	e8 38 14 01 00       	call   13b40 <__stack_chk_fail>
    2708:	c9                   	leave  
    2709:	c3                   	ret    

000000000000270a <sgx_ecall_type_struct>:
    270a:	f3 0f 1e fa          	endbr64 
    270e:	55                   	push   %rbp
    270f:	48 89 e5             	mov    %rsp,%rbp
    2712:	48 83 ec 40          	sub    $0x40,%rsp
    2716:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    271a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2721:	00 00 
    2723:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2727:	31 c0                	xor    %eax,%eax
    2729:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    272e:	74 15                	je     2745 <sgx_ecall_type_struct+0x3b>
    2730:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2734:	be 10 00 00 00       	mov    $0x10,%esi
    2739:	48 89 c7             	mov    %rax,%rdi
    273c:	e8 bf 7d 00 00       	call   a500 <sgx_is_outside_enclave>
    2741:	85 c0                	test   %eax,%eax
    2743:	75 07                	jne    274c <sgx_ecall_type_struct+0x42>
    2745:	b8 02 00 00 00       	mov    $0x2,%eax
    274a:	eb 4b                	jmp    2797 <sgx_ecall_type_struct+0x8d>
    274c:	0f ae e8             	lfence 
    274f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2753:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2757:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    275b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    275f:	b9 10 00 00 00       	mov    $0x10,%ecx
    2764:	be 10 00 00 00       	mov    $0x10,%esi
    2769:	48 89 c7             	mov    %rax,%rdi
    276c:	e8 3f 1a 01 00       	call   141b0 <memcpy_s>
    2771:	85 c0                	test   %eax,%eax
    2773:	74 07                	je     277c <sgx_ecall_type_struct+0x72>
    2775:	b8 01 00 00 00       	mov    $0x1,%eax
    277a:	eb 1b                	jmp    2797 <sgx_ecall_type_struct+0x8d>
    277c:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    2783:	8b 55 e0             	mov    -0x20(%rbp),%edx
    2786:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    278a:	89 d7                	mov    %edx,%edi
    278c:	48 89 c6             	mov    %rax,%rsi
    278f:	e8 d8 30 00 00       	call   586c <ecall_type_struct>
    2794:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    2797:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    279b:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    27a2:	00 00 
    27a4:	74 05                	je     27ab <sgx_ecall_type_struct+0xa1>
    27a6:	e8 95 13 01 00       	call   13b40 <__stack_chk_fail>
    27ab:	c9                   	leave  
    27ac:	c3                   	ret    

00000000000027ad <sgx_ecall_type_enum_union>:
    27ad:	f3 0f 1e fa          	endbr64 
    27b1:	55                   	push   %rbp
    27b2:	48 89 e5             	mov    %rsp,%rbp
    27b5:	48 83 ec 50          	sub    $0x50,%rsp
    27b9:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    27bd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    27c4:	00 00 
    27c6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    27ca:	31 c0                	xor    %eax,%eax
    27cc:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    27d1:	74 15                	je     27e8 <sgx_ecall_type_enum_union+0x3b>
    27d3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    27d7:	be 10 00 00 00       	mov    $0x10,%esi
    27dc:	48 89 c7             	mov    %rax,%rdi
    27df:	e8 1c 7d 00 00       	call   a500 <sgx_is_outside_enclave>
    27e4:	85 c0                	test   %eax,%eax
    27e6:	75 07                	jne    27ef <sgx_ecall_type_enum_union+0x42>
    27e8:	b8 02 00 00 00       	mov    $0x2,%eax
    27ed:	eb 53                	jmp    2842 <sgx_ecall_type_enum_union+0x95>
    27ef:	0f ae e8             	lfence 
    27f2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    27f6:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    27fa:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    27fe:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    2802:	b9 10 00 00 00       	mov    $0x10,%ecx
    2807:	be 10 00 00 00       	mov    $0x10,%esi
    280c:	48 89 c7             	mov    %rax,%rdi
    280f:	e8 9c 19 01 00       	call   141b0 <memcpy_s>
    2814:	85 c0                	test   %eax,%eax
    2816:	74 07                	je     281f <sgx_ecall_type_enum_union+0x72>
    2818:	b8 01 00 00 00       	mov    $0x1,%eax
    281d:	eb 23                	jmp    2842 <sgx_ecall_type_enum_union+0x95>
    281f:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
    2826:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    282a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    282e:	8b 45 e0             	mov    -0x20(%rbp),%eax
    2831:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2835:	48 89 d6             	mov    %rdx,%rsi
    2838:	89 c7                	mov    %eax,%edi
    283a:	e8 a0 30 00 00       	call   58df <ecall_type_enum_union>
    283f:	8b 45 cc             	mov    -0x34(%rbp),%eax
    2842:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    2846:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    284d:	00 00 
    284f:	74 05                	je     2856 <sgx_ecall_type_enum_union+0xa9>
    2851:	e8 ea 12 01 00       	call   13b40 <__stack_chk_fail>
    2856:	c9                   	leave  
    2857:	c3                   	ret    

0000000000002858 <sgx_ecall_pointer_user_check>:
    2858:	f3 0f 1e fa          	endbr64 
    285c:	55                   	push   %rbp
    285d:	48 89 e5             	mov    %rsp,%rbp
    2860:	48 83 ec 50          	sub    $0x50,%rsp
    2864:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    2868:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    286f:	00 00 
    2871:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2875:	31 c0                	xor    %eax,%eax
    2877:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    287c:	74 15                	je     2893 <sgx_ecall_pointer_user_check+0x3b>
    287e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    2882:	be 18 00 00 00       	mov    $0x18,%esi
    2887:	48 89 c7             	mov    %rax,%rdi
    288a:	e8 71 7c 00 00       	call   a500 <sgx_is_outside_enclave>
    288f:	85 c0                	test   %eax,%eax
    2891:	75 0a                	jne    289d <sgx_ecall_pointer_user_check+0x45>
    2893:	b8 02 00 00 00       	mov    $0x2,%eax
    2898:	e9 81 00 00 00       	jmp    291e <sgx_ecall_pointer_user_check+0xc6>
    289d:	0f ae e8             	lfence 
    28a0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    28a4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    28a8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    28ac:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    28b0:	b9 18 00 00 00       	mov    $0x18,%ecx
    28b5:	be 18 00 00 00       	mov    $0x18,%esi
    28ba:	48 89 c7             	mov    %rax,%rdi
    28bd:	e8 ee 18 01 00       	call   141b0 <memcpy_s>
    28c2:	85 c0                	test   %eax,%eax
    28c4:	74 07                	je     28cd <sgx_ecall_pointer_user_check+0x75>
    28c6:	b8 01 00 00 00       	mov    $0x1,%eax
    28cb:	eb 51                	jmp    291e <sgx_ecall_pointer_user_check+0xc6>
    28cd:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
    28d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    28d8:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    28dc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    28e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    28e4:	48 89 d6             	mov    %rdx,%rsi
    28e7:	48 89 c7             	mov    %rax,%rdi
    28ea:	e8 0e 28 00 00       	call   50fd <ecall_pointer_user_check>
    28ef:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    28f3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    28f7:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    28fb:	b9 08 00 00 00       	mov    $0x8,%ecx
    2900:	be 08 00 00 00       	mov    $0x8,%esi
    2905:	48 89 c7             	mov    %rax,%rdi
    2908:	e8 23 19 01 00       	call   14230 <memcpy_verw_s>
    290d:	85 c0                	test   %eax,%eax
    290f:	74 09                	je     291a <sgx_ecall_pointer_user_check+0xc2>
    2911:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%rbp)
    2918:	eb 01                	jmp    291b <sgx_ecall_pointer_user_check+0xc3>
    291a:	90                   	nop
    291b:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    291e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    2922:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    2929:	00 00 
    292b:	74 05                	je     2932 <sgx_ecall_pointer_user_check+0xda>
    292d:	e8 0e 12 01 00       	call   13b40 <__stack_chk_fail>
    2932:	c9                   	leave  
    2933:	c3                   	ret    

0000000000002934 <sgx_ecall_pointer_in>:
    2934:	f3 0f 1e fa          	endbr64 
    2938:	55                   	push   %rbp
    2939:	48 89 e5             	mov    %rsp,%rbp
    293c:	48 83 ec 50          	sub    $0x50,%rsp
    2940:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    2944:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    294b:	00 00 
    294d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2951:	31 c0                	xor    %eax,%eax
    2953:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    2958:	74 15                	je     296f <sgx_ecall_pointer_in+0x3b>
    295a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    295e:	be 08 00 00 00       	mov    $0x8,%esi
    2963:	48 89 c7             	mov    %rax,%rdi
    2966:	e8 95 7b 00 00       	call   a500 <sgx_is_outside_enclave>
    296b:	85 c0                	test   %eax,%eax
    296d:	75 0a                	jne    2979 <sgx_ecall_pointer_in+0x45>
    296f:	b8 02 00 00 00       	mov    $0x2,%eax
    2974:	e9 07 01 00 00       	jmp    2a80 <sgx_ecall_pointer_in+0x14c>
    2979:	0f ae e8             	lfence 
    297c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    2980:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2984:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2988:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    298c:	b9 08 00 00 00       	mov    $0x8,%ecx
    2991:	be 08 00 00 00       	mov    $0x8,%esi
    2996:	48 89 c7             	mov    %rax,%rdi
    2999:	e8 12 18 01 00       	call   141b0 <memcpy_s>
    299e:	85 c0                	test   %eax,%eax
    29a0:	74 0a                	je     29ac <sgx_ecall_pointer_in+0x78>
    29a2:	b8 01 00 00 00       	mov    $0x1,%eax
    29a7:	e9 d4 00 00 00       	jmp    2a80 <sgx_ecall_pointer_in+0x14c>
    29ac:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
    29b3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    29b7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    29bb:	48 c7 45 f0 04 00 00 	movq   $0x4,-0x10(%rbp)
    29c2:	00 
    29c3:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    29ca:	00 
    29cb:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    29d0:	74 21                	je     29f3 <sgx_ecall_pointer_in+0xbf>
    29d2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    29d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    29da:	48 89 d6             	mov    %rdx,%rsi
    29dd:	48 89 c7             	mov    %rax,%rdi
    29e0:	e8 1b 7b 00 00       	call   a500 <sgx_is_outside_enclave>
    29e5:	85 c0                	test   %eax,%eax
    29e7:	75 0a                	jne    29f3 <sgx_ecall_pointer_in+0xbf>
    29e9:	b8 02 00 00 00       	mov    $0x2,%eax
    29ee:	e9 8d 00 00 00       	jmp    2a80 <sgx_ecall_pointer_in+0x14c>
    29f3:	0f ae e8             	lfence 
    29f6:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    29fb:	74 61                	je     2a5e <sgx_ecall_pointer_in+0x12a>
    29fd:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    2a02:	74 5a                	je     2a5e <sgx_ecall_pointer_in+0x12a>
    2a04:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2a08:	83 e0 03             	and    $0x3,%eax
    2a0b:	48 85 c0             	test   %rax,%rax
    2a0e:	74 09                	je     2a19 <sgx_ecall_pointer_in+0xe5>
    2a10:	c7 45 cc 02 00 00 00 	movl   $0x2,-0x34(%rbp)
    2a17:	eb 51                	jmp    2a6a <sgx_ecall_pointer_in+0x136>
    2a19:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2a1d:	48 89 c7             	mov    %rax,%rdi
    2a20:	e8 0b e0 00 00       	call   10a30 <dlmalloc>
    2a25:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2a29:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    2a2e:	75 09                	jne    2a39 <sgx_ecall_pointer_in+0x105>
    2a30:	c7 45 cc 03 00 00 00 	movl   $0x3,-0x34(%rbp)
    2a37:	eb 31                	jmp    2a6a <sgx_ecall_pointer_in+0x136>
    2a39:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    2a3d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2a41:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    2a45:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2a49:	48 89 c7             	mov    %rax,%rdi
    2a4c:	e8 5f 17 01 00       	call   141b0 <memcpy_s>
    2a51:	85 c0                	test   %eax,%eax
    2a53:	74 09                	je     2a5e <sgx_ecall_pointer_in+0x12a>
    2a55:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%rbp)
    2a5c:	eb 0c                	jmp    2a6a <sgx_ecall_pointer_in+0x136>
    2a5e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2a62:	48 89 c7             	mov    %rax,%rdi
    2a65:	e8 fe 27 00 00       	call   5268 <ecall_pointer_in>
    2a6a:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    2a6f:	74 0c                	je     2a7d <sgx_ecall_pointer_in+0x149>
    2a71:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2a75:	48 89 c7             	mov    %rax,%rdi
    2a78:	e8 23 fa 00 00       	call   124a0 <dlfree>
    2a7d:	8b 45 cc             	mov    -0x34(%rbp),%eax
    2a80:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    2a84:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    2a8b:	00 00 
    2a8d:	74 05                	je     2a94 <sgx_ecall_pointer_in+0x160>
    2a8f:	e8 ac 10 01 00       	call   13b40 <__stack_chk_fail>
    2a94:	c9                   	leave  
    2a95:	c3                   	ret    

0000000000002a96 <sgx_ecall_pointer_out>:
    2a96:	f3 0f 1e fa          	endbr64 
    2a9a:	55                   	push   %rbp
    2a9b:	48 89 e5             	mov    %rsp,%rbp
    2a9e:	48 83 ec 50          	sub    $0x50,%rsp
    2aa2:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    2aa6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2aad:	00 00 
    2aaf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2ab3:	31 c0                	xor    %eax,%eax
    2ab5:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    2aba:	74 15                	je     2ad1 <sgx_ecall_pointer_out+0x3b>
    2abc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    2ac0:	be 08 00 00 00       	mov    $0x8,%esi
    2ac5:	48 89 c7             	mov    %rax,%rdi
    2ac8:	e8 33 7a 00 00       	call   a500 <sgx_is_outside_enclave>
    2acd:	85 c0                	test   %eax,%eax
    2acf:	75 0a                	jne    2adb <sgx_ecall_pointer_out+0x45>
    2ad1:	b8 02 00 00 00       	mov    $0x2,%eax
    2ad6:	e9 24 01 00 00       	jmp    2bff <sgx_ecall_pointer_out+0x169>
    2adb:	0f ae e8             	lfence 
    2ade:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    2ae2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2ae6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2aea:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    2aee:	b9 08 00 00 00       	mov    $0x8,%ecx
    2af3:	be 08 00 00 00       	mov    $0x8,%esi
    2af8:	48 89 c7             	mov    %rax,%rdi
    2afb:	e8 b0 16 01 00       	call   141b0 <memcpy_s>
    2b00:	85 c0                	test   %eax,%eax
    2b02:	74 0a                	je     2b0e <sgx_ecall_pointer_out+0x78>
    2b04:	b8 01 00 00 00       	mov    $0x1,%eax
    2b09:	e9 f1 00 00 00       	jmp    2bff <sgx_ecall_pointer_out+0x169>
    2b0e:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
    2b15:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2b19:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2b1d:	48 c7 45 f0 04 00 00 	movq   $0x4,-0x10(%rbp)
    2b24:	00 
    2b25:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    2b2c:	00 
    2b2d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    2b32:	74 21                	je     2b55 <sgx_ecall_pointer_out+0xbf>
    2b34:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2b38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2b3c:	48 89 d6             	mov    %rdx,%rsi
    2b3f:	48 89 c7             	mov    %rax,%rdi
    2b42:	e8 b9 79 00 00       	call   a500 <sgx_is_outside_enclave>
    2b47:	85 c0                	test   %eax,%eax
    2b49:	75 0a                	jne    2b55 <sgx_ecall_pointer_out+0xbf>
    2b4b:	b8 02 00 00 00       	mov    $0x2,%eax
    2b50:	e9 aa 00 00 00       	jmp    2bff <sgx_ecall_pointer_out+0x169>
    2b55:	0f ae e8             	lfence 
    2b58:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    2b5d:	74 51                	je     2bb0 <sgx_ecall_pointer_out+0x11a>
    2b5f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    2b64:	74 4a                	je     2bb0 <sgx_ecall_pointer_out+0x11a>
    2b66:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2b6a:	83 e0 03             	and    $0x3,%eax
    2b6d:	48 85 c0             	test   %rax,%rax
    2b70:	74 09                	je     2b7b <sgx_ecall_pointer_out+0xe5>
    2b72:	c7 45 cc 02 00 00 00 	movl   $0x2,-0x34(%rbp)
    2b79:	eb 6e                	jmp    2be9 <sgx_ecall_pointer_out+0x153>
    2b7b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2b7f:	48 89 c7             	mov    %rax,%rdi
    2b82:	e8 a9 de 00 00       	call   10a30 <dlmalloc>
    2b87:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2b8b:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    2b90:	75 09                	jne    2b9b <sgx_ecall_pointer_out+0x105>
    2b92:	c7 45 cc 03 00 00 00 	movl   $0x3,-0x34(%rbp)
    2b99:	eb 4e                	jmp    2be9 <sgx_ecall_pointer_out+0x153>
    2b9b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2b9f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2ba3:	be 00 00 00 00       	mov    $0x0,%esi
    2ba8:	48 89 c7             	mov    %rax,%rdi
    2bab:	e8 60 0e 01 00       	call   13a10 <memset>
    2bb0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2bb4:	48 89 c7             	mov    %rax,%rdi
    2bb7:	e8 13 27 00 00       	call   52cf <ecall_pointer_out>
    2bbc:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    2bc1:	74 25                	je     2be8 <sgx_ecall_pointer_out+0x152>
    2bc3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    2bc7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2bcb:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    2bcf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2bd3:	48 89 c7             	mov    %rax,%rdi
    2bd6:	e8 55 16 01 00       	call   14230 <memcpy_verw_s>
    2bdb:	85 c0                	test   %eax,%eax
    2bdd:	74 09                	je     2be8 <sgx_ecall_pointer_out+0x152>
    2bdf:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%rbp)
    2be6:	eb 01                	jmp    2be9 <sgx_ecall_pointer_out+0x153>
    2be8:	90                   	nop
    2be9:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    2bee:	74 0c                	je     2bfc <sgx_ecall_pointer_out+0x166>
    2bf0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2bf4:	48 89 c7             	mov    %rax,%rdi
    2bf7:	e8 a4 f8 00 00       	call   124a0 <dlfree>
    2bfc:	8b 45 cc             	mov    -0x34(%rbp),%eax
    2bff:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    2c03:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    2c0a:	00 00 
    2c0c:	74 05                	je     2c13 <sgx_ecall_pointer_out+0x17d>
    2c0e:	e8 2d 0f 01 00       	call   13b40 <__stack_chk_fail>
    2c13:	c9                   	leave  
    2c14:	c3                   	ret    

0000000000002c15 <sgx_ecall_pointer_in_out>:
    2c15:	f3 0f 1e fa          	endbr64 
    2c19:	55                   	push   %rbp
    2c1a:	48 89 e5             	mov    %rsp,%rbp
    2c1d:	48 83 ec 50          	sub    $0x50,%rsp
    2c21:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    2c25:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2c2c:	00 00 
    2c2e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2c32:	31 c0                	xor    %eax,%eax
    2c34:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    2c39:	74 15                	je     2c50 <sgx_ecall_pointer_in_out+0x3b>
    2c3b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    2c3f:	be 08 00 00 00       	mov    $0x8,%esi
    2c44:	48 89 c7             	mov    %rax,%rdi
    2c47:	e8 b4 78 00 00       	call   a500 <sgx_is_outside_enclave>
    2c4c:	85 c0                	test   %eax,%eax
    2c4e:	75 0a                	jne    2c5a <sgx_ecall_pointer_in_out+0x45>
    2c50:	b8 02 00 00 00       	mov    $0x2,%eax
    2c55:	e9 34 01 00 00       	jmp    2d8e <sgx_ecall_pointer_in_out+0x179>
    2c5a:	0f ae e8             	lfence 
    2c5d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    2c61:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2c65:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2c69:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    2c6d:	b9 08 00 00 00       	mov    $0x8,%ecx
    2c72:	be 08 00 00 00       	mov    $0x8,%esi
    2c77:	48 89 c7             	mov    %rax,%rdi
    2c7a:	e8 31 15 01 00       	call   141b0 <memcpy_s>
    2c7f:	85 c0                	test   %eax,%eax
    2c81:	74 0a                	je     2c8d <sgx_ecall_pointer_in_out+0x78>
    2c83:	b8 01 00 00 00       	mov    $0x1,%eax
    2c88:	e9 01 01 00 00       	jmp    2d8e <sgx_ecall_pointer_in_out+0x179>
    2c8d:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
    2c94:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2c98:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2c9c:	48 c7 45 f0 04 00 00 	movq   $0x4,-0x10(%rbp)
    2ca3:	00 
    2ca4:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    2cab:	00 
    2cac:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    2cb1:	74 21                	je     2cd4 <sgx_ecall_pointer_in_out+0xbf>
    2cb3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2cb7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2cbb:	48 89 d6             	mov    %rdx,%rsi
    2cbe:	48 89 c7             	mov    %rax,%rdi
    2cc1:	e8 3a 78 00 00       	call   a500 <sgx_is_outside_enclave>
    2cc6:	85 c0                	test   %eax,%eax
    2cc8:	75 0a                	jne    2cd4 <sgx_ecall_pointer_in_out+0xbf>
    2cca:	b8 02 00 00 00       	mov    $0x2,%eax
    2ccf:	e9 ba 00 00 00       	jmp    2d8e <sgx_ecall_pointer_in_out+0x179>
    2cd4:	0f ae e8             	lfence 
    2cd7:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    2cdc:	74 61                	je     2d3f <sgx_ecall_pointer_in_out+0x12a>
    2cde:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    2ce3:	74 5a                	je     2d3f <sgx_ecall_pointer_in_out+0x12a>
    2ce5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2ce9:	83 e0 03             	and    $0x3,%eax
    2cec:	48 85 c0             	test   %rax,%rax
    2cef:	74 09                	je     2cfa <sgx_ecall_pointer_in_out+0xe5>
    2cf1:	c7 45 cc 02 00 00 00 	movl   $0x2,-0x34(%rbp)
    2cf8:	eb 7e                	jmp    2d78 <sgx_ecall_pointer_in_out+0x163>
    2cfa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2cfe:	48 89 c7             	mov    %rax,%rdi
    2d01:	e8 2a dd 00 00       	call   10a30 <dlmalloc>
    2d06:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2d0a:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    2d0f:	75 09                	jne    2d1a <sgx_ecall_pointer_in_out+0x105>
    2d11:	c7 45 cc 03 00 00 00 	movl   $0x3,-0x34(%rbp)
    2d18:	eb 5e                	jmp    2d78 <sgx_ecall_pointer_in_out+0x163>
    2d1a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    2d1e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2d22:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    2d26:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2d2a:	48 89 c7             	mov    %rax,%rdi
    2d2d:	e8 7e 14 01 00       	call   141b0 <memcpy_s>
    2d32:	85 c0                	test   %eax,%eax
    2d34:	74 09                	je     2d3f <sgx_ecall_pointer_in_out+0x12a>
    2d36:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%rbp)
    2d3d:	eb 39                	jmp    2d78 <sgx_ecall_pointer_in_out+0x163>
    2d3f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2d43:	48 89 c7             	mov    %rax,%rdi
    2d46:	e8 ea 25 00 00       	call   5335 <ecall_pointer_in_out>
    2d4b:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    2d50:	74 25                	je     2d77 <sgx_ecall_pointer_in_out+0x162>
    2d52:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    2d56:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2d5a:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    2d5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2d62:	48 89 c7             	mov    %rax,%rdi
    2d65:	e8 c6 14 01 00       	call   14230 <memcpy_verw_s>
    2d6a:	85 c0                	test   %eax,%eax
    2d6c:	74 09                	je     2d77 <sgx_ecall_pointer_in_out+0x162>
    2d6e:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%rbp)
    2d75:	eb 01                	jmp    2d78 <sgx_ecall_pointer_in_out+0x163>
    2d77:	90                   	nop
    2d78:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    2d7d:	74 0c                	je     2d8b <sgx_ecall_pointer_in_out+0x176>
    2d7f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2d83:	48 89 c7             	mov    %rax,%rdi
    2d86:	e8 15 f7 00 00       	call   124a0 <dlfree>
    2d8b:	8b 45 cc             	mov    -0x34(%rbp),%eax
    2d8e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    2d92:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    2d99:	00 00 
    2d9b:	74 05                	je     2da2 <sgx_ecall_pointer_in_out+0x18d>
    2d9d:	e8 9e 0d 01 00       	call   13b40 <__stack_chk_fail>
    2da2:	c9                   	leave  
    2da3:	c3                   	ret    

0000000000002da4 <sgx_ecall_pointer_string>:
    2da4:	f3 0f 1e fa          	endbr64 
    2da8:	55                   	push   %rbp
    2da9:	48 89 e5             	mov    %rsp,%rbp
    2dac:	48 83 ec 60          	sub    $0x60,%rsp
    2db0:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    2db4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2dbb:	00 00 
    2dbd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2dc1:	31 c0                	xor    %eax,%eax
    2dc3:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
    2dc8:	74 15                	je     2ddf <sgx_ecall_pointer_string+0x3b>
    2dca:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    2dce:	be 10 00 00 00       	mov    $0x10,%esi
    2dd3:	48 89 c7             	mov    %rax,%rdi
    2dd6:	e8 25 77 00 00       	call   a500 <sgx_is_outside_enclave>
    2ddb:	85 c0                	test   %eax,%eax
    2ddd:	75 0a                	jne    2de9 <sgx_ecall_pointer_string+0x45>
    2ddf:	b8 02 00 00 00       	mov    $0x2,%eax
    2de4:	e9 80 01 00 00       	jmp    2f69 <sgx_ecall_pointer_string+0x1c5>
    2de9:	0f ae e8             	lfence 
    2dec:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    2df0:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    2df4:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    2df8:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    2dfc:	b9 10 00 00 00       	mov    $0x10,%ecx
    2e01:	be 10 00 00 00       	mov    $0x10,%esi
    2e06:	48 89 c7             	mov    %rax,%rdi
    2e09:	e8 a2 13 01 00       	call   141b0 <memcpy_s>
    2e0e:	85 c0                	test   %eax,%eax
    2e10:	74 0a                	je     2e1c <sgx_ecall_pointer_string+0x78>
    2e12:	b8 01 00 00 00       	mov    $0x1,%eax
    2e17:	e9 4d 01 00 00       	jmp    2f69 <sgx_ecall_pointer_string+0x1c5>
    2e1c:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
    2e23:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2e27:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    2e2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2e2f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2e33:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    2e3a:	00 
    2e3b:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    2e40:	74 21                	je     2e63 <sgx_ecall_pointer_string+0xbf>
    2e42:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2e46:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2e4a:	48 89 d6             	mov    %rdx,%rsi
    2e4d:	48 89 c7             	mov    %rax,%rdi
    2e50:	e8 ab 76 00 00       	call   a500 <sgx_is_outside_enclave>
    2e55:	85 c0                	test   %eax,%eax
    2e57:	75 0a                	jne    2e63 <sgx_ecall_pointer_string+0xbf>
    2e59:	b8 02 00 00 00       	mov    $0x2,%eax
    2e5e:	e9 06 01 00 00       	jmp    2f69 <sgx_ecall_pointer_string+0x1c5>
    2e63:	0f ae e8             	lfence 
    2e66:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    2e6b:	0f 84 83 00 00 00    	je     2ef4 <sgx_ecall_pointer_string+0x150>
    2e71:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    2e76:	74 7c                	je     2ef4 <sgx_ecall_pointer_string+0x150>
    2e78:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2e7c:	48 89 c7             	mov    %rax,%rdi
    2e7f:	e8 ac db 00 00       	call   10a30 <dlmalloc>
    2e84:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    2e88:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    2e8d:	75 0c                	jne    2e9b <sgx_ecall_pointer_string+0xf7>
    2e8f:	c7 45 bc 03 00 00 00 	movl   $0x3,-0x44(%rbp)
    2e96:	e9 b8 00 00 00       	jmp    2f53 <sgx_ecall_pointer_string+0x1af>
    2e9b:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    2e9f:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    2ea3:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    2ea7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2eab:	48 89 c7             	mov    %rax,%rdi
    2eae:	e8 fd 12 01 00       	call   141b0 <memcpy_s>
    2eb3:	85 c0                	test   %eax,%eax
    2eb5:	74 0c                	je     2ec3 <sgx_ecall_pointer_string+0x11f>
    2eb7:	c7 45 bc 01 00 00 00 	movl   $0x1,-0x44(%rbp)
    2ebe:	e9 90 00 00 00       	jmp    2f53 <sgx_ecall_pointer_string+0x1af>
    2ec3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2ec7:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    2ecb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2ecf:	48 01 d0             	add    %rdx,%rax
    2ed2:	c6 00 00             	movb   $0x0,(%rax)
    2ed5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2ed9:	48 89 c7             	mov    %rax,%rdi
    2edc:	e8 af 0b 01 00       	call   13a90 <strlen>
    2ee1:	48 83 c0 01          	add    $0x1,%rax
    2ee5:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
    2ee9:	74 09                	je     2ef4 <sgx_ecall_pointer_string+0x150>
    2eeb:	c7 45 bc 01 00 00 00 	movl   $0x1,-0x44(%rbp)
    2ef2:	eb 5f                	jmp    2f53 <sgx_ecall_pointer_string+0x1af>
    2ef4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2ef8:	48 89 c7             	mov    %rax,%rdi
    2efb:	e8 d2 25 00 00       	call   54d2 <ecall_pointer_string>
    2f00:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    2f05:	74 4b                	je     2f52 <sgx_ecall_pointer_string+0x1ae>
    2f07:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2f0b:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    2f0f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2f13:	48 01 d0             	add    %rdx,%rax
    2f16:	c6 00 00             	movb   $0x0,(%rax)
    2f19:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2f1d:	48 89 c7             	mov    %rax,%rdi
    2f20:	e8 6b 0b 01 00       	call   13a90 <strlen>
    2f25:	48 83 c0 01          	add    $0x1,%rax
    2f29:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2f2d:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    2f31:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    2f35:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    2f39:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2f3d:	48 89 c7             	mov    %rax,%rdi
    2f40:	e8 eb 12 01 00       	call   14230 <memcpy_verw_s>
    2f45:	85 c0                	test   %eax,%eax
    2f47:	74 09                	je     2f52 <sgx_ecall_pointer_string+0x1ae>
    2f49:	c7 45 bc 01 00 00 00 	movl   $0x1,-0x44(%rbp)
    2f50:	eb 01                	jmp    2f53 <sgx_ecall_pointer_string+0x1af>
    2f52:	90                   	nop
    2f53:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    2f58:	74 0c                	je     2f66 <sgx_ecall_pointer_string+0x1c2>
    2f5a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2f5e:	48 89 c7             	mov    %rax,%rdi
    2f61:	e8 3a f5 00 00       	call   124a0 <dlfree>
    2f66:	8b 45 bc             	mov    -0x44(%rbp),%eax
    2f69:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    2f6d:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    2f74:	00 00 
    2f76:	74 05                	je     2f7d <sgx_ecall_pointer_string+0x1d9>
    2f78:	e8 c3 0b 01 00       	call   13b40 <__stack_chk_fail>
    2f7d:	c9                   	leave  
    2f7e:	c3                   	ret    

0000000000002f7f <sgx_ecall_pointer_string_const>:
    2f7f:	f3 0f 1e fa          	endbr64 
    2f83:	55                   	push   %rbp
    2f84:	48 89 e5             	mov    %rsp,%rbp
    2f87:	48 83 ec 60          	sub    $0x60,%rsp
    2f8b:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    2f8f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2f96:	00 00 
    2f98:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2f9c:	31 c0                	xor    %eax,%eax
    2f9e:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
    2fa3:	74 15                	je     2fba <sgx_ecall_pointer_string_const+0x3b>
    2fa5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    2fa9:	be 10 00 00 00       	mov    $0x10,%esi
    2fae:	48 89 c7             	mov    %rax,%rdi
    2fb1:	e8 4a 75 00 00       	call   a500 <sgx_is_outside_enclave>
    2fb6:	85 c0                	test   %eax,%eax
    2fb8:	75 0a                	jne    2fc4 <sgx_ecall_pointer_string_const+0x45>
    2fba:	b8 02 00 00 00       	mov    $0x2,%eax
    2fbf:	e9 23 01 00 00       	jmp    30e7 <sgx_ecall_pointer_string_const+0x168>
    2fc4:	0f ae e8             	lfence 
    2fc7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    2fcb:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    2fcf:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    2fd3:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    2fd7:	b9 10 00 00 00       	mov    $0x10,%ecx
    2fdc:	be 10 00 00 00       	mov    $0x10,%esi
    2fe1:	48 89 c7             	mov    %rax,%rdi
    2fe4:	e8 c7 11 01 00       	call   141b0 <memcpy_s>
    2fe9:	85 c0                	test   %eax,%eax
    2feb:	74 0a                	je     2ff7 <sgx_ecall_pointer_string_const+0x78>
    2fed:	b8 01 00 00 00       	mov    $0x1,%eax
    2ff2:	e9 f0 00 00 00       	jmp    30e7 <sgx_ecall_pointer_string_const+0x168>
    2ff7:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
    2ffe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3002:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    3006:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    300a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    300e:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    3015:	00 
    3016:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    301b:	74 21                	je     303e <sgx_ecall_pointer_string_const+0xbf>
    301d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3021:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3025:	48 89 d6             	mov    %rdx,%rsi
    3028:	48 89 c7             	mov    %rax,%rdi
    302b:	e8 d0 74 00 00       	call   a500 <sgx_is_outside_enclave>
    3030:	85 c0                	test   %eax,%eax
    3032:	75 0a                	jne    303e <sgx_ecall_pointer_string_const+0xbf>
    3034:	b8 02 00 00 00       	mov    $0x2,%eax
    3039:	e9 a9 00 00 00       	jmp    30e7 <sgx_ecall_pointer_string_const+0x168>
    303e:	0f ae e8             	lfence 
    3041:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    3046:	74 7d                	je     30c5 <sgx_ecall_pointer_string_const+0x146>
    3048:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    304d:	74 76                	je     30c5 <sgx_ecall_pointer_string_const+0x146>
    304f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3053:	48 89 c7             	mov    %rax,%rdi
    3056:	e8 d5 d9 00 00       	call   10a30 <dlmalloc>
    305b:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    305f:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    3064:	75 09                	jne    306f <sgx_ecall_pointer_string_const+0xf0>
    3066:	c7 45 bc 03 00 00 00 	movl   $0x3,-0x44(%rbp)
    306d:	eb 62                	jmp    30d1 <sgx_ecall_pointer_string_const+0x152>
    306f:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    3073:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3077:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    307b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    307f:	48 89 c7             	mov    %rax,%rdi
    3082:	e8 29 11 01 00       	call   141b0 <memcpy_s>
    3087:	85 c0                	test   %eax,%eax
    3089:	74 09                	je     3094 <sgx_ecall_pointer_string_const+0x115>
    308b:	c7 45 bc 01 00 00 00 	movl   $0x1,-0x44(%rbp)
    3092:	eb 3d                	jmp    30d1 <sgx_ecall_pointer_string_const+0x152>
    3094:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3098:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    309c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    30a0:	48 01 d0             	add    %rdx,%rax
    30a3:	c6 00 00             	movb   $0x0,(%rax)
    30a6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    30aa:	48 89 c7             	mov    %rax,%rdi
    30ad:	e8 de 09 01 00       	call   13a90 <strlen>
    30b2:	48 83 c0 01          	add    $0x1,%rax
    30b6:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
    30ba:	74 09                	je     30c5 <sgx_ecall_pointer_string_const+0x146>
    30bc:	c7 45 bc 01 00 00 00 	movl   $0x1,-0x44(%rbp)
    30c3:	eb 0c                	jmp    30d1 <sgx_ecall_pointer_string_const+0x152>
    30c5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    30c9:	48 89 c7             	mov    %rax,%rdi
    30cc:	e8 36 24 00 00       	call   5507 <ecall_pointer_string_const>
    30d1:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    30d6:	74 0c                	je     30e4 <sgx_ecall_pointer_string_const+0x165>
    30d8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    30dc:	48 89 c7             	mov    %rax,%rdi
    30df:	e8 bc f3 00 00       	call   124a0 <dlfree>
    30e4:	8b 45 bc             	mov    -0x44(%rbp),%eax
    30e7:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    30eb:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    30f2:	00 00 
    30f4:	74 05                	je     30fb <sgx_ecall_pointer_string_const+0x17c>
    30f6:	e8 45 0a 01 00       	call   13b40 <__stack_chk_fail>
    30fb:	c9                   	leave  
    30fc:	c3                   	ret    

00000000000030fd <sgx_ecall_pointer_size>:
    30fd:	f3 0f 1e fa          	endbr64 
    3101:	55                   	push   %rbp
    3102:	48 89 e5             	mov    %rsp,%rbp
    3105:	48 83 ec 60          	sub    $0x60,%rsp
    3109:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    310d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3114:	00 00 
    3116:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    311a:	31 c0                	xor    %eax,%eax
    311c:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
    3121:	74 15                	je     3138 <sgx_ecall_pointer_size+0x3b>
    3123:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3127:	be 10 00 00 00       	mov    $0x10,%esi
    312c:	48 89 c7             	mov    %rax,%rdi
    312f:	e8 cc 73 00 00       	call   a500 <sgx_is_outside_enclave>
    3134:	85 c0                	test   %eax,%eax
    3136:	75 0a                	jne    3142 <sgx_ecall_pointer_size+0x45>
    3138:	b8 02 00 00 00       	mov    $0x2,%eax
    313d:	e9 2e 01 00 00       	jmp    3270 <sgx_ecall_pointer_size+0x173>
    3142:	0f ae e8             	lfence 
    3145:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3149:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    314d:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    3151:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    3155:	b9 10 00 00 00       	mov    $0x10,%ecx
    315a:	be 10 00 00 00       	mov    $0x10,%esi
    315f:	48 89 c7             	mov    %rax,%rdi
    3162:	e8 49 10 01 00       	call   141b0 <memcpy_s>
    3167:	85 c0                	test   %eax,%eax
    3169:	74 0a                	je     3175 <sgx_ecall_pointer_size+0x78>
    316b:	b8 01 00 00 00       	mov    $0x1,%eax
    3170:	e9 fb 00 00 00       	jmp    3270 <sgx_ecall_pointer_size+0x173>
    3175:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    317c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3180:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    3184:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3188:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    318c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3190:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3194:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    319b:	00 
    319c:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    31a1:	74 21                	je     31c4 <sgx_ecall_pointer_size+0xc7>
    31a3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    31a7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    31ab:	48 89 d6             	mov    %rdx,%rsi
    31ae:	48 89 c7             	mov    %rax,%rdi
    31b1:	e8 4a 73 00 00       	call   a500 <sgx_is_outside_enclave>
    31b6:	85 c0                	test   %eax,%eax
    31b8:	75 0a                	jne    31c4 <sgx_ecall_pointer_size+0xc7>
    31ba:	b8 02 00 00 00       	mov    $0x2,%eax
    31bf:	e9 ac 00 00 00       	jmp    3270 <sgx_ecall_pointer_size+0x173>
    31c4:	0f ae e8             	lfence 
    31c7:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    31cc:	74 4c                	je     321a <sgx_ecall_pointer_size+0x11d>
    31ce:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    31d3:	74 45                	je     321a <sgx_ecall_pointer_size+0x11d>
    31d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    31d9:	48 89 c7             	mov    %rax,%rdi
    31dc:	e8 4f d8 00 00       	call   10a30 <dlmalloc>
    31e1:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    31e5:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    31ea:	75 09                	jne    31f5 <sgx_ecall_pointer_size+0xf8>
    31ec:	c7 45 b4 03 00 00 00 	movl   $0x3,-0x4c(%rbp)
    31f3:	eb 65                	jmp    325a <sgx_ecall_pointer_size+0x15d>
    31f5:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    31f9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    31fd:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    3201:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    3205:	48 89 c7             	mov    %rax,%rdi
    3208:	e8 a3 0f 01 00       	call   141b0 <memcpy_s>
    320d:	85 c0                	test   %eax,%eax
    320f:	74 09                	je     321a <sgx_ecall_pointer_size+0x11d>
    3211:	c7 45 b4 01 00 00 00 	movl   $0x1,-0x4c(%rbp)
    3218:	eb 40                	jmp    325a <sgx_ecall_pointer_size+0x15d>
    321a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    321e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    3222:	48 89 d6             	mov    %rdx,%rsi
    3225:	48 89 c7             	mov    %rax,%rdi
    3228:	e8 3a 23 00 00       	call   5567 <ecall_pointer_size>
    322d:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    3232:	74 25                	je     3259 <sgx_ecall_pointer_size+0x15c>
    3234:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    3238:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    323c:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    3240:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3244:	48 89 c7             	mov    %rax,%rdi
    3247:	e8 e4 0f 01 00       	call   14230 <memcpy_verw_s>
    324c:	85 c0                	test   %eax,%eax
    324e:	74 09                	je     3259 <sgx_ecall_pointer_size+0x15c>
    3250:	c7 45 b4 01 00 00 00 	movl   $0x1,-0x4c(%rbp)
    3257:	eb 01                	jmp    325a <sgx_ecall_pointer_size+0x15d>
    3259:	90                   	nop
    325a:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    325f:	74 0c                	je     326d <sgx_ecall_pointer_size+0x170>
    3261:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    3265:	48 89 c7             	mov    %rax,%rdi
    3268:	e8 33 f2 00 00       	call   124a0 <dlfree>
    326d:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    3270:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    3274:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    327b:	00 00 
    327d:	74 05                	je     3284 <sgx_ecall_pointer_size+0x187>
    327f:	e8 bc 08 01 00       	call   13b40 <__stack_chk_fail>
    3284:	c9                   	leave  
    3285:	c3                   	ret    

0000000000003286 <sgx_ecall_pointer_count>:
    3286:	f3 0f 1e fa          	endbr64 
    328a:	55                   	push   %rbp
    328b:	48 89 e5             	mov    %rsp,%rbp
    328e:	48 83 ec 60          	sub    $0x60,%rsp
    3292:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    3296:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    329d:	00 00 
    329f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    32a3:	31 c0                	xor    %eax,%eax
    32a5:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
    32aa:	74 15                	je     32c1 <sgx_ecall_pointer_count+0x3b>
    32ac:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    32b0:	be 10 00 00 00       	mov    $0x10,%esi
    32b5:	48 89 c7             	mov    %rax,%rdi
    32b8:	e8 43 72 00 00       	call   a500 <sgx_is_outside_enclave>
    32bd:	85 c0                	test   %eax,%eax
    32bf:	75 0a                	jne    32cb <sgx_ecall_pointer_count+0x45>
    32c1:	b8 02 00 00 00       	mov    $0x2,%eax
    32c6:	e9 64 01 00 00       	jmp    342f <sgx_ecall_pointer_count+0x1a9>
    32cb:	0f ae e8             	lfence 
    32ce:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    32d2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    32d6:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    32da:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    32de:	b9 10 00 00 00       	mov    $0x10,%ecx
    32e3:	be 10 00 00 00       	mov    $0x10,%esi
    32e8:	48 89 c7             	mov    %rax,%rdi
    32eb:	e8 c0 0e 01 00       	call   141b0 <memcpy_s>
    32f0:	85 c0                	test   %eax,%eax
    32f2:	74 0a                	je     32fe <sgx_ecall_pointer_count+0x78>
    32f4:	b8 01 00 00 00       	mov    $0x1,%eax
    32f9:	e9 31 01 00 00       	jmp    342f <sgx_ecall_pointer_count+0x1a9>
    32fe:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    3305:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3309:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    330d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3311:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    3315:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3319:	48 c1 e0 02          	shl    $0x2,%rax
    331d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3321:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    3328:	00 
    3329:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    3330:	ff ff 3f 
    3333:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
    3337:	76 0a                	jbe    3343 <sgx_ecall_pointer_count+0xbd>
    3339:	b8 02 00 00 00       	mov    $0x2,%eax
    333e:	e9 ec 00 00 00       	jmp    342f <sgx_ecall_pointer_count+0x1a9>
    3343:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    3348:	74 21                	je     336b <sgx_ecall_pointer_count+0xe5>
    334a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    334e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3352:	48 89 d6             	mov    %rdx,%rsi
    3355:	48 89 c7             	mov    %rax,%rdi
    3358:	e8 a3 71 00 00       	call   a500 <sgx_is_outside_enclave>
    335d:	85 c0                	test   %eax,%eax
    335f:	75 0a                	jne    336b <sgx_ecall_pointer_count+0xe5>
    3361:	b8 02 00 00 00       	mov    $0x2,%eax
    3366:	e9 c4 00 00 00       	jmp    342f <sgx_ecall_pointer_count+0x1a9>
    336b:	0f ae e8             	lfence 
    336e:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    3373:	74 64                	je     33d9 <sgx_ecall_pointer_count+0x153>
    3375:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    337a:	74 5d                	je     33d9 <sgx_ecall_pointer_count+0x153>
    337c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3380:	83 e0 03             	and    $0x3,%eax
    3383:	48 85 c0             	test   %rax,%rax
    3386:	74 0c                	je     3394 <sgx_ecall_pointer_count+0x10e>
    3388:	c7 45 b4 02 00 00 00 	movl   $0x2,-0x4c(%rbp)
    338f:	e9 85 00 00 00       	jmp    3419 <sgx_ecall_pointer_count+0x193>
    3394:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3398:	48 89 c7             	mov    %rax,%rdi
    339b:	e8 90 d6 00 00       	call   10a30 <dlmalloc>
    33a0:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    33a4:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    33a9:	75 09                	jne    33b4 <sgx_ecall_pointer_count+0x12e>
    33ab:	c7 45 b4 03 00 00 00 	movl   $0x3,-0x4c(%rbp)
    33b2:	eb 65                	jmp    3419 <sgx_ecall_pointer_count+0x193>
    33b4:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    33b8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    33bc:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    33c0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    33c4:	48 89 c7             	mov    %rax,%rdi
    33c7:	e8 e4 0d 01 00       	call   141b0 <memcpy_s>
    33cc:	85 c0                	test   %eax,%eax
    33ce:	74 09                	je     33d9 <sgx_ecall_pointer_count+0x153>
    33d0:	c7 45 b4 01 00 00 00 	movl   $0x1,-0x4c(%rbp)
    33d7:	eb 40                	jmp    3419 <sgx_ecall_pointer_count+0x193>
    33d9:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    33dd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    33e1:	48 89 d6             	mov    %rdx,%rsi
    33e4:	48 89 c7             	mov    %rax,%rdi
    33e7:	e8 a9 21 00 00       	call   5595 <ecall_pointer_count>
    33ec:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    33f1:	74 25                	je     3418 <sgx_ecall_pointer_count+0x192>
    33f3:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    33f7:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    33fb:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    33ff:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3403:	48 89 c7             	mov    %rax,%rdi
    3406:	e8 25 0e 01 00       	call   14230 <memcpy_verw_s>
    340b:	85 c0                	test   %eax,%eax
    340d:	74 09                	je     3418 <sgx_ecall_pointer_count+0x192>
    340f:	c7 45 b4 01 00 00 00 	movl   $0x1,-0x4c(%rbp)
    3416:	eb 01                	jmp    3419 <sgx_ecall_pointer_count+0x193>
    3418:	90                   	nop
    3419:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    341e:	74 0c                	je     342c <sgx_ecall_pointer_count+0x1a6>
    3420:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    3424:	48 89 c7             	mov    %rax,%rdi
    3427:	e8 74 f0 00 00       	call   124a0 <dlfree>
    342c:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    342f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    3433:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    343a:	00 00 
    343c:	74 05                	je     3443 <sgx_ecall_pointer_count+0x1bd>
    343e:	e8 fd 06 01 00       	call   13b40 <__stack_chk_fail>
    3443:	c9                   	leave  
    3444:	c3                   	ret    

0000000000003445 <sgx_ecall_pointer_isptr_readonly>:
    3445:	f3 0f 1e fa          	endbr64 
    3449:	55                   	push   %rbp
    344a:	48 89 e5             	mov    %rsp,%rbp
    344d:	48 83 ec 60          	sub    $0x60,%rsp
    3451:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    3455:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    345c:	00 00 
    345e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3462:	31 c0                	xor    %eax,%eax
    3464:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
    3469:	74 15                	je     3480 <sgx_ecall_pointer_isptr_readonly+0x3b>
    346b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    346f:	be 10 00 00 00       	mov    $0x10,%esi
    3474:	48 89 c7             	mov    %rax,%rdi
    3477:	e8 84 70 00 00       	call   a500 <sgx_is_outside_enclave>
    347c:	85 c0                	test   %eax,%eax
    347e:	75 0a                	jne    348a <sgx_ecall_pointer_isptr_readonly+0x45>
    3480:	b8 02 00 00 00       	mov    $0x2,%eax
    3485:	e9 fe 00 00 00       	jmp    3588 <sgx_ecall_pointer_isptr_readonly+0x143>
    348a:	0f ae e8             	lfence 
    348d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3491:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    3495:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    3499:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    349d:	b9 10 00 00 00       	mov    $0x10,%ecx
    34a2:	be 10 00 00 00       	mov    $0x10,%esi
    34a7:	48 89 c7             	mov    %rax,%rdi
    34aa:	e8 01 0d 01 00       	call   141b0 <memcpy_s>
    34af:	85 c0                	test   %eax,%eax
    34b1:	74 0a                	je     34bd <sgx_ecall_pointer_isptr_readonly+0x78>
    34b3:	b8 01 00 00 00       	mov    $0x1,%eax
    34b8:	e9 cb 00 00 00       	jmp    3588 <sgx_ecall_pointer_isptr_readonly+0x143>
    34bd:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    34c4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    34c8:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    34cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    34d0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    34d4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    34d8:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    34dc:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    34e3:	00 
    34e4:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    34e9:	74 1e                	je     3509 <sgx_ecall_pointer_isptr_readonly+0xc4>
    34eb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    34ef:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    34f3:	48 89 d6             	mov    %rdx,%rsi
    34f6:	48 89 c7             	mov    %rax,%rdi
    34f9:	e8 02 70 00 00       	call   a500 <sgx_is_outside_enclave>
    34fe:	85 c0                	test   %eax,%eax
    3500:	75 07                	jne    3509 <sgx_ecall_pointer_isptr_readonly+0xc4>
    3502:	b8 02 00 00 00       	mov    $0x2,%eax
    3507:	eb 7f                	jmp    3588 <sgx_ecall_pointer_isptr_readonly+0x143>
    3509:	0f ae e8             	lfence 
    350c:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    3511:	74 4c                	je     355f <sgx_ecall_pointer_isptr_readonly+0x11a>
    3513:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    3518:	74 45                	je     355f <sgx_ecall_pointer_isptr_readonly+0x11a>
    351a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    351e:	48 89 c7             	mov    %rax,%rdi
    3521:	e8 0a d5 00 00       	call   10a30 <dlmalloc>
    3526:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    352a:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    352f:	75 09                	jne    353a <sgx_ecall_pointer_isptr_readonly+0xf5>
    3531:	c7 45 b4 03 00 00 00 	movl   $0x3,-0x4c(%rbp)
    3538:	eb 38                	jmp    3572 <sgx_ecall_pointer_isptr_readonly+0x12d>
    353a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    353e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    3542:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    3546:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    354a:	48 89 c7             	mov    %rax,%rdi
    354d:	e8 5e 0c 01 00       	call   141b0 <memcpy_s>
    3552:	85 c0                	test   %eax,%eax
    3554:	74 09                	je     355f <sgx_ecall_pointer_isptr_readonly+0x11a>
    3556:	c7 45 b4 01 00 00 00 	movl   $0x1,-0x4c(%rbp)
    355d:	eb 13                	jmp    3572 <sgx_ecall_pointer_isptr_readonly+0x12d>
    355f:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3563:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    3567:	48 89 d6             	mov    %rdx,%rsi
    356a:	48 89 c7             	mov    %rax,%rdi
    356d:	e8 72 20 00 00       	call   55e4 <ecall_pointer_isptr_readonly>
    3572:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    3577:	74 0c                	je     3585 <sgx_ecall_pointer_isptr_readonly+0x140>
    3579:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    357d:	48 89 c7             	mov    %rax,%rdi
    3580:	e8 1b ef 00 00       	call   124a0 <dlfree>
    3585:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    3588:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    358c:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    3593:	00 00 
    3595:	74 05                	je     359c <sgx_ecall_pointer_isptr_readonly+0x157>
    3597:	e8 a4 05 01 00       	call   13b40 <__stack_chk_fail>
    359c:	c9                   	leave  
    359d:	c3                   	ret    

000000000000359e <sgx_ocall_pointer_attr>:
    359e:	f3 0f 1e fa          	endbr64 
    35a2:	55                   	push   %rbp
    35a3:	48 89 e5             	mov    %rsp,%rbp
    35a6:	48 83 ec 20          	sub    $0x20,%rsp
    35aa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    35ae:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    35b5:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    35ba:	74 07                	je     35c3 <sgx_ocall_pointer_attr+0x25>
    35bc:	b8 02 00 00 00       	mov    $0x2,%eax
    35c1:	eb 08                	jmp    35cb <sgx_ocall_pointer_attr+0x2d>
    35c3:	e8 d4 1d 00 00       	call   539c <ocall_pointer_attr>
    35c8:	8b 45 fc             	mov    -0x4(%rbp),%eax
    35cb:	c9                   	leave  
    35cc:	c3                   	ret    

00000000000035cd <sgx_ecall_array_user_check>:
    35cd:	f3 0f 1e fa          	endbr64 
    35d1:	55                   	push   %rbp
    35d2:	48 89 e5             	mov    %rsp,%rbp
    35d5:	48 83 ec 40          	sub    $0x40,%rsp
    35d9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    35dd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    35e4:	00 00 
    35e6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    35ea:	31 c0                	xor    %eax,%eax
    35ec:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    35f1:	74 15                	je     3608 <sgx_ecall_array_user_check+0x3b>
    35f3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    35f7:	be 08 00 00 00       	mov    $0x8,%esi
    35fc:	48 89 c7             	mov    %rax,%rdi
    35ff:	e8 fc 6e 00 00       	call   a500 <sgx_is_outside_enclave>
    3604:	85 c0                	test   %eax,%eax
    3606:	75 07                	jne    360f <sgx_ecall_array_user_check+0x42>
    3608:	b8 02 00 00 00       	mov    $0x2,%eax
    360d:	eb 4e                	jmp    365d <sgx_ecall_array_user_check+0x90>
    360f:	0f ae e8             	lfence 
    3612:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3616:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    361a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    361e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    3622:	b9 08 00 00 00       	mov    $0x8,%ecx
    3627:	be 08 00 00 00       	mov    $0x8,%esi
    362c:	48 89 c7             	mov    %rax,%rdi
    362f:	e8 7c 0b 01 00       	call   141b0 <memcpy_s>
    3634:	85 c0                	test   %eax,%eax
    3636:	74 07                	je     363f <sgx_ecall_array_user_check+0x72>
    3638:	b8 01 00 00 00       	mov    $0x1,%eax
    363d:	eb 1e                	jmp    365d <sgx_ecall_array_user_check+0x90>
    363f:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    3646:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    364a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    364e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3652:	48 89 c7             	mov    %rax,%rdi
    3655:	e8 e2 16 00 00       	call   4d3c <ecall_array_user_check>
    365a:	8b 45 dc             	mov    -0x24(%rbp),%eax
    365d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    3661:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    3668:	00 00 
    366a:	74 05                	je     3671 <sgx_ecall_array_user_check+0xa4>
    366c:	e8 cf 04 01 00       	call   13b40 <__stack_chk_fail>
    3671:	c9                   	leave  
    3672:	c3                   	ret    

0000000000003673 <sgx_ecall_array_in>:
    3673:	f3 0f 1e fa          	endbr64 
    3677:	55                   	push   %rbp
    3678:	48 89 e5             	mov    %rsp,%rbp
    367b:	48 83 ec 50          	sub    $0x50,%rsp
    367f:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    3683:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    368a:	00 00 
    368c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3690:	31 c0                	xor    %eax,%eax
    3692:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    3697:	74 15                	je     36ae <sgx_ecall_array_in+0x3b>
    3699:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    369d:	be 08 00 00 00       	mov    $0x8,%esi
    36a2:	48 89 c7             	mov    %rax,%rdi
    36a5:	e8 56 6e 00 00       	call   a500 <sgx_is_outside_enclave>
    36aa:	85 c0                	test   %eax,%eax
    36ac:	75 0a                	jne    36b8 <sgx_ecall_array_in+0x45>
    36ae:	b8 02 00 00 00       	mov    $0x2,%eax
    36b3:	e9 07 01 00 00       	jmp    37bf <sgx_ecall_array_in+0x14c>
    36b8:	0f ae e8             	lfence 
    36bb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    36bf:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    36c3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    36c7:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    36cb:	b9 08 00 00 00       	mov    $0x8,%ecx
    36d0:	be 08 00 00 00       	mov    $0x8,%esi
    36d5:	48 89 c7             	mov    %rax,%rdi
    36d8:	e8 d3 0a 01 00       	call   141b0 <memcpy_s>
    36dd:	85 c0                	test   %eax,%eax
    36df:	74 0a                	je     36eb <sgx_ecall_array_in+0x78>
    36e1:	b8 01 00 00 00       	mov    $0x1,%eax
    36e6:	e9 d4 00 00 00       	jmp    37bf <sgx_ecall_array_in+0x14c>
    36eb:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
    36f2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    36f6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    36fa:	48 c7 45 f0 10 00 00 	movq   $0x10,-0x10(%rbp)
    3701:	00 
    3702:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    3709:	00 
    370a:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    370f:	74 21                	je     3732 <sgx_ecall_array_in+0xbf>
    3711:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3715:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3719:	48 89 d6             	mov    %rdx,%rsi
    371c:	48 89 c7             	mov    %rax,%rdi
    371f:	e8 dc 6d 00 00       	call   a500 <sgx_is_outside_enclave>
    3724:	85 c0                	test   %eax,%eax
    3726:	75 0a                	jne    3732 <sgx_ecall_array_in+0xbf>
    3728:	b8 02 00 00 00       	mov    $0x2,%eax
    372d:	e9 8d 00 00 00       	jmp    37bf <sgx_ecall_array_in+0x14c>
    3732:	0f ae e8             	lfence 
    3735:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    373a:	74 61                	je     379d <sgx_ecall_array_in+0x12a>
    373c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    3741:	74 5a                	je     379d <sgx_ecall_array_in+0x12a>
    3743:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3747:	83 e0 03             	and    $0x3,%eax
    374a:	48 85 c0             	test   %rax,%rax
    374d:	74 09                	je     3758 <sgx_ecall_array_in+0xe5>
    374f:	c7 45 cc 02 00 00 00 	movl   $0x2,-0x34(%rbp)
    3756:	eb 51                	jmp    37a9 <sgx_ecall_array_in+0x136>
    3758:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    375c:	48 89 c7             	mov    %rax,%rdi
    375f:	e8 cc d2 00 00       	call   10a30 <dlmalloc>
    3764:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3768:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    376d:	75 09                	jne    3778 <sgx_ecall_array_in+0x105>
    376f:	c7 45 cc 03 00 00 00 	movl   $0x3,-0x34(%rbp)
    3776:	eb 31                	jmp    37a9 <sgx_ecall_array_in+0x136>
    3778:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    377c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3780:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    3784:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3788:	48 89 c7             	mov    %rax,%rdi
    378b:	e8 20 0a 01 00       	call   141b0 <memcpy_s>
    3790:	85 c0                	test   %eax,%eax
    3792:	74 09                	je     379d <sgx_ecall_array_in+0x12a>
    3794:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%rbp)
    379b:	eb 0c                	jmp    37a9 <sgx_ecall_array_in+0x136>
    379d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    37a1:	48 89 c7             	mov    %rax,%rdi
    37a4:	e8 6a 16 00 00       	call   4e13 <ecall_array_in>
    37a9:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    37ae:	74 0c                	je     37bc <sgx_ecall_array_in+0x149>
    37b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    37b4:	48 89 c7             	mov    %rax,%rdi
    37b7:	e8 e4 ec 00 00       	call   124a0 <dlfree>
    37bc:	8b 45 cc             	mov    -0x34(%rbp),%eax
    37bf:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    37c3:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    37ca:	00 00 
    37cc:	74 05                	je     37d3 <sgx_ecall_array_in+0x160>
    37ce:	e8 6d 03 01 00       	call   13b40 <__stack_chk_fail>
    37d3:	c9                   	leave  
    37d4:	c3                   	ret    

00000000000037d5 <sgx_ecall_array_out>:
    37d5:	f3 0f 1e fa          	endbr64 
    37d9:	55                   	push   %rbp
    37da:	48 89 e5             	mov    %rsp,%rbp
    37dd:	48 83 ec 50          	sub    $0x50,%rsp
    37e1:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    37e5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    37ec:	00 00 
    37ee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    37f2:	31 c0                	xor    %eax,%eax
    37f4:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    37f9:	74 15                	je     3810 <sgx_ecall_array_out+0x3b>
    37fb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    37ff:	be 08 00 00 00       	mov    $0x8,%esi
    3804:	48 89 c7             	mov    %rax,%rdi
    3807:	e8 f4 6c 00 00       	call   a500 <sgx_is_outside_enclave>
    380c:	85 c0                	test   %eax,%eax
    380e:	75 0a                	jne    381a <sgx_ecall_array_out+0x45>
    3810:	b8 02 00 00 00       	mov    $0x2,%eax
    3815:	e9 24 01 00 00       	jmp    393e <sgx_ecall_array_out+0x169>
    381a:	0f ae e8             	lfence 
    381d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    3821:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3825:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3829:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    382d:	b9 08 00 00 00       	mov    $0x8,%ecx
    3832:	be 08 00 00 00       	mov    $0x8,%esi
    3837:	48 89 c7             	mov    %rax,%rdi
    383a:	e8 71 09 01 00       	call   141b0 <memcpy_s>
    383f:	85 c0                	test   %eax,%eax
    3841:	74 0a                	je     384d <sgx_ecall_array_out+0x78>
    3843:	b8 01 00 00 00       	mov    $0x1,%eax
    3848:	e9 f1 00 00 00       	jmp    393e <sgx_ecall_array_out+0x169>
    384d:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
    3854:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3858:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    385c:	48 c7 45 f0 10 00 00 	movq   $0x10,-0x10(%rbp)
    3863:	00 
    3864:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    386b:	00 
    386c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    3871:	74 21                	je     3894 <sgx_ecall_array_out+0xbf>
    3873:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3877:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    387b:	48 89 d6             	mov    %rdx,%rsi
    387e:	48 89 c7             	mov    %rax,%rdi
    3881:	e8 7a 6c 00 00       	call   a500 <sgx_is_outside_enclave>
    3886:	85 c0                	test   %eax,%eax
    3888:	75 0a                	jne    3894 <sgx_ecall_array_out+0xbf>
    388a:	b8 02 00 00 00       	mov    $0x2,%eax
    388f:	e9 aa 00 00 00       	jmp    393e <sgx_ecall_array_out+0x169>
    3894:	0f ae e8             	lfence 
    3897:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    389c:	74 51                	je     38ef <sgx_ecall_array_out+0x11a>
    389e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    38a3:	74 4a                	je     38ef <sgx_ecall_array_out+0x11a>
    38a5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    38a9:	83 e0 03             	and    $0x3,%eax
    38ac:	48 85 c0             	test   %rax,%rax
    38af:	74 09                	je     38ba <sgx_ecall_array_out+0xe5>
    38b1:	c7 45 cc 02 00 00 00 	movl   $0x2,-0x34(%rbp)
    38b8:	eb 6e                	jmp    3928 <sgx_ecall_array_out+0x153>
    38ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    38be:	48 89 c7             	mov    %rax,%rdi
    38c1:	e8 6a d1 00 00       	call   10a30 <dlmalloc>
    38c6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    38ca:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    38cf:	75 09                	jne    38da <sgx_ecall_array_out+0x105>
    38d1:	c7 45 cc 03 00 00 00 	movl   $0x3,-0x34(%rbp)
    38d8:	eb 4e                	jmp    3928 <sgx_ecall_array_out+0x153>
    38da:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    38de:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    38e2:	be 00 00 00 00       	mov    $0x0,%esi
    38e7:	48 89 c7             	mov    %rax,%rdi
    38ea:	e8 21 01 01 00       	call   13a10 <memset>
    38ef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    38f3:	48 89 c7             	mov    %rax,%rdi
    38f6:	e8 96 15 00 00       	call   4e91 <ecall_array_out>
    38fb:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    3900:	74 25                	je     3927 <sgx_ecall_array_out+0x152>
    3902:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3906:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    390a:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    390e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3912:	48 89 c7             	mov    %rax,%rdi
    3915:	e8 16 09 01 00       	call   14230 <memcpy_verw_s>
    391a:	85 c0                	test   %eax,%eax
    391c:	74 09                	je     3927 <sgx_ecall_array_out+0x152>
    391e:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%rbp)
    3925:	eb 01                	jmp    3928 <sgx_ecall_array_out+0x153>
    3927:	90                   	nop
    3928:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    392d:	74 0c                	je     393b <sgx_ecall_array_out+0x166>
    392f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3933:	48 89 c7             	mov    %rax,%rdi
    3936:	e8 65 eb 00 00       	call   124a0 <dlfree>
    393b:	8b 45 cc             	mov    -0x34(%rbp),%eax
    393e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    3942:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    3949:	00 00 
    394b:	74 05                	je     3952 <sgx_ecall_array_out+0x17d>
    394d:	e8 ee 01 01 00       	call   13b40 <__stack_chk_fail>
    3952:	c9                   	leave  
    3953:	c3                   	ret    

0000000000003954 <sgx_ecall_array_in_out>:
    3954:	f3 0f 1e fa          	endbr64 
    3958:	55                   	push   %rbp
    3959:	48 89 e5             	mov    %rsp,%rbp
    395c:	48 83 ec 50          	sub    $0x50,%rsp
    3960:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    3964:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    396b:	00 00 
    396d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3971:	31 c0                	xor    %eax,%eax
    3973:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    3978:	74 15                	je     398f <sgx_ecall_array_in_out+0x3b>
    397a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    397e:	be 08 00 00 00       	mov    $0x8,%esi
    3983:	48 89 c7             	mov    %rax,%rdi
    3986:	e8 75 6b 00 00       	call   a500 <sgx_is_outside_enclave>
    398b:	85 c0                	test   %eax,%eax
    398d:	75 0a                	jne    3999 <sgx_ecall_array_in_out+0x45>
    398f:	b8 02 00 00 00       	mov    $0x2,%eax
    3994:	e9 34 01 00 00       	jmp    3acd <sgx_ecall_array_in_out+0x179>
    3999:	0f ae e8             	lfence 
    399c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    39a0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    39a4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    39a8:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    39ac:	b9 08 00 00 00       	mov    $0x8,%ecx
    39b1:	be 08 00 00 00       	mov    $0x8,%esi
    39b6:	48 89 c7             	mov    %rax,%rdi
    39b9:	e8 f2 07 01 00       	call   141b0 <memcpy_s>
    39be:	85 c0                	test   %eax,%eax
    39c0:	74 0a                	je     39cc <sgx_ecall_array_in_out+0x78>
    39c2:	b8 01 00 00 00       	mov    $0x1,%eax
    39c7:	e9 01 01 00 00       	jmp    3acd <sgx_ecall_array_in_out+0x179>
    39cc:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
    39d3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    39d7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    39db:	48 c7 45 f0 10 00 00 	movq   $0x10,-0x10(%rbp)
    39e2:	00 
    39e3:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    39ea:	00 
    39eb:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    39f0:	74 21                	je     3a13 <sgx_ecall_array_in_out+0xbf>
    39f2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    39f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    39fa:	48 89 d6             	mov    %rdx,%rsi
    39fd:	48 89 c7             	mov    %rax,%rdi
    3a00:	e8 fb 6a 00 00       	call   a500 <sgx_is_outside_enclave>
    3a05:	85 c0                	test   %eax,%eax
    3a07:	75 0a                	jne    3a13 <sgx_ecall_array_in_out+0xbf>
    3a09:	b8 02 00 00 00       	mov    $0x2,%eax
    3a0e:	e9 ba 00 00 00       	jmp    3acd <sgx_ecall_array_in_out+0x179>
    3a13:	0f ae e8             	lfence 
    3a16:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    3a1b:	74 61                	je     3a7e <sgx_ecall_array_in_out+0x12a>
    3a1d:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    3a22:	74 5a                	je     3a7e <sgx_ecall_array_in_out+0x12a>
    3a24:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3a28:	83 e0 03             	and    $0x3,%eax
    3a2b:	48 85 c0             	test   %rax,%rax
    3a2e:	74 09                	je     3a39 <sgx_ecall_array_in_out+0xe5>
    3a30:	c7 45 cc 02 00 00 00 	movl   $0x2,-0x34(%rbp)
    3a37:	eb 7e                	jmp    3ab7 <sgx_ecall_array_in_out+0x163>
    3a39:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3a3d:	48 89 c7             	mov    %rax,%rdi
    3a40:	e8 eb cf 00 00       	call   10a30 <dlmalloc>
    3a45:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3a49:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    3a4e:	75 09                	jne    3a59 <sgx_ecall_array_in_out+0x105>
    3a50:	c7 45 cc 03 00 00 00 	movl   $0x3,-0x34(%rbp)
    3a57:	eb 5e                	jmp    3ab7 <sgx_ecall_array_in_out+0x163>
    3a59:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3a5d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3a61:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    3a65:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3a69:	48 89 c7             	mov    %rax,%rdi
    3a6c:	e8 3f 07 01 00       	call   141b0 <memcpy_s>
    3a71:	85 c0                	test   %eax,%eax
    3a73:	74 09                	je     3a7e <sgx_ecall_array_in_out+0x12a>
    3a75:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%rbp)
    3a7c:	eb 39                	jmp    3ab7 <sgx_ecall_array_in_out+0x163>
    3a7e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3a82:	48 89 c7             	mov    %rax,%rdi
    3a85:	e8 84 14 00 00       	call   4f0e <ecall_array_in_out>
    3a8a:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    3a8f:	74 25                	je     3ab6 <sgx_ecall_array_in_out+0x162>
    3a91:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3a95:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3a99:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    3a9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3aa1:	48 89 c7             	mov    %rax,%rdi
    3aa4:	e8 87 07 01 00       	call   14230 <memcpy_verw_s>
    3aa9:	85 c0                	test   %eax,%eax
    3aab:	74 09                	je     3ab6 <sgx_ecall_array_in_out+0x162>
    3aad:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%rbp)
    3ab4:	eb 01                	jmp    3ab7 <sgx_ecall_array_in_out+0x163>
    3ab6:	90                   	nop
    3ab7:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    3abc:	74 0c                	je     3aca <sgx_ecall_array_in_out+0x176>
    3abe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ac2:	48 89 c7             	mov    %rax,%rdi
    3ac5:	e8 d6 e9 00 00       	call   124a0 <dlfree>
    3aca:	8b 45 cc             	mov    -0x34(%rbp),%eax
    3acd:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    3ad1:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    3ad8:	00 00 
    3ada:	74 05                	je     3ae1 <sgx_ecall_array_in_out+0x18d>
    3adc:	e8 5f 00 01 00       	call   13b40 <__stack_chk_fail>
    3ae1:	c9                   	leave  
    3ae2:	c3                   	ret    

0000000000003ae3 <sgx_ecall_array_isary>:
    3ae3:	f3 0f 1e fa          	endbr64 
    3ae7:	55                   	push   %rbp
    3ae8:	48 89 e5             	mov    %rsp,%rbp
    3aeb:	48 83 ec 30          	sub    $0x30,%rsp
    3aef:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3af3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3afa:	00 00 
    3afc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3b00:	31 c0                	xor    %eax,%eax
    3b02:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    3b07:	74 15                	je     3b1e <sgx_ecall_array_isary+0x3b>
    3b09:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b0d:	be 08 00 00 00       	mov    $0x8,%esi
    3b12:	48 89 c7             	mov    %rax,%rdi
    3b15:	e8 e6 69 00 00       	call   a500 <sgx_is_outside_enclave>
    3b1a:	85 c0                	test   %eax,%eax
    3b1c:	75 07                	jne    3b25 <sgx_ecall_array_isary+0x42>
    3b1e:	b8 02 00 00 00       	mov    $0x2,%eax
    3b23:	eb 46                	jmp    3b6b <sgx_ecall_array_isary+0x88>
    3b25:	0f ae e8             	lfence 
    3b28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b2c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3b30:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3b34:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    3b38:	b9 08 00 00 00       	mov    $0x8,%ecx
    3b3d:	be 08 00 00 00       	mov    $0x8,%esi
    3b42:	48 89 c7             	mov    %rax,%rdi
    3b45:	e8 66 06 01 00       	call   141b0 <memcpy_s>
    3b4a:	85 c0                	test   %eax,%eax
    3b4c:	74 07                	je     3b55 <sgx_ecall_array_isary+0x72>
    3b4e:	b8 01 00 00 00       	mov    $0x1,%eax
    3b53:	eb 16                	jmp    3b6b <sgx_ecall_array_isary+0x88>
    3b55:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    3b5c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3b60:	48 89 c7             	mov    %rax,%rdi
    3b63:	e8 24 14 00 00       	call   4f8c <ecall_array_isary>
    3b68:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    3b6b:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    3b6f:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    3b76:	00 00 
    3b78:	74 05                	je     3b7f <sgx_ecall_array_isary+0x9c>
    3b7a:	e8 c1 ff 00 00       	call   13b40 <__stack_chk_fail>
    3b7f:	c9                   	leave  
    3b80:	c3                   	ret    

0000000000003b81 <sgx_ecall_function_public>:
    3b81:	f3 0f 1e fa          	endbr64 
    3b85:	55                   	push   %rbp
    3b86:	48 89 e5             	mov    %rsp,%rbp
    3b89:	48 83 ec 20          	sub    $0x20,%rsp
    3b8d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3b91:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3b98:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    3b9d:	74 07                	je     3ba6 <sgx_ecall_function_public+0x25>
    3b9f:	b8 02 00 00 00       	mov    $0x2,%eax
    3ba4:	eb 08                	jmp    3bae <sgx_ecall_function_public+0x2d>
    3ba6:	e8 c2 14 00 00       	call   506d <ecall_function_public>
    3bab:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3bae:	c9                   	leave  
    3baf:	c3                   	ret    

0000000000003bb0 <sgx_ecall_function_private>:
    3bb0:	f3 0f 1e fa          	endbr64 
    3bb4:	55                   	push   %rbp
    3bb5:	48 89 e5             	mov    %rsp,%rbp
    3bb8:	48 83 ec 30          	sub    $0x30,%rsp
    3bbc:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3bc0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3bc7:	00 00 
    3bc9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3bcd:	31 c0                	xor    %eax,%eax
    3bcf:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    3bd4:	74 15                	je     3beb <sgx_ecall_function_private+0x3b>
    3bd6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3bda:	be 04 00 00 00       	mov    $0x4,%esi
    3bdf:	48 89 c7             	mov    %rax,%rdi
    3be2:	e8 19 69 00 00       	call   a500 <sgx_is_outside_enclave>
    3be7:	85 c0                	test   %eax,%eax
    3be9:	75 07                	jne    3bf2 <sgx_ecall_function_private+0x42>
    3beb:	b8 02 00 00 00       	mov    $0x2,%eax
    3bf0:	eb 6a                	jmp    3c5c <sgx_ecall_function_private+0xac>
    3bf2:	0f ae e8             	lfence 
    3bf5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3bf9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3bfd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3c01:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
    3c05:	b9 04 00 00 00       	mov    $0x4,%ecx
    3c0a:	be 04 00 00 00       	mov    $0x4,%esi
    3c0f:	48 89 c7             	mov    %rax,%rdi
    3c12:	e8 99 05 01 00       	call   141b0 <memcpy_s>
    3c17:	85 c0                	test   %eax,%eax
    3c19:	74 07                	je     3c22 <sgx_ecall_function_private+0x72>
    3c1b:	b8 01 00 00 00       	mov    $0x1,%eax
    3c20:	eb 3a                	jmp    3c5c <sgx_ecall_function_private+0xac>
    3c22:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    3c29:	e8 68 14 00 00       	call   5096 <ecall_function_private>
    3c2e:	89 45 e8             	mov    %eax,-0x18(%rbp)
    3c31:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3c35:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    3c39:	b9 04 00 00 00       	mov    $0x4,%ecx
    3c3e:	be 04 00 00 00       	mov    $0x4,%esi
    3c43:	48 89 c7             	mov    %rax,%rdi
    3c46:	e8 e5 05 01 00       	call   14230 <memcpy_verw_s>
    3c4b:	85 c0                	test   %eax,%eax
    3c4d:	74 09                	je     3c58 <sgx_ecall_function_private+0xa8>
    3c4f:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
    3c56:	eb 01                	jmp    3c59 <sgx_ecall_function_private+0xa9>
    3c58:	90                   	nop
    3c59:	8b 45 ec             	mov    -0x14(%rbp),%eax
    3c5c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    3c60:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    3c67:	00 00 
    3c69:	74 05                	je     3c70 <sgx_ecall_function_private+0xc0>
    3c6b:	e8 d0 fe 00 00       	call   13b40 <__stack_chk_fail>
    3c70:	c9                   	leave  
    3c71:	c3                   	ret    

0000000000003c72 <sgx_ecall_malloc_free>:
    3c72:	f3 0f 1e fa          	endbr64 
    3c76:	55                   	push   %rbp
    3c77:	48 89 e5             	mov    %rsp,%rbp
    3c7a:	48 83 ec 20          	sub    $0x20,%rsp
    3c7e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3c82:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3c89:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    3c8e:	74 07                	je     3c97 <sgx_ecall_malloc_free+0x25>
    3c90:	b8 02 00 00 00       	mov    $0x2,%eax
    3c95:	eb 08                	jmp    3c9f <sgx_ecall_malloc_free+0x2d>
    3c97:	e8 c9 1e 00 00       	call   5b65 <ecall_malloc_free>
    3c9c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3c9f:	c9                   	leave  
    3ca0:	c3                   	ret    

0000000000003ca1 <sgx_ecall_sgx_cpuid>:
    3ca1:	f3 0f 1e fa          	endbr64 
    3ca5:	55                   	push   %rbp
    3ca6:	48 89 e5             	mov    %rsp,%rbp
    3ca9:	48 83 ec 60          	sub    $0x60,%rsp
    3cad:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    3cb1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3cb8:	00 00 
    3cba:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3cbe:	31 c0                	xor    %eax,%eax
    3cc0:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
    3cc5:	74 15                	je     3cdc <sgx_ecall_sgx_cpuid+0x3b>
    3cc7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3ccb:	be 10 00 00 00       	mov    $0x10,%esi
    3cd0:	48 89 c7             	mov    %rax,%rdi
    3cd3:	e8 28 68 00 00       	call   a500 <sgx_is_outside_enclave>
    3cd8:	85 c0                	test   %eax,%eax
    3cda:	75 0a                	jne    3ce6 <sgx_ecall_sgx_cpuid+0x45>
    3cdc:	b8 02 00 00 00       	mov    $0x2,%eax
    3ce1:	e9 29 01 00 00       	jmp    3e0f <sgx_ecall_sgx_cpuid+0x16e>
    3ce6:	0f ae e8             	lfence 
    3ce9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3ced:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    3cf1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    3cf5:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    3cf9:	b9 10 00 00 00       	mov    $0x10,%ecx
    3cfe:	be 10 00 00 00       	mov    $0x10,%esi
    3d03:	48 89 c7             	mov    %rax,%rdi
    3d06:	e8 a5 04 01 00       	call   141b0 <memcpy_s>
    3d0b:	85 c0                	test   %eax,%eax
    3d0d:	74 0a                	je     3d19 <sgx_ecall_sgx_cpuid+0x78>
    3d0f:	b8 01 00 00 00       	mov    $0x1,%eax
    3d14:	e9 f6 00 00 00       	jmp    3e0f <sgx_ecall_sgx_cpuid+0x16e>
    3d19:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
    3d20:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3d24:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    3d28:	48 c7 45 d8 10 00 00 	movq   $0x10,-0x28(%rbp)
    3d2f:	00 
    3d30:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    3d37:	00 
    3d38:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    3d3d:	74 21                	je     3d60 <sgx_ecall_sgx_cpuid+0xbf>
    3d3f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3d43:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3d47:	48 89 d6             	mov    %rdx,%rsi
    3d4a:	48 89 c7             	mov    %rax,%rdi
    3d4d:	e8 ae 67 00 00       	call   a500 <sgx_is_outside_enclave>
    3d52:	85 c0                	test   %eax,%eax
    3d54:	75 0a                	jne    3d60 <sgx_ecall_sgx_cpuid+0xbf>
    3d56:	b8 02 00 00 00       	mov    $0x2,%eax
    3d5b:	e9 af 00 00 00       	jmp    3e0f <sgx_ecall_sgx_cpuid+0x16e>
    3d60:	0f ae e8             	lfence 
    3d63:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    3d68:	74 51                	je     3dbb <sgx_ecall_sgx_cpuid+0x11a>
    3d6a:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    3d6f:	74 4a                	je     3dbb <sgx_ecall_sgx_cpuid+0x11a>
    3d71:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3d75:	83 e0 03             	and    $0x3,%eax
    3d78:	48 85 c0             	test   %rax,%rax
    3d7b:	74 09                	je     3d86 <sgx_ecall_sgx_cpuid+0xe5>
    3d7d:	c7 45 bc 02 00 00 00 	movl   $0x2,-0x44(%rbp)
    3d84:	eb 73                	jmp    3df9 <sgx_ecall_sgx_cpuid+0x158>
    3d86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3d8a:	48 89 c7             	mov    %rax,%rdi
    3d8d:	e8 9e cc 00 00       	call   10a30 <dlmalloc>
    3d92:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    3d96:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    3d9b:	75 09                	jne    3da6 <sgx_ecall_sgx_cpuid+0x105>
    3d9d:	c7 45 bc 03 00 00 00 	movl   $0x3,-0x44(%rbp)
    3da4:	eb 53                	jmp    3df9 <sgx_ecall_sgx_cpuid+0x158>
    3da6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3daa:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    3dae:	be 00 00 00 00       	mov    $0x0,%esi
    3db3:	48 89 c7             	mov    %rax,%rdi
    3db6:	e8 55 fc 00 00       	call   13a10 <memset>
    3dbb:	8b 55 e8             	mov    -0x18(%rbp),%edx
    3dbe:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    3dc2:	89 d6                	mov    %edx,%esi
    3dc4:	48 89 c7             	mov    %rax,%rdi
    3dc7:	e8 fe 1d 00 00       	call   5bca <ecall_sgx_cpuid>
    3dcc:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    3dd1:	74 25                	je     3df8 <sgx_ecall_sgx_cpuid+0x157>
    3dd3:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    3dd7:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    3ddb:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    3ddf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3de3:	48 89 c7             	mov    %rax,%rdi
    3de6:	e8 45 04 01 00       	call   14230 <memcpy_verw_s>
    3deb:	85 c0                	test   %eax,%eax
    3ded:	74 09                	je     3df8 <sgx_ecall_sgx_cpuid+0x157>
    3def:	c7 45 bc 01 00 00 00 	movl   $0x1,-0x44(%rbp)
    3df6:	eb 01                	jmp    3df9 <sgx_ecall_sgx_cpuid+0x158>
    3df8:	90                   	nop
    3df9:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    3dfe:	74 0c                	je     3e0c <sgx_ecall_sgx_cpuid+0x16b>
    3e00:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    3e04:	48 89 c7             	mov    %rax,%rdi
    3e07:	e8 94 e6 00 00       	call   124a0 <dlfree>
    3e0c:	8b 45 bc             	mov    -0x44(%rbp),%eax
    3e0f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    3e13:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    3e1a:	00 00 
    3e1c:	74 05                	je     3e23 <sgx_ecall_sgx_cpuid+0x182>
    3e1e:	e8 1d fd 00 00       	call   13b40 <__stack_chk_fail>
    3e23:	c9                   	leave  
    3e24:	c3                   	ret    

0000000000003e25 <sgx_ecall_exception>:
    3e25:	f3 0f 1e fa          	endbr64 
    3e29:	55                   	push   %rbp
    3e2a:	48 89 e5             	mov    %rsp,%rbp
    3e2d:	48 83 ec 20          	sub    $0x20,%rsp
    3e31:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3e35:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3e3c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    3e41:	74 07                	je     3e4a <sgx_ecall_exception+0x25>
    3e43:	b8 02 00 00 00       	mov    $0x2,%eax
    3e48:	eb 08                	jmp    3e52 <sgx_ecall_exception+0x2d>
    3e4a:	e8 05 1e 00 00       	call   5c54 <ecall_exception>
    3e4f:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3e52:	c9                   	leave  
    3e53:	c3                   	ret    

0000000000003e54 <sgx_ecall_map>:
    3e54:	f3 0f 1e fa          	endbr64 
    3e58:	55                   	push   %rbp
    3e59:	48 89 e5             	mov    %rsp,%rbp
    3e5c:	48 83 ec 20          	sub    $0x20,%rsp
    3e60:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3e64:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3e6b:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    3e70:	74 07                	je     3e79 <sgx_ecall_map+0x25>
    3e72:	b8 02 00 00 00       	mov    $0x2,%eax
    3e77:	eb 08                	jmp    3e81 <sgx_ecall_map+0x2d>
    3e79:	e8 14 23 00 00       	call   6192 <ecall_map>
    3e7e:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3e81:	c9                   	leave  
    3e82:	c3                   	ret    

0000000000003e83 <sgx_ecall_increase_counter>:
    3e83:	f3 0f 1e fa          	endbr64 
    3e87:	55                   	push   %rbp
    3e88:	48 89 e5             	mov    %rsp,%rbp
    3e8b:	48 83 ec 40          	sub    $0x40,%rsp
    3e8f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    3e93:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3e9a:	00 00 
    3e9c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3ea0:	31 c0                	xor    %eax,%eax
    3ea2:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    3ea7:	74 15                	je     3ebe <sgx_ecall_increase_counter+0x3b>
    3ea9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3ead:	be 08 00 00 00       	mov    $0x8,%esi
    3eb2:	48 89 c7             	mov    %rax,%rdi
    3eb5:	e8 46 66 00 00       	call   a500 <sgx_is_outside_enclave>
    3eba:	85 c0                	test   %eax,%eax
    3ebc:	75 07                	jne    3ec5 <sgx_ecall_increase_counter+0x42>
    3ebe:	b8 02 00 00 00       	mov    $0x2,%eax
    3ec3:	eb 6b                	jmp    3f30 <sgx_ecall_increase_counter+0xad>
    3ec5:	0f ae e8             	lfence 
    3ec8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3ecc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3ed0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3ed4:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    3ed8:	b9 08 00 00 00       	mov    $0x8,%ecx
    3edd:	be 08 00 00 00       	mov    $0x8,%esi
    3ee2:	48 89 c7             	mov    %rax,%rdi
    3ee5:	e8 c6 02 01 00       	call   141b0 <memcpy_s>
    3eea:	85 c0                	test   %eax,%eax
    3eec:	74 07                	je     3ef5 <sgx_ecall_increase_counter+0x72>
    3eee:	b8 01 00 00 00       	mov    $0x1,%eax
    3ef3:	eb 3b                	jmp    3f30 <sgx_ecall_increase_counter+0xad>
    3ef5:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    3efc:	e8 8f 4b 00 00       	call   8a90 <ecall_increase_counter>
    3f01:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3f05:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3f09:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    3f0d:	b9 08 00 00 00       	mov    $0x8,%ecx
    3f12:	be 08 00 00 00       	mov    $0x8,%esi
    3f17:	48 89 c7             	mov    %rax,%rdi
    3f1a:	e8 11 03 01 00       	call   14230 <memcpy_verw_s>
    3f1f:	85 c0                	test   %eax,%eax
    3f21:	74 09                	je     3f2c <sgx_ecall_increase_counter+0xa9>
    3f23:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
    3f2a:	eb 01                	jmp    3f2d <sgx_ecall_increase_counter+0xaa>
    3f2c:	90                   	nop
    3f2d:	8b 45 dc             	mov    -0x24(%rbp),%eax
    3f30:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    3f34:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    3f3b:	00 00 
    3f3d:	74 05                	je     3f44 <sgx_ecall_increase_counter+0xc1>
    3f3f:	e8 fc fb 00 00       	call   13b40 <__stack_chk_fail>
    3f44:	c9                   	leave  
    3f45:	c3                   	ret    

0000000000003f46 <sgx_ecall_producer>:
    3f46:	f3 0f 1e fa          	endbr64 
    3f4a:	55                   	push   %rbp
    3f4b:	48 89 e5             	mov    %rsp,%rbp
    3f4e:	48 83 ec 20          	sub    $0x20,%rsp
    3f52:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3f56:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3f5d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    3f62:	74 07                	je     3f6b <sgx_ecall_producer+0x25>
    3f64:	b8 02 00 00 00       	mov    $0x2,%eax
    3f69:	eb 08                	jmp    3f73 <sgx_ecall_producer+0x2d>
    3f6b:	e8 9d 4b 00 00       	call   8b0d <ecall_producer>
    3f70:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3f73:	c9                   	leave  
    3f74:	c3                   	ret    

0000000000003f75 <sgx_ecall_consumer>:
    3f75:	f3 0f 1e fa          	endbr64 
    3f79:	55                   	push   %rbp
    3f7a:	48 89 e5             	mov    %rsp,%rbp
    3f7d:	48 83 ec 20          	sub    $0x20,%rsp
    3f81:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3f85:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3f8c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    3f91:	74 07                	je     3f9a <sgx_ecall_consumer+0x25>
    3f93:	b8 02 00 00 00       	mov    $0x2,%eax
    3f98:	eb 08                	jmp    3fa2 <sgx_ecall_consumer+0x2d>
    3f9a:	e8 8f 4c 00 00       	call   8c2e <ecall_consumer>
    3f9f:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3fa2:	c9                   	leave  
    3fa3:	c3                   	ret    

0000000000003fa4 <ocall_print_string>:
    3fa4:	f3 0f 1e fa          	endbr64 
    3fa8:	55                   	push   %rbp
    3fa9:	48 89 e5             	mov    %rsp,%rbp
    3fac:	48 83 ec 40          	sub    $0x40,%rsp
    3fb0:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    3fb4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3fbb:	00 00 
    3fbd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3fc1:	31 c0                	xor    %eax,%eax
    3fc3:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    3fca:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    3fcf:	74 12                	je     3fe3 <ocall_print_string+0x3f>
    3fd1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3fd5:	48 89 c7             	mov    %rax,%rdi
    3fd8:	e8 b3 fa 00 00       	call   13a90 <strlen>
    3fdd:	48 83 c0 01          	add    $0x1,%rax
    3fe1:	eb 05                	jmp    3fe8 <ocall_print_string+0x44>
    3fe3:	b8 00 00 00 00       	mov    $0x0,%eax
    3fe8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3fec:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    3ff3:	00 
    3ff4:	48 c7 45 f0 08 00 00 	movq   $0x8,-0x10(%rbp)
    3ffb:	00 
    3ffc:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    4003:	00 
    4004:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    4009:	74 21                	je     402c <ocall_print_string+0x88>
    400b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    400f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4013:	48 89 d6             	mov    %rdx,%rsi
    4016:	48 89 c7             	mov    %rax,%rdi
    4019:	e8 82 64 00 00       	call   a4a0 <sgx_is_within_enclave>
    401e:	85 c0                	test   %eax,%eax
    4020:	75 0a                	jne    402c <ocall_print_string+0x88>
    4022:	b8 02 00 00 00       	mov    $0x2,%eax
    4027:	e9 15 01 00 00       	jmp    4141 <ocall_print_string+0x19d>
    402c:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    4031:	74 06                	je     4039 <ocall_print_string+0x95>
    4033:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4037:	eb 05                	jmp    403e <ocall_print_string+0x9a>
    4039:	b8 00 00 00 00       	mov    $0x0,%eax
    403e:	48 01 45 f0          	add    %rax,-0x10(%rbp)
    4042:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    4047:	74 06                	je     404f <ocall_print_string+0xab>
    4049:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    404d:	eb 05                	jmp    4054 <ocall_print_string+0xb0>
    404f:	b8 00 00 00 00       	mov    $0x0,%eax
    4054:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    4058:	73 0a                	jae    4064 <ocall_print_string+0xc0>
    405a:	b8 02 00 00 00       	mov    $0x2,%eax
    405f:	e9 dd 00 00 00       	jmp    4141 <ocall_print_string+0x19d>
    4064:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4068:	48 89 c7             	mov    %rax,%rdi
    406b:	e8 e0 64 00 00       	call   a550 <sgx_ocalloc>
    4070:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4074:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4078:	48 85 c0             	test   %rax,%rax
    407b:	75 0f                	jne    408c <ocall_print_string+0xe8>
    407d:	e8 be 65 00 00       	call   a640 <sgx_ocfree>
    4082:	b8 01 00 00 00       	mov    $0x1,%eax
    4087:	e9 b5 00 00 00       	jmp    4141 <ocall_print_string+0x19d>
    408c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4090:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4094:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4098:	48 83 c0 08          	add    $0x8,%rax
    409c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    40a0:	48 83 6d f0 08       	subq   $0x8,-0x10(%rbp)
    40a5:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    40aa:	74 6e                	je     411a <ocall_print_string+0x176>
    40ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    40b0:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    40b4:	b9 08 00 00 00       	mov    $0x8,%ecx
    40b9:	be 08 00 00 00       	mov    $0x8,%esi
    40be:	48 89 c7             	mov    %rax,%rdi
    40c1:	e8 6a 01 01 00       	call   14230 <memcpy_verw_s>
    40c6:	85 c0                	test   %eax,%eax
    40c8:	74 0c                	je     40d6 <ocall_print_string+0x132>
    40ca:	e8 71 65 00 00       	call   a640 <sgx_ocfree>
    40cf:	b8 01 00 00 00       	mov    $0x1,%eax
    40d4:	eb 6b                	jmp    4141 <ocall_print_string+0x19d>
    40d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    40da:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    40de:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    40e2:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    40e6:	48 89 c7             	mov    %rax,%rdi
    40e9:	e8 42 01 01 00       	call   14230 <memcpy_verw_s>
    40ee:	85 c0                	test   %eax,%eax
    40f0:	74 0c                	je     40fe <ocall_print_string+0x15a>
    40f2:	e8 49 65 00 00       	call   a640 <sgx_ocfree>
    40f7:	b8 01 00 00 00       	mov    $0x1,%eax
    40fc:	eb 43                	jmp    4141 <ocall_print_string+0x19d>
    40fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4102:	48 89 c2             	mov    %rax,%rdx
    4105:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4109:	48 01 d0             	add    %rdx,%rax
    410c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4110:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4114:	48 29 45 f0          	sub    %rax,-0x10(%rbp)
    4118:	eb 0b                	jmp    4125 <ocall_print_string+0x181>
    411a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    411e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4125:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4129:	48 89 c6             	mov    %rax,%rsi
    412c:	bf 00 00 00 00       	mov    $0x0,%edi
    4131:	e8 5a 77 00 00       	call   b890 <sgx_ocall>
    4136:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    4139:	e8 02 65 00 00       	call   a640 <sgx_ocfree>
    413e:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    4141:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    4145:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    414c:	00 00 
    414e:	74 05                	je     4155 <ocall_print_string+0x1b1>
    4150:	e8 eb f9 00 00       	call   13b40 <__stack_chk_fail>
    4155:	c9                   	leave  
    4156:	c3                   	ret    

0000000000004157 <ocall_pointer_user_check>:
    4157:	f3 0f 1e fa          	endbr64 
    415b:	55                   	push   %rbp
    415c:	48 89 e5             	mov    %rsp,%rbp
    415f:	48 83 ec 30          	sub    $0x30,%rsp
    4163:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4167:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    416e:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    4175:	00 
    4176:	48 c7 45 f0 08 00 00 	movq   $0x8,-0x10(%rbp)
    417d:	00 
    417e:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    4185:	00 
    4186:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    418a:	48 89 c7             	mov    %rax,%rdi
    418d:	e8 be 63 00 00       	call   a550 <sgx_ocalloc>
    4192:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4196:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    419b:	75 0c                	jne    41a9 <ocall_pointer_user_check+0x52>
    419d:	e8 9e 64 00 00       	call   a640 <sgx_ocfree>
    41a2:	b8 01 00 00 00       	mov    $0x1,%eax
    41a7:	eb 5f                	jmp    4208 <ocall_pointer_user_check+0xb1>
    41a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    41ad:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    41b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    41b5:	48 83 c0 08          	add    $0x8,%rax
    41b9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    41bd:	48 83 6d f0 08       	subq   $0x8,-0x10(%rbp)
    41c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    41c6:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    41ca:	b9 08 00 00 00       	mov    $0x8,%ecx
    41cf:	be 08 00 00 00       	mov    $0x8,%esi
    41d4:	48 89 c7             	mov    %rax,%rdi
    41d7:	e8 54 00 01 00       	call   14230 <memcpy_verw_s>
    41dc:	85 c0                	test   %eax,%eax
    41de:	74 0c                	je     41ec <ocall_pointer_user_check+0x95>
    41e0:	e8 5b 64 00 00       	call   a640 <sgx_ocfree>
    41e5:	b8 01 00 00 00       	mov    $0x1,%eax
    41ea:	eb 1c                	jmp    4208 <ocall_pointer_user_check+0xb1>
    41ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    41f0:	48 89 c6             	mov    %rax,%rsi
    41f3:	bf 01 00 00 00       	mov    $0x1,%edi
    41f8:	e8 93 76 00 00       	call   b890 <sgx_ocall>
    41fd:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    4200:	e8 3b 64 00 00       	call   a640 <sgx_ocfree>
    4205:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    4208:	c9                   	leave  
    4209:	c3                   	ret    

000000000000420a <ocall_pointer_in>:
    420a:	f3 0f 1e fa          	endbr64 
    420e:	55                   	push   %rbp
    420f:	48 89 e5             	mov    %rsp,%rbp
    4212:	48 83 ec 40          	sub    $0x40,%rsp
    4216:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    421a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4221:	00 00 
    4223:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4227:	31 c0                	xor    %eax,%eax
    4229:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    4230:	48 c7 45 e0 04 00 00 	movq   $0x4,-0x20(%rbp)
    4237:	00 
    4238:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    423f:	00 
    4240:	48 c7 45 f0 08 00 00 	movq   $0x8,-0x10(%rbp)
    4247:	00 
    4248:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    424f:	00 
    4250:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    4255:	74 21                	je     4278 <ocall_pointer_in+0x6e>
    4257:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    425b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    425f:	48 89 d6             	mov    %rdx,%rsi
    4262:	48 89 c7             	mov    %rax,%rdi
    4265:	e8 36 62 00 00       	call   a4a0 <sgx_is_within_enclave>
    426a:	85 c0                	test   %eax,%eax
    426c:	75 0a                	jne    4278 <ocall_pointer_in+0x6e>
    426e:	b8 02 00 00 00       	mov    $0x2,%eax
    4273:	e9 34 01 00 00       	jmp    43ac <ocall_pointer_in+0x1a2>
    4278:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    427d:	74 06                	je     4285 <ocall_pointer_in+0x7b>
    427f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4283:	eb 05                	jmp    428a <ocall_pointer_in+0x80>
    4285:	b8 00 00 00 00       	mov    $0x0,%eax
    428a:	48 01 45 f0          	add    %rax,-0x10(%rbp)
    428e:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    4293:	74 06                	je     429b <ocall_pointer_in+0x91>
    4295:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4299:	eb 05                	jmp    42a0 <ocall_pointer_in+0x96>
    429b:	b8 00 00 00 00       	mov    $0x0,%eax
    42a0:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    42a4:	73 0a                	jae    42b0 <ocall_pointer_in+0xa6>
    42a6:	b8 02 00 00 00       	mov    $0x2,%eax
    42ab:	e9 fc 00 00 00       	jmp    43ac <ocall_pointer_in+0x1a2>
    42b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    42b4:	48 89 c7             	mov    %rax,%rdi
    42b7:	e8 94 62 00 00       	call   a550 <sgx_ocalloc>
    42bc:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    42c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    42c4:	48 85 c0             	test   %rax,%rax
    42c7:	75 0f                	jne    42d8 <ocall_pointer_in+0xce>
    42c9:	e8 72 63 00 00       	call   a640 <sgx_ocfree>
    42ce:	b8 01 00 00 00       	mov    $0x1,%eax
    42d3:	e9 d4 00 00 00       	jmp    43ac <ocall_pointer_in+0x1a2>
    42d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    42dc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    42e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    42e4:	48 83 c0 08          	add    $0x8,%rax
    42e8:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    42ec:	48 83 6d f0 08       	subq   $0x8,-0x10(%rbp)
    42f1:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    42f6:	0f 84 89 00 00 00    	je     4385 <ocall_pointer_in+0x17b>
    42fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4300:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    4304:	b9 08 00 00 00       	mov    $0x8,%ecx
    4309:	be 08 00 00 00       	mov    $0x8,%esi
    430e:	48 89 c7             	mov    %rax,%rdi
    4311:	e8 1a ff 00 00       	call   14230 <memcpy_verw_s>
    4316:	85 c0                	test   %eax,%eax
    4318:	74 0f                	je     4329 <ocall_pointer_in+0x11f>
    431a:	e8 21 63 00 00       	call   a640 <sgx_ocfree>
    431f:	b8 01 00 00 00       	mov    $0x1,%eax
    4324:	e9 83 00 00 00       	jmp    43ac <ocall_pointer_in+0x1a2>
    4329:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    432d:	83 e0 03             	and    $0x3,%eax
    4330:	48 85 c0             	test   %rax,%rax
    4333:	74 0c                	je     4341 <ocall_pointer_in+0x137>
    4335:	e8 06 63 00 00       	call   a640 <sgx_ocfree>
    433a:	b8 02 00 00 00       	mov    $0x2,%eax
    433f:	eb 6b                	jmp    43ac <ocall_pointer_in+0x1a2>
    4341:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4345:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    4349:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    434d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    4351:	48 89 c7             	mov    %rax,%rdi
    4354:	e8 d7 fe 00 00       	call   14230 <memcpy_verw_s>
    4359:	85 c0                	test   %eax,%eax
    435b:	74 0c                	je     4369 <ocall_pointer_in+0x15f>
    435d:	e8 de 62 00 00       	call   a640 <sgx_ocfree>
    4362:	b8 01 00 00 00       	mov    $0x1,%eax
    4367:	eb 43                	jmp    43ac <ocall_pointer_in+0x1a2>
    4369:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    436d:	48 89 c2             	mov    %rax,%rdx
    4370:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4374:	48 01 d0             	add    %rdx,%rax
    4377:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    437b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    437f:	48 29 45 f0          	sub    %rax,-0x10(%rbp)
    4383:	eb 0b                	jmp    4390 <ocall_pointer_in+0x186>
    4385:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4389:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4390:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4394:	48 89 c6             	mov    %rax,%rsi
    4397:	bf 02 00 00 00       	mov    $0x2,%edi
    439c:	e8 ef 74 00 00       	call   b890 <sgx_ocall>
    43a1:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    43a4:	e8 97 62 00 00       	call   a640 <sgx_ocfree>
    43a9:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    43ac:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    43b0:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    43b7:	00 00 
    43b9:	74 05                	je     43c0 <ocall_pointer_in+0x1b6>
    43bb:	e8 80 f7 00 00       	call   13b40 <__stack_chk_fail>
    43c0:	c9                   	leave  
    43c1:	c3                   	ret    

00000000000043c2 <ocall_pointer_out>:
    43c2:	f3 0f 1e fa          	endbr64 
    43c6:	55                   	push   %rbp
    43c7:	48 89 e5             	mov    %rsp,%rbp
    43ca:	48 83 ec 50          	sub    $0x50,%rsp
    43ce:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    43d2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    43d9:	00 00 
    43db:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    43df:	31 c0                	xor    %eax,%eax
    43e1:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
    43e8:	48 c7 45 e0 04 00 00 	movq   $0x4,-0x20(%rbp)
    43ef:	00 
    43f0:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    43f7:	00 
    43f8:	48 c7 45 f0 08 00 00 	movq   $0x8,-0x10(%rbp)
    43ff:	00 
    4400:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    4407:	00 
    4408:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    440f:	00 
    4410:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    4415:	74 21                	je     4438 <ocall_pointer_out+0x76>
    4417:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    441b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    441f:	48 89 d6             	mov    %rdx,%rsi
    4422:	48 89 c7             	mov    %rax,%rdi
    4425:	e8 76 60 00 00       	call   a4a0 <sgx_is_within_enclave>
    442a:	85 c0                	test   %eax,%eax
    442c:	75 0a                	jne    4438 <ocall_pointer_out+0x76>
    442e:	b8 02 00 00 00       	mov    $0x2,%eax
    4433:	e9 61 01 00 00       	jmp    4599 <ocall_pointer_out+0x1d7>
    4438:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    443d:	74 06                	je     4445 <ocall_pointer_out+0x83>
    443f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4443:	eb 05                	jmp    444a <ocall_pointer_out+0x88>
    4445:	b8 00 00 00 00       	mov    $0x0,%eax
    444a:	48 01 45 f0          	add    %rax,-0x10(%rbp)
    444e:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    4453:	74 06                	je     445b <ocall_pointer_out+0x99>
    4455:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4459:	eb 05                	jmp    4460 <ocall_pointer_out+0x9e>
    445b:	b8 00 00 00 00       	mov    $0x0,%eax
    4460:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    4464:	73 0a                	jae    4470 <ocall_pointer_out+0xae>
    4466:	b8 02 00 00 00       	mov    $0x2,%eax
    446b:	e9 29 01 00 00       	jmp    4599 <ocall_pointer_out+0x1d7>
    4470:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4474:	48 89 c7             	mov    %rax,%rdi
    4477:	e8 d4 60 00 00       	call   a550 <sgx_ocalloc>
    447c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    4480:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4484:	48 85 c0             	test   %rax,%rax
    4487:	75 0f                	jne    4498 <ocall_pointer_out+0xd6>
    4489:	e8 b2 61 00 00       	call   a640 <sgx_ocfree>
    448e:	b8 01 00 00 00       	mov    $0x1,%eax
    4493:	e9 01 01 00 00       	jmp    4599 <ocall_pointer_out+0x1d7>
    4498:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    449c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    44a0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    44a4:	48 83 c0 08          	add    $0x8,%rax
    44a8:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    44ac:	48 83 6d f0 08       	subq   $0x8,-0x10(%rbp)
    44b1:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    44b6:	0f 84 81 00 00 00    	je     453d <ocall_pointer_out+0x17b>
    44bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    44c0:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    44c4:	b9 08 00 00 00       	mov    $0x8,%ecx
    44c9:	be 08 00 00 00       	mov    $0x8,%esi
    44ce:	48 89 c7             	mov    %rax,%rdi
    44d1:	e8 5a fd 00 00       	call   14230 <memcpy_verw_s>
    44d6:	85 c0                	test   %eax,%eax
    44d8:	74 0f                	je     44e9 <ocall_pointer_out+0x127>
    44da:	e8 61 61 00 00       	call   a640 <sgx_ocfree>
    44df:	b8 01 00 00 00       	mov    $0x1,%eax
    44e4:	e9 b0 00 00 00       	jmp    4599 <ocall_pointer_out+0x1d7>
    44e9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    44ed:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    44f1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    44f5:	83 e0 03             	and    $0x3,%eax
    44f8:	48 85 c0             	test   %rax,%rax
    44fb:	74 0f                	je     450c <ocall_pointer_out+0x14a>
    44fd:	e8 3e 61 00 00       	call   a640 <sgx_ocfree>
    4502:	b8 02 00 00 00       	mov    $0x2,%eax
    4507:	e9 8d 00 00 00       	jmp    4599 <ocall_pointer_out+0x1d7>
    450c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4510:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4514:	be 00 00 00 00       	mov    $0x0,%esi
    4519:	48 89 c7             	mov    %rax,%rdi
    451c:	e8 ef f3 00 00       	call   13910 <memset_verw>
    4521:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4525:	48 89 c2             	mov    %rax,%rdx
    4528:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    452c:	48 01 d0             	add    %rdx,%rax
    452f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    4533:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4537:	48 29 45 f0          	sub    %rax,-0x10(%rbp)
    453b:	eb 0b                	jmp    4548 <ocall_pointer_out+0x186>
    453d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4541:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4548:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    454c:	48 89 c6             	mov    %rax,%rsi
    454f:	bf 03 00 00 00       	mov    $0x3,%edi
    4554:	e8 37 73 00 00       	call   b890 <sgx_ocall>
    4559:	89 45 cc             	mov    %eax,-0x34(%rbp)
    455c:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
    4560:	75 2f                	jne    4591 <ocall_pointer_out+0x1cf>
    4562:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    4567:	74 28                	je     4591 <ocall_pointer_out+0x1cf>
    4569:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    456d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4571:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    4575:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4579:	48 89 c7             	mov    %rax,%rdi
    457c:	e8 2f fc 00 00       	call   141b0 <memcpy_s>
    4581:	85 c0                	test   %eax,%eax
    4583:	74 0c                	je     4591 <ocall_pointer_out+0x1cf>
    4585:	e8 b6 60 00 00       	call   a640 <sgx_ocfree>
    458a:	b8 01 00 00 00       	mov    $0x1,%eax
    458f:	eb 08                	jmp    4599 <ocall_pointer_out+0x1d7>
    4591:	e8 aa 60 00 00       	call   a640 <sgx_ocfree>
    4596:	8b 45 cc             	mov    -0x34(%rbp),%eax
    4599:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    459d:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    45a4:	00 00 
    45a6:	74 05                	je     45ad <ocall_pointer_out+0x1eb>
    45a8:	e8 93 f5 00 00       	call   13b40 <__stack_chk_fail>
    45ad:	c9                   	leave  
    45ae:	c3                   	ret    

00000000000045af <ocall_pointer_in_out>:
    45af:	f3 0f 1e fa          	endbr64 
    45b3:	55                   	push   %rbp
    45b4:	48 89 e5             	mov    %rsp,%rbp
    45b7:	48 83 ec 50          	sub    $0x50,%rsp
    45bb:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    45bf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    45c6:	00 00 
    45c8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    45cc:	31 c0                	xor    %eax,%eax
    45ce:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
    45d5:	48 c7 45 e0 04 00 00 	movq   $0x4,-0x20(%rbp)
    45dc:	00 
    45dd:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    45e4:	00 
    45e5:	48 c7 45 f0 08 00 00 	movq   $0x8,-0x10(%rbp)
    45ec:	00 
    45ed:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    45f4:	00 
    45f5:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    45fc:	00 
    45fd:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    4602:	74 21                	je     4625 <ocall_pointer_in_out+0x76>
    4604:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4608:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    460c:	48 89 d6             	mov    %rdx,%rsi
    460f:	48 89 c7             	mov    %rax,%rdi
    4612:	e8 89 5e 00 00       	call   a4a0 <sgx_is_within_enclave>
    4617:	85 c0                	test   %eax,%eax
    4619:	75 0a                	jne    4625 <ocall_pointer_in_out+0x76>
    461b:	b8 02 00 00 00       	mov    $0x2,%eax
    4620:	e9 74 01 00 00       	jmp    4799 <ocall_pointer_in_out+0x1ea>
    4625:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    462a:	74 06                	je     4632 <ocall_pointer_in_out+0x83>
    462c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4630:	eb 05                	jmp    4637 <ocall_pointer_in_out+0x88>
    4632:	b8 00 00 00 00       	mov    $0x0,%eax
    4637:	48 01 45 f0          	add    %rax,-0x10(%rbp)
    463b:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    4640:	74 06                	je     4648 <ocall_pointer_in_out+0x99>
    4642:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4646:	eb 05                	jmp    464d <ocall_pointer_in_out+0x9e>
    4648:	b8 00 00 00 00       	mov    $0x0,%eax
    464d:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    4651:	73 0a                	jae    465d <ocall_pointer_in_out+0xae>
    4653:	b8 02 00 00 00       	mov    $0x2,%eax
    4658:	e9 3c 01 00 00       	jmp    4799 <ocall_pointer_in_out+0x1ea>
    465d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4661:	48 89 c7             	mov    %rax,%rdi
    4664:	e8 e7 5e 00 00       	call   a550 <sgx_ocalloc>
    4669:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    466d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4671:	48 85 c0             	test   %rax,%rax
    4674:	75 0f                	jne    4685 <ocall_pointer_in_out+0xd6>
    4676:	e8 c5 5f 00 00       	call   a640 <sgx_ocfree>
    467b:	b8 01 00 00 00       	mov    $0x1,%eax
    4680:	e9 14 01 00 00       	jmp    4799 <ocall_pointer_in_out+0x1ea>
    4685:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4689:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    468d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4691:	48 83 c0 08          	add    $0x8,%rax
    4695:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    4699:	48 83 6d f0 08       	subq   $0x8,-0x10(%rbp)
    469e:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    46a3:	0f 84 94 00 00 00    	je     473d <ocall_pointer_in_out+0x18e>
    46a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    46ad:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    46b1:	b9 08 00 00 00       	mov    $0x8,%ecx
    46b6:	be 08 00 00 00       	mov    $0x8,%esi
    46bb:	48 89 c7             	mov    %rax,%rdi
    46be:	e8 6d fb 00 00       	call   14230 <memcpy_verw_s>
    46c3:	85 c0                	test   %eax,%eax
    46c5:	74 0f                	je     46d6 <ocall_pointer_in_out+0x127>
    46c7:	e8 74 5f 00 00       	call   a640 <sgx_ocfree>
    46cc:	b8 01 00 00 00       	mov    $0x1,%eax
    46d1:	e9 c3 00 00 00       	jmp    4799 <ocall_pointer_in_out+0x1ea>
    46d6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    46da:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    46de:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    46e2:	83 e0 03             	and    $0x3,%eax
    46e5:	48 85 c0             	test   %rax,%rax
    46e8:	74 0f                	je     46f9 <ocall_pointer_in_out+0x14a>
    46ea:	e8 51 5f 00 00       	call   a640 <sgx_ocfree>
    46ef:	b8 02 00 00 00       	mov    $0x2,%eax
    46f4:	e9 a0 00 00 00       	jmp    4799 <ocall_pointer_in_out+0x1ea>
    46f9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    46fd:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    4701:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    4705:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    4709:	48 89 c7             	mov    %rax,%rdi
    470c:	e8 1f fb 00 00       	call   14230 <memcpy_verw_s>
    4711:	85 c0                	test   %eax,%eax
    4713:	74 0c                	je     4721 <ocall_pointer_in_out+0x172>
    4715:	e8 26 5f 00 00       	call   a640 <sgx_ocfree>
    471a:	b8 01 00 00 00       	mov    $0x1,%eax
    471f:	eb 78                	jmp    4799 <ocall_pointer_in_out+0x1ea>
    4721:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4725:	48 89 c2             	mov    %rax,%rdx
    4728:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    472c:	48 01 d0             	add    %rdx,%rax
    472f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    4733:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4737:	48 29 45 f0          	sub    %rax,-0x10(%rbp)
    473b:	eb 0b                	jmp    4748 <ocall_pointer_in_out+0x199>
    473d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4741:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4748:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    474c:	48 89 c6             	mov    %rax,%rsi
    474f:	bf 04 00 00 00       	mov    $0x4,%edi
    4754:	e8 37 71 00 00       	call   b890 <sgx_ocall>
    4759:	89 45 cc             	mov    %eax,-0x34(%rbp)
    475c:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
    4760:	75 2f                	jne    4791 <ocall_pointer_in_out+0x1e2>
    4762:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    4767:	74 28                	je     4791 <ocall_pointer_in_out+0x1e2>
    4769:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    476d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4771:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    4775:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4779:	48 89 c7             	mov    %rax,%rdi
    477c:	e8 2f fa 00 00       	call   141b0 <memcpy_s>
    4781:	85 c0                	test   %eax,%eax
    4783:	74 0c                	je     4791 <ocall_pointer_in_out+0x1e2>
    4785:	e8 b6 5e 00 00       	call   a640 <sgx_ocfree>
    478a:	b8 01 00 00 00       	mov    $0x1,%eax
    478f:	eb 08                	jmp    4799 <ocall_pointer_in_out+0x1ea>
    4791:	e8 aa 5e 00 00       	call   a640 <sgx_ocfree>
    4796:	8b 45 cc             	mov    -0x34(%rbp),%eax
    4799:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    479d:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    47a4:	00 00 
    47a6:	74 05                	je     47ad <ocall_pointer_in_out+0x1fe>
    47a8:	e8 93 f3 00 00       	call   13b40 <__stack_chk_fail>
    47ad:	c9                   	leave  
    47ae:	c3                   	ret    

00000000000047af <ocall_function_allow>:
    47af:	f3 0f 1e fa          	endbr64 
    47b3:	55                   	push   %rbp
    47b4:	48 89 e5             	mov    %rsp,%rbp
    47b7:	48 83 ec 10          	sub    $0x10,%rsp
    47bb:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    47c2:	be 00 00 00 00       	mov    $0x0,%esi
    47c7:	bf 05 00 00 00       	mov    $0x5,%edi
    47cc:	e8 bf 70 00 00       	call   b890 <sgx_ocall>
    47d1:	89 45 fc             	mov    %eax,-0x4(%rbp)
    47d4:	8b 45 fc             	mov    -0x4(%rbp),%eax
    47d7:	c9                   	leave  
    47d8:	c3                   	ret    

00000000000047d9 <sgx_oc_cpuidex>:
    47d9:	f3 0f 1e fa          	endbr64 
    47dd:	55                   	push   %rbp
    47de:	48 89 e5             	mov    %rsp,%rbp
    47e1:	48 83 ec 50          	sub    $0x50,%rsp
    47e5:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    47e9:	89 75 b4             	mov    %esi,-0x4c(%rbp)
    47ec:	89 55 b0             	mov    %edx,-0x50(%rbp)
    47ef:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    47f6:	00 00 
    47f8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    47fc:	31 c0                	xor    %eax,%eax
    47fe:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
    4805:	48 c7 45 e0 10 00 00 	movq   $0x10,-0x20(%rbp)
    480c:	00 
    480d:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    4814:	00 
    4815:	48 c7 45 f0 10 00 00 	movq   $0x10,-0x10(%rbp)
    481c:	00 
    481d:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    4824:	00 
    4825:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    482c:	00 
    482d:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    4832:	74 21                	je     4855 <sgx_oc_cpuidex+0x7c>
    4834:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4838:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    483c:	48 89 d6             	mov    %rdx,%rsi
    483f:	48 89 c7             	mov    %rax,%rdi
    4842:	e8 59 5c 00 00       	call   a4a0 <sgx_is_within_enclave>
    4847:	85 c0                	test   %eax,%eax
    4849:	75 0a                	jne    4855 <sgx_oc_cpuidex+0x7c>
    484b:	b8 02 00 00 00       	mov    $0x2,%eax
    4850:	e9 bd 01 00 00       	jmp    4a12 <sgx_oc_cpuidex+0x239>
    4855:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    485a:	74 06                	je     4862 <sgx_oc_cpuidex+0x89>
    485c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4860:	eb 05                	jmp    4867 <sgx_oc_cpuidex+0x8e>
    4862:	b8 00 00 00 00       	mov    $0x0,%eax
    4867:	48 01 45 f0          	add    %rax,-0x10(%rbp)
    486b:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    4870:	74 06                	je     4878 <sgx_oc_cpuidex+0x9f>
    4872:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4876:	eb 05                	jmp    487d <sgx_oc_cpuidex+0xa4>
    4878:	b8 00 00 00 00       	mov    $0x0,%eax
    487d:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    4881:	73 0a                	jae    488d <sgx_oc_cpuidex+0xb4>
    4883:	b8 02 00 00 00       	mov    $0x2,%eax
    4888:	e9 85 01 00 00       	jmp    4a12 <sgx_oc_cpuidex+0x239>
    488d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4891:	48 89 c7             	mov    %rax,%rdi
    4894:	e8 b7 5c 00 00       	call   a550 <sgx_ocalloc>
    4899:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    489d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    48a1:	48 85 c0             	test   %rax,%rax
    48a4:	75 0f                	jne    48b5 <sgx_oc_cpuidex+0xdc>
    48a6:	e8 95 5d 00 00       	call   a640 <sgx_ocfree>
    48ab:	b8 01 00 00 00       	mov    $0x1,%eax
    48b0:	e9 5d 01 00 00       	jmp    4a12 <sgx_oc_cpuidex+0x239>
    48b5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    48b9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    48bd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    48c1:	48 83 c0 10          	add    $0x10,%rax
    48c5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    48c9:	48 83 6d f0 10       	subq   $0x10,-0x10(%rbp)
    48ce:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    48d3:	0f 84 81 00 00 00    	je     495a <sgx_oc_cpuidex+0x181>
    48d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    48dd:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    48e1:	b9 08 00 00 00       	mov    $0x8,%ecx
    48e6:	be 08 00 00 00       	mov    $0x8,%esi
    48eb:	48 89 c7             	mov    %rax,%rdi
    48ee:	e8 3d f9 00 00       	call   14230 <memcpy_verw_s>
    48f3:	85 c0                	test   %eax,%eax
    48f5:	74 0f                	je     4906 <sgx_oc_cpuidex+0x12d>
    48f7:	e8 44 5d 00 00       	call   a640 <sgx_ocfree>
    48fc:	b8 01 00 00 00       	mov    $0x1,%eax
    4901:	e9 0c 01 00 00       	jmp    4a12 <sgx_oc_cpuidex+0x239>
    4906:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    490a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    490e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4912:	83 e0 03             	and    $0x3,%eax
    4915:	48 85 c0             	test   %rax,%rax
    4918:	74 0f                	je     4929 <sgx_oc_cpuidex+0x150>
    491a:	e8 21 5d 00 00       	call   a640 <sgx_ocfree>
    491f:	b8 02 00 00 00       	mov    $0x2,%eax
    4924:	e9 e9 00 00 00       	jmp    4a12 <sgx_oc_cpuidex+0x239>
    4929:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    492d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4931:	be 00 00 00 00       	mov    $0x0,%esi
    4936:	48 89 c7             	mov    %rax,%rdi
    4939:	e8 d2 ef 00 00       	call   13910 <memset_verw>
    493e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4942:	48 89 c2             	mov    %rax,%rdx
    4945:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4949:	48 01 d0             	add    %rdx,%rax
    494c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    4950:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4954:	48 29 45 f0          	sub    %rax,-0x10(%rbp)
    4958:	eb 0b                	jmp    4965 <sgx_oc_cpuidex+0x18c>
    495a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    495e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4965:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4969:	48 8d 78 08          	lea    0x8(%rax),%rdi
    496d:	48 8d 45 b4          	lea    -0x4c(%rbp),%rax
    4971:	b9 04 00 00 00       	mov    $0x4,%ecx
    4976:	48 89 c2             	mov    %rax,%rdx
    4979:	be 04 00 00 00       	mov    $0x4,%esi
    497e:	e8 ad f8 00 00       	call   14230 <memcpy_verw_s>
    4983:	85 c0                	test   %eax,%eax
    4985:	74 0c                	je     4993 <sgx_oc_cpuidex+0x1ba>
    4987:	e8 b4 5c 00 00       	call   a640 <sgx_ocfree>
    498c:	b8 01 00 00 00       	mov    $0x1,%eax
    4991:	eb 7f                	jmp    4a12 <sgx_oc_cpuidex+0x239>
    4993:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4997:	48 8d 78 0c          	lea    0xc(%rax),%rdi
    499b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    499f:	b9 04 00 00 00       	mov    $0x4,%ecx
    49a4:	48 89 c2             	mov    %rax,%rdx
    49a7:	be 04 00 00 00       	mov    $0x4,%esi
    49ac:	e8 7f f8 00 00       	call   14230 <memcpy_verw_s>
    49b1:	85 c0                	test   %eax,%eax
    49b3:	74 0c                	je     49c1 <sgx_oc_cpuidex+0x1e8>
    49b5:	e8 86 5c 00 00       	call   a640 <sgx_ocfree>
    49ba:	b8 01 00 00 00       	mov    $0x1,%eax
    49bf:	eb 51                	jmp    4a12 <sgx_oc_cpuidex+0x239>
    49c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    49c5:	48 89 c6             	mov    %rax,%rsi
    49c8:	bf 06 00 00 00       	mov    $0x6,%edi
    49cd:	e8 be 6e 00 00       	call   b890 <sgx_ocall>
    49d2:	89 45 cc             	mov    %eax,-0x34(%rbp)
    49d5:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
    49d9:	75 2f                	jne    4a0a <sgx_oc_cpuidex+0x231>
    49db:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    49e0:	74 28                	je     4a0a <sgx_oc_cpuidex+0x231>
    49e2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    49e6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    49ea:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    49ee:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    49f2:	48 89 c7             	mov    %rax,%rdi
    49f5:	e8 b6 f7 00 00       	call   141b0 <memcpy_s>
    49fa:	85 c0                	test   %eax,%eax
    49fc:	74 0c                	je     4a0a <sgx_oc_cpuidex+0x231>
    49fe:	e8 3d 5c 00 00       	call   a640 <sgx_ocfree>
    4a03:	b8 01 00 00 00       	mov    $0x1,%eax
    4a08:	eb 08                	jmp    4a12 <sgx_oc_cpuidex+0x239>
    4a0a:	e8 31 5c 00 00       	call   a640 <sgx_ocfree>
    4a0f:	8b 45 cc             	mov    -0x34(%rbp),%eax
    4a12:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    4a16:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    4a1d:	00 00 
    4a1f:	74 05                	je     4a26 <sgx_oc_cpuidex+0x24d>
    4a21:	e8 1a f1 00 00       	call   13b40 <__stack_chk_fail>
    4a26:	c9                   	leave  
    4a27:	c3                   	ret    

0000000000004a28 <sgx_thread_wait_untrusted_event_ocall>:
    4a28:	f3 0f 1e fa          	endbr64 
    4a2c:	55                   	push   %rbp
    4a2d:	48 89 e5             	mov    %rsp,%rbp
    4a30:	48 83 ec 30          	sub    $0x30,%rsp
    4a34:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4a38:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4a3c:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    4a43:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    4a4a:	00 
    4a4b:	48 c7 45 f0 10 00 00 	movq   $0x10,-0x10(%rbp)
    4a52:	00 
    4a53:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    4a5a:	00 
    4a5b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4a5f:	48 89 c7             	mov    %rax,%rdi
    4a62:	e8 e9 5a 00 00       	call   a550 <sgx_ocalloc>
    4a67:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4a6b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    4a70:	75 0f                	jne    4a81 <sgx_thread_wait_untrusted_event_ocall+0x59>
    4a72:	e8 c9 5b 00 00       	call   a640 <sgx_ocfree>
    4a77:	b8 01 00 00 00       	mov    $0x1,%eax
    4a7c:	e9 9a 00 00 00       	jmp    4b1b <sgx_thread_wait_untrusted_event_ocall+0xf3>
    4a81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a85:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4a89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a8d:	48 83 c0 10          	add    $0x10,%rax
    4a91:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4a95:	48 83 6d f0 10       	subq   $0x10,-0x10(%rbp)
    4a9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4a9e:	48 8d 78 08          	lea    0x8(%rax),%rdi
    4aa2:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    4aa6:	b9 08 00 00 00       	mov    $0x8,%ecx
    4aab:	48 89 c2             	mov    %rax,%rdx
    4aae:	be 08 00 00 00       	mov    $0x8,%esi
    4ab3:	e8 78 f7 00 00       	call   14230 <memcpy_verw_s>
    4ab8:	85 c0                	test   %eax,%eax
    4aba:	74 0c                	je     4ac8 <sgx_thread_wait_untrusted_event_ocall+0xa0>
    4abc:	e8 7f 5b 00 00       	call   a640 <sgx_ocfree>
    4ac1:	b8 01 00 00 00       	mov    $0x1,%eax
    4ac6:	eb 53                	jmp    4b1b <sgx_thread_wait_untrusted_event_ocall+0xf3>
    4ac8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4acc:	48 89 c6             	mov    %rax,%rsi
    4acf:	bf 07 00 00 00       	mov    $0x7,%edi
    4ad4:	e8 b7 6d 00 00       	call   b890 <sgx_ocall>
    4ad9:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    4adc:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    4ae0:	75 31                	jne    4b13 <sgx_thread_wait_untrusted_event_ocall+0xeb>
    4ae2:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    4ae7:	74 2a                	je     4b13 <sgx_thread_wait_untrusted_event_ocall+0xeb>
    4ae9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4aed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4af1:	b9 04 00 00 00       	mov    $0x4,%ecx
    4af6:	be 04 00 00 00       	mov    $0x4,%esi
    4afb:	48 89 c7             	mov    %rax,%rdi
    4afe:	e8 ad f6 00 00       	call   141b0 <memcpy_s>
    4b03:	85 c0                	test   %eax,%eax
    4b05:	74 0c                	je     4b13 <sgx_thread_wait_untrusted_event_ocall+0xeb>
    4b07:	e8 34 5b 00 00       	call   a640 <sgx_ocfree>
    4b0c:	b8 01 00 00 00       	mov    $0x1,%eax
    4b11:	eb 08                	jmp    4b1b <sgx_thread_wait_untrusted_event_ocall+0xf3>
    4b13:	e8 28 5b 00 00       	call   a640 <sgx_ocfree>
    4b18:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    4b1b:	c9                   	leave  
    4b1c:	c3                   	ret    

0000000000004b1d <sgx_thread_set_untrusted_event_ocall>:
    4b1d:	f3 0f 1e fa          	endbr64 
    4b21:	55                   	push   %rbp
    4b22:	48 89 e5             	mov    %rsp,%rbp
    4b25:	48 83 ec 30          	sub    $0x30,%rsp
    4b29:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4b2d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4b31:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    4b38:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    4b3f:	00 
    4b40:	48 c7 45 f0 10 00 00 	movq   $0x10,-0x10(%rbp)
    4b47:	00 
    4b48:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    4b4f:	00 
    4b50:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4b54:	48 89 c7             	mov    %rax,%rdi
    4b57:	e8 f4 59 00 00       	call   a550 <sgx_ocalloc>
    4b5c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4b60:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    4b65:	75 0f                	jne    4b76 <sgx_thread_set_untrusted_event_ocall+0x59>
    4b67:	e8 d4 5a 00 00       	call   a640 <sgx_ocfree>
    4b6c:	b8 01 00 00 00       	mov    $0x1,%eax
    4b71:	e9 9a 00 00 00       	jmp    4c10 <sgx_thread_set_untrusted_event_ocall+0xf3>
    4b76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b7a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4b7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b82:	48 83 c0 10          	add    $0x10,%rax
    4b86:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4b8a:	48 83 6d f0 10       	subq   $0x10,-0x10(%rbp)
    4b8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4b93:	48 8d 78 08          	lea    0x8(%rax),%rdi
    4b97:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    4b9b:	b9 08 00 00 00       	mov    $0x8,%ecx
    4ba0:	48 89 c2             	mov    %rax,%rdx
    4ba3:	be 08 00 00 00       	mov    $0x8,%esi
    4ba8:	e8 83 f6 00 00       	call   14230 <memcpy_verw_s>
    4bad:	85 c0                	test   %eax,%eax
    4baf:	74 0c                	je     4bbd <sgx_thread_set_untrusted_event_ocall+0xa0>
    4bb1:	e8 8a 5a 00 00       	call   a640 <sgx_ocfree>
    4bb6:	b8 01 00 00 00       	mov    $0x1,%eax
    4bbb:	eb 53                	jmp    4c10 <sgx_thread_set_untrusted_event_ocall+0xf3>
    4bbd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4bc1:	48 89 c6             	mov    %rax,%rsi
    4bc4:	bf 08 00 00 00       	mov    $0x8,%edi
    4bc9:	e8 c2 6c 00 00       	call   b890 <sgx_ocall>
    4bce:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    4bd1:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    4bd5:	75 31                	jne    4c08 <sgx_thread_set_untrusted_event_ocall+0xeb>
    4bd7:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    4bdc:	74 2a                	je     4c08 <sgx_thread_set_untrusted_event_ocall+0xeb>
    4bde:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4be2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4be6:	b9 04 00 00 00       	mov    $0x4,%ecx
    4beb:	be 04 00 00 00       	mov    $0x4,%esi
    4bf0:	48 89 c7             	mov    %rax,%rdi
    4bf3:	e8 b8 f5 00 00       	call   141b0 <memcpy_s>
    4bf8:	85 c0                	test   %eax,%eax
    4bfa:	74 0c                	je     4c08 <sgx_thread_set_untrusted_event_ocall+0xeb>
    4bfc:	e8 3f 5a 00 00       	call   a640 <sgx_ocfree>
    4c01:	b8 01 00 00 00       	mov    $0x1,%eax
    4c06:	eb 08                	jmp    4c10 <sgx_thread_set_untrusted_event_ocall+0xf3>
    4c08:	e8 33 5a 00 00       	call   a640 <sgx_ocfree>
    4c0d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    4c10:	c9                   	leave  
    4c11:	c3                   	ret    

0000000000004c12 <sgx_thread_setwait_untrusted_events_ocall>:
    4c12:	f3 0f 1e fa          	endbr64 
    4c16:	55                   	push   %rbp
    4c17:	48 89 e5             	mov    %rsp,%rbp
    4c1a:	48 83 ec 40          	sub    $0x40,%rsp
    4c1e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4c22:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4c26:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    4c2a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    4c31:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    4c38:	00 
    4c39:	48 c7 45 f0 18 00 00 	movq   $0x18,-0x10(%rbp)
    4c40:	00 
    4c41:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    4c48:	00 
    4c49:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4c4d:	48 89 c7             	mov    %rax,%rdi
    4c50:	e8 fb 58 00 00       	call   a550 <sgx_ocalloc>
    4c55:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4c59:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    4c5e:	75 0f                	jne    4c6f <sgx_thread_setwait_untrusted_events_ocall+0x5d>
    4c60:	e8 db 59 00 00       	call   a640 <sgx_ocfree>
    4c65:	b8 01 00 00 00       	mov    $0x1,%eax
    4c6a:	e9 cb 00 00 00       	jmp    4d3a <sgx_thread_setwait_untrusted_events_ocall+0x128>
    4c6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c73:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4c77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c7b:	48 83 c0 18          	add    $0x18,%rax
    4c7f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4c83:	48 83 6d f0 18       	subq   $0x18,-0x10(%rbp)
    4c88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4c8c:	48 8d 78 08          	lea    0x8(%rax),%rdi
    4c90:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    4c94:	b9 08 00 00 00       	mov    $0x8,%ecx
    4c99:	48 89 c2             	mov    %rax,%rdx
    4c9c:	be 08 00 00 00       	mov    $0x8,%esi
    4ca1:	e8 8a f5 00 00       	call   14230 <memcpy_verw_s>
    4ca6:	85 c0                	test   %eax,%eax
    4ca8:	74 0f                	je     4cb9 <sgx_thread_setwait_untrusted_events_ocall+0xa7>
    4caa:	e8 91 59 00 00       	call   a640 <sgx_ocfree>
    4caf:	b8 01 00 00 00       	mov    $0x1,%eax
    4cb4:	e9 81 00 00 00       	jmp    4d3a <sgx_thread_setwait_untrusted_events_ocall+0x128>
    4cb9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4cbd:	48 8d 78 10          	lea    0x10(%rax),%rdi
    4cc1:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    4cc5:	b9 08 00 00 00       	mov    $0x8,%ecx
    4cca:	48 89 c2             	mov    %rax,%rdx
    4ccd:	be 08 00 00 00       	mov    $0x8,%esi
    4cd2:	e8 59 f5 00 00       	call   14230 <memcpy_verw_s>
    4cd7:	85 c0                	test   %eax,%eax
    4cd9:	74 0c                	je     4ce7 <sgx_thread_setwait_untrusted_events_ocall+0xd5>
    4cdb:	e8 60 59 00 00       	call   a640 <sgx_ocfree>
    4ce0:	b8 01 00 00 00       	mov    $0x1,%eax
    4ce5:	eb 53                	jmp    4d3a <sgx_thread_setwait_untrusted_events_ocall+0x128>
    4ce7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ceb:	48 89 c6             	mov    %rax,%rsi
    4cee:	bf 09 00 00 00       	mov    $0x9,%edi
    4cf3:	e8 98 6b 00 00       	call   b890 <sgx_ocall>
    4cf8:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    4cfb:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    4cff:	75 31                	jne    4d32 <sgx_thread_setwait_untrusted_events_ocall+0x120>
    4d01:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    4d06:	74 2a                	je     4d32 <sgx_thread_setwait_untrusted_events_ocall+0x120>
    4d08:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4d0c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d10:	b9 04 00 00 00       	mov    $0x4,%ecx
    4d15:	be 04 00 00 00       	mov    $0x4,%esi
    4d1a:	48 89 c7             	mov    %rax,%rdi
    4d1d:	e8 8e f4 00 00       	call   141b0 <memcpy_s>
    4d22:	85 c0                	test   %eax,%eax
    4d24:	74 0c                	je     4d32 <sgx_thread_setwait_untrusted_events_ocall+0x120>
    4d26:	e8 15 59 00 00       	call   a640 <sgx_ocfree>
    4d2b:	b8 01 00 00 00       	mov    $0x1,%eax
    4d30:	eb 08                	jmp    4d3a <sgx_thread_setwait_untrusted_events_ocall+0x128>
    4d32:	e8 09 59 00 00       	call   a640 <sgx_ocfree>
    4d37:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    4d3a:	c9                   	leave  
    4d3b:	c3                   	ret    

0000000000004d3c <ecall_array_user_check>:
    4d3c:	f3 0f 1e fa          	endbr64 
    4d40:	55                   	push   %rbp
    4d41:	48 89 e5             	mov    %rsp,%rbp
    4d44:	48 83 ec 20          	sub    $0x20,%rsp
    4d48:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4d4c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4d53:	00 00 
    4d55:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4d59:	31 c0                	xor    %eax,%eax
    4d5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4d5f:	be 10 00 00 00       	mov    $0x10,%esi
    4d64:	48 89 c7             	mov    %rax,%rdi
    4d67:	e8 94 57 00 00       	call   a500 <sgx_is_outside_enclave>
    4d6c:	83 f8 01             	cmp    $0x1,%eax
    4d6f:	0f 95 c0             	setne  %al
    4d72:	84 c0                	test   %al,%al
    4d74:	74 05                	je     4d7b <ecall_array_user_check+0x3f>
    4d76:	e8 bc 0f 02 00       	call   25d37 <abort>
    4d7b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4d82:	83 7d f4 03          	cmpl   $0x3,-0xc(%rbp)
    4d86:	7f 74                	jg     4dfc <ecall_array_user_check+0xc0>
    4d88:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4d8b:	48 98                	cltq   
    4d8d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    4d94:	00 
    4d95:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4d99:	48 01 d0             	add    %rdx,%rax
    4d9c:	8b 00                	mov    (%rax),%eax
    4d9e:	39 45 f4             	cmp    %eax,-0xc(%rbp)
    4da1:	74 1f                	je     4dc2 <ecall_array_user_check+0x86>
    4da3:	48 8d 0d ce 13 02 00 	lea    0x213ce(%rip),%rcx        # 26178 <g_dyn_entry_table+0x178>
    4daa:	48 8d 15 d3 13 02 00 	lea    0x213d3(%rip),%rdx        # 26184 <g_dyn_entry_table+0x184>
    4db1:	be 30 00 00 00       	mov    $0x30,%esi
    4db6:	48 8d 3d e3 13 02 00 	lea    0x213e3(%rip),%rdi        # 261a0 <g_dyn_entry_table+0x1a0>
    4dbd:	e8 de b0 00 00       	call   fea0 <__assert>
    4dc2:	b8 03 00 00 00       	mov    $0x3,%eax
    4dc7:	2b 45 f4             	sub    -0xc(%rbp),%eax
    4dca:	89 45 f0             	mov    %eax,-0x10(%rbp)
    4dcd:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4dd0:	48 98                	cltq   
    4dd2:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    4dd9:	00 
    4dda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4dde:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    4de2:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    4de6:	ba 04 00 00 00       	mov    $0x4,%edx
    4deb:	48 89 c6             	mov    %rax,%rsi
    4dee:	48 89 cf             	mov    %rcx,%rdi
    4df1:	e8 da e9 00 00       	call   137d0 <memcpy_verw>
    4df6:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4dfa:	eb 86                	jmp    4d82 <ecall_array_user_check+0x46>
    4dfc:	90                   	nop
    4dfd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e01:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    4e08:	00 00 
    4e0a:	74 05                	je     4e11 <ecall_array_user_check+0xd5>
    4e0c:	e8 2f ed 00 00       	call   13b40 <__stack_chk_fail>
    4e11:	c9                   	leave  
    4e12:	c3                   	ret    

0000000000004e13 <ecall_array_in>:
    4e13:	f3 0f 1e fa          	endbr64 
    4e17:	55                   	push   %rbp
    4e18:	48 89 e5             	mov    %rsp,%rbp
    4e1b:	48 83 ec 20          	sub    $0x20,%rsp
    4e1f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4e23:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4e2a:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
    4e2e:	7f 5e                	jg     4e8e <ecall_array_in+0x7b>
    4e30:	8b 45 fc             	mov    -0x4(%rbp),%eax
    4e33:	48 98                	cltq   
    4e35:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    4e3c:	00 
    4e3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4e41:	48 01 d0             	add    %rdx,%rax
    4e44:	8b 00                	mov    (%rax),%eax
    4e46:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    4e49:	74 1f                	je     4e6a <ecall_array_in+0x57>
    4e4b:	48 8d 0d 26 13 02 00 	lea    0x21326(%rip),%rcx        # 26178 <g_dyn_entry_table+0x178>
    4e52:	48 8d 15 68 13 02 00 	lea    0x21368(%rip),%rdx        # 261c1 <g_dyn_entry_table+0x1c1>
    4e59:	be 41 00 00 00       	mov    $0x41,%esi
    4e5e:	48 8d 3d 3b 13 02 00 	lea    0x2133b(%rip),%rdi        # 261a0 <g_dyn_entry_table+0x1a0>
    4e65:	e8 36 b0 00 00       	call   fea0 <__assert>
    4e6a:	8b 45 fc             	mov    -0x4(%rbp),%eax
    4e6d:	48 98                	cltq   
    4e6f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    4e76:	00 
    4e77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4e7b:	48 01 c2             	add    %rax,%rdx
    4e7e:	b8 03 00 00 00       	mov    $0x3,%eax
    4e83:	2b 45 fc             	sub    -0x4(%rbp),%eax
    4e86:	89 02                	mov    %eax,(%rdx)
    4e88:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4e8c:	eb 9c                	jmp    4e2a <ecall_array_in+0x17>
    4e8e:	90                   	nop
    4e8f:	c9                   	leave  
    4e90:	c3                   	ret    

0000000000004e91 <ecall_array_out>:
    4e91:	f3 0f 1e fa          	endbr64 
    4e95:	55                   	push   %rbp
    4e96:	48 89 e5             	mov    %rsp,%rbp
    4e99:	48 83 ec 20          	sub    $0x20,%rsp
    4e9d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4ea1:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4ea8:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
    4eac:	7f 5d                	jg     4f0b <ecall_array_out+0x7a>
    4eae:	8b 45 fc             	mov    -0x4(%rbp),%eax
    4eb1:	48 98                	cltq   
    4eb3:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    4eba:	00 
    4ebb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ebf:	48 01 d0             	add    %rdx,%rax
    4ec2:	8b 00                	mov    (%rax),%eax
    4ec4:	85 c0                	test   %eax,%eax
    4ec6:	74 1f                	je     4ee7 <ecall_array_out+0x56>
    4ec8:	48 8d 0d 01 13 02 00 	lea    0x21301(%rip),%rcx        # 261d0 <g_dyn_entry_table+0x1d0>
    4ecf:	48 8d 15 06 13 02 00 	lea    0x21306(%rip),%rdx        # 261dc <g_dyn_entry_table+0x1dc>
    4ed6:	be 4e 00 00 00       	mov    $0x4e,%esi
    4edb:	48 8d 3d be 12 02 00 	lea    0x212be(%rip),%rdi        # 261a0 <g_dyn_entry_table+0x1a0>
    4ee2:	e8 b9 af 00 00       	call   fea0 <__assert>
    4ee7:	8b 45 fc             	mov    -0x4(%rbp),%eax
    4eea:	48 98                	cltq   
    4eec:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    4ef3:	00 
    4ef4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ef8:	48 01 c2             	add    %rax,%rdx
    4efb:	b8 03 00 00 00       	mov    $0x3,%eax
    4f00:	2b 45 fc             	sub    -0x4(%rbp),%eax
    4f03:	89 02                	mov    %eax,(%rdx)
    4f05:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4f09:	eb 9d                	jmp    4ea8 <ecall_array_out+0x17>
    4f0b:	90                   	nop
    4f0c:	c9                   	leave  
    4f0d:	c3                   	ret    

0000000000004f0e <ecall_array_in_out>:
    4f0e:	f3 0f 1e fa          	endbr64 
    4f12:	55                   	push   %rbp
    4f13:	48 89 e5             	mov    %rsp,%rbp
    4f16:	48 83 ec 20          	sub    $0x20,%rsp
    4f1a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4f1e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4f25:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
    4f29:	7f 5e                	jg     4f89 <ecall_array_in_out+0x7b>
    4f2b:	8b 45 fc             	mov    -0x4(%rbp),%eax
    4f2e:	48 98                	cltq   
    4f30:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    4f37:	00 
    4f38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4f3c:	48 01 d0             	add    %rdx,%rax
    4f3f:	8b 00                	mov    (%rax),%eax
    4f41:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    4f44:	74 1f                	je     4f65 <ecall_array_in_out+0x57>
    4f46:	48 8d 0d 2b 12 02 00 	lea    0x2122b(%rip),%rcx        # 26178 <g_dyn_entry_table+0x178>
    4f4d:	48 8d 15 98 12 02 00 	lea    0x21298(%rip),%rdx        # 261ec <g_dyn_entry_table+0x1ec>
    4f54:	be 5a 00 00 00       	mov    $0x5a,%esi
    4f59:	48 8d 3d 40 12 02 00 	lea    0x21240(%rip),%rdi        # 261a0 <g_dyn_entry_table+0x1a0>
    4f60:	e8 3b af 00 00       	call   fea0 <__assert>
    4f65:	8b 45 fc             	mov    -0x4(%rbp),%eax
    4f68:	48 98                	cltq   
    4f6a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    4f71:	00 
    4f72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4f76:	48 01 c2             	add    %rax,%rdx
    4f79:	b8 03 00 00 00       	mov    $0x3,%eax
    4f7e:	2b 45 fc             	sub    -0x4(%rbp),%eax
    4f81:	89 02                	mov    %eax,(%rdx)
    4f83:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4f87:	eb 9c                	jmp    4f25 <ecall_array_in_out+0x17>
    4f89:	90                   	nop
    4f8a:	c9                   	leave  
    4f8b:	c3                   	ret    

0000000000004f8c <ecall_array_isary>:
    4f8c:	f3 0f 1e fa          	endbr64 
    4f90:	55                   	push   %rbp
    4f91:	48 89 e5             	mov    %rsp,%rbp
    4f94:	48 83 ec 30          	sub    $0x30,%rsp
    4f98:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4f9c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4fa3:	00 00 
    4fa5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4fa9:	31 c0                	xor    %eax,%eax
    4fab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4faf:	be 28 00 00 00       	mov    $0x28,%esi
    4fb4:	48 89 c7             	mov    %rax,%rdi
    4fb7:	e8 44 55 00 00       	call   a500 <sgx_is_outside_enclave>
    4fbc:	83 f8 01             	cmp    $0x1,%eax
    4fbf:	0f 95 c0             	setne  %al
    4fc2:	84 c0                	test   %al,%al
    4fc4:	74 05                	je     4fcb <ecall_array_isary+0x3f>
    4fc6:	e8 6c 0d 02 00       	call   25d37 <abort>
    4fcb:	c7 45 f4 0a 00 00 00 	movl   $0xa,-0xc(%rbp)
    4fd2:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    4fd9:	8b 45 f0             	mov    -0x10(%rbp),%eax
    4fdc:	3b 45 f4             	cmp    -0xc(%rbp),%eax
    4fdf:	7d 75                	jge    5056 <ecall_array_isary+0xca>
    4fe1:	8b 45 f0             	mov    -0x10(%rbp),%eax
    4fe4:	48 98                	cltq   
    4fe6:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    4fed:	00 
    4fee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ff2:	48 01 d0             	add    %rdx,%rax
    4ff5:	8b 00                	mov    (%rax),%eax
    4ff7:	39 45 f0             	cmp    %eax,-0x10(%rbp)
    4ffa:	74 1f                	je     501b <ecall_array_isary+0x8f>
    4ffc:	48 8d 0d 75 11 02 00 	lea    0x21175(%rip),%rcx        # 26178 <g_dyn_entry_table+0x178>
    5003:	48 8d 15 f5 11 02 00 	lea    0x211f5(%rip),%rdx        # 261ff <g_dyn_entry_table+0x1ff>
    500a:	be 69 00 00 00       	mov    $0x69,%esi
    500f:	48 8d 3d 8a 11 02 00 	lea    0x2118a(%rip),%rdi        # 261a0 <g_dyn_entry_table+0x1a0>
    5016:	e8 85 ae 00 00       	call   fea0 <__assert>
    501b:	8b 45 f4             	mov    -0xc(%rbp),%eax
    501e:	83 e8 01             	sub    $0x1,%eax
    5021:	2b 45 f0             	sub    -0x10(%rbp),%eax
    5024:	89 45 ec             	mov    %eax,-0x14(%rbp)
    5027:	8b 45 f0             	mov    -0x10(%rbp),%eax
    502a:	48 98                	cltq   
    502c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    5033:	00 
    5034:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5038:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    503c:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
    5040:	ba 04 00 00 00       	mov    $0x4,%edx
    5045:	48 89 c6             	mov    %rax,%rsi
    5048:	48 89 cf             	mov    %rcx,%rdi
    504b:	e8 80 e7 00 00       	call   137d0 <memcpy_verw>
    5050:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    5054:	eb 83                	jmp    4fd9 <ecall_array_isary+0x4d>
    5056:	90                   	nop
    5057:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    505b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    5062:	00 00 
    5064:	74 05                	je     506b <ecall_array_isary+0xdf>
    5066:	e8 d5 ea 00 00       	call   13b40 <__stack_chk_fail>
    506b:	c9                   	leave  
    506c:	c3                   	ret    

000000000000506d <ecall_function_public>:
    506d:	f3 0f 1e fa          	endbr64 
    5071:	55                   	push   %rbp
    5072:	48 89 e5             	mov    %rsp,%rbp
    5075:	48 83 ec 10          	sub    $0x10,%rsp
    5079:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
    5080:	e8 2a f7 ff ff       	call   47af <ocall_function_allow>
    5085:	89 45 fc             	mov    %eax,-0x4(%rbp)
    5088:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    508c:	74 05                	je     5093 <ecall_function_public+0x26>
    508e:	e8 a4 0c 02 00       	call   25d37 <abort>
    5093:	90                   	nop
    5094:	c9                   	leave  
    5095:	c3                   	ret    

0000000000005096 <ecall_function_private>:
    5096:	f3 0f 1e fa          	endbr64 
    509a:	55                   	push   %rbp
    509b:	48 89 e5             	mov    %rsp,%rbp
    509e:	b8 01 00 00 00       	mov    $0x1,%eax
    50a3:	5d                   	pop    %rbp
    50a4:	c3                   	ret    

00000000000050a5 <_Z17checksum_internalPcm>:
    50a5:	f3 0f 1e fa          	endbr64 
    50a9:	55                   	push   %rbp
    50aa:	48 89 e5             	mov    %rsp,%rbp
    50ad:	53                   	push   %rbx
    50ae:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
    50b2:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
    50b6:	bb 00 00 00 00       	mov    $0x0,%ebx
    50bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    50bf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    50c3:	48 83 7d d8 01       	cmpq   $0x1,-0x28(%rbp)
    50c8:	76 19                	jbe    50e3 <_Z17checksum_internalPcm+0x3e>
    50ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    50ce:	48 8d 50 02          	lea    0x2(%rax),%rdx
    50d2:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    50d6:	0f b7 00             	movzwl (%rax),%eax
    50d9:	98                   	cwtl   
    50da:	01 c3                	add    %eax,%ebx
    50dc:	48 83 6d d8 02       	subq   $0x2,-0x28(%rbp)
    50e1:	eb e0                	jmp    50c3 <_Z17checksum_internalPcm+0x1e>
    50e3:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    50e8:	74 0c                	je     50f6 <_Z17checksum_internalPcm+0x51>
    50ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    50ee:	0f b6 00             	movzbl (%rax),%eax
    50f1:	0f be c0             	movsbl %al,%eax
    50f4:	01 c3                	add    %eax,%ebx
    50f6:	89 d8                	mov    %ebx,%eax
    50f8:	f7 d0                	not    %eax
    50fa:	5b                   	pop    %rbx
    50fb:	5d                   	pop    %rbp
    50fc:	c3                   	ret    

00000000000050fd <ecall_pointer_user_check>:
    50fd:	f3 0f 1e fa          	endbr64 
    5101:	55                   	push   %rbp
    5102:	48 89 e5             	mov    %rsp,%rbp
    5105:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    510c:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
    5113:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
    511a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5121:	00 00 
    5123:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    5127:	31 c0                	xor    %eax,%eax
    5129:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
    5130:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    5137:	48 89 d6             	mov    %rdx,%rsi
    513a:	48 89 c7             	mov    %rax,%rdi
    513d:	e8 be 53 00 00       	call   a500 <sgx_is_outside_enclave>
    5142:	83 f8 01             	cmp    $0x1,%eax
    5145:	0f 95 c0             	setne  %al
    5148:	84 c0                	test   %al,%al
    514a:	74 05                	je     5151 <ecall_pointer_user_check+0x54>
    514c:	e8 e6 0b 02 00       	call   25d37 <abort>
    5151:	0f ae e8             	lfence 
    5154:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    515b:	00 
    515c:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    5163:	00 
    5164:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
    516b:	00 
    516c:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
    5173:	00 
    5174:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
    517b:	00 
    517c:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    5183:	00 
    5184:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    518b:	00 
    518c:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    5193:	00 
    5194:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    519b:	00 
    519c:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    51a3:	00 
    51a4:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    51ab:	00 
    51ac:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    51b3:	00 
    51b4:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    51bb:	b8 64 00 00 00       	mov    $0x64,%eax
    51c0:	48 83 bd 70 ff ff ff 	cmpq   $0x64,-0x90(%rbp)
    51c7:	64 
    51c8:	48 0f 46 85 70 ff ff 	cmovbe -0x90(%rbp),%rax
    51cf:	ff 
    51d0:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    51d4:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    51d8:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
    51df:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    51e3:	48 89 ce             	mov    %rcx,%rsi
    51e6:	48 89 c7             	mov    %rax,%rdi
    51e9:	e8 02 e6 00 00       	call   137f0 <memcpy>
    51ee:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    51f2:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    51f6:	48 89 d6             	mov    %rdx,%rsi
    51f9:	48 89 c7             	mov    %rax,%rdi
    51fc:	e8 a4 fe ff ff       	call   50a5 <_Z17checksum_internalPcm>
    5201:	89 45 84             	mov    %eax,-0x7c(%rbp)
    5204:	8b 4d 84             	mov    -0x7c(%rbp),%ecx
    5207:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    520b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    5212:	48 89 c6             	mov    %rax,%rsi
    5215:	48 8d 3d fc 0f 02 00 	lea    0x20ffc(%rip),%rdi        # 26218 <g_dyn_entry_table+0x218>
    521c:	b8 00 00 00 00       	mov    $0x0,%eax
    5221:	e8 28 07 00 00       	call   594e <printf>
    5226:	b8 0c 00 00 00       	mov    $0xc,%eax
    522b:	48 83 7d 88 0c       	cmpq   $0xc,-0x78(%rbp)
    5230:	48 0f 46 45 88       	cmovbe -0x78(%rbp),%rax
    5235:	48 89 c2             	mov    %rax,%rdx
    5238:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    523f:	48 8d 35 ee 0f 02 00 	lea    0x20fee(%rip),%rsi        # 26234 <g_dyn_entry_table+0x234>
    5246:	48 89 c7             	mov    %rax,%rdi
    5249:	e8 82 e5 00 00       	call   137d0 <memcpy_verw>
    524e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    5252:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    5256:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    525d:	00 00 
    525f:	74 05                	je     5266 <ecall_pointer_user_check+0x169>
    5261:	e8 da e8 00 00       	call   13b40 <__stack_chk_fail>
    5266:	c9                   	leave  
    5267:	c3                   	ret    

0000000000005268 <ecall_pointer_in>:
    5268:	f3 0f 1e fa          	endbr64 
    526c:	55                   	push   %rbp
    526d:	48 89 e5             	mov    %rsp,%rbp
    5270:	48 83 ec 10          	sub    $0x10,%rsp
    5274:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5278:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    527c:	be 04 00 00 00       	mov    $0x4,%esi
    5281:	48 89 c7             	mov    %rax,%rdi
    5284:	e8 17 52 00 00       	call   a4a0 <sgx_is_within_enclave>
    5289:	83 f8 01             	cmp    $0x1,%eax
    528c:	0f 95 c0             	setne  %al
    528f:	84 c0                	test   %al,%al
    5291:	74 05                	je     5298 <ecall_pointer_in+0x30>
    5293:	e8 9f 0a 02 00       	call   25d37 <abort>
    5298:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    529c:	8b 00                	mov    (%rax),%eax
    529e:	83 f8 01             	cmp    $0x1,%eax
    52a1:	74 1f                	je     52c2 <ecall_pointer_in+0x5a>
    52a3:	48 8d 0d 96 0f 02 00 	lea    0x20f96(%rip),%rcx        # 26240 <g_dyn_entry_table+0x240>
    52aa:	48 8d 15 99 0f 02 00 	lea    0x20f99(%rip),%rdx        # 2624a <g_dyn_entry_table+0x24a>
    52b1:	be 65 00 00 00       	mov    $0x65,%esi
    52b6:	48 8d 3d a3 0f 02 00 	lea    0x20fa3(%rip),%rdi        # 26260 <g_dyn_entry_table+0x260>
    52bd:	e8 de ab 00 00       	call   fea0 <__assert>
    52c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52c6:	c7 00 d2 04 00 00    	movl   $0x4d2,(%rax)
    52cc:	90                   	nop
    52cd:	c9                   	leave  
    52ce:	c3                   	ret    

00000000000052cf <ecall_pointer_out>:
    52cf:	f3 0f 1e fa          	endbr64 
    52d3:	55                   	push   %rbp
    52d4:	48 89 e5             	mov    %rsp,%rbp
    52d7:	48 83 ec 10          	sub    $0x10,%rsp
    52db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52e3:	be 04 00 00 00       	mov    $0x4,%esi
    52e8:	48 89 c7             	mov    %rax,%rdi
    52eb:	e8 b0 51 00 00       	call   a4a0 <sgx_is_within_enclave>
    52f0:	83 f8 01             	cmp    $0x1,%eax
    52f3:	0f 95 c0             	setne  %al
    52f6:	84 c0                	test   %al,%al
    52f8:	74 05                	je     52ff <ecall_pointer_out+0x30>
    52fa:	e8 38 0a 02 00       	call   25d37 <abort>
    52ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5303:	8b 00                	mov    (%rax),%eax
    5305:	85 c0                	test   %eax,%eax
    5307:	74 1f                	je     5328 <ecall_pointer_out+0x59>
    5309:	48 8d 0d 73 0f 02 00 	lea    0x20f73(%rip),%rcx        # 26283 <g_dyn_entry_table+0x283>
    5310:	48 8d 15 76 0f 02 00 	lea    0x20f76(%rip),%rdx        # 2628d <g_dyn_entry_table+0x28d>
    5317:	be 70 00 00 00       	mov    $0x70,%esi
    531c:	48 8d 3d 3d 0f 02 00 	lea    0x20f3d(%rip),%rdi        # 26260 <g_dyn_entry_table+0x260>
    5323:	e8 78 ab 00 00       	call   fea0 <__assert>
    5328:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    532c:	c7 00 d2 04 00 00    	movl   $0x4d2,(%rax)
    5332:	90                   	nop
    5333:	c9                   	leave  
    5334:	c3                   	ret    

0000000000005335 <ecall_pointer_in_out>:
    5335:	f3 0f 1e fa          	endbr64 
    5339:	55                   	push   %rbp
    533a:	48 89 e5             	mov    %rsp,%rbp
    533d:	48 83 ec 10          	sub    $0x10,%rsp
    5341:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5345:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5349:	be 04 00 00 00       	mov    $0x4,%esi
    534e:	48 89 c7             	mov    %rax,%rdi
    5351:	e8 4a 51 00 00       	call   a4a0 <sgx_is_within_enclave>
    5356:	83 f8 01             	cmp    $0x1,%eax
    5359:	0f 95 c0             	setne  %al
    535c:	84 c0                	test   %al,%al
    535e:	74 05                	je     5365 <ecall_pointer_in_out+0x30>
    5360:	e8 d2 09 02 00       	call   25d37 <abort>
    5365:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5369:	8b 00                	mov    (%rax),%eax
    536b:	83 f8 01             	cmp    $0x1,%eax
    536e:	74 1f                	je     538f <ecall_pointer_in_out+0x5a>
    5370:	48 8d 0d c9 0e 02 00 	lea    0x20ec9(%rip),%rcx        # 26240 <g_dyn_entry_table+0x240>
    5377:	48 8d 15 21 0f 02 00 	lea    0x20f21(%rip),%rdx        # 2629f <g_dyn_entry_table+0x29f>
    537e:	be 7b 00 00 00       	mov    $0x7b,%esi
    5383:	48 8d 3d d6 0e 02 00 	lea    0x20ed6(%rip),%rdi        # 26260 <g_dyn_entry_table+0x260>
    538a:	e8 11 ab 00 00       	call   fea0 <__assert>
    538f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5393:	c7 00 d2 04 00 00    	movl   $0x4d2,(%rax)
    5399:	90                   	nop
    539a:	c9                   	leave  
    539b:	c3                   	ret    

000000000000539c <ocall_pointer_attr>:
    539c:	f3 0f 1e fa          	endbr64 
    53a0:	55                   	push   %rbp
    53a1:	48 89 e5             	mov    %rsp,%rbp
    53a4:	48 83 ec 10          	sub    $0x10,%rsp
    53a8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    53af:	00 00 
    53b1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    53b5:	31 c0                	xor    %eax,%eax
    53b7:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
    53be:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    53c5:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    53c9:	48 89 c7             	mov    %rax,%rdi
    53cc:	e8 86 ed ff ff       	call   4157 <ocall_pointer_user_check>
    53d1:	89 45 f4             	mov    %eax,-0xc(%rbp)
    53d4:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    53d8:	74 05                	je     53df <ocall_pointer_attr+0x43>
    53da:	e8 58 09 02 00       	call   25d37 <abort>
    53df:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    53e6:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    53ea:	48 89 c7             	mov    %rax,%rdi
    53ed:	e8 18 ee ff ff       	call   420a <ocall_pointer_in>
    53f2:	89 45 f4             	mov    %eax,-0xc(%rbp)
    53f5:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    53f9:	74 05                	je     5400 <ocall_pointer_attr+0x64>
    53fb:	e8 37 09 02 00       	call   25d37 <abort>
    5400:	8b 45 f0             	mov    -0x10(%rbp),%eax
    5403:	85 c0                	test   %eax,%eax
    5405:	74 1f                	je     5426 <ocall_pointer_attr+0x8a>
    5407:	48 8d 0d a6 0e 02 00 	lea    0x20ea6(%rip),%rcx        # 262b4 <g_dyn_entry_table+0x2b4>
    540e:	48 8d 15 a8 0e 02 00 	lea    0x20ea8(%rip),%rdx        # 262bd <g_dyn_entry_table+0x2bd>
    5415:	be 8f 00 00 00       	mov    $0x8f,%esi
    541a:	48 8d 3d 3f 0e 02 00 	lea    0x20e3f(%rip),%rdi        # 26260 <g_dyn_entry_table+0x260>
    5421:	e8 7a aa 00 00       	call   fea0 <__assert>
    5426:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    542d:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    5431:	48 89 c7             	mov    %rax,%rdi
    5434:	e8 89 ef ff ff       	call   43c2 <ocall_pointer_out>
    5439:	89 45 f4             	mov    %eax,-0xc(%rbp)
    543c:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    5440:	74 05                	je     5447 <ocall_pointer_attr+0xab>
    5442:	e8 f0 08 02 00       	call   25d37 <abort>
    5447:	8b 45 f0             	mov    -0x10(%rbp),%eax
    544a:	3d d2 04 00 00       	cmp    $0x4d2,%eax
    544f:	74 1f                	je     5470 <ocall_pointer_attr+0xd4>
    5451:	48 8d 0d 78 0e 02 00 	lea    0x20e78(%rip),%rcx        # 262d0 <g_dyn_entry_table+0x2d0>
    5458:	48 8d 15 5e 0e 02 00 	lea    0x20e5e(%rip),%rdx        # 262bd <g_dyn_entry_table+0x2bd>
    545f:	be 95 00 00 00       	mov    $0x95,%esi
    5464:	48 8d 3d f5 0d 02 00 	lea    0x20df5(%rip),%rdi        # 26260 <g_dyn_entry_table+0x260>
    546b:	e8 30 aa 00 00       	call   fea0 <__assert>
    5470:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    5477:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    547b:	48 89 c7             	mov    %rax,%rdi
    547e:	e8 2c f1 ff ff       	call   45af <ocall_pointer_in_out>
    5483:	89 45 f4             	mov    %eax,-0xc(%rbp)
    5486:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    548a:	74 05                	je     5491 <ocall_pointer_attr+0xf5>
    548c:	e8 a6 08 02 00       	call   25d37 <abort>
    5491:	8b 45 f0             	mov    -0x10(%rbp),%eax
    5494:	3d d2 04 00 00       	cmp    $0x4d2,%eax
    5499:	74 20                	je     54bb <ocall_pointer_attr+0x11f>
    549b:	48 8d 0d 2e 0e 02 00 	lea    0x20e2e(%rip),%rcx        # 262d0 <g_dyn_entry_table+0x2d0>
    54a2:	48 8d 15 14 0e 02 00 	lea    0x20e14(%rip),%rdx        # 262bd <g_dyn_entry_table+0x2bd>
    54a9:	be 9b 00 00 00       	mov    $0x9b,%esi
    54ae:	48 8d 3d ab 0d 02 00 	lea    0x20dab(%rip),%rdi        # 26260 <g_dyn_entry_table+0x260>
    54b5:	e8 e6 a9 00 00       	call   fea0 <__assert>
    54ba:	90                   	nop
    54bb:	90                   	nop
    54bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54c0:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    54c7:	00 00 
    54c9:	74 05                	je     54d0 <ocall_pointer_attr+0x134>
    54cb:	e8 70 e6 00 00       	call   13b40 <__stack_chk_fail>
    54d0:	c9                   	leave  
    54d1:	c3                   	ret    

00000000000054d2 <ecall_pointer_string>:
    54d2:	f3 0f 1e fa          	endbr64 
    54d6:	55                   	push   %rbp
    54d7:	48 89 e5             	mov    %rsp,%rbp
    54da:	48 83 ec 10          	sub    $0x10,%rsp
    54de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    54e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54e6:	48 89 c7             	mov    %rax,%rdi
    54e9:	e8 a2 e5 00 00       	call   13a90 <strlen>
    54ee:	48 89 c2             	mov    %rax,%rdx
    54f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54f5:	48 8d 35 e0 0d 02 00 	lea    0x20de0(%rip),%rsi        # 262dc <g_dyn_entry_table+0x2dc>
    54fc:	48 89 c7             	mov    %rax,%rdi
    54ff:	e8 9c e5 00 00       	call   13aa0 <strncpy>
    5504:	90                   	nop
    5505:	c9                   	leave  
    5506:	c3                   	ret    

0000000000005507 <ecall_pointer_string_const>:
    5507:	f3 0f 1e fa          	endbr64 
    550b:	55                   	push   %rbp
    550c:	48 89 e5             	mov    %rsp,%rbp
    550f:	48 83 ec 20          	sub    $0x20,%rsp
    5513:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5517:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    551b:	48 89 c7             	mov    %rax,%rdi
    551e:	e8 6d e5 00 00       	call   13a90 <strlen>
    5523:	48 89 c7             	mov    %rax,%rdi
    5526:	e8 f5 bc 01 00       	call   21220 <_Znam>
    552b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    552f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5533:	48 89 c7             	mov    %rax,%rdi
    5536:	e8 55 e5 00 00       	call   13a90 <strlen>
    553b:	48 89 c2             	mov    %rax,%rdx
    553e:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    5542:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5546:	48 89 ce             	mov    %rcx,%rsi
    5549:	48 89 c7             	mov    %rax,%rdi
    554c:	e8 4f e5 00 00       	call   13aa0 <strncpy>
    5551:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    5556:	74 0c                	je     5564 <ecall_pointer_string_const+0x5d>
    5558:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    555c:	48 89 c7             	mov    %rax,%rdi
    555f:	e8 4c bc 01 00       	call   211b0 <_ZdaPv>
    5564:	90                   	nop
    5565:	c9                   	leave  
    5566:	c3                   	ret    

0000000000005567 <ecall_pointer_size>:
    5567:	f3 0f 1e fa          	endbr64 
    556b:	55                   	push   %rbp
    556c:	48 89 e5             	mov    %rsp,%rbp
    556f:	48 83 ec 10          	sub    $0x10,%rsp
    5573:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5577:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    557b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    557f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5583:	48 8d 35 52 0d 02 00 	lea    0x20d52(%rip),%rsi        # 262dc <g_dyn_entry_table+0x2dc>
    558a:	48 89 c7             	mov    %rax,%rdi
    558d:	e8 0e e5 00 00       	call   13aa0 <strncpy>
    5592:	90                   	nop
    5593:	c9                   	leave  
    5594:	c3                   	ret    

0000000000005595 <ecall_pointer_count>:
    5595:	f3 0f 1e fa          	endbr64 
    5599:	55                   	push   %rbp
    559a:	48 89 e5             	mov    %rsp,%rbp
    559d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    55a1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    55a5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    55a9:	89 45 fc             	mov    %eax,-0x4(%rbp)
    55ac:	8b 45 fc             	mov    -0x4(%rbp),%eax
    55af:	83 e8 01             	sub    $0x1,%eax
    55b2:	89 45 f8             	mov    %eax,-0x8(%rbp)
    55b5:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
    55b9:	78 26                	js     55e1 <ecall_pointer_count+0x4c>
    55bb:	8b 45 fc             	mov    -0x4(%rbp),%eax
    55be:	83 e8 01             	sub    $0x1,%eax
    55c1:	8b 55 f8             	mov    -0x8(%rbp),%edx
    55c4:	48 63 d2             	movslq %edx,%rdx
    55c7:	48 8d 0c 95 00 00 00 	lea    0x0(,%rdx,4),%rcx
    55ce:	00 
    55cf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    55d3:	48 01 ca             	add    %rcx,%rdx
    55d6:	2b 45 f8             	sub    -0x8(%rbp),%eax
    55d9:	89 02                	mov    %eax,(%rdx)
    55db:	83 6d f8 01          	subl   $0x1,-0x8(%rbp)
    55df:	eb d4                	jmp    55b5 <ecall_pointer_count+0x20>
    55e1:	90                   	nop
    55e2:	5d                   	pop    %rbp
    55e3:	c3                   	ret    

00000000000055e4 <ecall_pointer_isptr_readonly>:
    55e4:	f3 0f 1e fa          	endbr64 
    55e8:	55                   	push   %rbp
    55e9:	48 89 e5             	mov    %rsp,%rbp
    55ec:	48 83 ec 10          	sub    $0x10,%rsp
    55f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    55f8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    55fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5600:	48 8d 35 d5 0c 02 00 	lea    0x20cd5(%rip),%rsi        # 262dc <g_dyn_entry_table+0x2dc>
    5607:	48 89 c7             	mov    %rax,%rdi
    560a:	e8 91 e4 00 00       	call   13aa0 <strncpy>
    560f:	90                   	nop
    5610:	c9                   	leave  
    5611:	c3                   	ret    

0000000000005612 <_Z12almost_equaldd>:
    5612:	f3 0f 1e fa          	endbr64 
    5616:	55                   	push   %rbp
    5617:	48 89 e5             	mov    %rsp,%rbp
    561a:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
    561f:	f2 0f 11 4d e0       	movsd  %xmm1,-0x20(%rbp)
    5624:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
    5629:	f2 0f 5c 45 e0       	subsd  -0x20(%rbp),%xmm0
    562e:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
    5633:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
    5638:	f3 0f 7e 0d 40 0e 02 	movq   0x20e40(%rip),%xmm1        # 26480 <g_dyn_entry_table+0x480>
    563f:	00 
    5640:	66 0f 54 c8          	andpd  %xmm0,%xmm1
    5644:	f2 0f 10 15 44 0e 02 	movsd  0x20e44(%rip),%xmm2        # 26490 <g_dyn_entry_table+0x490>
    564b:	00 
    564c:	90                   	nop
    564d:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
    5652:	f2 0f 58 45 e0       	addsd  -0x20(%rbp),%xmm0
    5657:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
    565c:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
    5661:	f3 0f 7e 1d 17 0e 02 	movq   0x20e17(%rip),%xmm3        # 26480 <g_dyn_entry_table+0x480>
    5668:	00 
    5669:	66 0f 54 c3          	andpd  %xmm3,%xmm0
    566d:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
    5671:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    5675:	66 0f 2f c1          	comisd %xmm1,%xmm0
    5679:	0f 93 c0             	setae  %al
    567c:	5d                   	pop    %rbp
    567d:	c3                   	ret    

000000000000567e <_Z12almost_equalff>:
    567e:	f3 0f 1e fa          	endbr64 
    5682:	55                   	push   %rbp
    5683:	48 89 e5             	mov    %rsp,%rbp
    5686:	f3 0f 11 45 ec       	movss  %xmm0,-0x14(%rbp)
    568b:	f3 0f 11 4d e8       	movss  %xmm1,-0x18(%rbp)
    5690:	f3 0f 10 45 ec       	movss  -0x14(%rbp),%xmm0
    5695:	f3 0f 5c 45 e8       	subss  -0x18(%rbp),%xmm0
    569a:	f3 0f 11 45 fc       	movss  %xmm0,-0x4(%rbp)
    569f:	f3 0f 10 45 fc       	movss  -0x4(%rbp),%xmm0
    56a4:	f3 0f 10 0d f4 0d 02 	movss  0x20df4(%rip),%xmm1        # 264a0 <g_dyn_entry_table+0x4a0>
    56ab:	00 
    56ac:	0f 54 c8             	andps  %xmm0,%xmm1
    56af:	f3 0f 10 15 f9 0d 02 	movss  0x20df9(%rip),%xmm2        # 264b0 <g_dyn_entry_table+0x4b0>
    56b6:	00 
    56b7:	90                   	nop
    56b8:	f3 0f 10 45 ec       	movss  -0x14(%rbp),%xmm0
    56bd:	f3 0f 58 45 e8       	addss  -0x18(%rbp),%xmm0
    56c2:	f3 0f 11 45 f8       	movss  %xmm0,-0x8(%rbp)
    56c7:	f3 0f 10 45 f8       	movss  -0x8(%rbp),%xmm0
    56cc:	f3 0f 10 1d cc 0d 02 	movss  0x20dcc(%rip),%xmm3        # 264a0 <g_dyn_entry_table+0x4a0>
    56d3:	00 
    56d4:	0f 54 c3             	andps  %xmm3,%xmm0
    56d7:	f3 0f 59 c2          	mulss  %xmm2,%xmm0
    56db:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    56df:	0f 2f c1             	comiss %xmm1,%xmm0
    56e2:	0f 93 c0             	setae  %al
    56e5:	5d                   	pop    %rbp
    56e6:	c3                   	ret    

00000000000056e7 <ecall_type_char>:
    56e7:	f3 0f 1e fa          	endbr64 
    56eb:	55                   	push   %rbp
    56ec:	48 89 e5             	mov    %rsp,%rbp
    56ef:	48 83 ec 10          	sub    $0x10,%rsp
    56f3:	89 f8                	mov    %edi,%eax
    56f5:	88 45 fc             	mov    %al,-0x4(%rbp)
    56f8:	80 7d fc 12          	cmpb   $0x12,-0x4(%rbp)
    56fc:	74 1f                	je     571d <ecall_type_char+0x36>
    56fe:	48 8d 0d eb 0b 02 00 	lea    0x20beb(%rip),%rcx        # 262f0 <g_dyn_entry_table+0x2f0>
    5705:	48 8d 15 f0 0b 02 00 	lea    0x20bf0(%rip),%rdx        # 262fc <g_dyn_entry_table+0x2fc>
    570c:	be 43 00 00 00       	mov    $0x43,%esi
    5711:	48 8d 3d f8 0b 02 00 	lea    0x20bf8(%rip),%rdi        # 26310 <g_dyn_entry_table+0x310>
    5718:	e8 83 a7 00 00       	call   fea0 <__assert>
    571d:	90                   	nop
    571e:	c9                   	leave  
    571f:	c3                   	ret    

0000000000005720 <ecall_type_int>:
    5720:	f3 0f 1e fa          	endbr64 
    5724:	55                   	push   %rbp
    5725:	48 89 e5             	mov    %rsp,%rbp
    5728:	48 83 ec 10          	sub    $0x10,%rsp
    572c:	89 7d fc             	mov    %edi,-0x4(%rbp)
    572f:	81 7d fc d2 04 00 00 	cmpl   $0x4d2,-0x4(%rbp)
    5736:	74 1f                	je     5757 <ecall_type_int+0x37>
    5738:	48 8d 0d f1 0b 02 00 	lea    0x20bf1(%rip),%rcx        # 26330 <g_dyn_entry_table+0x330>
    573f:	48 8d 15 f6 0b 02 00 	lea    0x20bf6(%rip),%rdx        # 2633c <g_dyn_entry_table+0x33c>
    5746:	be 4e 00 00 00       	mov    $0x4e,%esi
    574b:	48 8d 3d be 0b 02 00 	lea    0x20bbe(%rip),%rdi        # 26310 <g_dyn_entry_table+0x310>
    5752:	e8 49 a7 00 00       	call   fea0 <__assert>
    5757:	90                   	nop
    5758:	c9                   	leave  
    5759:	c3                   	ret    

000000000000575a <ecall_type_float>:
    575a:	f3 0f 1e fa          	endbr64 
    575e:	55                   	push   %rbp
    575f:	48 89 e5             	mov    %rsp,%rbp
    5762:	48 83 ec 10          	sub    $0x10,%rsp
    5766:	f3 0f 11 45 fc       	movss  %xmm0,-0x4(%rbp)
    576b:	8b 45 fc             	mov    -0x4(%rbp),%eax
    576e:	f3 0f 10 0d 3e 0d 02 	movss  0x20d3e(%rip),%xmm1        # 264b4 <g_dyn_entry_table+0x4b4>
    5775:	00 
    5776:	66 0f 6e c0          	movd   %eax,%xmm0
    577a:	e8 ff fe ff ff       	call   567e <_Z12almost_equalff>
    577f:	84 c0                	test   %al,%al
    5781:	75 1f                	jne    57a2 <ecall_type_float+0x48>
    5783:	48 8d 0d c6 0b 02 00 	lea    0x20bc6(%rip),%rcx        # 26350 <g_dyn_entry_table+0x350>
    578a:	48 8d 15 e0 0b 02 00 	lea    0x20be0(%rip),%rdx        # 26371 <g_dyn_entry_table+0x371>
    5791:	be 59 00 00 00       	mov    $0x59,%esi
    5796:	48 8d 3d 73 0b 02 00 	lea    0x20b73(%rip),%rdi        # 26310 <g_dyn_entry_table+0x310>
    579d:	e8 fe a6 00 00       	call   fea0 <__assert>
    57a2:	90                   	nop
    57a3:	c9                   	leave  
    57a4:	c3                   	ret    

00000000000057a5 <ecall_type_double>:
    57a5:	f3 0f 1e fa          	endbr64 
    57a9:	55                   	push   %rbp
    57aa:	48 89 e5             	mov    %rsp,%rbp
    57ad:	48 83 ec 10          	sub    $0x10,%rsp
    57b1:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
    57b6:	f2 0f 10 05 fa 0c 02 	movsd  0x20cfa(%rip),%xmm0        # 264b8 <g_dyn_entry_table+0x4b8>
    57bd:	00 
    57be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57c2:	66 0f 28 c8          	movapd %xmm0,%xmm1
    57c6:	66 48 0f 6e c0       	movq   %rax,%xmm0
    57cb:	e8 42 fe ff ff       	call   5612 <_Z12almost_equaldd>
    57d0:	84 c0                	test   %al,%al
    57d2:	75 1f                	jne    57f3 <ecall_type_double+0x4e>
    57d4:	48 8d 0d ad 0b 02 00 	lea    0x20bad(%rip),%rcx        # 26388 <g_dyn_entry_table+0x388>
    57db:	48 8d 15 cb 0b 02 00 	lea    0x20bcb(%rip),%rdx        # 263ad <g_dyn_entry_table+0x3ad>
    57e2:	be 64 00 00 00       	mov    $0x64,%esi
    57e7:	48 8d 3d 22 0b 02 00 	lea    0x20b22(%rip),%rdi        # 26310 <g_dyn_entry_table+0x310>
    57ee:	e8 ad a6 00 00       	call   fea0 <__assert>
    57f3:	90                   	nop
    57f4:	c9                   	leave  
    57f5:	c3                   	ret    

00000000000057f6 <ecall_type_size_t>:
    57f6:	f3 0f 1e fa          	endbr64 
    57fa:	55                   	push   %rbp
    57fb:	48 89 e5             	mov    %rsp,%rbp
    57fe:	48 83 ec 10          	sub    $0x10,%rsp
    5802:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5806:	48 81 7d f8 4e 61 bc 	cmpq   $0xbc614e,-0x8(%rbp)
    580d:	00 
    580e:	74 1f                	je     582f <ecall_type_size_t+0x39>
    5810:	48 8d 0d a8 0b 02 00 	lea    0x20ba8(%rip),%rcx        # 263bf <g_dyn_entry_table+0x3bf>
    5817:	48 8d 15 b9 0b 02 00 	lea    0x20bb9(%rip),%rdx        # 263d7 <g_dyn_entry_table+0x3d7>
    581e:	be 6f 00 00 00       	mov    $0x6f,%esi
    5823:	48 8d 3d e6 0a 02 00 	lea    0x20ae6(%rip),%rdi        # 26310 <g_dyn_entry_table+0x310>
    582a:	e8 71 a6 00 00       	call   fea0 <__assert>
    582f:	90                   	nop
    5830:	c9                   	leave  
    5831:	c3                   	ret    

0000000000005832 <ecall_type_wchar_t>:
    5832:	f3 0f 1e fa          	endbr64 
    5836:	55                   	push   %rbp
    5837:	48 89 e5             	mov    %rsp,%rbp
    583a:	48 83 ec 10          	sub    $0x10,%rsp
    583e:	89 7d fc             	mov    %edi,-0x4(%rbp)
    5841:	81 7d fc 34 12 00 00 	cmpl   $0x1234,-0x4(%rbp)
    5848:	74 1f                	je     5869 <ecall_type_wchar_t+0x37>
    584a:	48 8d 0d 98 0b 02 00 	lea    0x20b98(%rip),%rcx        # 263e9 <g_dyn_entry_table+0x3e9>
    5851:	48 8d 15 a8 0b 02 00 	lea    0x20ba8(%rip),%rdx        # 26400 <g_dyn_entry_table+0x400>
    5858:	be 7a 00 00 00       	mov    $0x7a,%esi
    585d:	48 8d 3d ac 0a 02 00 	lea    0x20aac(%rip),%rdi        # 26310 <g_dyn_entry_table+0x310>
    5864:	e8 37 a6 00 00       	call   fea0 <__assert>
    5869:	90                   	nop
    586a:	c9                   	leave  
    586b:	c3                   	ret    

000000000000586c <ecall_type_struct>:
    586c:	f3 0f 1e fa          	endbr64 
    5870:	55                   	push   %rbp
    5871:	48 89 e5             	mov    %rsp,%rbp
    5874:	48 83 ec 10          	sub    $0x10,%rsp
    5878:	89 f8                	mov    %edi,%eax
    587a:	48 89 f1             	mov    %rsi,%rcx
    587d:	48 89 ca             	mov    %rcx,%rdx
    5880:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    5884:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    5888:	8b 45 f0             	mov    -0x10(%rbp),%eax
    588b:	3d d2 04 00 00       	cmp    $0x4d2,%eax
    5890:	74 1f                	je     58b1 <ecall_type_struct+0x45>
    5892:	48 8d 0d 7a 0b 02 00 	lea    0x20b7a(%rip),%rcx        # 26413 <g_dyn_entry_table+0x413>
    5899:	48 8d 15 8c 0b 02 00 	lea    0x20b8c(%rip),%rdx        # 2642c <g_dyn_entry_table+0x42c>
    58a0:	be 85 00 00 00       	mov    $0x85,%esi
    58a5:	48 8d 3d 64 0a 02 00 	lea    0x20a64(%rip),%rdi        # 26310 <g_dyn_entry_table+0x310>
    58ac:	e8 ef a5 00 00       	call   fea0 <__assert>
    58b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58b5:	48 3d 2e 16 00 00    	cmp    $0x162e,%rax
    58bb:	74 1f                	je     58dc <ecall_type_struct+0x70>
    58bd:	48 8d 0d 7a 0b 02 00 	lea    0x20b7a(%rip),%rcx        # 2643e <g_dyn_entry_table+0x43e>
    58c4:	48 8d 15 61 0b 02 00 	lea    0x20b61(%rip),%rdx        # 2642c <g_dyn_entry_table+0x42c>
    58cb:	be 86 00 00 00       	mov    $0x86,%esi
    58d0:	48 8d 3d 39 0a 02 00 	lea    0x20a39(%rip),%rdi        # 26310 <g_dyn_entry_table+0x310>
    58d7:	e8 c4 a5 00 00       	call   fea0 <__assert>
    58dc:	90                   	nop
    58dd:	c9                   	leave  
    58de:	c3                   	ret    

00000000000058df <ecall_type_enum_union>:
    58df:	f3 0f 1e fa          	endbr64 
    58e3:	55                   	push   %rbp
    58e4:	48 89 e5             	mov    %rsp,%rbp
    58e7:	48 83 ec 10          	sub    $0x10,%rsp
    58eb:	89 7d fc             	mov    %edi,-0x4(%rbp)
    58ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    58f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    58f6:	be 08 00 00 00       	mov    $0x8,%esi
    58fb:	48 89 c7             	mov    %rax,%rdi
    58fe:	e8 fd 4b 00 00       	call   a500 <sgx_is_outside_enclave>
    5903:	83 f8 01             	cmp    $0x1,%eax
    5906:	0f 95 c0             	setne  %al
    5909:	84 c0                	test   %al,%al
    590b:	74 05                	je     5912 <ecall_type_enum_union+0x33>
    590d:	e8 25 04 02 00       	call   25d37 <abort>
    5912:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5916:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
    591c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5920:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
    5926:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    592a:	74 1f                	je     594b <ecall_type_enum_union+0x6c>
    592c:	48 8d 0d 24 0b 02 00 	lea    0x20b24(%rip),%rcx        # 26457 <g_dyn_entry_table+0x457>
    5933:	48 8d 15 30 0b 02 00 	lea    0x20b30(%rip),%rdx        # 2646a <g_dyn_entry_table+0x46a>
    593a:	be 97 00 00 00       	mov    $0x97,%esi
    593f:	48 8d 3d ca 09 02 00 	lea    0x209ca(%rip),%rdi        # 26310 <g_dyn_entry_table+0x310>
    5946:	e8 55 a5 00 00       	call   fea0 <__assert>
    594b:	90                   	nop
    594c:	c9                   	leave  
    594d:	c3                   	ret    

000000000000594e <printf>:
    594e:	f3 0f 1e fa          	endbr64 
    5952:	55                   	push   %rbp
    5953:	48 89 e5             	mov    %rsp,%rbp
    5956:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    595d:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    5962:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    5969:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    596e:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
    5975:	48 89 bd 18 df ff ff 	mov    %rdi,-0x20e8(%rbp)
    597c:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
    5983:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
    598a:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
    5991:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
    5998:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
    599f:	84 c0                	test   %al,%al
    59a1:	74 20                	je     59c3 <printf+0x75>
    59a3:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    59a7:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
    59ab:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
    59af:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
    59b3:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
    59b7:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
    59bb:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
    59bf:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
    59c3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    59ca:	00 00 
    59cc:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    59d3:	31 c0                	xor    %eax,%eax
    59d5:	48 c7 85 40 df ff ff 	movq   $0x0,-0x20c0(%rbp)
    59dc:	00 00 00 00 
    59e0:	48 c7 85 48 df ff ff 	movq   $0x0,-0x20b8(%rbp)
    59e7:	00 00 00 00 
    59eb:	48 8d 95 50 df ff ff 	lea    -0x20b0(%rbp),%rdx
    59f2:	b8 00 00 00 00       	mov    $0x0,%eax
    59f7:	b9 fe 03 00 00       	mov    $0x3fe,%ecx
    59fc:	48 89 d7             	mov    %rdx,%rdi
    59ff:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    5a02:	c7 85 28 df ff ff 08 	movl   $0x8,-0x20d8(%rbp)
    5a09:	00 00 00 
    5a0c:	c7 85 2c df ff ff 30 	movl   $0x30,-0x20d4(%rbp)
    5a13:	00 00 00 
    5a16:	48 8d 45 10          	lea    0x10(%rbp),%rax
    5a1a:	48 89 85 30 df ff ff 	mov    %rax,-0x20d0(%rbp)
    5a21:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    5a28:	48 89 85 38 df ff ff 	mov    %rax,-0x20c8(%rbp)
    5a2f:	48 8d 8d 28 df ff ff 	lea    -0x20d8(%rbp),%rcx
    5a36:	48 8b 95 18 df ff ff 	mov    -0x20e8(%rbp),%rdx
    5a3d:	48 8d 85 40 df ff ff 	lea    -0x20c0(%rbp),%rax
    5a44:	be 00 20 00 00       	mov    $0x2000,%esi
    5a49:	48 89 c7             	mov    %rax,%rdi
    5a4c:	e8 cf a6 00 00       	call   10120 <vsnprintf>
    5a51:	48 8d 85 40 df ff ff 	lea    -0x20c0(%rbp),%rax
    5a58:	48 89 c7             	mov    %rax,%rdi
    5a5b:	e8 44 e5 ff ff       	call   3fa4 <ocall_print_string>
    5a60:	48 8d 85 40 df ff ff 	lea    -0x20c0(%rbp),%rax
    5a67:	be ff 1f 00 00       	mov    $0x1fff,%esi
    5a6c:	48 89 c7             	mov    %rax,%rdi
    5a6f:	e8 9c e0 00 00       	call   13b10 <strnlen>
    5a74:	83 c0 01             	add    $0x1,%eax
    5a77:	48 8b b5 48 ff ff ff 	mov    -0xb8(%rbp),%rsi
    5a7e:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    5a85:	00 00 
    5a87:	74 05                	je     5a8e <printf+0x140>
    5a89:	e8 b2 e0 00 00       	call   13b40 <__stack_chk_fail>
    5a8e:	c9                   	leave  
    5a8f:	c3                   	ret    

0000000000005a90 <allocate_and_loop_memory>:
    5a90:	f3 0f 1e fa          	endbr64 
    5a94:	55                   	push   %rbp
    5a95:	48 89 e5             	mov    %rsp,%rbp
    5a98:	48 83 ec 10          	sub    $0x10,%rsp
    5a9c:	48 8d 3d 1d 0a 02 00 	lea    0x20a1d(%rip),%rdi        # 264c0 <g_dyn_entry_table+0x4c0>
    5aa3:	b8 00 00 00 00       	mov    $0x0,%eax
    5aa8:	e8 a1 fe ff ff       	call   594e <printf>
    5aad:	bf 00 10 00 00       	mov    $0x1000,%edi
    5ab2:	e8 79 af 00 00       	call   10a30 <dlmalloc>
    5ab7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    5abb:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    5ac0:	75 1d                	jne    5adf <allocate_and_loop_memory+0x4f>
    5ac2:	48 8d 3d 1f 0a 02 00 	lea    0x20a1f(%rip),%rdi        # 264e8 <g_dyn_entry_table+0x4e8>
    5ac9:	b8 00 00 00 00       	mov    $0x0,%eax
    5ace:	e8 7b fe ff ff       	call   594e <printf>
    5ad3:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    5ada:	e9 84 00 00 00       	jmp    5b63 <allocate_and_loop_memory+0xd3>
    5adf:	48 8d 3d 24 0a 02 00 	lea    0x20a24(%rip),%rdi        # 2650a <g_dyn_entry_table+0x50a>
    5ae6:	b8 00 00 00 00       	mov    $0x0,%eax
    5aeb:	e8 5e fe ff ff       	call   594e <printf>
    5af0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5af4:	ba 00 10 00 00       	mov    $0x1000,%edx
    5af9:	be 00 00 00 00       	mov    $0x0,%esi
    5afe:	48 89 c7             	mov    %rax,%rdi
    5b01:	e8 0a df 00 00       	call   13a10 <memset>
    5b06:	48 8d 3d 17 0a 02 00 	lea    0x20a17(%rip),%rdi        # 26524 <g_dyn_entry_table+0x524>
    5b0d:	b8 00 00 00 00       	mov    $0x0,%eax
    5b12:	e8 37 fe ff ff       	call   594e <printf>
    5b17:	c7 45 f4 00 e1 f5 05 	movl   $0x5f5e100,-0xc(%rbp)
    5b1e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    5b21:	8d 50 ff             	lea    -0x1(%rax),%edx
    5b24:	89 55 f4             	mov    %edx,-0xc(%rbp)
    5b27:	85 c0                	test   %eax,%eax
    5b29:	0f 9f c0             	setg   %al
    5b2c:	84 c0                	test   %al,%al
    5b2e:	74 11                	je     5b41 <allocate_and_loop_memory+0xb1>
    5b30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b34:	4c 8b 10             	mov    (%rax),%r10
    5b37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b3b:	66 0f ae 38          	clflushopt (%rax)
    5b3f:	eb dd                	jmp    5b1e <allocate_and_loop_memory+0x8e>
    5b41:	48 8d 3d f8 09 02 00 	lea    0x209f8(%rip),%rdi        # 26540 <g_dyn_entry_table+0x540>
    5b48:	b8 00 00 00 00       	mov    $0x0,%eax
    5b4d:	e8 fc fd ff ff       	call   594e <printf>
    5b52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b56:	48 89 c7             	mov    %rax,%rdi
    5b59:	e8 42 c9 00 00       	call   124a0 <dlfree>
    5b5e:	b8 00 00 00 00       	mov    $0x0,%eax
    5b63:	c9                   	leave  
    5b64:	c3                   	ret    

0000000000005b65 <ecall_malloc_free>:
    5b65:	f3 0f 1e fa          	endbr64 
    5b69:	55                   	push   %rbp
    5b6a:	48 89 e5             	mov    %rsp,%rbp
    5b6d:	48 83 ec 10          	sub    $0x10,%rsp
    5b71:	bf 64 00 00 00       	mov    $0x64,%edi
    5b76:	e8 b5 ae 00 00       	call   10a30 <dlmalloc>
    5b7b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    5b7f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    5b84:	75 1f                	jne    5ba5 <ecall_malloc_free+0x40>
    5b86:	48 8d 0d db 09 02 00 	lea    0x209db(%rip),%rcx        # 26568 <g_dyn_entry_table+0x568>
    5b8d:	48 8d 15 e0 09 02 00 	lea    0x209e0(%rip),%rdx        # 26574 <g_dyn_entry_table+0x574>
    5b94:	be 2e 00 00 00       	mov    $0x2e,%esi
    5b99:	48 8d 3d e8 09 02 00 	lea    0x209e8(%rip),%rdi        # 26588 <g_dyn_entry_table+0x588>
    5ba0:	e8 fb a2 00 00       	call   fea0 <__assert>
    5ba5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ba9:	ba 64 00 00 00       	mov    $0x64,%edx
    5bae:	be 00 00 00 00       	mov    $0x0,%esi
    5bb3:	48 89 c7             	mov    %rax,%rdi
    5bb6:	e8 55 de 00 00       	call   13a10 <memset>
    5bbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5bbf:	48 89 c7             	mov    %rax,%rdi
    5bc2:	e8 d9 c8 00 00       	call   124a0 <dlfree>
    5bc7:	90                   	nop
    5bc8:	c9                   	leave  
    5bc9:	c3                   	ret    

0000000000005bca <ecall_sgx_cpuid>:
    5bca:	f3 0f 1e fa          	endbr64 
    5bce:	55                   	push   %rbp
    5bcf:	48 89 e5             	mov    %rsp,%rbp
    5bd2:	48 83 ec 20          	sub    $0x20,%rsp
    5bd6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5bda:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    5bdd:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    5be0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5be4:	89 d6                	mov    %edx,%esi
    5be6:	48 89 c7             	mov    %rax,%rdi
    5be9:	e8 62 a4 00 00       	call   10050 <sgx_cpuid>
    5bee:	89 45 fc             	mov    %eax,-0x4(%rbp)
    5bf1:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    5bf5:	74 05                	je     5bfc <ecall_sgx_cpuid+0x32>
    5bf7:	e8 3b 01 02 00       	call   25d37 <abort>
    5bfc:	90                   	nop
    5bfd:	c9                   	leave  
    5bfe:	c3                   	ret    

0000000000005bff <_ZNSt3__130__libcpp_is_constant_evaluatedEv>:
    5bff:	f3 0f 1e fa          	endbr64 
    5c03:	55                   	push   %rbp
    5c04:	48 89 e5             	mov    %rsp,%rbp
    5c07:	b8 00 00 00 00       	mov    $0x0,%eax
    5c0c:	5d                   	pop    %rbp
    5c0d:	c3                   	ret    

0000000000005c0e <_ZnwmPv>:
    5c0e:	f3 0f 1e fa          	endbr64 
    5c12:	55                   	push   %rbp
    5c13:	48 89 e5             	mov    %rsp,%rbp
    5c16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c1a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5c1e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5c22:	5d                   	pop    %rbp
    5c23:	c3                   	ret    

0000000000005c24 <_ZNSt3__111char_traitsIcE6lengthEPKc>:
    5c24:	f3 0f 1e fa          	endbr64 
    5c28:	55                   	push   %rbp
    5c29:	48 89 e5             	mov    %rsp,%rbp
    5c2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c34:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
    5c3b:	48 89 c2             	mov    %rax,%rdx
    5c3e:	b8 00 00 00 00       	mov    $0x0,%eax
    5c43:	48 89 d7             	mov    %rdx,%rdi
    5c46:	f2 ae                	repnz scas %es:(%rdi),%al
    5c48:	48 89 c8             	mov    %rcx,%rax
    5c4b:	48 f7 d0             	not    %rax
    5c4e:	48 83 e8 01          	sub    $0x1,%rax
    5c52:	5d                   	pop    %rbp
    5c53:	c3                   	ret    

0000000000005c54 <ecall_exception>:
    5c54:	f3 0f 1e fa          	endbr64 
    5c58:	55                   	push   %rbp
    5c59:	48 89 e5             	mov    %rsp,%rbp
    5c5c:	41 55                	push   %r13
    5c5e:	41 54                	push   %r12
    5c60:	53                   	push   %rbx
    5c61:	48 81 ec 48 01 00 00 	sub    $0x148,%rsp
    5c68:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5c6f:	00 00 
    5c71:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    5c75:	31 c0                	xor    %eax,%eax
    5c77:	48 8d 05 2a 09 02 00 	lea    0x2092a(%rip),%rax        # 265a8 <g_dyn_entry_table+0x5a8>
    5c7e:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
    5c85:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5c89:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
    5c90:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    5c97:	48 8d 95 a7 fe ff ff 	lea    -0x159(%rbp),%rdx
    5c9e:	48 89 95 c0 fe ff ff 	mov    %rdx,-0x140(%rbp)
    5ca5:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
    5cac:	40 88 75 b0          	mov    %sil,-0x50(%rbp)
    5cb0:	90                   	nop
    5cb1:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5cb5:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    5cbc:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    5cc3:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    5cca:	88 8d a6 fe ff ff    	mov    %cl,-0x15a(%rbp)
    5cd0:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    5cd7:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    5cde:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    5ce5:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    5cec:	90                   	nop
    5ced:	90                   	nop
    5cee:	90                   	nop
    5cef:	90                   	nop
    5cf0:	48 83 bd b0 fe ff ff 	cmpq   $0x0,-0x150(%rbp)
    5cf7:	00 
    5cf8:	75 1f                	jne    5d19 <ecall_exception+0xc5>
    5cfa:	48 8d 0d ab 08 02 00 	lea    0x208ab(%rip),%rcx        # 265ac <g_dyn_entry_table+0x5ac>
    5d01:	48 8d 15 b3 08 02 00 	lea    0x208b3(%rip),%rdx        # 265bb <g_dyn_entry_table+0x5bb>
    5d08:	be 48 03 00 00       	mov    $0x348,%esi
    5d0d:	48 8d 3d b4 08 02 00 	lea    0x208b4(%rip),%rdi        # 265c8 <g_dyn_entry_table+0x5c8>
    5d14:	e8 87 a1 00 00       	call   fea0 <__assert>
    5d19:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    5d20:	48 89 c7             	mov    %rax,%rdi
    5d23:	e8 fc fe ff ff       	call   5c24 <_ZNSt3__111char_traitsIcE6lengthEPKc>
    5d28:	48 89 c2             	mov    %rax,%rdx
    5d2b:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
    5d32:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5d36:	48 89 ce             	mov    %rcx,%rsi
    5d39:	48 89 c7             	mov    %rax,%rdi
    5d3c:	e8 cf b9 01 00       	call   21710 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm>
    5d41:	90                   	nop
    5d42:	bf 10 00 00 00       	mov    $0x10,%edi
    5d47:	e8 64 ab 01 00       	call   208b0 <__cxa_allocate_exception>
    5d4c:	48 89 c3             	mov    %rax,%rbx
    5d4f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5d53:	48 89 c6             	mov    %rax,%rsi
    5d56:	48 89 df             	mov    %rbx,%rdi
    5d59:	e8 32 b8 01 00       	call   21590 <_ZNSt13runtime_errorC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE>
    5d5e:	48 8d 05 1b b6 01 00 	lea    0x1b61b(%rip),%rax        # 21380 <_ZNSt13runtime_errorD1Ev>
    5d65:	48 89 c2             	mov    %rax,%rdx
    5d68:	48 8d 35 91 a0 02 00 	lea    0x2a091(%rip),%rsi        # 2fe00 <_ZTISt13runtime_error>
    5d6f:	48 89 df             	mov    %rbx,%rdi
    5d72:	e8 39 ac 01 00       	call   209b0 <__cxa_throw>
    5d77:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5d7b:	48 89 c7             	mov    %rax,%rdi
    5d7e:	e8 5d b9 01 00       	call   216e0 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev>
    5d83:	90                   	nop
    5d84:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5d88:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    5d8f:	00 00 
    5d91:	0f 84 ed 03 00 00    	je     6184 <ecall_exception+0x530>
    5d97:	e9 e3 03 00 00       	jmp    617f <ecall_exception+0x52b>
    5d9c:	f3 0f 1e fa          	endbr64 
    5da0:	49 89 c5             	mov    %rax,%r13
    5da3:	49 89 d4             	mov    %rdx,%r12
    5da6:	48 89 df             	mov    %rbx,%rdi
    5da9:	e8 c2 b1 01 00       	call   20f70 <__cxa_free_exception>
    5dae:	4c 89 e8             	mov    %r13,%rax
    5db1:	4c 89 e2             	mov    %r12,%rdx
    5db4:	eb 04                	jmp    5dba <ecall_exception+0x166>
    5db6:	f3 0f 1e fa          	endbr64 
    5dba:	48 83 fa 01          	cmp    $0x1,%rdx
    5dbe:	0f 85 3b 03 00 00    	jne    60ff <ecall_exception+0x4ab>
    5dc4:	48 89 c7             	mov    %rax,%rdi
    5dc7:	e8 54 a8 01 00       	call   20620 <__cxa_begin_catch>
    5dcc:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
    5dd3:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    5dda:	48 8b 00             	mov    (%rax),%rax
    5ddd:	48 83 c0 10          	add    $0x10,%rax
    5de1:	48 8b 10             	mov    (%rax),%rdx
    5de4:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    5deb:	48 89 c7             	mov    %rax,%rdi
    5dee:	ff d2                	call   *%rdx
    5df0:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    5df7:	48 83 bd f0 fe ff ff 	cmpq   $0x0,-0x110(%rbp)
    5dfe:	00 
    5dff:	75 1f                	jne    5e20 <ecall_exception+0x1cc>
    5e01:	48 8d 0d e8 07 02 00 	lea    0x207e8(%rip),%rcx        # 265f0 <g_dyn_entry_table+0x5f0>
    5e08:	48 8d 15 f2 07 02 00 	lea    0x207f2(%rip),%rdx        # 26601 <g_dyn_entry_table+0x601>
    5e0f:	be f1 0f 00 00       	mov    $0xff1,%esi
    5e14:	48 8d 3d ad 07 02 00 	lea    0x207ad(%rip),%rdi        # 265c8 <g_dyn_entry_table+0x5c8>
    5e1b:	e8 80 a0 00 00       	call   fea0 <__assert>
    5e20:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    5e27:	48 89 c7             	mov    %rax,%rdi
    5e2a:	e8 f5 fd ff ff       	call   5c24 <_ZNSt3__111char_traitsIcE6lengthEPKc>
    5e2f:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    5e36:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5e3a:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    5e41:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    5e48:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
    5e4f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    5e56:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    5e5d:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    5e64:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    5e6b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    5e72:	90                   	nop
    5e73:	0f b6 00             	movzbl (%rax),%eax
    5e76:	0f b6 c0             	movzbl %al,%eax
    5e79:	83 e0 01             	and    $0x1,%eax
    5e7c:	48 85 c0             	test   %rax,%rax
    5e7f:	0f 95 c0             	setne  %al
    5e82:	84 c0                	test   %al,%al
    5e84:	74 38                	je     5ebe <ecall_exception+0x26a>
    5e86:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    5e8d:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    5e94:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    5e9b:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    5ea2:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    5ea9:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    5eb0:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    5eb7:	90                   	nop
    5eb8:	48 8b 40 08          	mov    0x8(%rax),%rax
    5ebc:	eb 3c                	jmp    5efa <ecall_exception+0x2a6>
    5ebe:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    5ec5:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    5ecc:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    5ed3:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    5eda:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    5ee1:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    5ee8:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    5eef:	90                   	nop
    5ef0:	0f b6 00             	movzbl (%rax),%eax
    5ef3:	0f b6 c0             	movzbl %al,%eax
    5ef6:	d1 f8                	sar    %eax
    5ef8:	48 98                	cltq   
    5efa:	90                   	nop
    5efb:	48 39 85 f8 fe ff ff 	cmp    %rax,-0x108(%rbp)
    5f02:	0f 95 c0             	setne  %al
    5f05:	84 c0                	test   %al,%al
    5f07:	74 07                	je     5f10 <ecall_exception+0x2bc>
    5f09:	b8 00 00 00 00       	mov    $0x0,%eax
    5f0e:	eb 31                	jmp    5f41 <ecall_exception+0x2ed>
    5f10:	48 8b 8d f8 fe ff ff 	mov    -0x108(%rbp),%rcx
    5f17:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
    5f1e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5f22:	49 89 c8             	mov    %rcx,%r8
    5f25:	48 89 d1             	mov    %rdx,%rcx
    5f28:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    5f2f:	be 00 00 00 00       	mov    $0x0,%esi
    5f34:	48 89 c7             	mov    %rax,%rdi
    5f37:	e8 64 b8 01 00       	call   217a0 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm>
    5f3c:	85 c0                	test   %eax,%eax
    5f3e:	0f 94 c0             	sete   %al
    5f41:	84 c0                	test   %al,%al
    5f43:	75 1f                	jne    5f64 <ecall_exception+0x310>
    5f45:	48 8d 0d c0 06 02 00 	lea    0x206c0(%rip),%rcx        # 2660c <g_dyn_entry_table+0x60c>
    5f4c:	48 8d 15 c9 06 02 00 	lea    0x206c9(%rip),%rdx        # 2661c <g_dyn_entry_table+0x61c>
    5f53:	be 33 00 00 00       	mov    $0x33,%esi
    5f58:	48 8d 3d d1 06 02 00 	lea    0x206d1(%rip),%rdi        # 26630 <g_dyn_entry_table+0x630>
    5f5f:	e8 3c 9f 00 00       	call   fea0 <__assert>
    5f64:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5f68:	48 8d 35 e3 06 02 00 	lea    0x206e3(%rip),%rsi        # 26652 <g_dyn_entry_table+0x652>
    5f6f:	48 89 c7             	mov    %rax,%rdi
    5f72:	e8 a9 b6 01 00       	call   21620 <_ZNSt13runtime_errorC1EPKc>
    5f77:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
    5f7e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5f82:	48 89 d6             	mov    %rdx,%rsi
    5f85:	48 89 c7             	mov    %rax,%rdi
    5f88:	e8 13 b7 01 00       	call   216a0 <_ZNSt13runtime_erroraSERKS_>
    5f8d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5f91:	48 89 c7             	mov    %rax,%rdi
    5f94:	e8 e7 b2 01 00       	call   21280 <_ZNKSt13runtime_error4whatEv>
    5f99:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    5fa0:	48 83 bd 50 ff ff ff 	cmpq   $0x0,-0xb0(%rbp)
    5fa7:	00 
    5fa8:	75 1f                	jne    5fc9 <ecall_exception+0x375>
    5faa:	48 8d 0d 3f 06 02 00 	lea    0x2063f(%rip),%rcx        # 265f0 <g_dyn_entry_table+0x5f0>
    5fb1:	48 8d 15 49 06 02 00 	lea    0x20649(%rip),%rdx        # 26601 <g_dyn_entry_table+0x601>
    5fb8:	be f1 0f 00 00       	mov    $0xff1,%esi
    5fbd:	48 8d 3d 04 06 02 00 	lea    0x20604(%rip),%rdi        # 265c8 <g_dyn_entry_table+0x5c8>
    5fc4:	e8 d7 9e 00 00       	call   fea0 <__assert>
    5fc9:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    5fd0:	48 89 c7             	mov    %rax,%rdi
    5fd3:	e8 4c fc ff ff       	call   5c24 <_ZNSt3__111char_traitsIcE6lengthEPKc>
    5fd8:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    5fdf:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5fe3:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    5fea:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    5ff1:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    5ff8:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    5fff:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    6006:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    600d:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    6014:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    601b:	90                   	nop
    601c:	0f b6 00             	movzbl (%rax),%eax
    601f:	0f b6 c0             	movzbl %al,%eax
    6022:	83 e0 01             	and    $0x1,%eax
    6025:	48 85 c0             	test   %rax,%rax
    6028:	0f 95 c0             	setne  %al
    602b:	84 c0                	test   %al,%al
    602d:	74 26                	je     6055 <ecall_exception+0x401>
    602f:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    6036:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    603a:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    603e:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    6042:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    6046:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    604a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    604e:	90                   	nop
    604f:	48 8b 40 08          	mov    0x8(%rax),%rax
    6053:	eb 2a                	jmp    607f <ecall_exception+0x42b>
    6055:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    605c:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    6060:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6064:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    6068:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    606c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    6070:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6074:	90                   	nop
    6075:	0f b6 00             	movzbl (%rax),%eax
    6078:	0f b6 c0             	movzbl %al,%eax
    607b:	d1 f8                	sar    %eax
    607d:	48 98                	cltq   
    607f:	90                   	nop
    6080:	48 39 85 58 ff ff ff 	cmp    %rax,-0xa8(%rbp)
    6087:	0f 95 c0             	setne  %al
    608a:	84 c0                	test   %al,%al
    608c:	74 07                	je     6095 <ecall_exception+0x441>
    608e:	b8 00 00 00 00       	mov    $0x0,%eax
    6093:	eb 31                	jmp    60c6 <ecall_exception+0x472>
    6095:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
    609c:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
    60a3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    60a7:	49 89 c8             	mov    %rcx,%r8
    60aa:	48 89 d1             	mov    %rdx,%rcx
    60ad:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    60b4:	be 00 00 00 00       	mov    $0x0,%esi
    60b9:	48 89 c7             	mov    %rax,%rdi
    60bc:	e8 df b6 01 00       	call   217a0 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm>
    60c1:	85 c0                	test   %eax,%eax
    60c3:	0f 94 c0             	sete   %al
    60c6:	84 c0                	test   %al,%al
    60c8:	75 1f                	jne    60e9 <ecall_exception+0x495>
    60ca:	48 8d 0d 82 05 02 00 	lea    0x20582(%rip),%rcx        # 26653 <g_dyn_entry_table+0x653>
    60d1:	48 8d 15 44 05 02 00 	lea    0x20544(%rip),%rdx        # 2661c <g_dyn_entry_table+0x61c>
    60d8:	be 36 00 00 00       	mov    $0x36,%esi
    60dd:	48 8d 3d 4c 05 02 00 	lea    0x2054c(%rip),%rdi        # 26630 <g_dyn_entry_table+0x630>
    60e4:	e8 b7 9d 00 00       	call   fea0 <__assert>
    60e9:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    60ed:	48 89 c7             	mov    %rax,%rdi
    60f0:	e8 8b b2 01 00       	call   21380 <_ZNSt13runtime_errorD1Ev>
    60f5:	e8 96 a5 01 00       	call   20690 <__cxa_end_catch>
    60fa:	e9 78 fc ff ff       	jmp    5d77 <ecall_exception+0x123>
    60ff:	48 89 c7             	mov    %rax,%rdi
    6102:	e8 19 a5 01 00       	call   20620 <__cxa_begin_catch>
    6107:	48 8d 0d 59 05 02 00 	lea    0x20559(%rip),%rcx        # 26667 <g_dyn_entry_table+0x667>
    610e:	48 8d 15 07 05 02 00 	lea    0x20507(%rip),%rdx        # 2661c <g_dyn_entry_table+0x61c>
    6115:	be 39 00 00 00       	mov    $0x39,%esi
    611a:	48 8d 3d 0f 05 02 00 	lea    0x2050f(%rip),%rdi        # 26630 <g_dyn_entry_table+0x630>
    6121:	e8 7a 9d 00 00       	call   fea0 <__assert>
    6126:	e8 65 a5 01 00       	call   20690 <__cxa_end_catch>
    612b:	e9 47 fc ff ff       	jmp    5d77 <ecall_exception+0x123>
    6130:	f3 0f 1e fa          	endbr64 
    6134:	48 89 c3             	mov    %rax,%rbx
    6137:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    613b:	48 89 c7             	mov    %rax,%rdi
    613e:	e8 3d b2 01 00       	call   21380 <_ZNSt13runtime_errorD1Ev>
    6143:	eb 07                	jmp    614c <ecall_exception+0x4f8>
    6145:	f3 0f 1e fa          	endbr64 
    6149:	48 89 c3             	mov    %rax,%rbx
    614c:	e8 3f a5 01 00       	call   20690 <__cxa_end_catch>
    6151:	eb 15                	jmp    6168 <ecall_exception+0x514>
    6153:	f3 0f 1e fa          	endbr64 
    6157:	48 89 c3             	mov    %rax,%rbx
    615a:	e8 31 a5 01 00       	call   20690 <__cxa_end_catch>
    615f:	eb 07                	jmp    6168 <ecall_exception+0x514>
    6161:	f3 0f 1e fa          	endbr64 
    6165:	48 89 c3             	mov    %rax,%rbx
    6168:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    616c:	48 89 c7             	mov    %rax,%rdi
    616f:	e8 6c b5 01 00       	call   216e0 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev>
    6174:	48 89 d8             	mov    %rbx,%rax
    6177:	48 89 c7             	mov    %rax,%rdi
    617a:	e8 91 74 01 00       	call   1d610 <_Unwind_Resume>
    617f:	e8 bc d9 00 00       	call   13b40 <__stack_chk_fail>
    6184:	48 81 c4 48 01 00 00 	add    $0x148,%rsp
    618b:	5b                   	pop    %rbx
    618c:	41 5c                	pop    %r12
    618e:	41 5d                	pop    %r13
    6190:	5d                   	pop    %rbp
    6191:	c3                   	ret    

0000000000006192 <ecall_map>:
    6192:	f3 0f 1e fa          	endbr64 
    6196:	55                   	push   %rbp
    6197:	48 89 e5             	mov    %rsp,%rbp
    619a:	53                   	push   %rbx
    619b:	48 81 ec e8 01 00 00 	sub    $0x1e8,%rsp
    61a2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    61a9:	00 00 
    61ab:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    61af:	31 c0                	xor    %eax,%eax
    61b1:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    61b5:	88 55 c0             	mov    %dl,-0x40(%rbp)
    61b8:	90                   	nop
    61b9:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    61bd:	48 89 d6             	mov    %rdx,%rsi
    61c0:	48 89 c7             	mov    %rax,%rdi
    61c3:	e8 b2 07 00 00       	call   697a <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEEC1ERKS6_>
    61c8:	90                   	nop
    61c9:	c7 85 14 fe ff ff 01 	movl   $0x1,-0x1ec(%rbp)
    61d0:	00 00 00 
    61d3:	c6 85 13 fe ff ff 61 	movb   $0x61,-0x1ed(%rbp)
    61da:	48 8d 85 13 fe ff ff 	lea    -0x1ed(%rbp),%rax
    61e1:	48 89 85 60 fe ff ff 	mov    %rax,-0x1a0(%rbp)
    61e8:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
    61ef:	0f b6 00             	movzbl (%rax),%eax
    61f2:	88 45 a8             	mov    %al,-0x58(%rbp)
    61f5:	48 8d 85 14 fe ff ff 	lea    -0x1ec(%rbp),%rax
    61fc:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
    6203:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
    620a:	8b 00                	mov    (%rax),%eax
    620c:	89 45 ac             	mov    %eax,-0x54(%rbp)
    620f:	90                   	nop
    6210:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    6214:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    6218:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    621f:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax
    6226:	48 89 95 28 fe ff ff 	mov    %rdx,-0x1d8(%rbp)
    622d:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
    6234:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
    623b:	48 89 85 38 fe ff ff 	mov    %rax,-0x1c8(%rbp)
    6242:	48 8b 95 38 fe ff ff 	mov    -0x1c8(%rbp),%rdx
    6249:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
    6250:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
    6257:	48 8b 8d 40 fe ff ff 	mov    -0x1c0(%rbp),%rcx
    625e:	48 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%rax
    6265:	48 89 ce             	mov    %rcx,%rsi
    6268:	48 89 c7             	mov    %rax,%rdi
    626b:	e8 28 11 00 00       	call   7398 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJNS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>
    6270:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    6274:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    6278:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    627c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6280:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
    6287:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    628e:	48 89 95 50 fe ff ff 	mov    %rdx,-0x1b0(%rbp)
    6295:	48 8b 00             	mov    (%rax),%rax
    6298:	48 89 85 18 fe ff ff 	mov    %rax,-0x1e8(%rbp)
    629f:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
    62a6:	48 8b 95 18 fe ff ff 	mov    -0x1e8(%rbp),%rdx
    62ad:	48 89 10             	mov    %rdx,(%rax)
    62b0:	90                   	nop
    62b1:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    62b5:	48 83 c0 08          	add    $0x8,%rax
    62b9:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)
    62c0:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
    62c7:	0f b6 00             	movzbl (%rax),%eax
    62ca:	88 45 c8             	mov    %al,-0x38(%rbp)
    62cd:	90                   	nop
    62ce:	c7 85 14 fe ff ff 02 	movl   $0x2,-0x1ec(%rbp)
    62d5:	00 00 00 
    62d8:	c6 85 13 fe ff ff 62 	movb   $0x62,-0x1ed(%rbp)
    62df:	48 8d 85 13 fe ff ff 	lea    -0x1ed(%rbp),%rax
    62e6:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
    62ed:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    62f4:	0f b6 00             	movzbl (%rax),%eax
    62f7:	88 45 a8             	mov    %al,-0x58(%rbp)
    62fa:	48 8d 85 14 fe ff ff 	lea    -0x1ec(%rbp),%rax
    6301:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
    6308:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    630f:	8b 00                	mov    (%rax),%eax
    6311:	89 45 ac             	mov    %eax,-0x54(%rbp)
    6314:	90                   	nop
    6315:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    6319:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    631d:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
    6324:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
    632b:	48 89 95 78 fe ff ff 	mov    %rdx,-0x188(%rbp)
    6332:	48 89 85 80 fe ff ff 	mov    %rax,-0x180(%rbp)
    6339:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    6340:	48 89 85 88 fe ff ff 	mov    %rax,-0x178(%rbp)
    6347:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
    634e:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    6355:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
    635c:	48 8b 8d 90 fe ff ff 	mov    -0x170(%rbp),%rcx
    6363:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
    636a:	48 89 ce             	mov    %rcx,%rsi
    636d:	48 89 c7             	mov    %rax,%rdi
    6370:	e8 23 10 00 00       	call   7398 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJNS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>
    6375:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    6379:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    637d:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    6381:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6385:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
    638c:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
    6393:	48 89 95 a0 fe ff ff 	mov    %rdx,-0x160(%rbp)
    639a:	48 8b 00             	mov    (%rax),%rax
    639d:	48 89 85 18 fe ff ff 	mov    %rax,-0x1e8(%rbp)
    63a4:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
    63ab:	48 8b 95 18 fe ff ff 	mov    -0x1e8(%rbp),%rdx
    63b2:	48 89 10             	mov    %rdx,(%rax)
    63b5:	90                   	nop
    63b6:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    63ba:	48 83 c0 08          	add    $0x8,%rax
    63be:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
    63c5:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    63cc:	0f b6 00             	movzbl (%rax),%eax
    63cf:	88 45 c8             	mov    %al,-0x38(%rbp)
    63d2:	90                   	nop
    63d3:	c7 85 14 fe ff ff 03 	movl   $0x3,-0x1ec(%rbp)
    63da:	00 00 00 
    63dd:	c6 85 13 fe ff ff 63 	movb   $0x63,-0x1ed(%rbp)
    63e4:	48 8d 85 13 fe ff ff 	lea    -0x1ed(%rbp),%rax
    63eb:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    63f2:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    63f9:	0f b6 00             	movzbl (%rax),%eax
    63fc:	88 45 a8             	mov    %al,-0x58(%rbp)
    63ff:	48 8d 85 14 fe ff ff 	lea    -0x1ec(%rbp),%rax
    6406:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
    640d:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6414:	8b 00                	mov    (%rax),%eax
    6416:	89 45 ac             	mov    %eax,-0x54(%rbp)
    6419:	90                   	nop
    641a:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    641e:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    6422:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
    6429:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
    6430:	48 89 95 c8 fe ff ff 	mov    %rdx,-0x138(%rbp)
    6437:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    643e:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    6445:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    644c:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
    6453:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    645a:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    6461:	48 8b 8d e0 fe ff ff 	mov    -0x120(%rbp),%rcx
    6468:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    646f:	48 89 ce             	mov    %rcx,%rsi
    6472:	48 89 c7             	mov    %rax,%rdi
    6475:	e8 1e 0f 00 00       	call   7398 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJNS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>
    647a:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    647e:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    6482:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    6486:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    648a:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    6491:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    6498:	48 89 95 f0 fe ff ff 	mov    %rdx,-0x110(%rbp)
    649f:	48 8b 00             	mov    (%rax),%rax
    64a2:	48 89 85 18 fe ff ff 	mov    %rax,-0x1e8(%rbp)
    64a9:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    64b0:	48 8b 95 18 fe ff ff 	mov    -0x1e8(%rbp),%rdx
    64b7:	48 89 10             	mov    %rdx,(%rax)
    64ba:	90                   	nop
    64bb:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    64bf:	48 83 c0 08          	add    $0x8,%rax
    64c3:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    64ca:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    64d1:	0f b6 00             	movzbl (%rax),%eax
    64d4:	88 45 c8             	mov    %al,-0x38(%rbp)
    64d7:	90                   	nop
    64d8:	c7 85 14 fe ff ff 04 	movl   $0x4,-0x1ec(%rbp)
    64df:	00 00 00 
    64e2:	c6 85 13 fe ff ff 64 	movb   $0x64,-0x1ed(%rbp)
    64e9:	48 8d 85 13 fe ff ff 	lea    -0x1ed(%rbp),%rax
    64f0:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    64f7:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    64fe:	0f b6 00             	movzbl (%rax),%eax
    6501:	88 45 a8             	mov    %al,-0x58(%rbp)
    6504:	48 8d 85 14 fe ff ff 	lea    -0x1ec(%rbp),%rax
    650b:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    6512:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    6519:	8b 00                	mov    (%rax),%eax
    651b:	89 45 ac             	mov    %eax,-0x54(%rbp)
    651e:	90                   	nop
    651f:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    6523:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    6527:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    652e:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    6535:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
    653c:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    6543:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    654a:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    6551:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    6558:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    655f:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    6566:	48 8b 8d 30 ff ff ff 	mov    -0xd0(%rbp),%rcx
    656d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    6574:	48 89 ce             	mov    %rcx,%rsi
    6577:	48 89 c7             	mov    %rax,%rdi
    657a:	e8 19 0e 00 00       	call   7398 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJNS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>
    657f:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    6583:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    6587:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    658b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    658f:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    6596:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    659d:	48 89 95 40 ff ff ff 	mov    %rdx,-0xc0(%rbp)
    65a4:	48 8b 00             	mov    (%rax),%rax
    65a7:	48 89 85 18 fe ff ff 	mov    %rax,-0x1e8(%rbp)
    65ae:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    65b5:	48 8b 95 18 fe ff ff 	mov    -0x1e8(%rbp),%rdx
    65bc:	48 89 10             	mov    %rdx,(%rax)
    65bf:	90                   	nop
    65c0:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    65c4:	48 83 c0 08          	add    $0x8,%rax
    65c8:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    65cf:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    65d6:	0f b6 00             	movzbl (%rax),%eax
    65d9:	88 45 c8             	mov    %al,-0x38(%rbp)
    65dc:	90                   	nop
    65dd:	c6 45 c0 61          	movb   $0x61,-0x40(%rbp)
    65e1:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    65e5:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    65e9:	48 89 d6             	mov    %rdx,%rsi
    65ec:	48 89 c7             	mov    %rax,%rdi
    65ef:	e8 28 02 00 00       	call   681c <_ZNSt3__13mapIciNS_4lessIcEENS_9allocatorINS_4pairIKciEEEEEixEOc>
    65f4:	8b 00                	mov    (%rax),%eax
    65f6:	83 f8 01             	cmp    $0x1,%eax
    65f9:	74 1f                	je     661a <ecall_map+0x488>
    65fb:	48 8d 0d 6b 00 02 00 	lea    0x2006b(%rip),%rcx        # 2666d <g_dyn_entry_table+0x66d>
    6602:	48 8d 15 70 00 02 00 	lea    0x20070(%rip),%rdx        # 26679 <g_dyn_entry_table+0x679>
    6609:	be 51 00 00 00       	mov    $0x51,%esi
    660e:	48 8d 3d 1b 00 02 00 	lea    0x2001b(%rip),%rdi        # 26630 <g_dyn_entry_table+0x630>
    6615:	e8 86 98 00 00       	call   fea0 <__assert>
    661a:	c6 45 c0 62          	movb   $0x62,-0x40(%rbp)
    661e:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    6622:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6626:	48 89 d6             	mov    %rdx,%rsi
    6629:	48 89 c7             	mov    %rax,%rdi
    662c:	e8 eb 01 00 00       	call   681c <_ZNSt3__13mapIciNS_4lessIcEENS_9allocatorINS_4pairIKciEEEEEixEOc>
    6631:	8b 00                	mov    (%rax),%eax
    6633:	83 f8 02             	cmp    $0x2,%eax
    6636:	74 1f                	je     6657 <ecall_map+0x4c5>
    6638:	48 8d 0d 44 00 02 00 	lea    0x20044(%rip),%rcx        # 26683 <g_dyn_entry_table+0x683>
    663f:	48 8d 15 33 00 02 00 	lea    0x20033(%rip),%rdx        # 26679 <g_dyn_entry_table+0x679>
    6646:	be 52 00 00 00       	mov    $0x52,%esi
    664b:	48 8d 3d de ff 01 00 	lea    0x1ffde(%rip),%rdi        # 26630 <g_dyn_entry_table+0x630>
    6652:	e8 49 98 00 00       	call   fea0 <__assert>
    6657:	c6 45 c0 63          	movb   $0x63,-0x40(%rbp)
    665b:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    665f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6663:	48 89 d6             	mov    %rdx,%rsi
    6666:	48 89 c7             	mov    %rax,%rdi
    6669:	e8 ae 01 00 00       	call   681c <_ZNSt3__13mapIciNS_4lessIcEENS_9allocatorINS_4pairIKciEEEEEixEOc>
    666e:	8b 00                	mov    (%rax),%eax
    6670:	83 f8 03             	cmp    $0x3,%eax
    6673:	74 1f                	je     6694 <ecall_map+0x502>
    6675:	48 8d 0d 13 00 02 00 	lea    0x20013(%rip),%rcx        # 2668f <g_dyn_entry_table+0x68f>
    667c:	48 8d 15 f6 ff 01 00 	lea    0x1fff6(%rip),%rdx        # 26679 <g_dyn_entry_table+0x679>
    6683:	be 53 00 00 00       	mov    $0x53,%esi
    6688:	48 8d 3d a1 ff 01 00 	lea    0x1ffa1(%rip),%rdi        # 26630 <g_dyn_entry_table+0x630>
    668f:	e8 0c 98 00 00       	call   fea0 <__assert>
    6694:	c6 45 c0 64          	movb   $0x64,-0x40(%rbp)
    6698:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    669c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    66a0:	48 89 d6             	mov    %rdx,%rsi
    66a3:	48 89 c7             	mov    %rax,%rdi
    66a6:	e8 71 01 00 00       	call   681c <_ZNSt3__13mapIciNS_4lessIcEENS_9allocatorINS_4pairIKciEEEEEixEOc>
    66ab:	8b 00                	mov    (%rax),%eax
    66ad:	83 f8 04             	cmp    $0x4,%eax
    66b0:	74 1f                	je     66d1 <ecall_map+0x53f>
    66b2:	48 8d 0d e2 ff 01 00 	lea    0x1ffe2(%rip),%rcx        # 2669b <g_dyn_entry_table+0x69b>
    66b9:	48 8d 15 b9 ff 01 00 	lea    0x1ffb9(%rip),%rdx        # 26679 <g_dyn_entry_table+0x679>
    66c0:	be 54 00 00 00       	mov    $0x54,%esi
    66c5:	48 8d 3d 64 ff 01 00 	lea    0x1ff64(%rip),%rdi        # 26630 <g_dyn_entry_table+0x630>
    66cc:	e8 cf 97 00 00       	call   fea0 <__assert>
    66d1:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    66d5:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    66dc:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    66e3:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    66ea:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    66f1:	48 83 c0 08          	add    $0x8,%rax
    66f5:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    66fc:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    6703:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    670a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    6711:	90                   	nop
    6712:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    6716:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    671a:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    671e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    6722:	90                   	nop
    6723:	90                   	nop
    6724:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    6728:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    672c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    6730:	90                   	nop
    6731:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6735:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    6739:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    673d:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    6741:	90                   	nop
    6742:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6746:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    674a:	c6 85 18 fe ff ff 65 	movb   $0x65,-0x1e8(%rbp)
    6751:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6755:	48 8d 95 18 fe ff ff 	lea    -0x1e8(%rbp),%rdx
    675c:	48 89 d6             	mov    %rdx,%rsi
    675f:	48 89 c7             	mov    %rax,%rdi
    6762:	e8 c9 07 00 00       	call   6f30 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE4findIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_>
    6767:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    676b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    676f:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    6773:	90                   	nop
    6774:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6778:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    677c:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    6780:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    6784:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    6788:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    678c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6790:	48 8b 10             	mov    (%rax),%rdx
    6793:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6797:	48 8b 00             	mov    (%rax),%rax
    679a:	48 39 c2             	cmp    %rax,%rdx
    679d:	0f 94 c0             	sete   %al
    67a0:	90                   	nop
    67a1:	84 c0                	test   %al,%al
    67a3:	75 1f                	jne    67c4 <ecall_map+0x632>
    67a5:	48 8d 0d fb fe 01 00 	lea    0x1fefb(%rip),%rcx        # 266a7 <g_dyn_entry_table+0x6a7>
    67ac:	48 8d 15 c6 fe 01 00 	lea    0x1fec6(%rip),%rdx        # 26679 <g_dyn_entry_table+0x679>
    67b3:	be 56 00 00 00       	mov    $0x56,%esi
    67b8:	48 8d 3d 71 fe 01 00 	lea    0x1fe71(%rip),%rdi        # 26630 <g_dyn_entry_table+0x630>
    67bf:	e8 dc 96 00 00       	call   fea0 <__assert>
    67c4:	90                   	nop
    67c5:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    67c9:	48 89 c7             	mov    %rax,%rdi
    67cc:	e8 2f 03 00 00       	call   6b00 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEED1Ev>
    67d1:	90                   	nop
    67d2:	90                   	nop
    67d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    67d7:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    67de:	00 00 
    67e0:	74 2f                	je     6811 <ecall_map+0x67f>
    67e2:	eb 28                	jmp    680c <ecall_map+0x67a>
    67e4:	f3 0f 1e fa          	endbr64 
    67e8:	48 89 c3             	mov    %rax,%rbx
    67eb:	eb 07                	jmp    67f4 <ecall_map+0x662>
    67ed:	f3 0f 1e fa          	endbr64 
    67f1:	48 89 c3             	mov    %rax,%rbx
    67f4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    67f8:	48 89 c7             	mov    %rax,%rdi
    67fb:	e8 00 03 00 00       	call   6b00 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEED1Ev>
    6800:	90                   	nop
    6801:	48 89 d8             	mov    %rbx,%rax
    6804:	48 89 c7             	mov    %rax,%rdi
    6807:	e8 04 6e 01 00       	call   1d610 <_Unwind_Resume>
    680c:	e8 2f d3 00 00       	call   13b40 <__stack_chk_fail>
    6811:	48 81 c4 e8 01 00 00 	add    $0x1e8,%rsp
    6818:	5b                   	pop    %rbx
    6819:	5d                   	pop    %rbp
    681a:	c3                   	ret    
    681b:	90                   	nop

000000000000681c <_ZNSt3__13mapIciNS_4lessIcEENS_9allocatorINS_4pairIKciEEEEEixEOc>:
    681c:	f3 0f 1e fa          	endbr64 
    6820:	55                   	push   %rbp
    6821:	48 89 e5             	mov    %rsp,%rbp
    6824:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    682b:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
    6832:	48 89 b5 40 ff ff ff 	mov    %rsi,-0xc0(%rbp)
    6839:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6840:	00 00 
    6842:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6846:	31 c0                	xor    %eax,%eax
    6848:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    684f:	90                   	nop
    6850:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
    6857:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    685b:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    685f:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
    6866:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
    686d:	48 89 95 70 ff ff ff 	mov    %rdx,-0x90(%rbp)
    6874:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
    687b:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
    6882:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    6886:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    688d:	48 89 55 80          	mov    %rdx,-0x80(%rbp)
    6891:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    6895:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
    6899:	44 88 9d 60 ff ff ff 	mov    %r11b,-0xa0(%rbp)
    68a0:	44 88 95 5f ff ff ff 	mov    %r10b,-0xa1(%rbp)
    68a7:	44 88 8d 5e ff ff ff 	mov    %r9b,-0xa2(%rbp)
    68ae:	44 88 85 5d ff ff ff 	mov    %r8b,-0xa3(%rbp)
    68b5:	48 89 55 90          	mov    %rdx,-0x70(%rbp)
    68b9:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
    68bd:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    68c1:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    68c5:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    68c9:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    68cd:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    68d1:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    68d5:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
    68d9:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    68dd:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    68e1:	48 89 0a             	mov    %rcx,(%rdx)
    68e4:	90                   	nop
    68e5:	90                   	nop
    68e6:	90                   	nop
    68e7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    68eb:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
    68f2:	48 8d 8d 5f ff ff ff 	lea    -0xa1(%rbp),%rcx
    68f9:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
    6900:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
    6907:	49 89 c8             	mov    %rcx,%r8
    690a:	48 89 d1             	mov    %rdx,%rcx
    690d:	48 8d 15 ea 0b 02 00 	lea    0x20bea(%rip),%rdx        # 274fe <_ZNSt3__119piecewise_constructE>
    6914:	48 89 c7             	mov    %rax,%rdi
    6917:	e8 44 02 00 00       	call   6b60 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>
    691c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6920:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    6924:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6928:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    692c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6930:	48 8b 00             	mov    (%rax),%rax
    6933:	48 83 c0 1c          	add    $0x1c,%rax
    6937:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    693b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    693f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    6943:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6947:	90                   	nop
    6948:	90                   	nop
    6949:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    694d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6951:	48 83 c0 04          	add    $0x4,%rax
    6955:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
    6959:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
    6960:	00 00 
    6962:	74 13                	je     6977 <_ZNSt3__13mapIciNS_4lessIcEENS_9allocatorINS_4pairIKciEEEEEixEOc+0x15b>
    6964:	eb 0c                	jmp    6972 <_ZNSt3__13mapIciNS_4lessIcEENS_9allocatorINS_4pairIKciEEEEEixEOc+0x156>
    6966:	f3 0f 1e fa          	endbr64 
    696a:	48 89 c7             	mov    %rax,%rdi
    696d:	e8 9e 6c 01 00       	call   1d610 <_Unwind_Resume>
    6972:	e8 c9 d1 00 00       	call   13b40 <__stack_chk_fail>
    6977:	c9                   	leave  
    6978:	c3                   	ret    
    6979:	90                   	nop

000000000000697a <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEEC1ERKS6_>:
    697a:	f3 0f 1e fa          	endbr64 
    697e:	55                   	push   %rbp
    697f:	48 89 e5             	mov    %rsp,%rbp
    6982:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
    6989:	48 89 bd 38 ff ff ff 	mov    %rdi,-0xc8(%rbp)
    6990:	48 89 b5 30 ff ff ff 	mov    %rsi,-0xd0(%rbp)
    6997:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    699e:	00 00 
    69a0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    69a4:	31 c0                	xor    %eax,%eax
    69a6:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    69ad:	48 83 c0 08          	add    $0x8,%rax
    69b1:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    69b5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    69b9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    69bd:	88 8d 44 ff ff ff    	mov    %cl,-0xbc(%rbp)
    69c3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    69c7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    69cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    69cf:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    69d6:	90                   	nop
    69d7:	90                   	nop
    69d8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    69dc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    69e0:	88 95 44 ff ff ff    	mov    %dl,-0xbc(%rbp)
    69e6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    69ea:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    69ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    69f2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    69f6:	90                   	nop
    69f7:	90                   	nop
    69f8:	90                   	nop
    69f9:	90                   	nop
    69fa:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    6a01:	48 83 c0 10          	add    $0x10,%rax
    6a05:	c7 85 44 ff ff ff 00 	movl   $0x0,-0xbc(%rbp)
    6a0c:	00 00 00 
    6a0f:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    6a16:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    6a1d:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    6a21:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    6a28:	48 8d 85 44 ff ff ff 	lea    -0xbc(%rbp),%rax
    6a2f:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    6a33:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    6a37:	48 89 55 90          	mov    %rdx,-0x70(%rbp)
    6a3b:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    6a3f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6a43:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    6a47:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6a4b:	8b 00                	mov    (%rax),%eax
    6a4d:	48 63 d0             	movslq %eax,%rdx
    6a50:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6a54:	48 89 10             	mov    %rdx,(%rax)
    6a57:	90                   	nop
    6a58:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    6a5c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    6a60:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6a64:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    6a6b:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
    6a6f:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    6a73:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6a77:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    6a7b:	90                   	nop
    6a7c:	90                   	nop
    6a7d:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    6a84:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    6a8b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    6a92:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
    6a99:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
    6aa0:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    6aa7:	48 83 c2 08          	add    $0x8,%rdx
    6aab:	48 89 95 50 ff ff ff 	mov    %rdx,-0xb0(%rbp)
    6ab2:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
    6ab9:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
    6ac0:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    6ac7:	90                   	nop
    6ac8:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
    6acf:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    6ad6:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
    6add:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
    6ae4:	90                   	nop
    6ae5:	90                   	nop
    6ae6:	48 89 10             	mov    %rdx,(%rax)
    6ae9:	90                   	nop
    6aea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6aee:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    6af5:	00 00 
    6af7:	74 05                	je     6afe <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEEC1ERKS6_+0x184>
    6af9:	e8 42 d0 00 00       	call   13b40 <__stack_chk_fail>
    6afe:	c9                   	leave  
    6aff:	c3                   	ret    

0000000000006b00 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEED1Ev>:
    6b00:	f3 0f 1e fa          	endbr64 
    6b04:	55                   	push   %rbp
    6b05:	48 89 e5             	mov    %rsp,%rbp
    6b08:	48 83 ec 40          	sub    $0x40,%rsp
    6b0c:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    6b10:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6b14:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    6b18:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6b1c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    6b20:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6b24:	48 83 c0 08          	add    $0x8,%rax
    6b28:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6b2c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6b30:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    6b34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6b38:	90                   	nop
    6b39:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    6b3d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6b41:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6b45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b49:	90                   	nop
    6b4a:	90                   	nop
    6b4b:	48 8b 10             	mov    (%rax),%rdx
    6b4e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6b52:	48 89 d6             	mov    %rdx,%rsi
    6b55:	48 89 c7             	mov    %rax,%rdi
    6b58:	e8 bf 06 00 00       	call   721c <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE>
    6b5d:	90                   	nop
    6b5e:	c9                   	leave  
    6b5f:	c3                   	ret    

0000000000006b60 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>:
    6b60:	f3 0f 1e fa          	endbr64 
    6b64:	55                   	push   %rbp
    6b65:	48 89 e5             	mov    %rsp,%rbp
    6b68:	48 81 ec c0 01 00 00 	sub    $0x1c0,%rsp
    6b6f:	48 89 bd 68 fe ff ff 	mov    %rdi,-0x198(%rbp)
    6b76:	48 89 b5 60 fe ff ff 	mov    %rsi,-0x1a0(%rbp)
    6b7d:	48 89 95 58 fe ff ff 	mov    %rdx,-0x1a8(%rbp)
    6b84:	48 89 8d 50 fe ff ff 	mov    %rcx,-0x1b0(%rbp)
    6b8b:	4c 89 85 48 fe ff ff 	mov    %r8,-0x1b8(%rbp)
    6b92:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6b99:	00 00 
    6b9b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6b9f:	31 c0                	xor    %eax,%eax
    6ba1:	48 8b 95 60 fe ff ff 	mov    -0x1a0(%rbp),%rdx
    6ba8:	48 8d 8d 78 fe ff ff 	lea    -0x188(%rbp),%rcx
    6baf:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
    6bb6:	48 89 ce             	mov    %rcx,%rsi
    6bb9:	48 89 c7             	mov    %rax,%rdi
    6bbc:	e8 6f 0b 00 00       	call   7730 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE12__find_equalIcEERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_>
    6bc1:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
    6bc8:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
    6bcf:	48 8b 00             	mov    (%rax),%rax
    6bd2:	48 89 85 88 fe ff ff 	mov    %rax,-0x178(%rbp)
    6bd9:	c6 85 77 fe ff ff 00 	movb   $0x0,-0x189(%rbp)
    6be0:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
    6be7:	48 8b 00             	mov    (%rax),%rax
    6bea:	48 85 c0             	test   %rax,%rax
    6bed:	0f 85 db 02 00 00    	jne    6ece <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x36e>
    6bf3:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    6bfa:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
    6c01:	48 8b bd a8 fe ff ff 	mov    -0x158(%rbp),%rdi
    6c08:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
    6c0f:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
    6c16:	48 8b 8d a0 fe ff ff 	mov    -0x160(%rbp),%rcx
    6c1d:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
    6c24:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
    6c2b:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
    6c32:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6c36:	48 8b b5 68 fe ff ff 	mov    -0x198(%rbp),%rsi
    6c3d:	49 89 f8             	mov    %rdi,%r8
    6c40:	48 89 c7             	mov    %rax,%rdi
    6c43:	e8 f8 0d 00 00       	call   7a40 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_>
    6c48:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6c4c:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    6c50:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6c54:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    6c58:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6c5c:	90                   	nop
    6c5d:	48 8b 08             	mov    (%rax),%rcx
    6c60:	48 8b b5 78 fe ff ff 	mov    -0x188(%rbp),%rsi
    6c67:	48 8b 95 90 fe ff ff 	mov    -0x170(%rbp),%rdx
    6c6e:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
    6c75:	48 89 c7             	mov    %rax,%rdi
    6c78:	e8 d1 12 00 00       	call   7f4e <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSE_SE_>
    6c7d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6c81:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    6c85:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6c89:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    6c8d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6c91:	90                   	nop
    6c92:	48 8b 00             	mov    (%rax),%rax
    6c95:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    6c99:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6c9d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    6ca1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6ca5:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    6ca9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    6cad:	90                   	nop
    6cae:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    6cb5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6cb9:	48 89 85 88 fe ff ff 	mov    %rax,-0x178(%rbp)
    6cc0:	c6 85 77 fe ff ff 01 	movb   $0x1,-0x189(%rbp)
    6cc7:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6ccb:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
    6cd2:	48 c7 85 b8 fe ff ff 	movq   $0x0,-0x148(%rbp)
    6cd9:	00 00 00 00 
    6cdd:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    6ce4:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
    6ceb:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
    6cf2:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
    6cf9:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    6d00:	90                   	nop
    6d01:	48 8b 00             	mov    (%rax),%rax
    6d04:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    6d0b:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    6d12:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    6d19:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    6d20:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    6d27:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    6d2e:	90                   	nop
    6d2f:	48 8b 95 b8 fe ff ff 	mov    -0x148(%rbp),%rdx
    6d36:	48 89 10             	mov    %rdx,(%rax)
    6d39:	48 83 bd d0 fe ff ff 	cmpq   $0x0,-0x130(%rbp)
    6d40:	00 
    6d41:	0f 84 85 01 00 00    	je     6ecc <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x36c>
    6d47:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    6d4e:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    6d55:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    6d5c:	48 83 c0 08          	add    $0x8,%rax
    6d60:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    6d67:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    6d6e:	90                   	nop
    6d6f:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    6d76:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    6d7d:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    6d84:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6d8b:	0f b6 40 08          	movzbl 0x8(%rax),%eax
    6d8f:	84 c0                	test   %al,%al
    6d91:	74 4f                	je     6de2 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x282>
    6d93:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    6d9a:	48 83 c0 1c          	add    $0x1c,%rax
    6d9e:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
    6da5:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6dac:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    6db3:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    6dba:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    6dc1:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    6dc8:	90                   	nop
    6dc9:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    6dd0:	48 8b 12             	mov    (%rdx),%rdx
    6dd3:	48 89 95 20 ff ff ff 	mov    %rdx,-0xe0(%rbp)
    6dda:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    6de1:	90                   	nop
    6de2:	48 83 bd 00 ff ff ff 	cmpq   $0x0,-0x100(%rbp)
    6de9:	00 
    6dea:	0f 84 db 00 00 00    	je     6ecb <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x36b>
    6df0:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6df7:	48 8b 00             	mov    (%rax),%rax
    6dfa:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    6e01:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    6e08:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    6e0f:	48 c7 85 40 ff ff ff 	movq   $0x1,-0xc0(%rbp)
    6e16:	01 00 00 00 
    6e1a:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    6e21:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    6e28:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    6e2f:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    6e36:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    6e3d:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    6e44:	e8 b6 ed ff ff       	call   5bff <_ZNSt3__130__libcpp_is_constant_evaluatedEv>
    6e49:	84 c0                	test   %al,%al
    6e4b:	74 11                	je     6e5e <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x2fe>
    6e4d:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    6e54:	48 89 c7             	mov    %rax,%rdi
    6e57:	e8 44 a3 01 00       	call   211a0 <_ZdlPv>
    6e5c:	eb 6b                	jmp    6ec9 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x369>
    6e5e:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    6e65:	48 89 d0             	mov    %rdx,%rax
    6e68:	48 c1 e0 02          	shl    $0x2,%rax
    6e6c:	48 01 d0             	add    %rdx,%rax
    6e6f:	48 c1 e0 03          	shl    $0x3,%rax
    6e73:	48 89 c2             	mov    %rax,%rdx
    6e76:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    6e7d:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    6e84:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
    6e8b:	48 c7 85 70 ff ff ff 	movq   $0x8,-0x90(%rbp)
    6e92:	08 00 00 00 
    6e96:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    6e9d:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    6ea4:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    6eab:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    6eaf:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    6eb6:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    6eba:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    6ebe:	48 89 c7             	mov    %rax,%rdi
    6ec1:	e8 da a2 01 00       	call   211a0 <_ZdlPv>
    6ec6:	90                   	nop
    6ec7:	90                   	nop
    6ec8:	90                   	nop
    6ec9:	90                   	nop
    6eca:	90                   	nop
    6ecb:	90                   	nop
    6ecc:	90                   	nop
    6ecd:	90                   	nop
    6ece:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
    6ed5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    6ed9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6edd:	48 89 85 80 fe ff ff 	mov    %rax,-0x180(%rbp)
    6ee4:	90                   	nop
    6ee5:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
    6eec:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    6ef0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6ef4:	48 8b 00             	mov    (%rax),%rax
    6ef7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6efb:	48 8d 85 77 fe ff ff 	lea    -0x189(%rbp),%rax
    6f02:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    6f06:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6f0a:	0f b6 00             	movzbl (%rax),%eax
    6f0d:	88 45 e8             	mov    %al,-0x18(%rbp)
    6f10:	90                   	nop
    6f11:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6f15:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6f19:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    6f1d:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    6f24:	00 00 
    6f26:	74 05                	je     6f2d <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_4pairINS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x3cd>
    6f28:	e8 13 cc 00 00       	call   13b40 <__stack_chk_fail>
    6f2d:	c9                   	leave  
    6f2e:	c3                   	ret    
    6f2f:	90                   	nop

0000000000006f30 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE4findIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_>:
    6f30:	f3 0f 1e fa          	endbr64 
    6f34:	55                   	push   %rbp
    6f35:	48 89 e5             	mov    %rsp,%rbp
    6f38:	48 81 ec 60 01 00 00 	sub    $0x160,%rsp
    6f3f:	48 89 bd a8 fe ff ff 	mov    %rdi,-0x158(%rbp)
    6f46:	48 89 b5 a0 fe ff ff 	mov    %rsi,-0x160(%rbp)
    6f4d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6f54:	00 00 
    6f56:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6f5a:	31 c0                	xor    %eax,%eax
    6f5c:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    6f63:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    6f6a:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6f71:	48 83 c0 08          	add    $0x8,%rax
    6f75:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    6f7c:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    6f83:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
    6f8a:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6f91:	90                   	nop
    6f92:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    6f99:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    6fa0:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    6fa7:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
    6fae:	90                   	nop
    6faf:	90                   	nop
    6fb0:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    6fb7:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
    6fbe:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    6fc5:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    6fcc:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    6fd3:	48 83 c0 08          	add    $0x8,%rax
    6fd7:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    6fde:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    6fe5:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    6fec:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    6ff3:	90                   	nop
    6ff4:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    6ffb:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    7002:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    7009:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    7010:	90                   	nop
    7011:	90                   	nop
    7012:	48 8b 10             	mov    (%rax),%rdx
    7015:	48 8b b5 a0 fe ff ff 	mov    -0x160(%rbp),%rsi
    701c:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    7023:	48 89 c7             	mov    %rax,%rdi
    7026:	e8 21 10 00 00       	call   804c <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE13__lower_boundIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_SF_PNS_15__tree_end_nodeIPNS_16__tree_node_baseISD_EEEE>
    702b:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
    7032:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    7039:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    7040:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    7047:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    704e:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    7055:	48 83 c0 08          	add    $0x8,%rax
    7059:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    7060:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    7067:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    706e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    7075:	90                   	nop
    7076:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    707d:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    7084:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    708b:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    7092:	90                   	nop
    7093:	90                   	nop
    7094:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    709b:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    70a2:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
    70a9:	90                   	nop
    70aa:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
    70b1:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
    70b8:	48 8d 85 b8 fe ff ff 	lea    -0x148(%rbp),%rax
    70bf:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    70c6:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    70cd:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    70d4:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    70db:	48 8b 10             	mov    (%rax),%rdx
    70de:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    70e5:	48 8b 00             	mov    (%rax),%rax
    70e8:	48 39 c2             	cmp    %rax,%rdx
    70eb:	0f 94 c0             	sete   %al
    70ee:	83 f0 01             	xor    $0x1,%eax
    70f1:	84 c0                	test   %al,%al
    70f3:	0f 84 a5 00 00 00    	je     719e <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE4findIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_+0x26e>
    70f9:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    7100:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    7104:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    7108:	48 83 c0 10          	add    $0x10,%rax
    710c:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    7110:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    7114:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    7118:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    711c:	90                   	nop
    711d:	90                   	nop
    711e:	48 8d 95 b8 fe ff ff 	lea    -0x148(%rbp),%rdx
    7125:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
    7129:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    712d:	48 8b 12             	mov    (%rdx),%rdx
    7130:	48 83 c2 1c          	add    $0x1c,%rdx
    7134:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    713b:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
    7142:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    7149:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
    7150:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    7157:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    715b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    715f:	48 89 c2             	mov    %rax,%rdx
    7162:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    7169:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    716d:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    7174:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    7178:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    717c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7180:	0f b6 10             	movzbl (%rax),%edx
    7183:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7187:	0f b6 00             	movzbl (%rax),%eax
    718a:	38 c2                	cmp    %al,%dl
    718c:	0f 9c c0             	setl   %al
    718f:	90                   	nop
    7190:	83 f0 01             	xor    $0x1,%eax
    7193:	84 c0                	test   %al,%al
    7195:	74 07                	je     719e <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE4findIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_+0x26e>
    7197:	b8 01 00 00 00       	mov    $0x1,%eax
    719c:	eb 05                	jmp    71a3 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE4findIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_+0x273>
    719e:	b8 00 00 00 00       	mov    $0x0,%eax
    71a3:	84 c0                	test   %al,%al
    71a5:	74 09                	je     71b0 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE4findIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_+0x280>
    71a7:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    71ae:	eb 56                	jmp    7206 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE4findIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_+0x2d6>
    71b0:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    71b7:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    71bb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    71bf:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    71c3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    71c7:	48 83 c0 08          	add    $0x8,%rax
    71cb:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    71cf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    71d3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    71d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    71db:	90                   	nop
    71dc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    71e0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    71e4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    71e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    71ec:	90                   	nop
    71ed:	90                   	nop
    71ee:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    71f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    71f6:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
    71fd:	90                   	nop
    71fe:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
    7205:	90                   	nop
    7206:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
    720a:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
    7211:	00 00 
    7213:	74 05                	je     721a <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE4findIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_+0x2ea>
    7215:	e8 26 c9 00 00       	call   13b40 <__stack_chk_fail>
    721a:	c9                   	leave  
    721b:	c3                   	ret    

000000000000721c <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE>:
    721c:	f3 0f 1e fa          	endbr64 
    7220:	55                   	push   %rbp
    7221:	48 89 e5             	mov    %rsp,%rbp
    7224:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    722b:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
    7232:	48 89 b5 40 ff ff ff 	mov    %rsi,-0xc0(%rbp)
    7239:	48 83 bd 40 ff ff ff 	cmpq   $0x0,-0xc0(%rbp)
    7240:	00 
    7241:	0f 84 4d 01 00 00    	je     7394 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE+0x178>
    7247:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    724e:	48 8b 10             	mov    (%rax),%rdx
    7251:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    7258:	48 89 d6             	mov    %rdx,%rsi
    725b:	48 89 c7             	mov    %rax,%rdi
    725e:	e8 b9 ff ff ff       	call   721c <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE>
    7263:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    726a:	48 8b 50 08          	mov    0x8(%rax),%rdx
    726e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    7275:	48 89 d6             	mov    %rdx,%rsi
    7278:	48 89 c7             	mov    %rax,%rdi
    727b:	e8 9c ff ff ff       	call   721c <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE>
    7280:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    7287:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    728b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    728f:	48 83 c0 08          	add    $0x8,%rax
    7293:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    7297:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    729b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    729f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    72a3:	90                   	nop
    72a4:	90                   	nop
    72a5:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    72ac:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    72b3:	48 83 c0 1c          	add    $0x1c,%rax
    72b7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    72bb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    72bf:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    72c3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    72c7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    72cb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    72cf:	90                   	nop
    72d0:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    72d7:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
    72db:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    72df:	90                   	nop
    72e0:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    72e7:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    72ee:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    72f5:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    72fc:	48 c7 85 70 ff ff ff 	movq   $0x1,-0x90(%rbp)
    7303:	01 00 00 00 
    7307:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    730e:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    7315:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    731c:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    7320:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    7327:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    732b:	e8 cf e8 ff ff       	call   5bff <_ZNSt3__130__libcpp_is_constant_evaluatedEv>
    7330:	84 c0                	test   %al,%al
    7332:	74 0e                	je     7342 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE+0x126>
    7334:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    7338:	48 89 c7             	mov    %rax,%rdi
    733b:	e8 60 9e 01 00       	call   211a0 <_ZdlPv>
    7340:	eb 50                	jmp    7392 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE+0x176>
    7342:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    7346:	48 89 d0             	mov    %rdx,%rax
    7349:	48 c1 e0 02          	shl    $0x2,%rax
    734d:	48 01 d0             	add    %rdx,%rax
    7350:	48 c1 e0 03          	shl    $0x3,%rax
    7354:	48 89 c2             	mov    %rax,%rdx
    7357:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    735b:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    735f:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    7363:	48 c7 45 a0 08 00 00 	movq   $0x8,-0x60(%rbp)
    736a:	00 
    736b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    736f:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    7373:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7377:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    737b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    737f:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    7383:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7387:	48 89 c7             	mov    %rax,%rdi
    738a:	e8 11 9e 01 00       	call   211a0 <_ZdlPv>
    738f:	90                   	nop
    7390:	90                   	nop
    7391:	90                   	nop
    7392:	90                   	nop
    7393:	90                   	nop
    7394:	90                   	nop
    7395:	c9                   	leave  
    7396:	c3                   	ret    
    7397:	90                   	nop

0000000000007398 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJNS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_>:
    7398:	f3 0f 1e fa          	endbr64 
    739c:	55                   	push   %rbp
    739d:	48 89 e5             	mov    %rsp,%rbp
    73a0:	48 81 ec a0 01 00 00 	sub    $0x1a0,%rsp
    73a7:	48 89 bd 78 fe ff ff 	mov    %rdi,-0x188(%rbp)
    73ae:	48 89 b5 70 fe ff ff 	mov    %rsi,-0x190(%rbp)
    73b5:	48 89 95 68 fe ff ff 	mov    %rdx,-0x198(%rbp)
    73bc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    73c3:	00 00 
    73c5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    73c9:	31 c0                	xor    %eax,%eax
    73cb:	48 8b 95 70 fe ff ff 	mov    -0x190(%rbp),%rdx
    73d2:	48 8d 8d 88 fe ff ff 	lea    -0x178(%rbp),%rcx
    73d9:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
    73e0:	48 89 ce             	mov    %rcx,%rsi
    73e3:	48 89 c7             	mov    %rax,%rdi
    73e6:	e8 45 03 00 00       	call   7730 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE12__find_equalIcEERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_>
    73eb:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
    73f2:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
    73f9:	48 8b 00             	mov    (%rax),%rax
    73fc:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
    7403:	c6 85 87 fe ff ff 00 	movb   $0x0,-0x179(%rbp)
    740a:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
    7411:	48 8b 00             	mov    (%rax),%rax
    7414:	48 85 c0             	test   %rax,%rax
    7417:	0f 85 b1 02 00 00    	jne    76ce <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJNS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x336>
    741d:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
    7424:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
    742b:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
    7432:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    7436:	48 8b 8d 78 fe ff ff 	mov    -0x188(%rbp),%rcx
    743d:	48 89 ce             	mov    %rcx,%rsi
    7440:	48 89 c7             	mov    %rax,%rdi
    7443:	e8 2a 0d 00 00       	call   8172 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJNS_4pairIKciEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISH_EEEEEEDpOT_>
    7448:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    744c:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    7450:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7454:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    7458:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    745c:	90                   	nop
    745d:	48 8b 08             	mov    (%rax),%rcx
    7460:	48 8b b5 88 fe ff ff 	mov    -0x178(%rbp),%rsi
    7467:	48 8b 95 a0 fe ff ff 	mov    -0x160(%rbp),%rdx
    746e:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
    7475:	48 89 c7             	mov    %rax,%rdi
    7478:	e8 d1 0a 00 00       	call   7f4e <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSE_SE_>
    747d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    7481:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    7485:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7489:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    748d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7491:	90                   	nop
    7492:	48 8b 00             	mov    (%rax),%rax
    7495:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    7499:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    749d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    74a1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    74a5:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    74a9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    74ad:	90                   	nop
    74ae:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    74b5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    74b9:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
    74c0:	c6 85 87 fe ff ff 01 	movb   $0x1,-0x179(%rbp)
    74c7:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    74cb:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
    74d2:	48 c7 85 b8 fe ff ff 	movq   $0x0,-0x148(%rbp)
    74d9:	00 00 00 00 
    74dd:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    74e4:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
    74eb:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
    74f2:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
    74f9:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    7500:	90                   	nop
    7501:	48 8b 00             	mov    (%rax),%rax
    7504:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    750b:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    7512:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    7519:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    7520:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    7527:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    752e:	90                   	nop
    752f:	48 8b 95 b8 fe ff ff 	mov    -0x148(%rbp),%rdx
    7536:	48 89 10             	mov    %rdx,(%rax)
    7539:	48 83 bd d0 fe ff ff 	cmpq   $0x0,-0x130(%rbp)
    7540:	00 
    7541:	0f 84 85 01 00 00    	je     76cc <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJNS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x334>
    7547:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    754e:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    7555:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    755c:	48 83 c0 08          	add    $0x8,%rax
    7560:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    7567:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    756e:	90                   	nop
    756f:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    7576:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    757d:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    7584:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    758b:	0f b6 40 08          	movzbl 0x8(%rax),%eax
    758f:	84 c0                	test   %al,%al
    7591:	74 4f                	je     75e2 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJNS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x24a>
    7593:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    759a:	48 83 c0 1c          	add    $0x1c,%rax
    759e:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
    75a5:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    75ac:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    75b3:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    75ba:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    75c1:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    75c8:	90                   	nop
    75c9:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    75d0:	48 8b 12             	mov    (%rdx),%rdx
    75d3:	48 89 95 20 ff ff ff 	mov    %rdx,-0xe0(%rbp)
    75da:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    75e1:	90                   	nop
    75e2:	48 83 bd 00 ff ff ff 	cmpq   $0x0,-0x100(%rbp)
    75e9:	00 
    75ea:	0f 84 db 00 00 00    	je     76cb <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJNS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x333>
    75f0:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    75f7:	48 8b 00             	mov    (%rax),%rax
    75fa:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    7601:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    7608:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    760f:	48 c7 85 40 ff ff ff 	movq   $0x1,-0xc0(%rbp)
    7616:	01 00 00 00 
    761a:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    7621:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    7628:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    762f:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    7636:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    763d:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    7644:	e8 b6 e5 ff ff       	call   5bff <_ZNSt3__130__libcpp_is_constant_evaluatedEv>
    7649:	84 c0                	test   %al,%al
    764b:	74 11                	je     765e <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJNS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x2c6>
    764d:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    7654:	48 89 c7             	mov    %rax,%rdi
    7657:	e8 44 9b 01 00       	call   211a0 <_ZdlPv>
    765c:	eb 6b                	jmp    76c9 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJNS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x331>
    765e:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    7665:	48 89 d0             	mov    %rdx,%rax
    7668:	48 c1 e0 02          	shl    $0x2,%rax
    766c:	48 01 d0             	add    %rdx,%rax
    766f:	48 c1 e0 03          	shl    $0x3,%rax
    7673:	48 89 c2             	mov    %rax,%rdx
    7676:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    767d:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    7684:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
    768b:	48 c7 85 70 ff ff ff 	movq   $0x8,-0x90(%rbp)
    7692:	08 00 00 00 
    7696:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    769d:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    76a4:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    76ab:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    76af:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    76b6:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    76ba:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    76be:	48 89 c7             	mov    %rax,%rdi
    76c1:	e8 da 9a 01 00       	call   211a0 <_ZdlPv>
    76c6:	90                   	nop
    76c7:	90                   	nop
    76c8:	90                   	nop
    76c9:	90                   	nop
    76ca:	90                   	nop
    76cb:	90                   	nop
    76cc:	90                   	nop
    76cd:	90                   	nop
    76ce:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
    76d5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    76d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    76dd:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
    76e4:	90                   	nop
    76e5:	48 8d 85 90 fe ff ff 	lea    -0x170(%rbp),%rax
    76ec:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    76f0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    76f4:	48 8b 00             	mov    (%rax),%rax
    76f7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    76fb:	48 8d 85 87 fe ff ff 	lea    -0x179(%rbp),%rax
    7702:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    7706:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    770a:	0f b6 00             	movzbl (%rax),%eax
    770d:	88 45 e8             	mov    %al,-0x18(%rbp)
    7710:	90                   	nop
    7711:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7715:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7719:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    771d:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    7724:	00 00 
    7726:	74 05                	je     772d <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIcJNS_4pairIKciEEEEENSB_INS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEEbEERKT_DpOT0_+0x395>
    7728:	e8 13 c4 00 00       	call   13b40 <__stack_chk_fail>
    772d:	c9                   	leave  
    772e:	c3                   	ret    
    772f:	90                   	nop

0000000000007730 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE12__find_equalIcEERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_>:
    7730:	f3 0f 1e fa          	endbr64 
    7734:	55                   	push   %rbp
    7735:	48 89 e5             	mov    %rsp,%rbp
    7738:	48 81 ec 40 01 00 00 	sub    $0x140,%rsp
    773f:	48 89 bd d8 fe ff ff 	mov    %rdi,-0x128(%rbp)
    7746:	48 89 b5 d0 fe ff ff 	mov    %rsi,-0x130(%rbp)
    774d:	48 89 95 c8 fe ff ff 	mov    %rdx,-0x138(%rbp)
    7754:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    775b:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    7762:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7769:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    7770:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    7777:	48 83 c0 08          	add    $0x8,%rax
    777b:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
    7782:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    7789:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    7790:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    7797:	90                   	nop
    7798:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    779f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    77a6:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    77ad:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    77b4:	90                   	nop
    77b5:	90                   	nop
    77b6:	48 8b 00             	mov    (%rax),%rax
    77b9:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    77c0:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    77c7:	48 89 c7             	mov    %rax,%rdi
    77ca:	e8 63 0d 00 00       	call   8532 <_ZNKSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE10__root_ptrEv>
    77cf:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    77d6:	48 83 bd e8 fe ff ff 	cmpq   $0x0,-0x118(%rbp)
    77dd:	00 
    77de:	0f 84 0f 02 00 00    	je     79f3 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE12__find_equalIcEERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_+0x2c3>
    77e4:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    77eb:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    77f2:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    77f9:	48 83 c0 10          	add    $0x10,%rax
    77fd:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    7804:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    780b:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    7812:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    7819:	90                   	nop
    781a:	90                   	nop
    781b:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    7822:	48 83 c2 1c          	add    $0x1c,%rdx
    7826:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    782d:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    7834:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    783b:	48 89 95 38 ff ff ff 	mov    %rdx,-0xc8(%rbp)
    7842:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    7849:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    7850:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    7857:	48 89 c2             	mov    %rax,%rdx
    785a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    7861:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    7868:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    786f:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    7876:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
    787d:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    7884:	0f b6 10             	movzbl (%rax),%edx
    7887:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    788e:	0f b6 00             	movzbl (%rax),%eax
    7891:	38 c2                	cmp    %al,%dl
    7893:	0f 9c c0             	setl   %al
    7896:	90                   	nop
    7897:	84 c0                	test   %al,%al
    7899:	74 61                	je     78fc <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE12__find_equalIcEERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_+0x1cc>
    789b:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    78a2:	48 8b 00             	mov    (%rax),%rax
    78a5:	48 85 c0             	test   %rax,%rax
    78a8:	74 32                	je     78dc <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE12__find_equalIcEERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_+0x1ac>
    78aa:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    78b1:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    78b8:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    78bf:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    78c6:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    78cd:	48 8b 00             	mov    (%rax),%rax
    78d0:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    78d7:	e9 08 ff ff ff       	jmp    77e4 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE12__find_equalIcEERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_+0xb4>
    78dc:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    78e3:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    78ea:	48 89 10             	mov    %rdx,(%rax)
    78ed:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    78f4:	48 8b 00             	mov    (%rax),%rax
    78f7:	e9 41 01 00 00       	jmp    7a3d <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE12__find_equalIcEERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_+0x30d>
    78fc:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    7903:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    7907:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    790b:	48 83 c0 10          	add    $0x10,%rax
    790f:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    7913:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7917:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    791b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    791f:	90                   	nop
    7920:	90                   	nop
    7921:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    7928:	48 83 c2 1c          	add    $0x1c,%rdx
    792c:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    7930:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
    7934:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    793b:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    793f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7943:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    7947:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    794b:	48 89 c2             	mov    %rax,%rdx
    794e:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    7952:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    7956:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    795a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    795e:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    7962:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    7966:	0f b6 10             	movzbl (%rax),%edx
    7969:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    796d:	0f b6 00             	movzbl (%rax),%eax
    7970:	38 c2                	cmp    %al,%dl
    7972:	0f 9c c0             	setl   %al
    7975:	90                   	nop
    7976:	84 c0                	test   %al,%al
    7978:	74 5f                	je     79d9 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE12__find_equalIcEERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_+0x2a9>
    797a:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    7981:	48 8b 40 08          	mov    0x8(%rax),%rax
    7985:	48 85 c0             	test   %rax,%rax
    7988:	74 31                	je     79bb <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE12__find_equalIcEERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_+0x28b>
    798a:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    7991:	48 83 c0 08          	add    $0x8,%rax
    7995:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    7999:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    799d:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    79a4:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    79ab:	48 8b 40 08          	mov    0x8(%rax),%rax
    79af:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    79b6:	e9 29 fe ff ff       	jmp    77e4 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE12__find_equalIcEERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_+0xb4>
    79bb:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    79c2:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    79c9:	48 89 10             	mov    %rdx,(%rax)
    79cc:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    79d3:	48 83 c0 08          	add    $0x8,%rax
    79d7:	eb 64                	jmp    7a3d <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE12__find_equalIcEERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_+0x30d>
    79d9:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    79e0:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    79e7:	48 89 10             	mov    %rdx,(%rax)
    79ea:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    79f1:	eb 4a                	jmp    7a3d <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE12__find_equalIcEERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISE_EERKT_+0x30d>
    79f3:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    79fa:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    79fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7a02:	48 83 c0 08          	add    $0x8,%rax
    7a06:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7a0a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7a0e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    7a12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7a16:	90                   	nop
    7a17:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    7a1b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7a1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7a23:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7a27:	90                   	nop
    7a28:	90                   	nop
    7a29:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    7a30:	48 89 10             	mov    %rdx,(%rax)
    7a33:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    7a3a:	48 8b 00             	mov    (%rax),%rax
    7a3d:	c9                   	leave  
    7a3e:	c3                   	ret    
    7a3f:	90                   	nop

0000000000007a40 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_>:
    7a40:	f3 0f 1e fa          	endbr64 
    7a44:	55                   	push   %rbp
    7a45:	48 89 e5             	mov    %rsp,%rbp
    7a48:	41 55                	push   %r13
    7a4a:	41 54                	push   %r12
    7a4c:	53                   	push   %rbx
    7a4d:	48 81 ec 48 02 00 00 	sub    $0x248,%rsp
    7a54:	48 89 bd c8 fd ff ff 	mov    %rdi,-0x238(%rbp)
    7a5b:	48 89 b5 c0 fd ff ff 	mov    %rsi,-0x240(%rbp)
    7a62:	48 89 95 b8 fd ff ff 	mov    %rdx,-0x248(%rbp)
    7a69:	48 89 8d b0 fd ff ff 	mov    %rcx,-0x250(%rbp)
    7a70:	4c 89 85 a8 fd ff ff 	mov    %r8,-0x258(%rbp)
    7a77:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7a7e:	00 00 
    7a80:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    7a84:	31 c0                	xor    %eax,%eax
    7a86:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
    7a8d:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
    7a94:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
    7a9b:	48 83 c0 08          	add    $0x8,%rax
    7a9f:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
    7aa6:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    7aad:	48 89 85 50 fe ff ff 	mov    %rax,-0x1b0(%rbp)
    7ab4:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
    7abb:	90                   	nop
    7abc:	90                   	nop
    7abd:	48 89 85 e8 fd ff ff 	mov    %rax,-0x218(%rbp)
    7ac4:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    7acb:	48 89 85 38 fe ff ff 	mov    %rax,-0x1c8(%rbp)
    7ad2:	c6 85 df fd ff ff 00 	movb   $0x0,-0x221(%rbp)
    7ad9:	48 8b 85 38 fe ff ff 	mov    -0x1c8(%rbp),%rax
    7ae0:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    7ae4:	0f b6 85 df fd ff ff 	movzbl -0x221(%rbp),%eax
    7aeb:	88 45 c8             	mov    %al,-0x38(%rbp)
    7aee:	90                   	nop
    7aef:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    7af6:	48 89 85 f0 fd ff ff 	mov    %rax,-0x210(%rbp)
    7afd:	48 c7 85 f8 fd ff ff 	movq   $0x1,-0x208(%rbp)
    7b04:	01 00 00 00 
    7b08:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
    7b0f:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
    7b16:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    7b1d:	48 89 85 08 fe ff ff 	mov    %rax,-0x1f8(%rbp)
    7b24:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax
    7b2b:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
    7b32:	48 8b 85 10 fe ff ff 	mov    -0x1f0(%rbp),%rax
    7b39:	48 89 85 18 fe ff ff 	mov    %rax,-0x1e8(%rbp)
    7b40:	48 b8 66 66 66 66 66 	movabs $0x666666666666666,%rax
    7b47:	66 66 06 
    7b4a:	90                   	nop
    7b4b:	48 39 85 08 fe ff ff 	cmp    %rax,-0x1f8(%rbp)
    7b52:	0f 97 c0             	seta   %al
    7b55:	84 c0                	test   %al,%al
    7b57:	74 2e                	je     7b87 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_+0x147>
    7b59:	bf 08 00 00 00       	mov    $0x8,%edi
    7b5e:	e8 4d 8d 01 00       	call   208b0 <__cxa_allocate_exception>
    7b63:	48 89 c3             	mov    %rax,%rbx
    7b66:	48 89 df             	mov    %rbx,%rdi
    7b69:	e8 a2 95 01 00       	call   21110 <_ZNSt9bad_allocC1Ev>
    7b6e:	48 8d 05 4b 95 01 00 	lea    0x1954b(%rip),%rax        # 210c0 <_ZNSt9bad_allocD1Ev>
    7b75:	48 89 c2             	mov    %rax,%rdx
    7b78:	48 8d 35 c1 81 02 00 	lea    0x281c1(%rip),%rsi        # 2fd40 <_ZTISt9bad_alloc>
    7b7f:	48 89 df             	mov    %rbx,%rdi
    7b82:	e8 29 8e 01 00       	call   209b0 <__cxa_throw>
    7b87:	e8 73 e0 ff ff       	call   5bff <_ZNSt3__130__libcpp_is_constant_evaluatedEv>
    7b8c:	84 c0                	test   %al,%al
    7b8e:	74 22                	je     7bb2 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_+0x172>
    7b90:	48 8b 95 08 fe ff ff 	mov    -0x1f8(%rbp),%rdx
    7b97:	48 89 d0             	mov    %rdx,%rax
    7b9a:	48 c1 e0 02          	shl    $0x2,%rax
    7b9e:	48 01 d0             	add    %rdx,%rax
    7ba1:	48 c1 e0 03          	shl    $0x3,%rax
    7ba5:	48 89 c7             	mov    %rax,%rdi
    7ba8:	e8 23 96 01 00       	call   211d0 <_Znwm>
    7bad:	48 89 c2             	mov    %rax,%rdx
    7bb0:	eb 4a                	jmp    7bfc <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_+0x1bc>
    7bb2:	48 8b 95 08 fe ff ff 	mov    -0x1f8(%rbp),%rdx
    7bb9:	48 89 d0             	mov    %rdx,%rax
    7bbc:	48 c1 e0 02          	shl    $0x2,%rax
    7bc0:	48 01 d0             	add    %rdx,%rax
    7bc3:	48 c1 e0 03          	shl    $0x3,%rax
    7bc7:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    7bce:	48 c7 85 28 fe ff ff 	movq   $0x8,-0x1d8(%rbp)
    7bd5:	08 00 00 00 
    7bd9:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax
    7be0:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
    7be7:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
    7bee:	48 89 c7             	mov    %rax,%rdi
    7bf1:	e8 da 95 01 00       	call   211d0 <_Znwm>
    7bf6:	48 89 c2             	mov    %rax,%rdx
    7bf9:	90                   	nop
    7bfa:	90                   	nop
    7bfb:	90                   	nop
    7bfc:	90                   	nop
    7bfd:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
    7c04:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    7c0b:	48 89 95 e0 fd ff ff 	mov    %rdx,-0x220(%rbp)
    7c12:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    7c19:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    7c1d:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    7c24:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    7c2b:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
    7c32:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    7c39:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    7c40:	48 8d 85 e0 fd ff ff 	lea    -0x220(%rbp),%rax
    7c47:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    7c4e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    7c55:	48 89 95 70 ff ff ff 	mov    %rdx,-0x90(%rbp)
    7c5c:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    7c63:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    7c6a:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    7c6e:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    7c72:	48 8b 10             	mov    (%rax),%rdx
    7c75:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    7c7c:	48 89 10             	mov    %rdx,(%rax)
    7c7f:	90                   	nop
    7c80:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    7c87:	48 8d 50 08          	lea    0x8(%rax),%rdx
    7c8b:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    7c92:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    7c96:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7c9a:	48 89 55 90          	mov    %rdx,-0x70(%rbp)
    7c9e:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    7ca2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7ca6:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    7caa:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    7cae:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    7cb2:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7cb6:	48 8b 00             	mov    (%rax),%rax
    7cb9:	48 89 01             	mov    %rax,(%rcx)
    7cbc:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    7cc0:	90                   	nop
    7cc1:	90                   	nop
    7cc2:	90                   	nop
    7cc3:	48 8b 85 a8 fd ff ff 	mov    -0x258(%rbp),%rax
    7cca:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    7cd1:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    7cd8:	48 8b 95 b0 fd ff ff 	mov    -0x250(%rbp),%rdx
    7cdf:	48 89 95 38 ff ff ff 	mov    %rdx,-0xc8(%rbp)
    7ce6:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
    7ced:	48 8b 8d b8 fd ff ff 	mov    -0x248(%rbp),%rcx
    7cf4:	48 89 8d 30 ff ff ff 	mov    %rcx,-0xd0(%rbp)
    7cfb:	48 8b 8d 30 ff ff ff 	mov    -0xd0(%rbp),%rcx
    7d02:	48 8b b5 c8 fd ff ff 	mov    -0x238(%rbp),%rsi
    7d09:	48 89 b5 18 ff ff ff 	mov    %rsi,-0xe8(%rbp)
    7d10:	48 8b b5 18 ff ff ff 	mov    -0xe8(%rbp),%rsi
    7d17:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
    7d1e:	48 8b b5 20 ff ff ff 	mov    -0xe0(%rbp),%rsi
    7d25:	48 89 b5 28 ff ff ff 	mov    %rsi,-0xd8(%rbp)
    7d2c:	48 8b b5 28 ff ff ff 	mov    -0xd8(%rbp),%rsi
    7d33:	90                   	nop
    7d34:	48 8b 36             	mov    (%rsi),%rsi
    7d37:	48 83 c6 1c          	add    $0x1c,%rsi
    7d3b:	48 89 b5 00 ff ff ff 	mov    %rsi,-0x100(%rbp)
    7d42:	48 8b b5 00 ff ff ff 	mov    -0x100(%rbp),%rsi
    7d49:	48 89 b5 08 ff ff ff 	mov    %rsi,-0xf8(%rbp)
    7d50:	48 8b b5 08 ff ff ff 	mov    -0xf8(%rbp),%rsi
    7d57:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
    7d5e:	48 8b b5 10 ff ff ff 	mov    -0xf0(%rbp),%rsi
    7d65:	90                   	nop
    7d66:	48 8b bd e8 fd ff ff 	mov    -0x218(%rbp),%rdi
    7d6d:	48 89 bd 58 fe ff ff 	mov    %rdi,-0x1a8(%rbp)
    7d74:	48 89 b5 60 fe ff ff 	mov    %rsi,-0x1a0(%rbp)
    7d7b:	48 89 8d 68 fe ff ff 	mov    %rcx,-0x198(%rbp)
    7d82:	48 89 95 70 fe ff ff 	mov    %rdx,-0x190(%rbp)
    7d89:	48 89 85 78 fe ff ff 	mov    %rax,-0x188(%rbp)
    7d90:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
    7d97:	48 89 85 80 fe ff ff 	mov    %rax,-0x180(%rbp)
    7d9e:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    7da5:	48 8b 95 70 fe ff ff 	mov    -0x190(%rbp),%rdx
    7dac:	48 89 95 88 fe ff ff 	mov    %rdx,-0x178(%rbp)
    7db3:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
    7dba:	48 8b 8d 68 fe ff ff 	mov    -0x198(%rbp),%rcx
    7dc1:	48 89 8d 90 fe ff ff 	mov    %rcx,-0x170(%rbp)
    7dc8:	48 8b 8d 90 fe ff ff 	mov    -0x170(%rbp),%rcx
    7dcf:	48 8b b5 58 fe ff ff 	mov    -0x1a8(%rbp),%rsi
    7dd6:	48 89 b5 98 fe ff ff 	mov    %rsi,-0x168(%rbp)
    7ddd:	48 8b b5 60 fe ff ff 	mov    -0x1a0(%rbp),%rsi
    7de4:	48 89 b5 a0 fe ff ff 	mov    %rsi,-0x160(%rbp)
    7deb:	48 89 8d a8 fe ff ff 	mov    %rcx,-0x158(%rbp)
    7df2:	48 89 95 b0 fe ff ff 	mov    %rdx,-0x150(%rbp)
    7df9:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
    7e00:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    7e07:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
    7e0e:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    7e15:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
    7e1c:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    7e23:	48 8b 00             	mov    (%rax),%rax
    7e26:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    7e2a:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    7e31:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    7e38:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
    7e3f:	48 89 c6             	mov    %rax,%rsi
    7e42:	bf 08 00 00 00       	mov    $0x8,%edi
    7e47:	e8 c2 dd ff ff       	call   5c0e <_ZnwmPv>
    7e4c:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    7e53:	0f b6 85 dd fd ff ff 	movzbl -0x223(%rbp),%eax
    7e5a:	88 85 d9 fd ff ff    	mov    %al,-0x227(%rbp)
    7e60:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7e64:	48 89 85 e0 fd ff ff 	mov    %rax,-0x220(%rbp)
    7e6b:	0f b6 85 de fd ff ff 	movzbl -0x222(%rbp),%eax
    7e72:	88 85 d8 fd ff ff    	mov    %al,-0x228(%rbp)
    7e78:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    7e7f:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    7e86:	44 88 ad dc fd ff ff 	mov    %r13b,-0x224(%rbp)
    7e8d:	44 88 a5 db fd ff ff 	mov    %r12b,-0x225(%rbp)
    7e94:	88 9d da fd ff ff    	mov    %bl,-0x226(%rbp)
    7e9a:	48 8d 85 e0 fd ff ff 	lea    -0x220(%rbp),%rax
    7ea1:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    7ea8:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    7eaf:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    7eb6:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    7ebd:	48 8b 00             	mov    (%rax),%rax
    7ec0:	90                   	nop
    7ec1:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    7ec8:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7ecf:	0f b6 10             	movzbl (%rax),%edx
    7ed2:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    7ed9:	88 10                	mov    %dl,(%rax)
    7edb:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    7ee2:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    7ee9:	90                   	nop
    7eea:	90                   	nop
    7eeb:	90                   	nop
    7eec:	90                   	nop
    7eed:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
    7ef4:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    7ef8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    7efc:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    7f00:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    7f04:	48 83 c0 08          	add    $0x8,%rax
    7f08:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    7f0c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7f10:	90                   	nop
    7f11:	90                   	nop
    7f12:	c6 40 08 01          	movb   $0x1,0x8(%rax)
    7f16:	90                   	nop
    7f17:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7f1b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    7f22:	00 00 
    7f24:	74 13                	je     7f39 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_+0x4f9>
    7f26:	eb 0c                	jmp    7f34 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOcEEENSE_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISL_EEEEEEDpOT_+0x4f4>
    7f28:	f3 0f 1e fa          	endbr64 
    7f2c:	48 89 c7             	mov    %rax,%rdi
    7f2f:	e8 dc 56 01 00       	call   1d610 <_Unwind_Resume>
    7f34:	e8 07 bc 00 00       	call   13b40 <__stack_chk_fail>
    7f39:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
    7f40:	48 81 c4 48 02 00 00 	add    $0x248,%rsp
    7f47:	5b                   	pop    %rbx
    7f48:	41 5c                	pop    %r12
    7f4a:	41 5d                	pop    %r13
    7f4c:	5d                   	pop    %rbp
    7f4d:	c3                   	ret    

0000000000007f4e <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSE_SE_>:
    7f4e:	f3 0f 1e fa          	endbr64 
    7f52:	55                   	push   %rbp
    7f53:	48 89 e5             	mov    %rsp,%rbp
    7f56:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    7f5a:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    7f5e:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
    7f62:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
    7f66:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
    7f6a:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    7f6e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    7f75:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    7f79:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    7f80:	00 
    7f81:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    7f85:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    7f89:	48 89 50 10          	mov    %rdx,0x10(%rax)
    7f8d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7f91:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    7f95:	48 89 10             	mov    %rdx,(%rax)
    7f98:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7f9c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    7fa0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    7fa4:	48 8b 00             	mov    (%rax),%rax
    7fa7:	48 8b 00             	mov    (%rax),%rax
    7faa:	48 85 c0             	test   %rax,%rax
    7fad:	0f 95 c0             	setne  %al
    7fb0:	84 c0                	test   %al,%al
    7fb2:	74 21                	je     7fd5 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__insert_node_atEPNS_15__tree_end_nodeIPNS_16__tree_node_baseIPvEEEERSE_SE_+0x87>
    7fb4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7fb8:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    7fbc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7fc0:	48 8b 10             	mov    (%rax),%rdx
    7fc3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7fc7:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    7fcb:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    7fcf:	48 8b 12             	mov    (%rdx),%rdx
    7fd2:	48 89 10             	mov    %rdx,(%rax)
    7fd5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7fd9:	48 8b 10             	mov    (%rax),%rdx
    7fdc:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7fe0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    7fe4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7fe8:	48 83 c0 08          	add    $0x8,%rax
    7fec:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7ff0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7ff4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    7ff8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7ffc:	90                   	nop
    7ffd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    8001:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8005:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8009:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    800d:	90                   	nop
    800e:	90                   	nop
    800f:	48 8b 00             	mov    (%rax),%rax
    8012:	48 89 d6             	mov    %rdx,%rsi
    8015:	48 89 c7             	mov    %rax,%rdi
    8018:	e8 5e 05 00 00       	call   857b <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_>
    801d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    8021:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    8025:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    8029:	48 83 c0 10          	add    $0x10,%rax
    802d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    8031:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8035:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    8039:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    803d:	90                   	nop
    803e:	90                   	nop
    803f:	48 8b 10             	mov    (%rax),%rdx
    8042:	48 83 c2 01          	add    $0x1,%rdx
    8046:	48 89 10             	mov    %rdx,(%rax)
    8049:	90                   	nop
    804a:	c9                   	leave  
    804b:	c3                   	ret    

000000000000804c <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE13__lower_boundIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_SF_PNS_15__tree_end_nodeIPNS_16__tree_node_baseISD_EEEE>:
    804c:	f3 0f 1e fa          	endbr64 
    8050:	55                   	push   %rbp
    8051:	48 89 e5             	mov    %rsp,%rbp
    8054:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    805b:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    805f:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    8063:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
    806a:	48 89 8d 70 ff ff ff 	mov    %rcx,-0x90(%rbp)
    8071:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8078:	00 00 
    807a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    807e:	31 c0                	xor    %eax,%eax
    8080:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
    8087:	00 
    8088:	0f 84 b6 00 00 00    	je     8144 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE13__lower_boundIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_SF_PNS_15__tree_end_nodeIPNS_16__tree_node_baseISD_EEEE+0xf8>
    808e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    8092:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    8096:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    809a:	48 83 c0 10          	add    $0x10,%rax
    809e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    80a2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    80a6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    80aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    80ae:	90                   	nop
    80af:	90                   	nop
    80b0:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    80b7:	48 83 c2 1c          	add    $0x1c,%rdx
    80bb:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    80bf:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    80c3:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    80c7:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    80cb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    80cf:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    80d3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    80d7:	48 89 c2             	mov    %rax,%rdx
    80da:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    80de:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    80e2:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    80e6:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    80ea:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    80ee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    80f2:	0f b6 10             	movzbl (%rax),%edx
    80f5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    80f9:	0f b6 00             	movzbl (%rax),%eax
    80fc:	38 c2                	cmp    %al,%dl
    80fe:	0f 9c c0             	setl   %al
    8101:	90                   	nop
    8102:	83 f0 01             	xor    $0x1,%eax
    8105:	84 c0                	test   %al,%al
    8107:	74 24                	je     812d <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE13__lower_boundIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_SF_PNS_15__tree_end_nodeIPNS_16__tree_node_baseISD_EEEE+0xe1>
    8109:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    8110:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    8117:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    811e:	48 8b 00             	mov    (%rax),%rax
    8121:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    8128:	e9 53 ff ff ff       	jmp    8080 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE13__lower_boundIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_SF_PNS_15__tree_end_nodeIPNS_16__tree_node_baseISD_EEEE+0x34>
    812d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    8134:	48 8b 40 08          	mov    0x8(%rax),%rax
    8138:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    813f:	e9 3c ff ff ff       	jmp    8080 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE13__lower_boundIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_SF_PNS_15__tree_end_nodeIPNS_16__tree_node_baseISD_EEEE+0x34>
    8144:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    814b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    814f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8153:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    8157:	90                   	nop
    8158:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    815c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    8160:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    8167:	00 00 
    8169:	74 05                	je     8170 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE13__lower_boundIcEENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_SF_PNS_15__tree_end_nodeIPNS_16__tree_node_baseISD_EEEE+0x124>
    816b:	e8 d0 b9 00 00       	call   13b40 <__stack_chk_fail>
    8170:	c9                   	leave  
    8171:	c3                   	ret    

0000000000008172 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJNS_4pairIKciEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISH_EEEEEEDpOT_>:
    8172:	f3 0f 1e fa          	endbr64 
    8176:	55                   	push   %rbp
    8177:	48 89 e5             	mov    %rsp,%rbp
    817a:	53                   	push   %rbx
    817b:	48 81 ec b8 01 00 00 	sub    $0x1b8,%rsp
    8182:	48 89 bd 58 fe ff ff 	mov    %rdi,-0x1a8(%rbp)
    8189:	48 89 b5 50 fe ff ff 	mov    %rsi,-0x1b0(%rbp)
    8190:	48 89 95 48 fe ff ff 	mov    %rdx,-0x1b8(%rbp)
    8197:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    819e:	00 00 
    81a0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    81a4:	31 c0                	xor    %eax,%eax
    81a6:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
    81ad:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
    81b4:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    81bb:	48 83 c0 08          	add    $0x8,%rax
    81bf:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    81c6:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    81cd:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    81d4:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    81db:	90                   	nop
    81dc:	90                   	nop
    81dd:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
    81e4:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
    81eb:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
    81f2:	c6 85 67 fe ff ff 00 	movb   $0x0,-0x199(%rbp)
    81f9:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
    8200:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    8204:	0f b6 85 67 fe ff ff 	movzbl -0x199(%rbp),%eax
    820b:	88 45 d8             	mov    %al,-0x28(%rbp)
    820e:	90                   	nop
    820f:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
    8216:	48 89 85 78 fe ff ff 	mov    %rax,-0x188(%rbp)
    821d:	48 c7 85 80 fe ff ff 	movq   $0x1,-0x180(%rbp)
    8224:	01 00 00 00 
    8228:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
    822f:	48 89 85 88 fe ff ff 	mov    %rax,-0x178(%rbp)
    8236:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    823d:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
    8244:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
    824b:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
    8252:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
    8259:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
    8260:	48 b8 66 66 66 66 66 	movabs $0x666666666666666,%rax
    8267:	66 66 06 
    826a:	90                   	nop
    826b:	48 39 85 90 fe ff ff 	cmp    %rax,-0x170(%rbp)
    8272:	0f 97 c0             	seta   %al
    8275:	84 c0                	test   %al,%al
    8277:	74 2e                	je     82a7 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJNS_4pairIKciEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISH_EEEEEEDpOT_+0x135>
    8279:	bf 08 00 00 00       	mov    $0x8,%edi
    827e:	e8 2d 86 01 00       	call   208b0 <__cxa_allocate_exception>
    8283:	48 89 c3             	mov    %rax,%rbx
    8286:	48 89 df             	mov    %rbx,%rdi
    8289:	e8 82 8e 01 00       	call   21110 <_ZNSt9bad_allocC1Ev>
    828e:	48 8d 05 2b 8e 01 00 	lea    0x18e2b(%rip),%rax        # 210c0 <_ZNSt9bad_allocD1Ev>
    8295:	48 89 c2             	mov    %rax,%rdx
    8298:	48 8d 35 a1 7a 02 00 	lea    0x27aa1(%rip),%rsi        # 2fd40 <_ZTISt9bad_alloc>
    829f:	48 89 df             	mov    %rbx,%rdi
    82a2:	e8 09 87 01 00       	call   209b0 <__cxa_throw>
    82a7:	e8 53 d9 ff ff       	call   5bff <_ZNSt3__130__libcpp_is_constant_evaluatedEv>
    82ac:	84 c0                	test   %al,%al
    82ae:	74 22                	je     82d2 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJNS_4pairIKciEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISH_EEEEEEDpOT_+0x160>
    82b0:	48 8b 95 90 fe ff ff 	mov    -0x170(%rbp),%rdx
    82b7:	48 89 d0             	mov    %rdx,%rax
    82ba:	48 c1 e0 02          	shl    $0x2,%rax
    82be:	48 01 d0             	add    %rdx,%rax
    82c1:	48 c1 e0 03          	shl    $0x3,%rax
    82c5:	48 89 c7             	mov    %rax,%rdi
    82c8:	e8 03 8f 01 00       	call   211d0 <_Znwm>
    82cd:	48 89 c2             	mov    %rax,%rdx
    82d0:	eb 4a                	jmp    831c <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJNS_4pairIKciEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISH_EEEEEEDpOT_+0x1aa>
    82d2:	48 8b 95 90 fe ff ff 	mov    -0x170(%rbp),%rdx
    82d9:	48 89 d0             	mov    %rdx,%rax
    82dc:	48 c1 e0 02          	shl    $0x2,%rax
    82e0:	48 01 d0             	add    %rdx,%rax
    82e3:	48 c1 e0 03          	shl    $0x3,%rax
    82e7:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
    82ee:	48 c7 85 b0 fe ff ff 	movq   $0x8,-0x150(%rbp)
    82f5:	08 00 00 00 
    82f9:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    8300:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
    8307:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    830e:	48 89 c7             	mov    %rax,%rdi
    8311:	e8 ba 8e 01 00       	call   211d0 <_Znwm>
    8316:	48 89 c2             	mov    %rax,%rdx
    8319:	90                   	nop
    831a:	90                   	nop
    831b:	90                   	nop
    831c:	90                   	nop
    831d:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
    8324:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    832b:	48 89 95 68 fe ff ff 	mov    %rdx,-0x198(%rbp)
    8332:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    8339:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    833d:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    8344:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    834b:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
    8352:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    8359:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
    8360:	48 8d 85 68 fe ff ff 	lea    -0x198(%rbp),%rax
    8367:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    836e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    8375:	48 89 55 80          	mov    %rdx,-0x80(%rbp)
    8379:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    837d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    8381:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    8385:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    8389:	48 8b 10             	mov    (%rax),%rdx
    838c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    8390:	48 89 10             	mov    %rdx,(%rax)
    8393:	90                   	nop
    8394:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    839b:	48 8d 50 08          	lea    0x8(%rax),%rdx
    839f:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    83a6:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    83aa:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    83ae:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
    83b2:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    83b6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    83ba:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    83be:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    83c2:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    83c6:	48 8b 50 08          	mov    0x8(%rax),%rdx
    83ca:	48 8b 00             	mov    (%rax),%rax
    83cd:	48 89 01             	mov    %rax,(%rcx)
    83d0:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    83d4:	90                   	nop
    83d5:	90                   	nop
    83d6:	90                   	nop
    83d7:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    83de:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    83e5:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    83ec:	48 8b 95 58 fe ff ff 	mov    -0x1a8(%rbp),%rdx
    83f3:	48 89 95 38 ff ff ff 	mov    %rdx,-0xc8(%rbp)
    83fa:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
    8401:	48 89 95 40 ff ff ff 	mov    %rdx,-0xc0(%rbp)
    8408:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
    840f:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
    8416:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    841d:	90                   	nop
    841e:	48 8b 12             	mov    (%rdx),%rdx
    8421:	48 83 c2 1c          	add    $0x1c,%rdx
    8425:	48 89 95 20 ff ff ff 	mov    %rdx,-0xe0(%rbp)
    842c:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
    8433:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
    843a:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    8441:	48 89 95 30 ff ff ff 	mov    %rdx,-0xd0(%rbp)
    8448:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
    844f:	90                   	nop
    8450:	48 8b 8d 70 fe ff ff 	mov    -0x190(%rbp),%rcx
    8457:	48 89 8d e0 fe ff ff 	mov    %rcx,-0x120(%rbp)
    845e:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
    8465:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    846c:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    8473:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    847a:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    8481:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
    8488:	48 89 95 00 ff ff ff 	mov    %rdx,-0x100(%rbp)
    848f:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    8496:	48 89 95 08 ff ff ff 	mov    %rdx,-0xf8(%rbp)
    849d:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    84a4:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    84ab:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    84b2:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    84b9:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    84c0:	48 89 c6             	mov    %rax,%rsi
    84c3:	bf 08 00 00 00       	mov    $0x8,%edi
    84c8:	e8 41 d7 ff ff       	call   5c0e <_ZnwmPv>
    84cd:	48 8b 13             	mov    (%rbx),%rdx
    84d0:	48 89 10             	mov    %rdx,(%rax)
    84d3:	90                   	nop
    84d4:	90                   	nop
    84d5:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
    84dc:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    84e0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    84e4:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    84e8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    84ec:	48 83 c0 08          	add    $0x8,%rax
    84f0:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    84f4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    84f8:	90                   	nop
    84f9:	90                   	nop
    84fa:	c6 40 08 01          	movb   $0x1,0x8(%rax)
    84fe:	90                   	nop
    84ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8503:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    850a:	00 00 
    850c:	74 13                	je     8521 <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJNS_4pairIKciEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISH_EEEEEEDpOT_+0x3af>
    850e:	eb 0c                	jmp    851c <_ZNSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__construct_nodeIJNS_4pairIKciEEEEENS_10unique_ptrINS_11__tree_nodeIS2_PvEENS_22__tree_node_destructorINS7_ISH_EEEEEEDpOT_+0x3aa>
    8510:	f3 0f 1e fa          	endbr64 
    8514:	48 89 c7             	mov    %rax,%rdi
    8517:	e8 f4 50 01 00       	call   1d610 <_Unwind_Resume>
    851c:	e8 1f b6 00 00       	call   13b40 <__stack_chk_fail>
    8521:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
    8528:	48 81 c4 b8 01 00 00 	add    $0x1b8,%rsp
    852f:	5b                   	pop    %rbx
    8530:	5d                   	pop    %rbp
    8531:	c3                   	ret    

0000000000008532 <_ZNKSt3__16__treeINS_12__value_typeIciEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE10__root_ptrEv>:
    8532:	f3 0f 1e fa          	endbr64 
    8536:	55                   	push   %rbp
    8537:	48 89 e5             	mov    %rsp,%rbp
    853a:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    853e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8542:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    8546:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    854a:	48 83 c0 08          	add    $0x8,%rax
    854e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    8552:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8556:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    855a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    855e:	90                   	nop
    855f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    8563:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8567:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    856b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    856f:	90                   	nop
    8570:	90                   	nop
    8571:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    8575:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8579:	5d                   	pop    %rbp
    857a:	c3                   	ret    

000000000000857b <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_>:
    857b:	f3 0f 1e fa          	endbr64 
    857f:	55                   	push   %rbp
    8580:	48 89 e5             	mov    %rsp,%rbp
    8583:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
    858a:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    8591:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
    8598:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    859f:	48 3b 85 58 ff ff ff 	cmp    -0xa8(%rbp),%rax
    85a6:	0f 94 c2             	sete   %dl
    85a9:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    85b0:	88 50 18             	mov    %dl,0x18(%rax)
    85b3:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    85ba:	48 3b 85 58 ff ff ff 	cmp    -0xa8(%rbp),%rax
    85c1:	74 2b                	je     85ee <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x73>
    85c3:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    85ca:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    85d1:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    85d8:	48 8b 40 10          	mov    0x10(%rax),%rax
    85dc:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    85e0:	83 f0 01             	xor    $0x1,%eax
    85e3:	84 c0                	test   %al,%al
    85e5:	74 07                	je     85ee <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x73>
    85e7:	b8 01 00 00 00       	mov    $0x1,%eax
    85ec:	eb 05                	jmp    85f3 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x78>
    85ee:	b8 00 00 00 00       	mov    $0x0,%eax
    85f3:	84 c0                	test   %al,%al
    85f5:	0f 84 e6 02 00 00    	je     88e1 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x366>
    85fb:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    8602:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    8606:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    860a:	48 8b 40 10          	mov    0x10(%rax),%rax
    860e:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    8615:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    861c:	48 8b 40 10          	mov    0x10(%rax),%rax
    8620:	48 8b 00             	mov    (%rax),%rax
    8623:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)
    862a:	0f 94 c0             	sete   %al
    862d:	84 c0                	test   %al,%al
    862f:	0f 84 5b 01 00 00    	je     8790 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x215>
    8635:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    863c:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    8640:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    8644:	48 8b 40 10          	mov    0x10(%rax),%rax
    8648:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    864c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    8650:	48 8b 40 10          	mov    0x10(%rax),%rax
    8654:	48 8b 40 08          	mov    0x8(%rax),%rax
    8658:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    865f:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
    8666:	00 
    8667:	74 7c                	je     86e5 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x16a>
    8669:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    8670:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    8674:	83 f0 01             	xor    $0x1,%eax
    8677:	84 c0                	test   %al,%al
    8679:	74 6a                	je     86e5 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x16a>
    867b:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    8682:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    8686:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    868a:	48 8b 40 10          	mov    0x10(%rax),%rax
    868e:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    8695:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    869c:	c6 40 18 01          	movb   $0x1,0x18(%rax)
    86a0:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    86a7:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    86ab:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    86af:	48 8b 40 10          	mov    0x10(%rax),%rax
    86b3:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    86ba:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    86c1:	48 3b 85 58 ff ff ff 	cmp    -0xa8(%rbp),%rax
    86c8:	0f 94 c2             	sete   %dl
    86cb:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    86d2:	88 50 18             	mov    %dl,0x18(%rax)
    86d5:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    86dc:	c6 40 18 01          	movb   $0x1,0x18(%rax)
    86e0:	e9 ce fe ff ff       	jmp    85b3 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x38>
    86e5:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    86ec:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    86f0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    86f4:	48 8b 40 10          	mov    0x10(%rax),%rax
    86f8:	48 8b 00             	mov    (%rax),%rax
    86fb:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
    86ff:	0f 94 c0             	sete   %al
    8702:	83 f0 01             	xor    $0x1,%eax
    8705:	84 c0                	test   %al,%al
    8707:	74 29                	je     8732 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x1b7>
    8709:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    8710:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    8714:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    8718:	48 8b 40 10          	mov    0x10(%rax),%rax
    871c:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    8723:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    872a:	48 89 c7             	mov    %rax,%rdi
    872d:	e8 b2 01 00 00       	call   88e4 <_ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_>
    8732:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    8739:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    873d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    8741:	48 8b 40 10          	mov    0x10(%rax),%rax
    8745:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    874c:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    8753:	c6 40 18 01          	movb   $0x1,0x18(%rax)
    8757:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    875e:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    8762:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    8766:	48 8b 40 10          	mov    0x10(%rax),%rax
    876a:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    8771:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    8778:	c6 40 18 00          	movb   $0x0,0x18(%rax)
    877c:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    8783:	48 89 c7             	mov    %rax,%rdi
    8786:	e8 30 02 00 00       	call   89bb <_ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_>
    878b:	e9 51 01 00 00       	jmp    88e1 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x366>
    8790:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    8797:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    879b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    879f:	48 8b 40 10          	mov    0x10(%rax),%rax
    87a3:	48 8b 40 10          	mov    0x10(%rax),%rax
    87a7:	48 8b 00             	mov    (%rax),%rax
    87aa:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    87b1:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
    87b8:	00 
    87b9:	74 7c                	je     8837 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x2bc>
    87bb:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    87c2:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    87c6:	83 f0 01             	xor    $0x1,%eax
    87c9:	84 c0                	test   %al,%al
    87cb:	74 6a                	je     8837 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x2bc>
    87cd:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    87d4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    87d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    87dc:	48 8b 40 10          	mov    0x10(%rax),%rax
    87e0:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    87e7:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    87ee:	c6 40 18 01          	movb   $0x1,0x18(%rax)
    87f2:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    87f9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    87fd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8801:	48 8b 40 10          	mov    0x10(%rax),%rax
    8805:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    880c:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    8813:	48 3b 85 58 ff ff ff 	cmp    -0xa8(%rbp),%rax
    881a:	0f 94 c2             	sete   %dl
    881d:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    8824:	88 50 18             	mov    %dl,0x18(%rax)
    8827:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    882e:	c6 40 18 01          	movb   $0x1,0x18(%rax)
    8832:	e9 a5 00 00 00       	jmp    88dc <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x361>
    8837:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    883e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    8842:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8846:	48 8b 40 10          	mov    0x10(%rax),%rax
    884a:	48 8b 00             	mov    (%rax),%rax
    884d:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
    8851:	0f 94 c0             	sete   %al
    8854:	84 c0                	test   %al,%al
    8856:	74 29                	je     8881 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x306>
    8858:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    885f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    8863:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8867:	48 8b 40 10          	mov    0x10(%rax),%rax
    886b:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    8872:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    8879:	48 89 c7             	mov    %rax,%rdi
    887c:	e8 3a 01 00 00       	call   89bb <_ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_>
    8881:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    8888:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    888c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8890:	48 8b 40 10          	mov    0x10(%rax),%rax
    8894:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    889b:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    88a2:	c6 40 18 01          	movb   $0x1,0x18(%rax)
    88a6:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    88ad:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    88b1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    88b5:	48 8b 40 10          	mov    0x10(%rax),%rax
    88b9:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    88c0:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    88c7:	c6 40 18 00          	movb   $0x0,0x18(%rax)
    88cb:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    88d2:	48 89 c7             	mov    %rax,%rdi
    88d5:	e8 0a 00 00 00       	call   88e4 <_ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_>
    88da:	eb 05                	jmp    88e1 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x366>
    88dc:	e9 d2 fc ff ff       	jmp    85b3 <_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_+0x38>
    88e1:	90                   	nop
    88e2:	c9                   	leave  
    88e3:	c3                   	ret    

00000000000088e4 <_ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_>:
    88e4:	f3 0f 1e fa          	endbr64 
    88e8:	55                   	push   %rbp
    88e9:	48 89 e5             	mov    %rsp,%rbp
    88ec:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    88f0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    88f4:	48 8b 40 08          	mov    0x8(%rax),%rax
    88f8:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    88fc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8900:	48 8b 10             	mov    (%rax),%rdx
    8903:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    8907:	48 89 50 08          	mov    %rdx,0x8(%rax)
    890b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    890f:	48 8b 40 08          	mov    0x8(%rax),%rax
    8913:	48 85 c0             	test   %rax,%rax
    8916:	74 21                	je     8939 <_ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_+0x55>
    8918:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    891c:	48 8b 40 08          	mov    0x8(%rax),%rax
    8920:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    8924:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    8928:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    892c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8930:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8934:	48 89 50 10          	mov    %rdx,0x10(%rax)
    8938:	90                   	nop
    8939:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    893d:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8941:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8945:	48 89 50 10          	mov    %rdx,0x10(%rax)
    8949:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    894d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    8951:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8955:	48 8b 40 10          	mov    0x10(%rax),%rax
    8959:	48 8b 00             	mov    (%rax),%rax
    895c:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
    8960:	0f 94 c0             	sete   %al
    8963:	84 c0                	test   %al,%al
    8965:	74 11                	je     8978 <_ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_+0x94>
    8967:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    896b:	48 8b 40 10          	mov    0x10(%rax),%rax
    896f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    8973:	48 89 10             	mov    %rdx,(%rax)
    8976:	eb 18                	jmp    8990 <_ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_+0xac>
    8978:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    897c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    8980:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8984:	48 8b 40 10          	mov    0x10(%rax),%rax
    8988:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    898c:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8990:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8994:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    8998:	48 89 10             	mov    %rdx,(%rax)
    899b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    899f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    89a3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    89a7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    89ab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    89af:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    89b3:	48 89 50 10          	mov    %rdx,0x10(%rax)
    89b7:	90                   	nop
    89b8:	90                   	nop
    89b9:	5d                   	pop    %rbp
    89ba:	c3                   	ret    

00000000000089bb <_ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_>:
    89bb:	f3 0f 1e fa          	endbr64 
    89bf:	55                   	push   %rbp
    89c0:	48 89 e5             	mov    %rsp,%rbp
    89c3:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    89c7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    89cb:	48 8b 00             	mov    (%rax),%rax
    89ce:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    89d2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    89d6:	48 8b 50 08          	mov    0x8(%rax),%rdx
    89da:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    89de:	48 89 10             	mov    %rdx,(%rax)
    89e1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    89e5:	48 8b 00             	mov    (%rax),%rax
    89e8:	48 85 c0             	test   %rax,%rax
    89eb:	74 20                	je     8a0d <_ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_+0x52>
    89ed:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    89f1:	48 8b 00             	mov    (%rax),%rax
    89f4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    89f8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    89fc:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    8a00:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8a04:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8a08:	48 89 50 10          	mov    %rdx,0x10(%rax)
    8a0c:	90                   	nop
    8a0d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    8a11:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8a15:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8a19:	48 89 50 10          	mov    %rdx,0x10(%rax)
    8a1d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    8a21:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    8a25:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8a29:	48 8b 40 10          	mov    0x10(%rax),%rax
    8a2d:	48 8b 00             	mov    (%rax),%rax
    8a30:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
    8a34:	0f 94 c0             	sete   %al
    8a37:	84 c0                	test   %al,%al
    8a39:	74 11                	je     8a4c <_ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_+0x91>
    8a3b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    8a3f:	48 8b 40 10          	mov    0x10(%rax),%rax
    8a43:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    8a47:	48 89 10             	mov    %rdx,(%rax)
    8a4a:	eb 18                	jmp    8a64 <_ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_+0xa9>
    8a4c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    8a50:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    8a54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8a58:	48 8b 40 10          	mov    0x10(%rax),%rax
    8a5c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    8a60:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8a64:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8a68:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    8a6c:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8a70:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    8a74:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    8a78:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8a7c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8a80:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8a84:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8a88:	48 89 50 10          	mov    %rdx,0x10(%rax)
    8a8c:	90                   	nop
    8a8d:	90                   	nop
    8a8e:	5d                   	pop    %rbp
    8a8f:	c3                   	ret    

0000000000008a90 <ecall_increase_counter>:
    8a90:	f3 0f 1e fa          	endbr64 
    8a94:	55                   	push   %rbp
    8a95:	48 89 e5             	mov    %rsp,%rbp
    8a98:	48 83 ec 20          	sub    $0x20,%rsp
    8a9c:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    8aa3:	00 
    8aa4:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    8aab:	81 7d ec f3 01 00 00 	cmpl   $0x1f3,-0x14(%rbp)
    8ab2:	7f 53                	jg     8b07 <ecall_increase_counter+0x77>
    8ab4:	48 8d 3d 65 75 02 00 	lea    0x27565(%rip),%rdi        # 30020 <_ZL12global_mutex>
    8abb:	e8 e0 b2 00 00       	call   13da0 <sgx_thread_mutex_lock>
    8ac0:	48 8b 05 19 97 02 00 	mov    0x29719(%rip),%rax        # 321e0 <_ZL14global_counter>
    8ac7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8acb:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    8ad0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ad4:	48 89 05 05 97 02 00 	mov    %rax,0x29705(%rip)        # 321e0 <_ZL14global_counter>
    8adb:	48 8b 05 fe 96 02 00 	mov    0x296fe(%rip),%rax        # 321e0 <_ZL14global_counter>
    8ae2:	48 3d d0 07 00 00    	cmp    $0x7d0,%rax
    8ae8:	75 0b                	jne    8af5 <ecall_increase_counter+0x65>
    8aea:	48 8b 05 ef 96 02 00 	mov    0x296ef(%rip),%rax        # 321e0 <_ZL14global_counter>
    8af1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    8af5:	48 8d 3d 24 75 02 00 	lea    0x27524(%rip),%rdi        # 30020 <_ZL12global_mutex>
    8afc:	e8 ff b4 00 00       	call   14000 <sgx_thread_mutex_unlock>
    8b01:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    8b05:	eb a4                	jmp    8aab <ecall_increase_counter+0x1b>
    8b07:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b0b:	c9                   	leave  
    8b0c:	c3                   	ret    

0000000000008b0d <ecall_producer>:
    8b0d:	f3 0f 1e fa          	endbr64 
    8b11:	55                   	push   %rbp
    8b12:	48 89 e5             	mov    %rsp,%rbp
    8b15:	48 83 ec 10          	sub    $0x10,%rsp
    8b19:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    8b20:	81 7d f4 cf 07 00 00 	cmpl   $0x7cf,-0xc(%rbp)
    8b27:	0f 8f fe 00 00 00    	jg     8c2b <ecall_producer+0x11e>
    8b2d:	48 8d 05 2c 75 02 00 	lea    0x2752c(%rip),%rax        # 30060 <_ZL6buffer>
    8b34:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8b38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b3c:	48 05 d8 00 00 00    	add    $0xd8,%rax
    8b42:	48 89 c7             	mov    %rax,%rdi
    8b45:	e8 56 b2 00 00       	call   13da0 <sgx_thread_mutex_lock>
    8b4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b4e:	8b 80 c8 00 00 00    	mov    0xc8(%rax),%eax
    8b54:	83 f8 31             	cmp    $0x31,%eax
    8b57:	7e 22                	jle    8b7b <ecall_producer+0x6e>
    8b59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b5d:	48 8d 90 d8 00 00 00 	lea    0xd8(%rax),%rdx
    8b64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b68:	48 05 18 01 00 00    	add    $0x118,%rax
    8b6e:	48 89 d6             	mov    %rdx,%rsi
    8b71:	48 89 c7             	mov    %rax,%rdi
    8b74:	e8 d7 af 00 00       	call   13b50 <sgx_thread_cond_wait>
    8b79:	eb cf                	jmp    8b4a <ecall_producer+0x3d>
    8b7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b7f:	8b 90 cc 00 00 00    	mov    0xcc(%rax),%edx
    8b85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b89:	8b 88 cc 00 00 00    	mov    0xcc(%rax),%ecx
    8b8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b93:	48 63 d2             	movslq %edx,%rdx
    8b96:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
    8b99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b9d:	8b 80 cc 00 00 00    	mov    0xcc(%rax),%eax
    8ba3:	8d 50 01             	lea    0x1(%rax),%edx
    8ba6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8baa:	89 90 cc 00 00 00    	mov    %edx,0xcc(%rax)
    8bb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bb4:	8b 90 cc 00 00 00    	mov    0xcc(%rax),%edx
    8bba:	48 63 c2             	movslq %edx,%rax
    8bbd:	48 69 c0 1f 85 eb 51 	imul   $0x51eb851f,%rax,%rax
    8bc4:	48 c1 e8 20          	shr    $0x20,%rax
    8bc8:	89 c1                	mov    %eax,%ecx
    8bca:	c1 f9 04             	sar    $0x4,%ecx
    8bcd:	89 d0                	mov    %edx,%eax
    8bcf:	c1 f8 1f             	sar    $0x1f,%eax
    8bd2:	29 c1                	sub    %eax,%ecx
    8bd4:	89 c8                	mov    %ecx,%eax
    8bd6:	6b c0 32             	imul   $0x32,%eax,%eax
    8bd9:	29 c2                	sub    %eax,%edx
    8bdb:	89 d0                	mov    %edx,%eax
    8bdd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8be1:	89 82 cc 00 00 00    	mov    %eax,0xcc(%rdx)
    8be7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8beb:	8b 80 c8 00 00 00    	mov    0xc8(%rax),%eax
    8bf1:	8d 50 01             	lea    0x1(%rax),%edx
    8bf4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bf8:	89 90 c8 00 00 00    	mov    %edx,0xc8(%rax)
    8bfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c02:	48 05 00 01 00 00    	add    $0x100,%rax
    8c08:	48 89 c7             	mov    %rax,%rdi
    8c0b:	e8 d0 b0 00 00       	call   13ce0 <sgx_thread_cond_signal>
    8c10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c14:	48 05 d8 00 00 00    	add    $0xd8,%rax
    8c1a:	48 89 c7             	mov    %rax,%rdi
    8c1d:	e8 de b3 00 00       	call   14000 <sgx_thread_mutex_unlock>
    8c22:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    8c26:	e9 f5 fe ff ff       	jmp    8b20 <ecall_producer+0x13>
    8c2b:	90                   	nop
    8c2c:	c9                   	leave  
    8c2d:	c3                   	ret    

0000000000008c2e <ecall_consumer>:
    8c2e:	f3 0f 1e fa          	endbr64 
    8c32:	55                   	push   %rbp
    8c33:	48 89 e5             	mov    %rsp,%rbp
    8c36:	48 83 ec 10          	sub    $0x10,%rsp
    8c3a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    8c41:	81 7d f4 f3 01 00 00 	cmpl   $0x1f3,-0xc(%rbp)
    8c48:	0f 8f ec 00 00 00    	jg     8d3a <ecall_consumer+0x10c>
    8c4e:	48 8d 05 0b 74 02 00 	lea    0x2740b(%rip),%rax        # 30060 <_ZL6buffer>
    8c55:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8c59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c5d:	48 05 d8 00 00 00    	add    $0xd8,%rax
    8c63:	48 89 c7             	mov    %rax,%rdi
    8c66:	e8 35 b1 00 00       	call   13da0 <sgx_thread_mutex_lock>
    8c6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c6f:	8b 80 c8 00 00 00    	mov    0xc8(%rax),%eax
    8c75:	85 c0                	test   %eax,%eax
    8c77:	7f 22                	jg     8c9b <ecall_consumer+0x6d>
    8c79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c7d:	48 8d 90 d8 00 00 00 	lea    0xd8(%rax),%rdx
    8c84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c88:	48 05 00 01 00 00    	add    $0x100,%rax
    8c8e:	48 89 d6             	mov    %rdx,%rsi
    8c91:	48 89 c7             	mov    %rax,%rdi
    8c94:	e8 b7 ae 00 00       	call   13b50 <sgx_thread_cond_wait>
    8c99:	eb d0                	jmp    8c6b <ecall_consumer+0x3d>
    8c9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c9f:	8b 80 d0 00 00 00    	mov    0xd0(%rax),%eax
    8ca5:	8d 48 01             	lea    0x1(%rax),%ecx
    8ca8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8cac:	89 8a d0 00 00 00    	mov    %ecx,0xd0(%rdx)
    8cb2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8cb6:	48 98                	cltq   
    8cb8:	c7 04 82 00 00 00 00 	movl   $0x0,(%rdx,%rax,4)
    8cbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cc3:	8b 90 d0 00 00 00    	mov    0xd0(%rax),%edx
    8cc9:	48 63 c2             	movslq %edx,%rax
    8ccc:	48 69 c0 1f 85 eb 51 	imul   $0x51eb851f,%rax,%rax
    8cd3:	48 c1 e8 20          	shr    $0x20,%rax
    8cd7:	89 c1                	mov    %eax,%ecx
    8cd9:	c1 f9 04             	sar    $0x4,%ecx
    8cdc:	89 d0                	mov    %edx,%eax
    8cde:	c1 f8 1f             	sar    $0x1f,%eax
    8ce1:	29 c1                	sub    %eax,%ecx
    8ce3:	89 c8                	mov    %ecx,%eax
    8ce5:	6b c0 32             	imul   $0x32,%eax,%eax
    8ce8:	29 c2                	sub    %eax,%edx
    8cea:	89 d0                	mov    %edx,%eax
    8cec:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8cf0:	89 82 d0 00 00 00    	mov    %eax,0xd0(%rdx)
    8cf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cfa:	8b 80 c8 00 00 00    	mov    0xc8(%rax),%eax
    8d00:	8d 50 ff             	lea    -0x1(%rax),%edx
    8d03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d07:	89 90 c8 00 00 00    	mov    %edx,0xc8(%rax)
    8d0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d11:	48 05 18 01 00 00    	add    $0x118,%rax
    8d17:	48 89 c7             	mov    %rax,%rdi
    8d1a:	e8 c1 af 00 00       	call   13ce0 <sgx_thread_cond_signal>
    8d1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d23:	48 05 d8 00 00 00    	add    $0xd8,%rax
    8d29:	48 89 c7             	mov    %rax,%rdi
    8d2c:	e8 cf b2 00 00       	call   14000 <sgx_thread_mutex_unlock>
    8d31:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    8d35:	e9 07 ff ff ff       	jmp    8c41 <ecall_consumer+0x13>
    8d3a:	90                   	nop
    8d3b:	c9                   	leave  
    8d3c:	c3                   	ret    
    8d3d:	0f 1f 00             	nopl   (%rax)

0000000000008d40 <register_value_select>:
    8d40:	89 f6                	mov    %esi,%esi
    8d42:	31 c0                	xor    %eax,%eax
    8d44:	48 83 fe 00          	cmp    $0x0,%rsi
    8d48:	48 0f 44 07          	cmove  (%rdi),%rax
    8d4c:	48 83 fe 01          	cmp    $0x1,%rsi
    8d50:	48 0f 44 47 08       	cmove  0x8(%rdi),%rax
    8d55:	48 83 fe 02          	cmp    $0x2,%rsi
    8d59:	48 0f 44 47 10       	cmove  0x10(%rdi),%rax
    8d5e:	48 83 fe 03          	cmp    $0x3,%rsi
    8d62:	48 0f 44 47 18       	cmove  0x18(%rdi),%rax
    8d67:	48 83 fe 04          	cmp    $0x4,%rsi
    8d6b:	48 0f 44 47 20       	cmove  0x20(%rdi),%rax
    8d70:	48 83 fe 05          	cmp    $0x5,%rsi
    8d74:	48 0f 44 47 28       	cmove  0x28(%rdi),%rax
    8d79:	48 83 fe 06          	cmp    $0x6,%rsi
    8d7d:	48 0f 44 47 30       	cmove  0x30(%rdi),%rax
    8d82:	48 83 fe 07          	cmp    $0x7,%rsi
    8d86:	48 0f 44 47 38       	cmove  0x38(%rdi),%rax
    8d8b:	48 83 fe 08          	cmp    $0x8,%rsi
    8d8f:	48 0f 44 47 40       	cmove  0x40(%rdi),%rax
    8d94:	48 83 fe 09          	cmp    $0x9,%rsi
    8d98:	48 0f 44 47 48       	cmove  0x48(%rdi),%rax
    8d9d:	48 83 fe 0a          	cmp    $0xa,%rsi
    8da1:	48 0f 44 47 50       	cmove  0x50(%rdi),%rax
    8da6:	48 83 fe 0b          	cmp    $0xb,%rsi
    8daa:	48 0f 44 47 58       	cmove  0x58(%rdi),%rax
    8daf:	48 83 fe 0c          	cmp    $0xc,%rsi
    8db3:	48 0f 44 47 60       	cmove  0x60(%rdi),%rax
    8db8:	48 83 fe 0d          	cmp    $0xd,%rsi
    8dbc:	48 0f 44 47 68       	cmove  0x68(%rdi),%rax
    8dc1:	48 83 fe 0e          	cmp    $0xe,%rsi
    8dc5:	48 0f 44 47 70       	cmove  0x70(%rdi),%rax
    8dca:	48 83 fe 0f          	cmp    $0xf,%rsi
    8dce:	48 0f 44 47 78       	cmove  0x78(%rdi),%rax
    8dd3:	c3                   	ret    
    8dd4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8ddb:	00 00 00 
    8dde:	66 90                	xchg   %ax,%ax

0000000000008de0 <ct_decode>:
    8de0:	f3 0f 1e fa          	endbr64 
    8de4:	55                   	push   %rbp
    8de5:	48 89 e5             	mov    %rsp,%rbp
    8de8:	41 57                	push   %r15
    8dea:	41 56                	push   %r14
    8dec:	41 55                	push   %r13
    8dee:	41 54                	push   %r12
    8df0:	53                   	push   %rbx
    8df1:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    8df5:	48 81 ec 40 05 00 00 	sub    $0x540,%rsp
    8dfc:	48 89 bc 24 a8 00 00 	mov    %rdi,0xa8(%rsp)
    8e03:	00 
    8e04:	48 89 74 24 50       	mov    %rsi,0x50(%rsp)
    8e09:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8e10:	00 00 
    8e12:	48 89 84 24 38 05 00 	mov    %rax,0x538(%rsp)
    8e19:	00 
    8e1a:	31 c0                	xor    %eax,%eax
    8e1c:	48 8d 84 24 00 01 00 	lea    0x100(%rsp),%rax
    8e23:	00 
    8e24:	f6 05 c8 6e 02 00 08 	testb  $0x8,0x26ec8(%rip)        # 2fcf3 <g_cpu_feature_indicator+0x3>
    8e2b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    8e30:	0f 84 c2 0f 00 00    	je     9df8 <ct_decode+0x1018>
    8e36:	62 f1 7c 48 29 00    	vmovaps %zmm0,(%rax)
    8e3c:	62 f1 7c 48 29 48 01 	vmovaps %zmm1,0x40(%rax)
    8e43:	62 f1 7c 48 29 50 02 	vmovaps %zmm2,0x80(%rax)
    8e4a:	62 f1 7c 48 29 58 03 	vmovaps %zmm3,0xc0(%rax)
    8e51:	62 f1 7c 48 29 60 04 	vmovaps %zmm4,0x100(%rax)
    8e58:	62 f1 7c 48 29 68 05 	vmovaps %zmm5,0x140(%rax)
    8e5f:	62 f1 7c 48 29 70 06 	vmovaps %zmm6,0x180(%rax)
    8e66:	62 f1 7c 48 29 78 07 	vmovaps %zmm7,0x1c0(%rax)
    8e6d:	62 71 7c 48 29 40 08 	vmovaps %zmm8,0x200(%rax)
    8e74:	62 71 7c 48 29 48 09 	vmovaps %zmm9,0x240(%rax)
    8e7b:	62 71 7c 48 29 50 0a 	vmovaps %zmm10,0x280(%rax)
    8e82:	62 71 7c 48 29 58 0b 	vmovaps %zmm11,0x2c0(%rax)
    8e89:	62 71 7c 48 29 60 0c 	vmovaps %zmm12,0x300(%rax)
    8e90:	62 71 7c 48 29 68 0d 	vmovaps %zmm13,0x340(%rax)
    8e97:	62 71 7c 48 29 70 0e 	vmovaps %zmm14,0x380(%rax)
    8e9e:	62 71 7c 48 29 78 0f 	vmovaps %zmm15,0x3c0(%rax)
    8ea5:	48 8b bc 24 a8 00 00 	mov    0xa8(%rsp),%rdi
    8eac:	00 
    8ead:	31 d2                	xor    %edx,%edx
    8eaf:	b9 f0 0f 00 00       	mov    $0xff0,%ecx
    8eb4:	c5 e1 ef db          	vpxor  %xmm3,%xmm3,%xmm3
    8eb8:	c5 f9 6f 25 e0 73 02 	vmovdqa 0x273e0(%rip),%xmm4        # 302a0 <standard>
    8ebf:	00 
    8ec0:	c5 79 6f 2d e8 73 02 	vmovdqa 0x273e8(%rip),%xmm13        # 302b0 <standard+0x10>
    8ec7:	00 
    8ec8:	41 b8 0f 00 00 00    	mov    $0xf,%r8d
    8ece:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    8ed4:	4c 8b b7 88 00 00 00 	mov    0x88(%rdi),%r14
    8edb:	c5 79 6f 25 dd 73 02 	vmovdqa 0x273dd(%rip),%xmm12        # 302c0 <standard+0x20>
    8ee2:	00 
    8ee3:	41 bd 02 00 00 00    	mov    $0x2,%r13d
    8ee9:	41 ba 03 00 00 00    	mov    $0x3,%r10d
    8eef:	c5 79 6f 1d d9 73 02 	vmovdqa 0x273d9(%rip),%xmm11        # 302d0 <standard+0x30>
    8ef6:	00 
    8ef7:	c5 79 6f 15 e1 73 02 	vmovdqa 0x273e1(%rip),%xmm10        # 302e0 <standard+0x40>
    8efe:	00 
    8eff:	4c 89 f0             	mov    %r14,%rax
    8f02:	4c 89 74 24 78       	mov    %r14,0x78(%rsp)
    8f07:	c4 e3 5d 38 25 8f 72 	vinserti128 $0x1,0x2728f(%rip),%ymm4,%ymm4        # 301a0 <extended>
    8f0e:	02 00 01 
    8f11:	25 ff 0f 00 00       	and    $0xfff,%eax
    8f16:	c4 63 15 38 2d 90 72 	vinserti128 $0x1,0x27290(%rip),%ymm13,%ymm13        # 301b0 <extended+0x10>
    8f1d:	02 00 01 
    8f20:	c4 63 1d 38 25 96 72 	vinserti128 $0x1,0x27296(%rip),%ymm12,%ymm12        # 301c0 <extended+0x20>
    8f27:	02 00 01 
    8f2a:	48 3d f0 0f 00 00    	cmp    $0xff0,%rax
    8f30:	c5 79 6f 0d b8 73 02 	vmovdqa 0x273b8(%rip),%xmm9        # 302f0 <standard+0x50>
    8f37:	00 
    8f38:	c4 63 25 38 1d 8e 72 	vinserti128 $0x1,0x2728e(%rip),%ymm11,%ymm11        # 301d0 <extended+0x30>
    8f3f:	02 00 01 
    8f42:	0f 96 c2             	setbe  %dl
    8f45:	31 f6                	xor    %esi,%esi
    8f47:	c4 63 2d 38 15 8f 72 	vinserti128 $0x1,0x2728f(%rip),%ymm10,%ymm10        # 301e0 <extended+0x40>
    8f4e:	02 00 01 
    8f51:	c5 79 6f 05 a7 73 02 	vmovdqa 0x273a7(%rip),%xmm8        # 30300 <standard+0x60>
    8f58:	00 
    8f59:	48 83 fa 00          	cmp    $0x0,%rdx
    8f5d:	48 0f 45 c8          	cmovne %rax,%rcx
    8f61:	c4 63 35 38 0d 85 72 	vinserti128 $0x1,0x27285(%rip),%ymm9,%ymm9        # 301f0 <extended+0x50>
    8f68:	02 00 01 
    8f6b:	48 3d f0 0f 00 00    	cmp    $0xff0,%rax
    8f71:	c4 63 3d 38 05 85 72 	vinserti128 $0x1,0x27285(%rip),%ymm8,%ymm8        # 30200 <extended+0x60>
    8f78:	02 00 01 
    8f7b:	40 0f 97 c6          	seta   %sil
    8f7f:	31 d2                	xor    %edx,%edx
    8f81:	2d f0 0f 00 00       	sub    $0xff0,%eax
    8f86:	89 d3                	mov    %edx,%ebx
    8f88:	48 83 fe 00          	cmp    $0x0,%rsi
    8f8c:	0f 45 d8             	cmovne %eax,%ebx
    8f8f:	4c 89 f0             	mov    %r14,%rax
    8f92:	89 5c 24 60          	mov    %ebx,0x60(%rsp)
    8f96:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    8f9c:	48 09 c8             	or     %rcx,%rax
    8f9f:	c5 fa 6f 00          	vmovdqu (%rax),%xmm0
    8fa3:	48 63 c3             	movslq %ebx,%rax
    8fa6:	bb 04 00 00 00       	mov    $0x4,%ebx
    8fab:	c4 e1 f9 6e f8       	vmovq  %rax,%xmm7
    8fb0:	c5 f9 f3 ef          	vpsllq %xmm7,%xmm0,%xmm5
    8fb4:	c5 fd 6f 05 04 d7 01 	vmovdqa 0x1d704(%rip),%ymm0        # 266c0 <g_dyn_entry_table+0x6c0>
    8fbb:	00 
    8fbc:	c5 f9 6f 3d 4c 73 02 	vmovdqa 0x2734c(%rip),%xmm7        # 30310 <standard+0x70>
    8fc3:	00 
    8fc4:	c4 e3 45 38 3d 42 72 	vinserti128 $0x1,0x27242(%rip),%ymm7,%ymm7        # 30210 <extended+0x70>
    8fcb:	02 00 01 
    8fce:	c4 e2 7d 59 d5       	vpbroadcastq %xmm5,%ymm2
    8fd3:	c4 e1 f9 7e ee       	vmovq  %xmm5,%rsi
    8fd8:	c5 f8 29 ac 24 b0 00 	vmovaps %xmm5,0xb0(%rsp)
    8fdf:	00 00 
    8fe1:	c5 fd df ca          	vpandn %ymm2,%ymm0,%ymm1
    8fe5:	c5 ed db c0          	vpand  %ymm0,%ymm2,%ymm0
    8fe9:	c5 fd 6f 15 ef d6 01 	vmovdqa 0x1d6ef(%rip),%ymm2        # 266e0 <g_dyn_entry_table+0x6e0>
    8ff0:	00 
    8ff1:	c5 fd 74 db          	vpcmpeqb %ymm3,%ymm0,%ymm3
    8ff5:	c5 e5 df da          	vpandn %ymm2,%ymm3,%ymm3
    8ff9:	c5 e5 eb d9          	vpor   %ymm1,%ymm3,%ymm3
    8ffd:	c4 e2 5d 00 f3       	vpshufb %ymm3,%ymm4,%ymm6
    9002:	c5 fd 74 1d f6 d6 01 	vpcmpeqb 0x1d6f6(%rip),%ymm0,%ymm3        # 26700 <g_dyn_entry_table+0x700>
    9009:	00 
    900a:	c5 fd 7f b4 24 e0 00 	vmovdqa %ymm6,0xe0(%rsp)
    9011:	00 00 
    9013:	c5 e5 df da          	vpandn %ymm2,%ymm3,%ymm3
    9017:	c5 e5 eb d9          	vpor   %ymm1,%ymm3,%ymm3
    901b:	c4 62 15 00 eb       	vpshufb %ymm3,%ymm13,%ymm13
    9020:	c5 fd 74 1d f8 d6 01 	vpcmpeqb 0x1d6f8(%rip),%ymm0,%ymm3        # 26720 <g_dyn_entry_table+0x720>
    9027:	00 
    9028:	c4 61 f9 7e e9       	vmovq  %xmm13,%rcx
    902d:	c4 43 7d 39 ed 01    	vextracti128 $0x1,%ymm13,%xmm13
    9033:	c5 e5 df da          	vpandn %ymm2,%ymm3,%ymm3
    9037:	c5 e5 eb d9          	vpor   %ymm1,%ymm3,%ymm3
    903b:	c4 62 1d 00 e3       	vpshufb %ymm3,%ymm12,%ymm12
    9040:	c5 fd 74 1d f8 d6 01 	vpcmpeqb 0x1d6f8(%rip),%ymm0,%ymm3        # 26740 <g_dyn_entry_table+0x740>
    9047:	00 
    9048:	c4 61 f9 7e e0       	vmovq  %xmm12,%rax
    904d:	c4 43 7d 39 e4 01    	vextracti128 $0x1,%ymm12,%xmm12
    9053:	48 09 c1             	or     %rax,%rcx
    9056:	c5 e5 df da          	vpandn %ymm2,%ymm3,%ymm3
    905a:	c5 e5 eb d9          	vpor   %ymm1,%ymm3,%ymm3
    905e:	c4 62 25 00 db       	vpshufb %ymm3,%ymm11,%ymm11
    9063:	c5 fd 74 1d f5 d6 01 	vpcmpeqb 0x1d6f5(%rip),%ymm0,%ymm3        # 26760 <g_dyn_entry_table+0x760>
    906a:	00 
    906b:	c4 61 f9 7e d8       	vmovq  %xmm11,%rax
    9070:	c4 43 7d 39 db 01    	vextracti128 $0x1,%ymm11,%xmm11
    9076:	48 09 c1             	or     %rax,%rcx
    9079:	c5 e5 df da          	vpandn %ymm2,%ymm3,%ymm3
    907d:	c5 e5 eb d9          	vpor   %ymm1,%ymm3,%ymm3
    9081:	c4 62 2d 00 d3       	vpshufb %ymm3,%ymm10,%ymm10
    9086:	c5 fd 74 1d f2 d6 01 	vpcmpeqb 0x1d6f2(%rip),%ymm0,%ymm3        # 26780 <g_dyn_entry_table+0x780>
    908d:	00 
    908e:	c4 61 f9 7e d0       	vmovq  %xmm10,%rax
    9093:	c4 43 7d 39 d2 01    	vextracti128 $0x1,%ymm10,%xmm10
    9099:	48 09 c1             	or     %rax,%rcx
    909c:	c5 e5 df da          	vpandn %ymm2,%ymm3,%ymm3
    90a0:	c5 e5 eb d9          	vpor   %ymm1,%ymm3,%ymm3
    90a4:	c4 62 35 00 cb       	vpshufb %ymm3,%ymm9,%ymm9
    90a9:	c5 fd 74 1d ef d6 01 	vpcmpeqb 0x1d6ef(%rip),%ymm0,%ymm3        # 267a0 <g_dyn_entry_table+0x7a0>
    90b0:	00 
    90b1:	c4 61 f9 7e c8       	vmovq  %xmm9,%rax
    90b6:	c4 43 7d 39 c9 01    	vextracti128 $0x1,%ymm9,%xmm9
    90bc:	48 09 c1             	or     %rax,%rcx
    90bf:	c5 e5 df da          	vpandn %ymm2,%ymm3,%ymm3
    90c3:	c5 e5 eb d9          	vpor   %ymm1,%ymm3,%ymm3
    90c7:	c4 62 3d 00 c3       	vpshufb %ymm3,%ymm8,%ymm8
    90cc:	c5 fd 74 1d ec d6 01 	vpcmpeqb 0x1d6ec(%rip),%ymm0,%ymm3        # 267c0 <g_dyn_entry_table+0x7c0>
    90d3:	00 
    90d4:	c4 61 f9 7e c0       	vmovq  %xmm8,%rax
    90d9:	c4 43 7d 39 c0 01    	vextracti128 $0x1,%ymm8,%xmm8
    90df:	48 09 c1             	or     %rax,%rcx
    90e2:	c5 e5 df da          	vpandn %ymm2,%ymm3,%ymm3
    90e6:	c5 e5 eb d9          	vpor   %ymm1,%ymm3,%ymm3
    90ea:	c4 e2 45 00 fb       	vpshufb %ymm3,%ymm7,%ymm7
    90ef:	c5 fd 74 1d e9 d5 01 	vpcmpeqb 0x1d5e9(%rip),%ymm0,%ymm3        # 266e0 <g_dyn_entry_table+0x6e0>
    90f6:	00 
    90f7:	c5 f9 6f 35 21 72 02 	vmovdqa 0x27221(%rip),%xmm6        # 30320 <standard+0x80>
    90fe:	00 
    90ff:	c4 e3 4d 38 35 17 71 	vinserti128 $0x1,0x27117(%rip),%ymm6,%ymm6        # 30220 <extended+0x80>
    9106:	02 00 01 
    9109:	c5 f9 6f 2d 1f 72 02 	vmovdqa 0x2721f(%rip),%xmm5        # 30330 <standard+0x90>
    9110:	00 
    9111:	c5 f9 6f 25 27 72 02 	vmovdqa 0x27227(%rip),%xmm4        # 30340 <standard+0xa0>
    9118:	00 
    9119:	c4 e1 f9 7e f8       	vmovq  %xmm7,%rax
    911e:	c4 e3 7d 39 ff 01    	vextracti128 $0x1,%ymm7,%xmm7
    9124:	c4 e3 55 38 2d 02 71 	vinserti128 $0x1,0x27102(%rip),%ymm5,%ymm5        # 30230 <extended+0x90>
    912b:	02 00 01 
    912e:	c5 79 6f 3d 2a 72 02 	vmovdqa 0x2722a(%rip),%xmm15        # 30360 <standard+0xc0>
    9135:	00 
    9136:	48 09 c1             	or     %rax,%rcx
    9139:	c4 63 5d 38 35 fd 70 	vinserti128 $0x1,0x270fd(%rip),%ymm4,%ymm14        # 30240 <extended+0xa0>
    9140:	02 00 01 
    9143:	c5 e5 df da          	vpandn %ymm2,%ymm3,%ymm3
    9147:	c4 63 05 38 3d 0f 71 	vinserti128 $0x1,0x2710f(%rip),%ymm15,%ymm15        # 30260 <extended+0xc0>
    914e:	02 00 01 
    9151:	c5 e5 eb d9          	vpor   %ymm1,%ymm3,%ymm3
    9155:	c4 e2 4d 00 f3       	vpshufb %ymm3,%ymm6,%ymm6
    915a:	c5 fd 74 1d 7e d6 01 	vpcmpeqb 0x1d67e(%rip),%ymm0,%ymm3        # 267e0 <g_dyn_entry_table+0x7e0>
    9161:	00 
    9162:	c4 e1 f9 7e f0       	vmovq  %xmm6,%rax
    9167:	c4 e3 7d 39 f6 01    	vextracti128 $0x1,%ymm6,%xmm6
    916d:	48 09 c1             	or     %rax,%rcx
    9170:	c5 e5 df da          	vpandn %ymm2,%ymm3,%ymm3
    9174:	c5 e5 eb d9          	vpor   %ymm1,%ymm3,%ymm3
    9178:	c4 e2 55 00 eb       	vpshufb %ymm3,%ymm5,%ymm5
    917d:	c5 fd 74 1d 7b d6 01 	vpcmpeqb 0x1d67b(%rip),%ymm0,%ymm3        # 26800 <g_dyn_entry_table+0x800>
    9184:	00 
    9185:	c4 e1 f9 7e e8       	vmovq  %xmm5,%rax
    918a:	c4 e3 7d 39 ed 01    	vextracti128 $0x1,%ymm5,%xmm5
    9190:	48 09 c1             	or     %rax,%rcx
    9193:	c5 e5 df da          	vpandn %ymm2,%ymm3,%ymm3
    9197:	c5 e5 eb d9          	vpor   %ymm1,%ymm3,%ymm3
    919b:	c4 e2 0d 00 e3       	vpshufb %ymm3,%ymm14,%ymm4
    91a0:	c5 79 6f 35 a8 71 02 	vmovdqa 0x271a8(%rip),%xmm14        # 30350 <standard+0xb0>
    91a7:	00 
    91a8:	c5 fd 74 1d 70 d6 01 	vpcmpeqb 0x1d670(%rip),%ymm0,%ymm3        # 26820 <g_dyn_entry_table+0x820>
    91af:	00 
    91b0:	c4 63 0d 38 35 96 70 	vinserti128 $0x1,0x27096(%rip),%ymm14,%ymm14        # 30250 <extended+0xb0>
    91b7:	02 00 01 
    91ba:	c4 e1 f9 7e e0       	vmovq  %xmm4,%rax
    91bf:	c4 e3 7d 39 e4 01    	vextracti128 $0x1,%ymm4,%xmm4
    91c5:	48 09 c1             	or     %rax,%rcx
    91c8:	c5 e5 df da          	vpandn %ymm2,%ymm3,%ymm3
    91cc:	c5 e5 eb d9          	vpor   %ymm1,%ymm3,%ymm3
    91d0:	c4 e2 0d 00 db       	vpshufb %ymm3,%ymm14,%ymm3
    91d5:	c5 7d 74 35 63 d6 01 	vpcmpeqb 0x1d663(%rip),%ymm0,%ymm14        # 26840 <g_dyn_entry_table+0x840>
    91dc:	00 
    91dd:	c4 e1 f9 7e d8       	vmovq  %xmm3,%rax
    91e2:	c4 e3 7d 39 db 01    	vextracti128 $0x1,%ymm3,%xmm3
    91e8:	48 09 c1             	or     %rax,%rcx
    91eb:	c5 0d df f2          	vpandn %ymm2,%ymm14,%ymm14
    91ef:	c5 0d eb f1          	vpor   %ymm1,%ymm14,%ymm14
    91f3:	c4 42 05 00 f6       	vpshufb %ymm14,%ymm15,%ymm14
    91f8:	c5 79 6f 3d 70 71 02 	vmovdqa 0x27170(%rip),%xmm15        # 30370 <standard+0xd0>
    91ff:	00 
    9200:	c4 63 05 38 3d 66 70 	vinserti128 $0x1,0x27066(%rip),%ymm15,%ymm15        # 30270 <extended+0xd0>
    9207:	02 00 01 
    920a:	c5 7d 7f b4 24 80 00 	vmovdqa %ymm14,0x80(%rsp)
    9211:	00 00 
    9213:	c5 7d 74 35 45 d6 01 	vpcmpeqb 0x1d645(%rip),%ymm0,%ymm14        # 26860 <g_dyn_entry_table+0x860>
    921a:	00 
    921b:	c5 0d df f2          	vpandn %ymm2,%ymm14,%ymm14
    921f:	c5 0d eb f1          	vpor   %ymm1,%ymm14,%ymm14
    9223:	c4 42 05 00 fe       	vpshufb %ymm14,%ymm15,%ymm15
    9228:	c5 7d 74 35 50 d6 01 	vpcmpeqb 0x1d650(%rip),%ymm0,%ymm14        # 26880 <g_dyn_entry_table+0x880>
    922f:	00 
    9230:	c5 fd 74 05 88 d4 01 	vpcmpeqb 0x1d488(%rip),%ymm0,%ymm0        # 266c0 <g_dyn_entry_table+0x6c0>
    9237:	00 
    9238:	c5 7d 7f bc 24 c0 00 	vmovdqa %ymm15,0xc0(%rsp)
    923f:	00 00 
    9241:	c5 79 6f 3d 37 71 02 	vmovdqa 0x27137(%rip),%xmm15        # 30380 <standard+0xe0>
    9248:	00 
    9249:	c4 63 05 38 3d 2d 70 	vinserti128 $0x1,0x2702d(%rip),%ymm15,%ymm15        # 30280 <extended+0xe0>
    9250:	02 00 01 
    9253:	c5 0d df f2          	vpandn %ymm2,%ymm14,%ymm14
    9257:	c5 0d eb f1          	vpor   %ymm1,%ymm14,%ymm14
    925b:	c5 fd df d2          	vpandn %ymm2,%ymm0,%ymm2
    925f:	c5 f9 6f 84 24 c0 00 	vmovdqa 0xc0(%rsp),%xmm0
    9266:	00 00 
    9268:	c4 42 05 00 fe       	vpshufb %ymm14,%ymm15,%ymm15
    926d:	c5 79 6f 35 1b 71 02 	vmovdqa 0x2711b(%rip),%xmm14        # 30390 <standard+0xf0>
    9274:	00 
    9275:	c5 ed eb d1          	vpor   %ymm1,%ymm2,%ymm2
    9279:	c4 63 0d 38 35 0d 70 	vinserti128 $0x1,0x2700d(%rip),%ymm14,%ymm14        # 30290 <extended+0xf0>
    9280:	02 00 01 
    9283:	c4 e2 0d 00 d2       	vpshufb %ymm2,%ymm14,%ymm2
    9288:	c5 7d 6f b4 24 80 00 	vmovdqa 0x80(%rsp),%ymm14
    928f:	00 00 
    9291:	c4 61 f9 7e f0       	vmovq  %xmm14,%rax
    9296:	48 09 c1             	or     %rax,%rcx
    9299:	c4 e1 f9 7e c0       	vmovq  %xmm0,%rax
    929e:	c5 f9 6f 84 24 e0 00 	vmovdqa 0xe0(%rsp),%xmm0
    92a5:	00 00 
    92a7:	48 09 c1             	or     %rax,%rcx
    92aa:	c4 61 f9 7e f8       	vmovq  %xmm15,%rax
    92af:	c4 43 7d 39 ff 01    	vextracti128 $0x1,%ymm15,%xmm15
    92b5:	48 09 c1             	or     %rax,%rcx
    92b8:	c4 e1 f9 7e d0       	vmovq  %xmm2,%rax
    92bd:	c4 e3 7d 39 d2 01    	vextracti128 $0x1,%ymm2,%xmm2
    92c3:	48 09 c1             	or     %rax,%rcx
    92c6:	c4 e1 f9 7e c0       	vmovq  %xmm0,%rax
    92cb:	48 09 c1             	or     %rax,%rcx
    92ce:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffff,%rax
    92d5:	ff 00 00 
    92d8:	49 89 c1             	mov    %rax,%r9
    92db:	31 c0                	xor    %eax,%eax
    92dd:	49 21 c9             	and    %rcx,%r9
    92e0:	81 e1 c0 00 00 00    	and    $0xc0,%ecx
    92e6:	48 83 f9 7f          	cmp    $0x7f,%rcx
    92ea:	4d 89 cc             	mov    %r9,%r12
    92ed:	0f 97 c0             	seta   %al
    92f0:	48 83 f8 00          	cmp    $0x0,%rax
    92f4:	44 0f 45 c2          	cmovne %edx,%r8d
    92f8:	4c 89 c8             	mov    %r9,%rax
    92fb:	44 89 c1             	mov    %r8d,%ecx
    92fe:	48 c1 e8 08          	shr    $0x8,%rax
    9302:	25 c0 00 00 00       	and    $0xc0,%eax
    9307:	48 83 f8 7f          	cmp    $0x7f,%rax
    930b:	0f 97 c0             	seta   %al
    930e:	c1 e1 08             	shl    $0x8,%ecx
    9311:	0f b6 c0             	movzbl %al,%eax
    9314:	09 c8                	or     %ecx,%eax
    9316:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    931b:	0f 94 c0             	sete   %al
    931e:	0f b6 c0             	movzbl %al,%eax
    9321:	48 83 f8 00          	cmp    $0x0,%rax
    9325:	45 0f 45 c7          	cmovne %r15d,%r8d
    9329:	4c 89 c8             	mov    %r9,%rax
    932c:	44 89 c1             	mov    %r8d,%ecx
    932f:	48 c1 e8 10          	shr    $0x10,%rax
    9333:	25 c0 00 00 00       	and    $0xc0,%eax
    9338:	48 83 f8 7f          	cmp    $0x7f,%rax
    933c:	0f 97 c0             	seta   %al
    933f:	c1 e1 08             	shl    $0x8,%ecx
    9342:	0f b6 c0             	movzbl %al,%eax
    9345:	09 c8                	or     %ecx,%eax
    9347:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    934c:	0f 94 c0             	sete   %al
    934f:	0f b6 c0             	movzbl %al,%eax
    9352:	48 83 f8 00          	cmp    $0x0,%rax
    9356:	45 0f 45 c5          	cmovne %r13d,%r8d
    935a:	4c 89 c8             	mov    %r9,%rax
    935d:	44 89 c1             	mov    %r8d,%ecx
    9360:	48 c1 e8 18          	shr    $0x18,%rax
    9364:	25 c0 00 00 00       	and    $0xc0,%eax
    9369:	48 83 f8 7f          	cmp    $0x7f,%rax
    936d:	0f 97 c0             	seta   %al
    9370:	c1 e1 08             	shl    $0x8,%ecx
    9373:	0f b6 c0             	movzbl %al,%eax
    9376:	09 c8                	or     %ecx,%eax
    9378:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    937d:	0f 94 c0             	sete   %al
    9380:	0f b6 c0             	movzbl %al,%eax
    9383:	48 83 f8 00          	cmp    $0x0,%rax
    9387:	45 0f 45 c2          	cmovne %r10d,%r8d
    938b:	4c 89 c8             	mov    %r9,%rax
    938e:	44 89 c1             	mov    %r8d,%ecx
    9391:	48 c1 e8 20          	shr    $0x20,%rax
    9395:	25 c0 00 00 00       	and    $0xc0,%eax
    939a:	48 83 f8 7f          	cmp    $0x7f,%rax
    939e:	0f 97 c0             	seta   %al
    93a1:	c1 e1 08             	shl    $0x8,%ecx
    93a4:	0f b6 c0             	movzbl %al,%eax
    93a7:	09 c8                	or     %ecx,%eax
    93a9:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    93ae:	0f 94 c0             	sete   %al
    93b1:	0f b6 c0             	movzbl %al,%eax
    93b4:	48 83 f8 00          	cmp    $0x0,%rax
    93b8:	44 0f 45 c3          	cmovne %ebx,%r8d
    93bc:	4c 89 c8             	mov    %r9,%rax
    93bf:	44 89 c1             	mov    %r8d,%ecx
    93c2:	89 d3                	mov    %edx,%ebx
    93c4:	48 c1 e8 28          	shr    $0x28,%rax
    93c8:	25 c0 00 00 00       	and    $0xc0,%eax
    93cd:	48 83 f8 7f          	cmp    $0x7f,%rax
    93d1:	0f 97 c0             	seta   %al
    93d4:	c1 e1 08             	shl    $0x8,%ecx
    93d7:	0f b6 c0             	movzbl %al,%eax
    93da:	09 c8                	or     %ecx,%eax
    93dc:	31 c9                	xor    %ecx,%ecx
    93de:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    93e3:	b8 05 00 00 00       	mov    $0x5,%eax
    93e8:	0f 94 c1             	sete   %cl
    93eb:	48 83 f9 00          	cmp    $0x0,%rcx
    93ef:	44 0f 45 c0          	cmovne %eax,%r8d
    93f3:	42 8d 0c c5 00 00 00 	lea    0x0(,%r8,8),%ecx
    93fa:	00 
    93fb:	49 d3 ec             	shr    %cl,%r12
    93fe:	4c 89 e7             	mov    %r12,%rdi
    9401:	49 89 f4             	mov    %rsi,%r12
    9404:	49 d3 ec             	shr    %cl,%r12
    9407:	4c 89 e1             	mov    %r12,%rcx
    940a:	41 89 fc             	mov    %edi,%r12d
    940d:	41 c0 ec 02          	shr    $0x2,%r12b
    9411:	48 89 8c 24 a0 00 00 	mov    %rcx,0xa0(%rsp)
    9418:	00 
    9419:	31 c9                	xor    %ecx,%ecx
    941b:	45 89 e6             	mov    %r12d,%r14d
    941e:	41 89 fc             	mov    %edi,%r12d
    9421:	41 83 e4 03          	and    $0x3,%r12d
    9425:	80 bc 24 a0 00 00 00 	cmpb   $0xf,0xa0(%rsp)
    942c:	0f 
    942d:	0f 94 c1             	sete   %cl
    9430:	44 89 64 24 64       	mov    %r12d,0x64(%rsp)
    9435:	41 89 d4             	mov    %edx,%r12d
    9438:	45 31 db             	xor    %r11d,%r11d
    943b:	48 83 f9 00          	cmp    $0x0,%rcx
    943f:	45 0f 45 e7          	cmovne %r15d,%r12d
    9443:	89 f9                	mov    %edi,%ecx
    9445:	83 e1 f0             	and    $0xfffffff0,%ecx
    9448:	80 f9 a0             	cmp    $0xa0,%cl
    944b:	41 0f 94 c3          	sete   %r11b
    944f:	49 83 fb 00          	cmp    $0x0,%r11
    9453:	41 0f 45 df          	cmovne %r15d,%ebx
    9457:	80 f9 b0             	cmp    $0xb0,%cl
    945a:	41 89 d3             	mov    %edx,%r11d
    945d:	89 5c 24 4c          	mov    %ebx,0x4c(%rsp)
    9461:	0f 94 c1             	sete   %cl
    9464:	44 29 c0             	sub    %r8d,%eax
    9467:	31 db                	xor    %ebx,%ebx
    9469:	44 88 74 24 74       	mov    %r14b,0x74(%rsp)
    946e:	0f b6 c9             	movzbl %cl,%ecx
    9471:	48 83 f9 00          	cmp    $0x0,%rcx
    9475:	45 0f 45 df          	cmovne %r15d,%r11d
    9479:	8d 0c c5 00 00 00 00 	lea    0x0(,%rax,8),%ecx
    9480:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
    9485:	48 b8 ff ff ff ff ff 	movabs $0xffffffffff,%rax
    948c:	00 00 00 
    948f:	49 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%r11
    9496:	48 d3 f8             	sar    %cl,%rax
    9499:	42 8d 0c c5 f8 ff ff 	lea    -0x8(,%r8,8),%ecx
    94a0:	ff 
    94a1:	4c 21 c8             	and    %r9,%rax
    94a4:	49 89 c1             	mov    %rax,%r9
    94a7:	c4 e1 f9 6e c8       	vmovq  %rax,%xmm1
    94ac:	49 d3 e9             	shr    %cl,%r9
    94af:	c4 c1 f9 6e c1       	vmovq  %r9,%xmm0
    94b4:	c4 c3 f9 22 c3 01    	vpinsrq $0x1,%r11,%xmm0,%xmm0
    94ba:	c5 f9 74 05 de d3 01 	vpcmpeqb 0x1d3de(%rip),%xmm0,%xmm0        # 268a0 <g_dyn_entry_table+0x8a0>
    94c1:	00 
    94c2:	c4 c1 f9 7e c1       	vmovq  %xmm0,%r9
    94c7:	c4 c3 f1 22 c3 01    	vpinsrq $0x1,%r11,%xmm1,%xmm0
    94cd:	49 bb 00 80 80 80 80 	movabs $0x8080808080808000,%r11
    94d4:	80 80 80 
    94d7:	c5 f9 74 0d d1 d3 01 	vpcmpeqb 0x1d3d1(%rip),%xmm0,%xmm1        # 268b0 <g_dyn_entry_table+0x8b0>
    94de:	00 
    94df:	4d 85 c9             	test   %r9,%r9
    94e2:	45 89 f9             	mov    %r15d,%r9d
    94e5:	0f 94 c3             	sete   %bl
    94e8:	48 d3 ee             	shr    %cl,%rsi
    94eb:	89 d1                	mov    %edx,%ecx
    94ed:	48 83 fb 00          	cmp    $0x0,%rbx
    94f1:	44 0f 45 ca          	cmovne %edx,%r9d
    94f5:	c4 e1 f9 7e c8       	vmovq  %xmm1,%rax
    94fa:	c5 f9 74 0d be d3 01 	vpcmpeqb 0x1d3be(%rip),%xmm0,%xmm1        # 268c0 <g_dyn_entry_table+0x8c0>
    9501:	00 
    9502:	83 e6 4f             	and    $0x4f,%esi
    9505:	45 89 c9             	mov    %r9d,%r9d
    9508:	49 83 f9 00          	cmp    $0x0,%r9
    950c:	0f 45 ce             	cmovne %esi,%ecx
    950f:	89 4c 24 68          	mov    %ecx,0x68(%rsp)
    9513:	31 c9                	xor    %ecx,%ecx
    9515:	48 85 c0             	test   %rax,%rax
    9518:	44 89 f8             	mov    %r15d,%eax
    951b:	0f 94 c1             	sete   %cl
    951e:	44 89 fe             	mov    %r15d,%esi
    9521:	45 89 f9             	mov    %r15d,%r9d
    9524:	48 83 f9 00          	cmp    $0x0,%rcx
    9528:	0f 45 c2             	cmovne %edx,%eax
    952b:	89 c1                	mov    %eax,%ecx
    952d:	89 d0                	mov    %edx,%eax
    952f:	48 83 f9 00          	cmp    $0x0,%rcx
    9533:	41 0f 45 c7          	cmovne %r15d,%eax
    9537:	c4 e1 f9 7e c9       	vmovq  %xmm1,%rcx
    953c:	c5 f9 74 0d 8c d3 01 	vpcmpeqb 0x1d38c(%rip),%xmm0,%xmm1        # 268d0 <g_dyn_entry_table+0x8d0>
    9543:	00 
    9544:	48 85 c9             	test   %rcx,%rcx
    9547:	0f 94 c1             	sete   %cl
    954a:	0f b6 c9             	movzbl %cl,%ecx
    954d:	48 83 f9 00          	cmp    $0x0,%rcx
    9551:	0f 45 f2             	cmovne %edx,%esi
    9554:	c4 e1 f9 7e c9       	vmovq  %xmm1,%rcx
    9559:	c5 f9 74 0d 7f d3 01 	vpcmpeqb 0x1d37f(%rip),%xmm0,%xmm1        # 268e0 <g_dyn_entry_table+0x8e0>
    9560:	00 
    9561:	89 74 24 44          	mov    %esi,0x44(%rsp)
    9565:	48 85 c9             	test   %rcx,%rcx
    9568:	c5 f9 74 05 80 d3 01 	vpcmpeqb 0x1d380(%rip),%xmm0,%xmm0        # 268f0 <g_dyn_entry_table+0x8f0>
    956f:	00 
    9570:	0f 94 c1             	sete   %cl
    9573:	31 f6                	xor    %esi,%esi
    9575:	0f b6 c9             	movzbl %cl,%ecx
    9578:	48 83 f9 00          	cmp    $0x0,%rcx
    957c:	44 0f 45 ca          	cmovne %edx,%r9d
    9580:	c4 e1 f9 7e c9       	vmovq  %xmm1,%rcx
    9585:	44 89 4c 24 40       	mov    %r9d,0x40(%rsp)
    958a:	49 b9 80 80 80 80 80 	movabs $0x8080808080808080,%r9
    9591:	80 80 80 
    9594:	48 85 c9             	test   %rcx,%rcx
    9597:	44 89 f9             	mov    %r15d,%ecx
    959a:	40 0f 94 c6          	sete   %sil
    959e:	48 83 fe 00          	cmp    $0x0,%rsi
    95a2:	0f 45 ca             	cmovne %edx,%ecx
    95a5:	89 c9                	mov    %ecx,%ecx
    95a7:	31 f6                	xor    %esi,%esi
    95a9:	48 83 f9 00          	cmp    $0x0,%rcx
    95ad:	41 0f 45 c2          	cmovne %r10d,%eax
    95b1:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
    95b6:	c4 63 7d 39 f0 01    	vextracti128 $0x1,%ymm14,%xmm0
    95bc:	48 85 c9             	test   %rcx,%rcx
    95bf:	44 89 f9             	mov    %r15d,%ecx
    95c2:	40 0f 94 c6          	sete   %sil
    95c6:	48 83 fe 00          	cmp    $0x0,%rsi
    95ca:	0f 45 ca             	cmovne %edx,%ecx
    95cd:	89 c6                	mov    %eax,%esi
    95cf:	89 c9                	mov    %ecx,%ecx
    95d1:	c4 61 f9 7e e0       	vmovq  %xmm12,%rax
    95d6:	48 83 f9 00          	cmp    $0x0,%rcx
    95da:	41 0f 45 f5          	cmovne %r13d,%esi
    95de:	89 74 24 70          	mov    %esi,0x70(%rsp)
    95e2:	c4 61 f9 7e ee       	vmovq  %xmm13,%rsi
    95e7:	42 8d 0c c5 08 00 00 	lea    0x8(,%r8,8),%ecx
    95ee:	00 
    95ef:	48 09 f0             	or     %rsi,%rax
    95f2:	c4 61 f9 7e de       	vmovq  %xmm11,%rsi
    95f7:	48 09 f0             	or     %rsi,%rax
    95fa:	c4 61 f9 7e d6       	vmovq  %xmm10,%rsi
    95ff:	48 09 c6             	or     %rax,%rsi
    9602:	c4 61 f9 7e c8       	vmovq  %xmm9,%rax
    9607:	48 09 c6             	or     %rax,%rsi
    960a:	c4 61 f9 7e c0       	vmovq  %xmm8,%rax
    960f:	48 09 f0             	or     %rsi,%rax
    9612:	c4 e1 f9 7e fe       	vmovq  %xmm7,%rsi
    9617:	c5 fd 6f bc 24 c0 00 	vmovdqa 0xc0(%rsp),%ymm7
    961e:	00 00 
    9620:	48 09 f0             	or     %rsi,%rax
    9623:	c4 e1 f9 7e f6       	vmovq  %xmm6,%rsi
    9628:	c5 fd 6f b4 24 e0 00 	vmovdqa 0xe0(%rsp),%ymm6
    962f:	00 00 
    9631:	48 09 c6             	or     %rax,%rsi
    9634:	c4 e1 f9 7e e8       	vmovq  %xmm5,%rax
    9639:	c4 c3 7d 39 fe 01    	vextracti128 $0x1,%ymm7,%xmm14
    963f:	48 09 c6             	or     %rax,%rsi
    9642:	c4 e1 f9 7e e0       	vmovq  %xmm4,%rax
    9647:	48 09 f0             	or     %rsi,%rax
    964a:	c4 e1 f9 7e de       	vmovq  %xmm3,%rsi
    964f:	48 09 f0             	or     %rsi,%rax
    9652:	c4 e1 f9 7e c6       	vmovq  %xmm0,%rsi
    9657:	c4 e3 7d 39 f0 01    	vextracti128 $0x1,%ymm6,%xmm0
    965d:	48 09 c6             	or     %rax,%rsi
    9660:	c4 61 f9 7e f0       	vmovq  %xmm14,%rax
    9665:	48 09 c6             	or     %rax,%rsi
    9668:	c4 61 f9 7e f8       	vmovq  %xmm15,%rax
    966d:	48 09 f0             	or     %rsi,%rax
    9670:	c4 e1 f9 7e d6       	vmovq  %xmm2,%rsi
    9675:	c5 f9 6f 94 24 b0 00 	vmovdqa 0xb0(%rsp),%xmm2
    967c:	00 00 
    967e:	48 09 f0             	or     %rsi,%rax
    9681:	c4 e1 f9 7e c6       	vmovq  %xmm0,%rsi
    9686:	48 09 c6             	or     %rax,%rsi
    9689:	48 d3 fe             	sar    %cl,%rsi
    968c:	44 89 e1             	mov    %r12d,%ecx
    968f:	41 89 f2             	mov    %esi,%r10d
    9692:	41 c0 ea 04          	shr    $0x4,%r10b
    9696:	44 89 d3             	mov    %r10d,%ebx
    9699:	45 89 f2             	mov    %r14d,%r10d
    969c:	41 83 e2 03          	and    $0x3,%r10d
    96a0:	83 e3 03             	and    $0x3,%ebx
    96a3:	44 89 d0             	mov    %r10d,%eax
    96a6:	48 83 f9 00          	cmp    $0x0,%rcx
    96aa:	0f 45 c3             	cmovne %ebx,%eax
    96ad:	43 8d 0c 20          	lea    (%r8,%r12,1),%ecx
    96b1:	41 89 c8             	mov    %ecx,%r8d
    96b4:	89 8c 24 e0 00 00 00 	mov    %ecx,0xe0(%rsp)
    96bb:	41 8d 48 01          	lea    0x1(%r8),%ecx
    96bf:	0f b6 c9             	movzbl %cl,%ecx
    96c2:	4c 09 d9             	or     %r11,%rcx
    96c5:	c4 e1 f9 6e e1       	vmovq  %rcx,%xmm4
    96ca:	c4 c3 d9 22 c9 01    	vpinsrq $0x1,%r9,%xmm4,%xmm1
    96d0:	c4 e2 69 00 c9       	vpshufb %xmm1,%xmm2,%xmm1
    96d5:	c4 e1 f9 7e c9       	vmovq  %xmm1,%rcx
    96da:	c5 fb f0 0d ae 6a 02 	vlddqu 0x26aae(%rip),%xmm1        # 30190 <extension_2op_table>
    96e1:	00 
    96e2:	41 89 ca             	mov    %ecx,%r10d
    96e5:	41 89 c8             	mov    %ecx,%r8d
    96e8:	83 e1 07             	and    $0x7,%ecx
    96eb:	41 c0 ea 06          	shr    $0x6,%r10b
    96ef:	41 89 ce             	mov    %ecx,%r14d
    96f2:	41 c0 e8 03          	shr    $0x3,%r8b
    96f6:	41 0f b6 ca          	movzbl %r10b,%ecx
    96fa:	45 89 c5             	mov    %r8d,%r13d
    96fd:	44 88 54 24 6c       	mov    %r10b,0x6c(%rsp)
    9702:	89 8c 24 b0 00 00 00 	mov    %ecx,0xb0(%rsp)
    9709:	c1 e1 06             	shl    $0x6,%ecx
    970c:	41 83 e5 07          	and    $0x7,%r13d
    9710:	44 09 f1             	or     %r14d,%ecx
    9713:	44 88 b4 24 80 00 00 	mov    %r14b,0x80(%rsp)
    971a:	00 
    971b:	41 89 d6             	mov    %edx,%r14d
    971e:	88 8c 24 c0 00 00 00 	mov    %cl,0xc0(%rsp)
    9725:	31 c9                	xor    %ecx,%ecx
    9727:	41 80 fa 03          	cmp    $0x3,%r10b
    972b:	41 89 fa             	mov    %edi,%r10d
    972e:	0f 95 c1             	setne  %cl
    9731:	41 83 e2 30          	and    $0x30,%r10d
    9735:	41 83 e0 07          	and    $0x7,%r8d
    9739:	40 c0 ef 06          	shr    $0x6,%dil
    973d:	48 83 f9 00          	cmp    $0x0,%rcx
    9741:	45 0f 45 f7          	cmovne %r15d,%r14d
    9745:	45 01 c0             	add    %r8d,%r8d
    9748:	44 89 d1             	mov    %r10d,%ecx
    974b:	45 31 d2             	xor    %r10d,%r10d
    974e:	40 80 ff 03          	cmp    $0x3,%dil
    9752:	41 0f 94 c2          	sete   %r10b
    9756:	44 01 c1             	add    %r8d,%ecx
    9759:	40 0f b6 ff          	movzbl %dil,%edi
    975d:	4c 89 54 24 58       	mov    %r10,0x58(%rsp)
    9762:	49 ba aa 6a aa aa a5 	movabs $0x155a55a5aaaa6aaa,%r10
    9769:	55 5a 15 
    976c:	49 d3 ea             	shr    %cl,%r10
    976f:	41 8d 4d fe          	lea    -0x2(%r13),%ecx
    9773:	41 83 e2 03          	and    $0x3,%r10d
    9777:	48 83 7c 24 58 00    	cmpq   $0x0,0x58(%rsp)
    977d:	41 0f 45 c2          	cmovne %r10d,%eax
    9781:	80 f9 01             	cmp    $0x1,%cl
    9784:	0f 96 c1             	setbe  %cl
    9787:	41 80 fd 06          	cmp    $0x6,%r13b
    978b:	41 0f 94 c2          	sete   %r10b
    978f:	44 09 d1             	or     %r10d,%ecx
    9792:	41 89 d2             	mov    %edx,%r10d
    9795:	0f b6 c9             	movzbl %cl,%ecx
    9798:	48 83 f9 00          	cmp    $0x0,%rcx
    979c:	45 0f 45 d7          	cmovne %r15d,%r10d
    97a0:	0f b6 8c 24 a0 00 00 	movzbl 0xa0(%rsp),%ecx
    97a7:	00 
    97a8:	44 01 d7             	add    %r10d,%edi
    97ab:	45 89 e2             	mov    %r12d,%r10d
    97ae:	c1 e1 04             	shl    $0x4,%ecx
    97b1:	09 cf                	or     %ecx,%edi
    97b3:	31 c9                	xor    %ecx,%ecx
    97b5:	81 ff f4 0f 00 00    	cmp    $0xff4,%edi
    97bb:	89 d7                	mov    %edx,%edi
    97bd:	0f 94 c1             	sete   %cl
    97c0:	41 c1 e2 04          	shl    $0x4,%r10d
    97c4:	45 31 ed             	xor    %r13d,%r13d
    97c7:	48 83 f9 00          	cmp    $0x0,%rcx
    97cb:	41 0f 45 ff          	cmovne %r15d,%edi
    97cf:	89 7c 24 3c          	mov    %edi,0x3c(%rsp)
    97d3:	89 f7                	mov    %esi,%edi
    97d5:	0f b6 4c 24 70       	movzbl 0x70(%rsp),%ecx
    97da:	40 c0 ef 06          	shr    $0x6,%dil
    97de:	40 0f b6 ff          	movzbl %dil,%edi
    97e2:	41 09 fa             	or     %edi,%r10d
    97e5:	41 83 fa 11          	cmp    $0x11,%r10d
    97e9:	41 0f 94 c5          	sete   %r13b
    97ed:	01 c9                	add    %ecx,%ecx
    97ef:	40 c0 ee 03          	shr    $0x3,%sil
    97f3:	8d 0c d9             	lea    (%rcx,%rbx,8),%ecx
    97f6:	bb 1a 05 0a 00       	mov    $0xa051a,%ebx
    97fb:	83 e6 07             	and    $0x7,%esi
    97fe:	d3 eb                	shr    %cl,%ebx
    9800:	83 e3 03             	and    $0x3,%ebx
    9803:	49 83 fd 00          	cmp    $0x0,%r13
    9807:	0f 45 c3             	cmovne %ebx,%eax
    980a:	8d 1c 36             	lea    (%rsi,%rsi,1),%ebx
    980d:	8d 4b 01             	lea    0x1(%rbx),%ecx
    9810:	c1 e1 08             	shl    $0x8,%ecx
    9813:	09 d9                	or     %ebx,%ecx
    9815:	41 83 fa 13          	cmp    $0x13,%r10d
    9819:	c5 f9 6e f1          	vmovd  %ecx,%xmm6
    981d:	44 89 c1             	mov    %r8d,%ecx
    9820:	41 0f 94 c2          	sete   %r10b
    9824:	45 89 e0             	mov    %r12d,%r8d
    9827:	41 c1 e0 0c          	shl    $0xc,%r8d
    982b:	c5 f9 70 c6 00       	vpshufd $0x0,%xmm6,%xmm0
    9830:	45 0f b6 d2          	movzbl %r10b,%r10d
    9834:	c1 e7 08             	shl    $0x8,%edi
    9837:	c4 e2 71 00 c0       	vpshufb %xmm0,%xmm1,%xmm0
    983c:	44 8b a4 24 e0 00 00 	mov    0xe0(%rsp),%r12d
    9843:	00 
    9844:	c4 e1 f9 7e c3       	vmovq  %xmm0,%rbx
    9849:	d3 eb                	shr    %cl,%ebx
    984b:	44 89 c1             	mov    %r8d,%ecx
    984e:	83 e3 03             	and    $0x3,%ebx
    9851:	49 83 fa 00          	cmp    $0x0,%r10
    9855:	0f 45 c3             	cmovne %ebx,%eax
    9858:	8b 9c 24 b0 00 00 00 	mov    0xb0(%rsp),%ebx
    985f:	c1 e3 04             	shl    $0x4,%ebx
    9862:	09 d9                	or     %ebx,%ecx
    9864:	89 5c 24 70          	mov    %ebx,0x70(%rsp)
    9868:	09 ce                	or     %ecx,%esi
    986a:	31 c9                	xor    %ecx,%ecx
    986c:	09 fe                	or     %edi,%esi
    986e:	48 bf 00 00 00 00 80 	movabs $0x8080808000000000,%rdi
    9875:	80 80 80 
    9878:	81 fe 32 13 00 00    	cmp    $0x1332,%esi
    987e:	0f 97 c1             	seta   %cl
    9881:	48 83 f9 00          	cmp    $0x0,%rcx
    9885:	0f 45 c2             	cmovne %edx,%eax
    9888:	31 c9                	xor    %ecx,%ecx
    988a:	80 7c 24 6c 03       	cmpb   $0x3,0x6c(%rsp)
    988f:	41 89 c0             	mov    %eax,%r8d
    9892:	0f 94 c1             	sete   %cl
    9895:	48 83 f9 00          	cmp    $0x0,%rcx
    9899:	44 0f 45 c2          	cmovne %edx,%r8d
    989d:	44 89 44 24 38       	mov    %r8d,0x38(%rsp)
    98a2:	45 89 e0             	mov    %r12d,%r8d
    98a5:	41 8d 40 02          	lea    0x2(%r8),%eax
    98a9:	0f b6 c0             	movzbl %al,%eax
    98ac:	48 8d 48 03          	lea    0x3(%rax),%rcx
    98b0:	48 8d 70 01          	lea    0x1(%rax),%rsi
    98b4:	49 89 c0             	mov    %rax,%r8
    98b7:	48 c1 e6 08          	shl    $0x8,%rsi
    98bb:	48 c1 e1 18          	shl    $0x18,%rcx
    98bf:	4d 09 d8             	or     %r11,%r8
    98c2:	48 09 f1             	or     %rsi,%rcx
    98c5:	c4 c1 f9 6e c0       	vmovq  %r8,%xmm0
    98ca:	48 89 ce             	mov    %rcx,%rsi
    98cd:	48 8d 48 02          	lea    0x2(%rax),%rcx
    98d1:	c4 c3 f9 22 c1 01    	vpinsrq $0x1,%r9,%xmm0,%xmm0
    98d7:	48 09 c6             	or     %rax,%rsi
    98da:	48 c1 e1 10          	shl    $0x10,%rcx
    98de:	c4 e2 69 00 c0       	vpshufb %xmm0,%xmm2,%xmm0
    98e3:	48 09 f1             	or     %rsi,%rcx
    98e6:	44 89 e6             	mov    %r12d,%esi
    98e9:	c4 c1 f9 7e c0       	vmovq  %xmm0,%r8
    98ee:	83 c6 03             	add    $0x3,%esi
    98f1:	48 09 f9             	or     %rdi,%rcx
    98f4:	40 0f b6 f6          	movzbl %sil,%esi
    98f8:	c4 e1 f9 6e f9       	vmovq  %rcx,%xmm7
    98fd:	48 8d 46 01          	lea    0x1(%rsi),%rax
    9901:	48 8d 4e 03          	lea    0x3(%rsi),%rcx
    9905:	c4 c3 c1 22 c1 01    	vpinsrq $0x1,%r9,%xmm7,%xmm0
    990b:	49 09 f3             	or     %rsi,%r11
    990e:	48 c1 e1 18          	shl    $0x18,%rcx
    9912:	48 c1 e0 08          	shl    $0x8,%rax
    9916:	c4 e2 69 00 c0       	vpshufb %xmm0,%xmm2,%xmm0
    991b:	c4 c1 f9 6e f3       	vmovq  %r11,%xmm6
    9920:	48 09 c8             	or     %rcx,%rax
    9923:	48 8d 4e 02          	lea    0x2(%rsi),%rcx
    9927:	c4 c1 f9 7e c2       	vmovq  %xmm0,%r10
    992c:	41 bb 04 00 00 00    	mov    $0x4,%r11d
    9932:	48 09 f0             	or     %rsi,%rax
    9935:	48 c1 e1 10          	shl    $0x10,%rcx
    9939:	31 f6                	xor    %esi,%esi
    993b:	48 09 c8             	or     %rcx,%rax
    993e:	89 d1                	mov    %edx,%ecx
    9940:	48 09 f8             	or     %rdi,%rax
    9943:	80 bc 24 c0 00 00 00 	cmpb   $0x5,0xc0(%rsp)
    994a:	05 
    994b:	89 d7                	mov    %edx,%edi
    994d:	4c 89 94 24 a0 00 00 	mov    %r10,0xa0(%rsp)
    9954:	00 
    9955:	c4 e1 f9 6e e0       	vmovq  %rax,%xmm4
    995a:	40 0f 94 c6          	sete   %sil
    995e:	31 db                	xor    %ebx,%ebx
    9960:	44 8b 54 24 68       	mov    0x68(%rsp),%r10d
    9965:	44 0f b6 ac 24 80 00 	movzbl 0x80(%rsp),%r13d
    996c:	00 00 
    996e:	c4 c3 d9 22 c1 01    	vpinsrq $0x1,%r9,%xmm4,%xmm0
    9974:	c4 e2 69 00 c0       	vpshufb %xmm0,%xmm2,%xmm0
    9979:	c4 e1 f9 7e c0       	vmovq  %xmm0,%rax
    997e:	c4 c3 c9 22 c1 01    	vpinsrq $0x1,%r9,%xmm6,%xmm0
    9984:	45 89 f1             	mov    %r14d,%r9d
    9987:	44 89 6c 24 6c       	mov    %r13d,0x6c(%rsp)
    998c:	41 c1 e1 08          	shl    $0x8,%r9d
    9990:	c4 e2 69 00 c0       	vpshufb %xmm0,%xmm2,%xmm0
    9995:	48 83 fe 00          	cmp    $0x0,%rsi
    9999:	0f 45 8c 24 a0 00 00 	cmovne 0xa0(%rsp),%ecx
    99a0:	00 
    99a1:	48 83 fe 00          	cmp    $0x0,%rsi
    99a5:	41 0f 45 fb          	cmovne %r11d,%edi
    99a9:	44 89 ee             	mov    %r13d,%esi
    99ac:	41 bb ff 00 00 00    	mov    $0xff,%r11d
    99b2:	45 89 cc             	mov    %r9d,%r12d
    99b5:	44 09 ce             	or     %r9d,%esi
    99b8:	45 89 d9             	mov    %r11d,%r9d
    99bb:	81 fe 04 01 00 00    	cmp    $0x104,%esi
    99c1:	44 89 c6             	mov    %r8d,%esi
    99c4:	0f 94 c3             	sete   %bl
    99c7:	40 c0 ee 06          	shr    $0x6,%sil
    99cb:	45 31 ed             	xor    %r13d,%r13d
    99ce:	40 0f b6 f6          	movzbl %sil,%esi
    99d2:	41 c1 e6 10          	shl    $0x10,%r14d
    99d6:	48 83 fb 00          	cmp    $0x0,%rbx
    99da:	44 0f 45 ce          	cmovne %esi,%r9d
    99de:	89 d6                	mov    %edx,%esi
    99e0:	44 89 4c 24 34       	mov    %r9d,0x34(%rsp)
    99e5:	45 89 d9             	mov    %r11d,%r9d
    99e8:	48 83 fb 00          	cmp    $0x0,%rbx
    99ec:	41 0f 45 f7          	cmovne %r15d,%esi
    99f0:	8d 7c 37 01          	lea    0x1(%rdi,%rsi,1),%edi
    99f4:	44 89 c6             	mov    %r8d,%esi
    99f7:	40 c0 ee 03          	shr    $0x3,%sil
    99fb:	89 7c 24 58          	mov    %edi,0x58(%rsp)
    99ff:	89 f7                	mov    %esi,%edi
    9a01:	42 8d 34 95 00 00 00 	lea    0x0(,%r10,4),%esi
    9a08:	00 
    9a09:	83 e7 07             	and    $0x7,%edi
    9a0c:	83 e6 08             	and    $0x8,%esi
    9a0f:	09 fe                	or     %edi,%esi
    9a11:	48 83 fb 00          	cmp    $0x0,%rbx
    9a15:	44 0f 45 ce          	cmovne %esi,%r9d
    9a19:	42 8d 34 d5 00 00 00 	lea    0x0(,%r10,8),%esi
    9a20:	00 
    9a21:	45 89 c2             	mov    %r8d,%r10d
    9a24:	44 89 4c 24 30       	mov    %r9d,0x30(%rsp)
    9a29:	44 0f b6 8c 24 c0 00 	movzbl 0xc0(%rsp),%r9d
    9a30:	00 00 
    9a32:	41 83 e2 07          	and    $0x7,%r10d
    9a36:	83 e6 08             	and    $0x8,%esi
    9a39:	45 0f b6 c0          	movzbl %r8b,%r8d
    9a3d:	44 89 d7             	mov    %r10d,%edi
    9a40:	41 89 d2             	mov    %edx,%r10d
    9a43:	89 74 24 68          	mov    %esi,0x68(%rsp)
    9a47:	09 f7                	or     %esi,%edi
    9a49:	be 04 00 00 00       	mov    $0x4,%esi
    9a4e:	48 83 fb 00          	cmp    $0x0,%rbx
    9a52:	44 0f 45 d7          	cmovne %edi,%r10d
    9a56:	44 89 d7             	mov    %r10d,%edi
    9a59:	c1 e7 08             	shl    $0x8,%edi
    9a5c:	81 e7 00 07 00 00    	and    $0x700,%edi
    9a62:	44 09 f7             	or     %r14d,%edi
    9a65:	44 09 cf             	or     %r9d,%edi
    9a68:	81 ff 04 05 01 00    	cmp    $0x10504,%edi
    9a6e:	89 d7                	mov    %edx,%edi
    9a70:	41 0f 94 c5          	sete   %r13b
    9a74:	45 09 cc             	or     %r9d,%r12d
    9a77:	c4 c1 f9 7e c1       	vmovq  %xmm0,%r9
    9a7c:	49 83 fd 00          	cmp    $0x0,%r13
    9a80:	0f 45 c8             	cmovne %eax,%ecx
    9a83:	49 83 fd 00          	cmp    $0x0,%r13
    9a87:	0f 45 fe             	cmovne %esi,%edi
    9a8a:	45 31 ed             	xor    %r13d,%r13d
    9a8d:	03 7c 24 58          	add    0x58(%rsp),%edi
    9a91:	41 81 fc 44 01 00 00 	cmp    $0x144,%r12d
    9a98:	45 0f b6 c9          	movzbl %r9b,%r9d
    9a9c:	41 0f 94 c5          	sete   %r13b
    9aa0:	89 fe                	mov    %edi,%esi
    9aa2:	89 d7                	mov    %edx,%edi
    9aa4:	49 83 fd 00          	cmp    $0x0,%r13
    9aa8:	41 0f 45 f9          	cmovne %r9d,%edi
    9aac:	41 89 d1             	mov    %edx,%r9d
    9aaf:	49 83 fd 00          	cmp    $0x0,%r13
    9ab3:	45 0f 45 cf          	cmovne %r15d,%r9d
    9ab7:	41 81 fc 84 01 00 00 	cmp    $0x184,%r12d
    9abe:	46 8d 2c 0e          	lea    (%rsi,%r9,1),%r13d
    9ac2:	be 04 00 00 00       	mov    $0x4,%esi
    9ac7:	41 89 d1             	mov    %edx,%r9d
    9aca:	41 0f 94 c4          	sete   %r12b
    9ace:	45 0f b6 e4          	movzbl %r12b,%r12d
    9ad2:	49 83 fc 00          	cmp    $0x0,%r12
    9ad6:	44 0f 45 ce          	cmovne %esi,%r9d
    9ada:	49 83 fc 00          	cmp    $0x0,%r12
    9ade:	0f 45 c8             	cmovne %eax,%ecx
    9ae1:	45 01 cd             	add    %r9d,%r13d
    9ae4:	45 31 c9             	xor    %r9d,%r9d
    9ae7:	80 bc 24 80 00 00 00 	cmpb   $0x4,0x80(%rsp)
    9aee:	04 
    9aef:	89 d0                	mov    %edx,%eax
    9af1:	41 0f 95 c1          	setne  %r9b
    9af5:	49 83 f9 00          	cmp    $0x0,%r9
    9af9:	41 0f 45 c7          	cmovne %r15d,%eax
    9afd:	c1 e0 08             	shl    $0x8,%eax
    9b00:	41 89 d1             	mov    %edx,%r9d
    9b03:	41 09 c6             	or     %eax,%r14d
    9b06:	44 0b b4 24 b0 00 00 	or     0xb0(%rsp),%r14d
    9b0d:	00 
    9b0e:	31 c0                	xor    %eax,%eax
    9b10:	41 81 fe 01 01 01 00 	cmp    $0x10101,%r14d
    9b17:	0f 94 c0             	sete   %al
    9b1a:	48 83 f8 00          	cmp    $0x0,%rax
    9b1e:	41 0f 45 f8          	cmovne %r8d,%edi
    9b22:	48 83 f8 00          	cmp    $0x0,%rax
    9b26:	45 0f 45 cf          	cmovne %r15d,%r9d
    9b2a:	31 c0                	xor    %eax,%eax
    9b2c:	45 01 cd             	add    %r9d,%r13d
    9b2f:	41 81 fe 02 01 01 00 	cmp    $0x10102,%r14d
    9b36:	41 89 f0             	mov    %esi,%r8d
    9b39:	0f 94 c0             	sete   %al
    9b3c:	41 89 d1             	mov    %edx,%r9d
    9b3f:	48 83 f8 00          	cmp    $0x0,%rax
    9b43:	44 0f 45 ce          	cmovne %esi,%r9d
    9b47:	8b 74 24 68          	mov    0x68(%rsp),%esi
    9b4b:	45 01 e9             	add    %r13d,%r9d
    9b4e:	44 8b 6c 24 6c       	mov    0x6c(%rsp),%r13d
    9b53:	48 83 f8 00          	cmp    $0x0,%rax
    9b57:	0f 45 8c 24 a0 00 00 	cmovne 0xa0(%rsp),%ecx
    9b5e:	00 
    9b5f:	44 09 ee             	or     %r13d,%esi
    9b62:	31 c0                	xor    %eax,%eax
    9b64:	89 c9                	mov    %ecx,%ecx
    9b66:	48 83 fb 00          	cmp    $0x0,%rbx
    9b6a:	41 0f 45 f0          	cmovne %r8d,%esi
    9b6e:	4c 0f be c7          	movsbq %dil,%r8
    9b72:	8b 5c 24 70          	mov    0x70(%rsp),%ebx
    9b76:	48 8b bc 24 a8 00 00 	mov    0xa8(%rsp),%rdi
    9b7d:	00 
    9b7e:	4d 85 c0             	test   %r8,%r8
    9b81:	0f 94 c0             	sete   %al
    9b84:	48 83 f8 00          	cmp    $0x0,%rax
    9b88:	4c 0f 45 c1          	cmovne %rcx,%r8
    9b8c:	31 c9                	xor    %ecx,%ecx
    9b8e:	80 bc 24 c0 00 00 00 	cmpb   $0x4,0xc0(%rsp)
    9b95:	04 
    9b96:	40 0f b6 c6          	movzbl %sil,%eax
    9b9a:	0f 94 c1             	sete   %cl
    9b9d:	48 83 f9 00          	cmp    $0x0,%rcx
    9ba1:	41 0f 45 c3          	cmovne %r11d,%eax
    9ba5:	44 89 d1             	mov    %r10d,%ecx
    9ba8:	83 e1 07             	and    $0x7,%ecx
    9bab:	09 d9                	or     %ebx,%ecx
    9bad:	83 f9 05             	cmp    $0x5,%ecx
    9bb0:	0f 94 c1             	sete   %cl
    9bb3:	0f b6 c9             	movzbl %cl,%ecx
    9bb6:	48 83 f9 00          	cmp    $0x0,%rcx
    9bba:	45 0f 45 d3          	cmovne %r11d,%r10d
    9bbe:	31 c9                	xor    %ecx,%ecx
    9bc0:	40 80 fe 04          	cmp    $0x4,%sil
    9bc4:	0f 94 c1             	sete   %cl
    9bc7:	31 f6                	xor    %esi,%esi
    9bc9:	48 83 f9 00          	cmp    $0x0,%rcx
    9bcd:	41 0f 45 c2          	cmovne %r10d,%eax
    9bd1:	44 89 e9             	mov    %r13d,%ecx
    9bd4:	09 d9                	or     %ebx,%ecx
    9bd6:	83 f9 05             	cmp    $0x5,%ecx
    9bd9:	89 c1                	mov    %eax,%ecx
    9bdb:	b8 10 00 00 00       	mov    $0x10,%eax
    9be0:	40 0f 94 c6          	sete   %sil
    9be4:	48 83 fe 00          	cmp    $0x0,%rsi
    9be8:	0f 45 c8             	cmovne %eax,%ecx
    9beb:	89 ce                	mov    %ecx,%esi
    9bed:	c5 f8 77             	vzeroupper 
    9bf0:	e8 4b f1 ff ff       	call   8d40 <register_value_select>
    9bf5:	31 db                	xor    %ebx,%ebx
    9bf7:	4c 8b 74 24 78       	mov    0x78(%rsp),%r14
    9bfc:	89 c9                	mov    %ecx,%ecx
    9bfe:	49 89 c2             	mov    %rax,%r10
    9c01:	31 c0                	xor    %eax,%eax
    9c03:	45 89 fd             	mov    %r15d,%r13d
    9c06:	48 83 f9 10          	cmp    $0x10,%rcx
    9c0a:	4d 0f 44 d6          	cmove  %r14,%r10
    9c0e:	48 81 f9 ff 00 00 00 	cmp    $0xff,%rcx
    9c15:	4c 0f 44 d3          	cmove  %rbx,%r10
    9c19:	8b 4c 24 44          	mov    0x44(%rsp),%ecx
    9c1d:	44 89 d6             	mov    %r10d,%esi
    9c20:	48 83 f9 01          	cmp    $0x1,%rcx
    9c24:	4c 0f 44 d6          	cmove  %rsi,%r10
    9c28:	8b 74 24 30          	mov    0x30(%rsp),%esi
    9c2c:	83 fe 04             	cmp    $0x4,%esi
    9c2f:	41 89 f4             	mov    %esi,%r12d
    9c32:	0f 94 c0             	sete   %al
    9c35:	48 83 f8 00          	cmp    $0x0,%rax
    9c39:	45 0f 45 e3          	cmovne %r11d,%r12d
    9c3d:	44 89 e6             	mov    %r12d,%esi
    9c40:	45 89 e4             	mov    %r12d,%r12d
    9c43:	e8 f8 f0 ff ff       	call   8d40 <register_value_select>
    9c48:	49 83 fc 10          	cmp    $0x10,%r12
    9c4c:	49 0f 44 c6          	cmove  %r14,%rax
    9c50:	44 8b 74 24 38       	mov    0x38(%rsp),%r14d
    9c55:	49 81 fc ff 00 00 00 	cmp    $0xff,%r12
    9c5c:	48 0f 44 c3          	cmove  %rbx,%rax
    9c60:	89 c6                	mov    %eax,%esi
    9c62:	48 83 f9 01          	cmp    $0x1,%rcx
    9c66:	48 0f 44 c6          	cmove  %rsi,%rax
    9c6a:	31 c9                	xor    %ecx,%ecx
    9c6c:	45 85 f6             	test   %r14d,%r14d
    9c6f:	8b 74 24 74          	mov    0x74(%rsp),%esi
    9c73:	0f 94 c1             	sete   %cl
    9c76:	48 83 f9 00          	cmp    $0x0,%rcx
    9c7a:	44 0f 45 ea          	cmovne %edx,%r13d
    9c7e:	0f b6 4c 24 34       	movzbl 0x34(%rsp),%ecx
    9c83:	44 89 fa             	mov    %r15d,%edx
    9c86:	83 e6 0f             	and    $0xf,%esi
    9c89:	45 01 e9             	add    %r13d,%r9d
    9c8c:	83 c6 06             	add    $0x6,%esi
    9c8f:	41 bd 02 00 00 00    	mov    $0x2,%r13d
    9c95:	d3 e2                	shl    %cl,%edx
    9c97:	48 63 d2             	movslq %edx,%rdx
    9c9a:	48 0f af c2          	imul   %rdx,%rax
    9c9e:	49 01 c2             	add    %rax,%r10
    9ca1:	4d 01 d0             	add    %r10,%r8
    9ca4:	e8 97 f0 ff ff       	call   8d40 <register_value_select>
    9ca9:	8b 54 24 4c          	mov    0x4c(%rsp),%edx
    9cad:	44 8b 54 24 3c       	mov    0x3c(%rsp),%r10d
    9cb2:	be 04 00 00 00       	mov    $0x4,%esi
    9cb7:	48 83 fa 01          	cmp    $0x1,%rdx
    9cbb:	4c 0f 44 c0          	cmove  %rax,%r8
    9cbf:	8b 44 24 64          	mov    0x64(%rsp),%eax
    9cc3:	49 89 d3             	mov    %rdx,%r11
    9cc6:	8d 48 01             	lea    0x1(%rax),%ecx
    9cc9:	44 89 f0             	mov    %r14d,%eax
    9ccc:	44 8b 74 24 48       	mov    0x48(%rsp),%r14d
    9cd1:	48 83 fa 00          	cmp    $0x0,%rdx
    9cd5:	0f 45 c1             	cmovne %ecx,%eax
    9cd8:	44 89 d1             	mov    %r10d,%ecx
    9cdb:	89 c2                	mov    %eax,%edx
    9cdd:	44 09 f1             	or     %r14d,%ecx
    9ce0:	48 83 f9 00          	cmp    $0x0,%rcx
    9ce4:	41 0f 45 d5          	cmovne %r13d,%edx
    9ce8:	e8 53 f0 ff ff       	call   8d40 <register_value_select>
    9ced:	48 83 f9 01          	cmp    $0x1,%rcx
    9cf1:	4c 0f 44 c0          	cmove  %rax,%r8
    9cf5:	8b 44 24 40          	mov    0x40(%rsp),%eax
    9cf9:	31 c9                	xor    %ecx,%ecx
    9cfb:	01 d0                	add    %edx,%eax
    9cfd:	83 f8 02             	cmp    $0x2,%eax
    9d00:	89 d0                	mov    %edx,%eax
    9d02:	44 89 f2             	mov    %r14d,%edx
    9d05:	0f 97 c1             	seta   %cl
    9d08:	44 09 da             	or     %r11d,%edx
    9d0b:	48 83 fa 00          	cmp    $0x0,%rdx
    9d0f:	45 0f 45 cf          	cmovne %r15d,%r9d
    9d13:	44 89 d2             	mov    %r10d,%edx
    9d16:	48 83 fa 00          	cmp    $0x0,%rdx
    9d1a:	45 0f 45 cd          	cmovne %r13d,%r9d
    9d1e:	44 03 4c 24 60       	add    0x60(%rsp),%r9d
    9d23:	44 03 8c 24 e0 00 00 	add    0xe0(%rsp),%r9d
    9d2a:	00 
    9d2b:	31 d2                	xor    %edx,%edx
    9d2d:	48 83 f9 00          	cmp    $0x0,%rcx
    9d31:	41 0f 45 c7          	cmovne %r15d,%eax
    9d35:	41 83 f9 10          	cmp    $0x10,%r9d
    9d39:	0f 96 c2             	setbe  %dl
    9d3c:	48 21 c2             	and    %rax,%rdx
    9d3f:	48 83 fa 00          	cmp    $0x0,%rdx
    9d43:	0f 45 c0             	cmovne %eax,%eax
    9d46:	48 8b 54 24 50       	mov    0x50(%rsp),%rdx
    9d4b:	4c 89 02             	mov    %r8,(%rdx)
    9d4e:	f6 05 9e 5f 02 00 08 	testb  $0x8,0x25f9e(%rip)        # 2fcf3 <g_cpu_feature_indicator+0x3>
    9d55:	0f 84 15 01 00 00    	je     9e70 <ct_decode+0x1090>
    9d5b:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    9d60:	62 f1 7c 48 28 02    	vmovaps (%rdx),%zmm0
    9d66:	62 f1 7c 48 28 4a 01 	vmovaps 0x40(%rdx),%zmm1
    9d6d:	62 f1 7c 48 28 52 02 	vmovaps 0x80(%rdx),%zmm2
    9d74:	62 f1 7c 48 28 5a 03 	vmovaps 0xc0(%rdx),%zmm3
    9d7b:	62 f1 7c 48 28 62 04 	vmovaps 0x100(%rdx),%zmm4
    9d82:	62 f1 7c 48 28 6a 05 	vmovaps 0x140(%rdx),%zmm5
    9d89:	62 f1 7c 48 28 72 06 	vmovaps 0x180(%rdx),%zmm6
    9d90:	62 f1 7c 48 28 7a 07 	vmovaps 0x1c0(%rdx),%zmm7
    9d97:	62 71 7c 48 28 42 08 	vmovaps 0x200(%rdx),%zmm8
    9d9e:	62 71 7c 48 28 4a 09 	vmovaps 0x240(%rdx),%zmm9
    9da5:	62 71 7c 48 28 52 0a 	vmovaps 0x280(%rdx),%zmm10
    9dac:	62 71 7c 48 28 5a 0b 	vmovaps 0x2c0(%rdx),%zmm11
    9db3:	62 71 7c 48 28 62 0c 	vmovaps 0x300(%rdx),%zmm12
    9dba:	62 71 7c 48 28 6a 0d 	vmovaps 0x340(%rdx),%zmm13
    9dc1:	62 71 7c 48 28 72 0e 	vmovaps 0x380(%rdx),%zmm14
    9dc8:	62 71 7c 48 28 7a 0f 	vmovaps 0x3c0(%rdx),%zmm15
    9dcf:	48 8b 94 24 38 05 00 	mov    0x538(%rsp),%rdx
    9dd6:	00 
    9dd7:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
    9dde:	00 00 
    9de0:	0f 85 07 01 00 00    	jne    9eed <ct_decode+0x110d>
    9de6:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    9dea:	5b                   	pop    %rbx
    9deb:	41 5c                	pop    %r12
    9ded:	41 5d                	pop    %r13
    9def:	41 5e                	pop    %r14
    9df1:	41 5f                	pop    %r15
    9df3:	5d                   	pop    %rbp
    9df4:	c3                   	ret    
    9df5:	0f 1f 00             	nopl   (%rax)
    9df8:	c5 fc 29 00          	vmovaps %ymm0,(%rax)
    9dfc:	c5 fc 29 48 20       	vmovaps %ymm1,0x20(%rax)
    9e01:	c5 fc 29 50 40       	vmovaps %ymm2,0x40(%rax)
    9e06:	c5 fc 29 58 60       	vmovaps %ymm3,0x60(%rax)
    9e0b:	c5 fc 29 a0 80 00 00 	vmovaps %ymm4,0x80(%rax)
    9e12:	00 
    9e13:	c5 fc 29 a8 a0 00 00 	vmovaps %ymm5,0xa0(%rax)
    9e1a:	00 
    9e1b:	c5 fc 29 b0 c0 00 00 	vmovaps %ymm6,0xc0(%rax)
    9e22:	00 
    9e23:	c5 fc 29 b8 e0 00 00 	vmovaps %ymm7,0xe0(%rax)
    9e2a:	00 
    9e2b:	c5 7c 29 80 00 01 00 	vmovaps %ymm8,0x100(%rax)
    9e32:	00 
    9e33:	c5 7c 29 88 20 01 00 	vmovaps %ymm9,0x120(%rax)
    9e3a:	00 
    9e3b:	c5 7c 29 90 40 01 00 	vmovaps %ymm10,0x140(%rax)
    9e42:	00 
    9e43:	c5 7c 29 98 60 01 00 	vmovaps %ymm11,0x160(%rax)
    9e4a:	00 
    9e4b:	c5 7c 29 a0 80 01 00 	vmovaps %ymm12,0x180(%rax)
    9e52:	00 
    9e53:	c5 7c 29 a8 a0 01 00 	vmovaps %ymm13,0x1a0(%rax)
    9e5a:	00 
    9e5b:	c5 7c 29 b0 c0 01 00 	vmovaps %ymm14,0x1c0(%rax)
    9e62:	00 
    9e63:	c5 7c 29 b8 e0 01 00 	vmovaps %ymm15,0x1e0(%rax)
    9e6a:	00 
    9e6b:	e9 35 f0 ff ff       	jmp    8ea5 <ct_decode+0xc5>
    9e70:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
    9e75:	c5 fc 28 03          	vmovaps (%rbx),%ymm0
    9e79:	c5 fc 28 4b 20       	vmovaps 0x20(%rbx),%ymm1
    9e7e:	c5 fc 28 53 40       	vmovaps 0x40(%rbx),%ymm2
    9e83:	c5 fc 28 5b 60       	vmovaps 0x60(%rbx),%ymm3
    9e88:	c5 fc 28 a3 80 00 00 	vmovaps 0x80(%rbx),%ymm4
    9e8f:	00 
    9e90:	c5 fc 28 ab a0 00 00 	vmovaps 0xa0(%rbx),%ymm5
    9e97:	00 
    9e98:	c5 fc 28 b3 c0 00 00 	vmovaps 0xc0(%rbx),%ymm6
    9e9f:	00 
    9ea0:	c5 fc 28 bb e0 00 00 	vmovaps 0xe0(%rbx),%ymm7
    9ea7:	00 
    9ea8:	c5 7c 28 83 00 01 00 	vmovaps 0x100(%rbx),%ymm8
    9eaf:	00 
    9eb0:	c5 7c 28 8b 20 01 00 	vmovaps 0x120(%rbx),%ymm9
    9eb7:	00 
    9eb8:	c5 7c 28 93 40 01 00 	vmovaps 0x140(%rbx),%ymm10
    9ebf:	00 
    9ec0:	c5 7c 28 9b 60 01 00 	vmovaps 0x160(%rbx),%ymm11
    9ec7:	00 
    9ec8:	c5 7c 28 a3 80 01 00 	vmovaps 0x180(%rbx),%ymm12
    9ecf:	00 
    9ed0:	c5 7c 28 ab a0 01 00 	vmovaps 0x1a0(%rbx),%ymm13
    9ed7:	00 
    9ed8:	c5 7c 28 b3 c0 01 00 	vmovaps 0x1c0(%rbx),%ymm14
    9edf:	00 
    9ee0:	c5 7c 28 bb e0 01 00 	vmovaps 0x1e0(%rbx),%ymm15
    9ee7:	00 
    9ee8:	e9 e2 fe ff ff       	jmp    9dcf <ct_decode+0xfef>
    9eed:	e8 4e 9c 00 00       	call   13b40 <__stack_chk_fail>
    9ef2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9ef9:	00 00 00 
    9efc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000009f00 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>:
    9f00:	48 39 f7             	cmp    %rsi,%rdi
    9f03:	0f 83 f7 01 00 00    	jae    a100 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x200>
    9f09:	41 56                	push   %r14
    9f0b:	41 55                	push   %r13
    9f0d:	41 54                	push   %r12
    9f0f:	49 89 d4             	mov    %rdx,%r12
    9f12:	55                   	push   %rbp
    9f13:	48 89 f5             	mov    %rsi,%rbp
    9f16:	53                   	push   %rbx
    9f17:	48 89 fb             	mov    %rdi,%rbx
    9f1a:	48 83 ec 10          	sub    $0x10,%rsp
    9f1e:	66 f7 03 00 10       	testw  $0x1000,(%rbx)
    9f23:	0f 85 d7 00 00 00    	jne    a000 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x100>
    9f29:	4c 8b 6b 08          	mov    0x8(%rbx),%r13
    9f2d:	e8 c6 b9 01 00       	call   258f8 <get_enclave_base>
    9f32:	8b 73 04             	mov    0x4(%rbx),%esi
    9f35:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    9f39:	4d 01 e5             	add    %r12,%r13
    9f3c:	4a 8d 3c 28          	lea    (%rax,%r13,1),%rdi
    9f40:	48 c1 e6 0c          	shl    $0xc,%rsi
    9f44:	48 85 c9             	test   %rcx,%rcx
    9f47:	0f 84 83 00 00 00    	je     9fd0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xd0>
    9f4d:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
    9f51:	a8 04                	test   $0x4,%al
    9f53:	75 7b                	jne    9fd0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xd0>
    9f55:	41 89 c5             	mov    %eax,%r13d
    9f58:	89 c2                	mov    %eax,%edx
    9f5a:	41 83 e5 08          	and    $0x8,%r13d
    9f5e:	66 83 e2 10          	and    $0x10,%dx
    9f62:	0f 85 30 01 00 00    	jne    a098 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x198>
    9f68:	a8 01                	test   $0x1,%al
    9f6a:	0f 85 e0 00 00 00    	jne    a050 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x150>
    9f70:	66 85 d2             	test   %dx,%dx
    9f73:	0f 85 1f 01 00 00    	jne    a098 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x198>
    9f79:	66 45 85 ed          	test   %r13w,%r13w
    9f7d:	74 31                	je     9fb0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xb0>
    9f7f:	0f b7 03             	movzwl (%rbx),%eax
    9f82:	8d 50 ef             	lea    -0x11(%rax),%edx
    9f85:	66 83 fa 01          	cmp    $0x1,%dx
    9f89:	76 0b                	jbe    9f96 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x96>
    9f8b:	ba e4 02 00 00       	mov    $0x2e4,%edx
    9f90:	66 83 f8 07          	cmp    $0x7,%ax
    9f94:	75 05                	jne    9f9b <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x9b>
    9f96:	ba d4 02 00 00       	mov    $0x2d4,%edx
    9f9b:	45 31 c9             	xor    %r9d,%r9d
    9f9e:	45 31 c0             	xor    %r8d,%r8d
    9fa1:	31 c9                	xor    %ecx,%ecx
    9fa3:	e8 f8 54 00 00       	call   f4a0 <mm_alloc>
    9fa8:	85 c0                	test   %eax,%eax
    9faa:	75 3a                	jne    9fe6 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xe6>
    9fac:	0f 1f 40 00          	nopl   0x0(%rax)
    9fb0:	48 83 c3 20          	add    $0x20,%rbx
    9fb4:	48 39 dd             	cmp    %rbx,%rbp
    9fb7:	0f 87 61 ff ff ff    	ja     9f1e <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x1e>
    9fbd:	48 83 c4 10          	add    $0x10,%rsp
    9fc1:	31 c0                	xor    %eax,%eax
    9fc3:	5b                   	pop    %rbx
    9fc4:	5d                   	pop    %rbp
    9fc5:	41 5c                	pop    %r12
    9fc7:	41 5d                	pop    %r13
    9fc9:	41 5e                	pop    %r14
    9fcb:	c3                   	ret    
    9fcc:	0f 1f 40 00          	nopl   0x0(%rax)
    9fd0:	45 31 c9             	xor    %r9d,%r9d
    9fd3:	45 31 c0             	xor    %r8d,%r8d
    9fd6:	31 c9                	xor    %ecx,%ecx
    9fd8:	ba 81 00 00 00       	mov    $0x81,%edx
    9fdd:	e8 ae 53 00 00       	call   f390 <mm_init_ema>
    9fe2:	85 c0                	test   %eax,%eax
    9fe4:	74 ca                	je     9fb0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xb0>
    9fe6:	b8 01 00 00 00       	mov    $0x1,%eax
    9feb:	48 83 c4 10          	add    $0x10,%rsp
    9fef:	5b                   	pop    %rbx
    9ff0:	5d                   	pop    %rbp
    9ff1:	41 5c                	pop    %r12
    9ff3:	41 5d                	pop    %r13
    9ff5:	41 5e                	pop    %r14
    9ff7:	c3                   	ret    
    9ff8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9fff:	00 
    a000:	8b 43 04             	mov    0x4(%rbx),%eax
    a003:	85 c0                	test   %eax,%eax
    a005:	74 a9                	je     9fb0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xb0>
    a007:	45 31 ed             	xor    %r13d,%r13d
    a00a:	45 31 f6             	xor    %r14d,%r14d
    a00d:	0f b7 7b 02          	movzwl 0x2(%rbx),%edi
    a011:	4c 03 73 08          	add    0x8(%rbx),%r14
    a015:	48 89 de             	mov    %rbx,%rsi
    a018:	4c 89 f2             	mov    %r14,%rdx
    a01b:	f7 df                	neg    %edi
    a01d:	48 63 ff             	movslq %edi,%rdi
    a020:	48 c1 e7 05          	shl    $0x5,%rdi
    a024:	48 01 df             	add    %rbx,%rdi
    a027:	e8 d4 fe ff ff       	call   9f00 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>
    a02c:	85 c0                	test   %eax,%eax
    a02e:	75 bb                	jne    9feb <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xeb>
    a030:	41 83 c5 01          	add    $0x1,%r13d
    a034:	44 39 6b 04          	cmp    %r13d,0x4(%rbx)
    a038:	77 d3                	ja     a00d <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x10d>
    a03a:	48 83 c3 20          	add    $0x20,%rbx
    a03e:	48 39 dd             	cmp    %rbx,%rbp
    a041:	0f 87 d7 fe ff ff    	ja     9f1e <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x1e>
    a047:	e9 71 ff ff ff       	jmp    9fbd <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xbd>
    a04c:	0f 1f 40 00          	nopl   0x0(%rax)
    a050:	0f b7 03             	movzwl (%rbx),%eax
    a053:	66 45 85 ed          	test   %r13w,%r13w
    a057:	0f 85 25 ff ff ff    	jne    9f82 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x82>
    a05d:	66 83 f8 04          	cmp    $0x4,%ax
    a061:	0f 84 89 00 00 00    	je     a0f0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x1f0>
    a067:	83 e1 07             	and    $0x7,%ecx
    a06a:	ba 80 02 00 00       	mov    $0x280,%edx
    a06f:	45 31 c9             	xor    %r9d,%r9d
    a072:	45 31 c0             	xor    %r8d,%r8d
    a075:	e8 16 53 00 00       	call   f390 <mm_init_ema>
    a07a:	85 c0                	test   %eax,%eax
    a07c:	0f 85 64 ff ff ff    	jne    9fe6 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xe6>
    a082:	48 83 c3 20          	add    $0x20,%rbx
    a086:	48 39 dd             	cmp    %rbx,%rbp
    a089:	0f 87 8f fe ff ff    	ja     9f1e <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x1e>
    a08f:	e9 29 ff ff ff       	jmp    9fbd <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xbd>
    a094:	0f 1f 40 00          	nopl   0x0(%rax)
    a098:	45 31 c9             	xor    %r9d,%r9d
    a09b:	45 31 c0             	xor    %r8d,%r8d
    a09e:	b9 03 00 00 00       	mov    $0x3,%ecx
    a0a3:	ba 80 00 00 00       	mov    $0x80,%edx
    a0a8:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    a0ad:	48 89 3c 24          	mov    %rdi,(%rsp)
    a0b1:	e8 da 52 00 00       	call   f390 <mm_init_ema>
    a0b6:	85 c0                	test   %eax,%eax
    a0b8:	0f 85 28 ff ff ff    	jne    9fe6 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xe6>
    a0be:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    a0c3:	48 8b 3c 24          	mov    (%rsp),%rdi
    a0c7:	e8 14 54 00 00       	call   f4e0 <mm_dealloc>
    a0cc:	85 c0                	test   %eax,%eax
    a0ce:	0f 85 12 ff ff ff    	jne    9fe6 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xe6>
    a0d4:	66 45 85 ed          	test   %r13w,%r13w
    a0d8:	0f 84 d2 fe ff ff    	je     9fb0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xb0>
    a0de:	0f b7 03             	movzwl (%rbx),%eax
    a0e1:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    a0e6:	48 8b 3c 24          	mov    (%rsp),%rdi
    a0ea:	e9 93 fe ff ff       	jmp    9f82 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x82>
    a0ef:	90                   	nop
    a0f0:	ba 80 01 00 00       	mov    $0x180,%edx
    a0f5:	31 c9                	xor    %ecx,%ecx
    a0f7:	e9 73 ff ff ff       	jmp    a06f <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x16f>
    a0fc:	0f 1f 40 00          	nopl   0x0(%rax)
    a100:	31 c0                	xor    %eax,%eax
    a102:	c3                   	ret    
    a103:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a10a:	00 00 00 
    a10d:	0f 1f 00             	nopl   (%rax)

000000000000a110 <init_rts_emas>:
    a110:	f3 0f 1e fa          	endbr64 
    a114:	41 54                	push   %r12
    a116:	49 89 d4             	mov    %rdx,%r12
    a119:	55                   	push   %rbp
    a11a:	48 89 f5             	mov    %rsi,%rbp
    a11d:	48 83 ec 08          	sub    $0x8,%rsp
    a121:	e8 5a 2c 00 00       	call   cd80 <init_segment_emas>
    a126:	85 c0                	test   %eax,%eax
    a128:	74 0e                	je     a138 <init_rts_emas+0x28>
    a12a:	48 83 c4 08          	add    $0x8,%rsp
    a12e:	5d                   	pop    %rbp
    a12f:	41 5c                	pop    %r12
    a131:	c3                   	ret    
    a132:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a138:	48 83 c4 08          	add    $0x8,%rsp
    a13c:	4c 89 e6             	mov    %r12,%rsi
    a13f:	48 89 ef             	mov    %rbp,%rdi
    a142:	31 d2                	xor    %edx,%edx
    a144:	5d                   	pop    %rbp
    a145:	41 5c                	pop    %r12
    a147:	e9 b4 fd ff ff       	jmp    9f00 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>
    a14c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a150 <sgx_mm_alloc_ocall>:
    a150:	f3 0f 1e fa          	endbr64 
    a154:	41 56                	push   %r14
    a156:	41 89 ce             	mov    %ecx,%r14d
    a159:	41 55                	push   %r13
    a15b:	49 89 fd             	mov    %rdi,%r13
    a15e:	bf 20 00 00 00       	mov    $0x20,%edi
    a163:	41 54                	push   %r12
    a165:	49 89 f4             	mov    %rsi,%r12
    a168:	55                   	push   %rbp
    a169:	89 d5                	mov    %edx,%ebp
    a16b:	53                   	push   %rbx
    a16c:	e8 df 03 00 00       	call   a550 <sgx_ocalloc>
    a171:	48 85 c0             	test   %rax,%rax
    a174:	74 52                	je     a1c8 <sgx_mm_alloc_ocall+0x78>
    a176:	4c 89 60 10          	mov    %r12,0x10(%rax)
    a17a:	48 89 c6             	mov    %rax,%rsi
    a17d:	bf fa ff ff ff       	mov    $0xfffffffa,%edi
    a182:	48 89 c3             	mov    %rax,%rbx
    a185:	4c 89 68 08          	mov    %r13,0x8(%rax)
    a189:	41 bc 0e 00 00 00    	mov    $0xe,%r12d
    a18f:	89 68 18             	mov    %ebp,0x18(%rax)
    a192:	44 89 70 1c          	mov    %r14d,0x1c(%rax)
    a196:	e8 f5 16 00 00       	call   b890 <sgx_ocall>
    a19b:	85 c0                	test   %eax,%eax
    a19d:	74 11                	je     a1b0 <sgx_mm_alloc_ocall+0x60>
    a19f:	e8 9c 04 00 00       	call   a640 <sgx_ocfree>
    a1a4:	5b                   	pop    %rbx
    a1a5:	44 89 e0             	mov    %r12d,%eax
    a1a8:	5d                   	pop    %rbp
    a1a9:	41 5c                	pop    %r12
    a1ab:	41 5d                	pop    %r13
    a1ad:	41 5e                	pop    %r14
    a1af:	c3                   	ret    
    a1b0:	44 8b 23             	mov    (%rbx),%r12d
    a1b3:	b8 0e 00 00 00       	mov    $0xe,%eax
    a1b8:	45 85 e4             	test   %r12d,%r12d
    a1bb:	44 0f 45 e0          	cmovne %eax,%r12d
    a1bf:	eb de                	jmp    a19f <sgx_mm_alloc_ocall+0x4f>
    a1c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a1c8:	e8 73 04 00 00       	call   a640 <sgx_ocfree>
    a1cd:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    a1d3:	5b                   	pop    %rbx
    a1d4:	5d                   	pop    %rbp
    a1d5:	44 89 e0             	mov    %r12d,%eax
    a1d8:	41 5c                	pop    %r12
    a1da:	41 5d                	pop    %r13
    a1dc:	41 5e                	pop    %r14
    a1de:	c3                   	ret    
    a1df:	90                   	nop

000000000000a1e0 <sgx_mm_modify_ocall>:
    a1e0:	f3 0f 1e fa          	endbr64 
    a1e4:	41 56                	push   %r14
    a1e6:	41 89 ce             	mov    %ecx,%r14d
    a1e9:	41 55                	push   %r13
    a1eb:	49 89 fd             	mov    %rdi,%r13
    a1ee:	bf 20 00 00 00       	mov    $0x20,%edi
    a1f3:	41 54                	push   %r12
    a1f5:	49 89 f4             	mov    %rsi,%r12
    a1f8:	55                   	push   %rbp
    a1f9:	89 d5                	mov    %edx,%ebp
    a1fb:	53                   	push   %rbx
    a1fc:	e8 4f 03 00 00       	call   a550 <sgx_ocalloc>
    a201:	48 85 c0             	test   %rax,%rax
    a204:	74 52                	je     a258 <sgx_mm_modify_ocall+0x78>
    a206:	4c 89 60 10          	mov    %r12,0x10(%rax)
    a20a:	48 89 c6             	mov    %rax,%rsi
    a20d:	bf f9 ff ff ff       	mov    $0xfffffff9,%edi
    a212:	48 89 c3             	mov    %rax,%rbx
    a215:	4c 89 68 08          	mov    %r13,0x8(%rax)
    a219:	41 bc 0e 00 00 00    	mov    $0xe,%r12d
    a21f:	89 68 18             	mov    %ebp,0x18(%rax)
    a222:	44 89 70 1c          	mov    %r14d,0x1c(%rax)
    a226:	e8 65 16 00 00       	call   b890 <sgx_ocall>
    a22b:	85 c0                	test   %eax,%eax
    a22d:	74 11                	je     a240 <sgx_mm_modify_ocall+0x60>
    a22f:	e8 0c 04 00 00       	call   a640 <sgx_ocfree>
    a234:	5b                   	pop    %rbx
    a235:	44 89 e0             	mov    %r12d,%eax
    a238:	5d                   	pop    %rbp
    a239:	41 5c                	pop    %r12
    a23b:	41 5d                	pop    %r13
    a23d:	41 5e                	pop    %r14
    a23f:	c3                   	ret    
    a240:	44 8b 23             	mov    (%rbx),%r12d
    a243:	b8 0e 00 00 00       	mov    $0xe,%eax
    a248:	45 85 e4             	test   %r12d,%r12d
    a24b:	44 0f 45 e0          	cmovne %eax,%r12d
    a24f:	eb de                	jmp    a22f <sgx_mm_modify_ocall+0x4f>
    a251:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a258:	e8 e3 03 00 00       	call   a640 <sgx_ocfree>
    a25d:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    a263:	5b                   	pop    %rbx
    a264:	5d                   	pop    %rbp
    a265:	44 89 e0             	mov    %r12d,%eax
    a268:	41 5c                	pop    %r12
    a26a:	41 5d                	pop    %r13
    a26c:	41 5e                	pop    %r14
    a26e:	c3                   	ret    
    a26f:	90                   	nop

000000000000a270 <sgx_mm_register_pfhandler>:
    a270:	f3 0f 1e fa          	endbr64 
    a274:	31 c0                	xor    %eax,%eax
    a276:	48 83 3d 82 7f 02 00 	cmpq   $0x0,0x27f82(%rip)        # 32200 <g_mm_pfhandler>
    a27d:	00 
    a27e:	74 08                	je     a288 <sgx_mm_register_pfhandler+0x18>
    a280:	c3                   	ret    
    a281:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a288:	48 89 3d 71 7f 02 00 	mov    %rdi,0x27f71(%rip)        # 32200 <g_mm_pfhandler>
    a28f:	b8 01 00 00 00       	mov    $0x1,%eax
    a294:	c3                   	ret    
    a295:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a29c:	00 00 00 
    a29f:	90                   	nop

000000000000a2a0 <sgx_mm_mutex_create>:
    a2a0:	f3 0f 1e fa          	endbr64 
    a2a4:	48 83 ec 08          	sub    $0x8,%rsp
    a2a8:	bf 18 00 00 00       	mov    $0x18,%edi
    a2ad:	e8 7e 67 00 00       	call   10a30 <dlmalloc>
    a2b2:	48 85 c0             	test   %rax,%rax
    a2b5:	74 16                	je     a2cd <sgx_mm_mutex_create+0x2d>
    a2b7:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a2be:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    a2c5:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    a2cc:	00 
    a2cd:	48 83 c4 08          	add    $0x8,%rsp
    a2d1:	c3                   	ret    
    a2d2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a2d9:	00 00 00 
    a2dc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a2e0 <sgx_mm_mutex_lock>:
    a2e0:	f3 0f 1e fa          	endbr64 
    a2e4:	53                   	push   %rbx
    a2e5:	48 89 fb             	mov    %rdi,%rbx
    a2e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a2ef:	00 
    a2f0:	48 89 df             	mov    %rbx,%rdi
    a2f3:	e8 88 9d 00 00       	call   14080 <sgx_thread_spin_trylock>
    a2f8:	85 c0                	test   %eax,%eax
    a2fa:	75 f4                	jne    a2f0 <sgx_mm_mutex_lock+0x10>
    a2fc:	5b                   	pop    %rbx
    a2fd:	c3                   	ret    
    a2fe:	66 90                	xchg   %ax,%ax

000000000000a300 <sgx_mm_mutex_unlock>:
    a300:	f3 0f 1e fa          	endbr64 
    a304:	e9 07 9e 00 00       	jmp    14110 <sgx_thread_spin_unlock>
    a309:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000a310 <sgx_mm_is_within_enclave>:
    a310:	f3 0f 1e fa          	endbr64 
    a314:	48 83 ec 08          	sub    $0x8,%rsp
    a318:	e8 83 01 00 00       	call   a4a0 <sgx_is_within_enclave>
    a31d:	85 c0                	test   %eax,%eax
    a31f:	0f 95 c0             	setne  %al
    a322:	48 83 c4 08          	add    $0x8,%rsp
    a326:	c3                   	ret    
    a327:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a32e:	00 00 

000000000000a330 <init_optimized_libs>:
    a330:	f3 0f 1e fa          	endbr64 
    a334:	41 54                	push   %r12
    a336:	49 89 f4             	mov    %rsi,%r12
    a339:	55                   	push   %rbp
    a33a:	48 89 fd             	mov    %rdi,%rbp
    a33d:	53                   	push   %rbx
    a33e:	48 89 d3             	mov    %rdx,%rbx
    a341:	e8 be b5 01 00       	call   25904 <get_enclave_state>
    a346:	83 f8 01             	cmp    $0x1,%eax
    a349:	0f 85 11 01 00 00    	jne    a460 <init_optimized_libs+0x130>
    a34f:	48 b8 00 00 00 00 00 	movabs $0xff00000000000000,%rax
    a356:	00 00 ff 
    a359:	48 85 c5             	test   %rax,%rbp
    a35c:	0f 85 d6 00 00 00    	jne    a438 <init_optimized_libs+0x108>
    a362:	48 f7 c5 00 fe ff ff 	test   $0xfffffffffffffe00,%rbp
    a369:	0f 84 f1 00 00 00    	je     a460 <init_optimized_libs+0x130>
    a36f:	40 f6 c5 20          	test   $0x20,%bpl
    a373:	74 10                	je     a385 <init_optimized_libs+0x55>
    a375:	48 89 e8             	mov    %rbp,%rax
    a378:	83 e0 1f             	and    $0x1f,%eax
    a37b:	48 83 f8 1f          	cmp    $0x1f,%rax
    a37f:	0f 85 db 00 00 00    	jne    a460 <init_optimized_libs+0x130>
    a385:	40 f6 c5 40          	test   $0x40,%bpl
    a389:	74 10                	je     a39b <init_optimized_libs+0x6b>
    a38b:	48 89 e8             	mov    %rbp,%rax
    a38e:	83 e0 3f             	and    $0x3f,%eax
    a391:	48 83 f8 3f          	cmp    $0x3f,%rax
    a395:	0f 85 c5 00 00 00    	jne    a460 <init_optimized_libs+0x130>
    a39b:	40 f6 c5 80          	test   $0x80,%bpl
    a39f:	74 10                	je     a3b1 <init_optimized_libs+0x81>
    a3a1:	48 89 e8             	mov    %rbp,%rax
    a3a4:	83 e0 7f             	and    $0x7f,%eax
    a3a7:	48 83 f8 7f          	cmp    $0x7f,%rax
    a3ab:	0f 85 af 00 00 00    	jne    a460 <init_optimized_libs+0x130>
    a3b1:	f7 c5 00 01 00 00    	test   $0x100,%ebp
    a3b7:	74 10                	je     a3c9 <init_optimized_libs+0x99>
    a3b9:	40 0f b6 c5          	movzbl %bpl,%eax
    a3bd:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    a3c3:	0f 85 97 00 00 00    	jne    a460 <init_optimized_libs+0x130>
    a3c9:	f7 c5 00 02 00 00    	test   $0x200,%ebp
    a3cf:	74 10                	je     a3e1 <init_optimized_libs+0xb1>
    a3d1:	48 89 e8             	mov    %rbp,%rax
    a3d4:	25 ff 01 00 00       	and    $0x1ff,%eax
    a3d9:	48 3d ff 01 00 00    	cmp    $0x1ff,%rax
    a3df:	75 7f                	jne    a460 <init_optimized_libs+0x130>
    a3e1:	f7 c5 00 04 00 00    	test   $0x400,%ebp
    a3e7:	75 67                	jne    a450 <init_optimized_libs+0x120>
    a3e9:	48 89 d8             	mov    %rbx,%rax
    a3ec:	83 e0 06             	and    $0x6,%eax
    a3ef:	48 83 f8 06          	cmp    $0x6,%rax
    a3f3:	74 7b                	je     a470 <init_optimized_libs+0x140>
    a3f5:	48 b8 ff 7f 12 86 08 	movabs $0xfffe200886127fff,%rax
    a3fc:	20 fe ff 
    a3ff:	48 21 c5             	and    %rax,%rbp
    a402:	48 8d 1d e7 58 02 00 	lea    0x258e7(%rip),%rbx        # 2fcf0 <g_cpu_feature_indicator>
    a409:	48 89 ef             	mov    %rbp,%rdi
    a40c:	48 89 2b             	mov    %rbp,(%rbx)
    a40f:	e8 6c 96 00 00       	call   13a80 <sgx_init_string_lib>
    a414:	85 c0                	test   %eax,%eax
    a416:	75 48                	jne    a460 <init_optimized_libs+0x130>
    a418:	48 8b 3b             	mov    (%rbx),%rdi
    a41b:	4c 89 e6             	mov    %r12,%rsi
    a41e:	e8 cd a4 01 00       	call   248f0 <sgx_init_crypto_lib>
    a423:	5b                   	pop    %rbx
    a424:	5d                   	pop    %rbp
    a425:	85 c0                	test   %eax,%eax
    a427:	41 5c                	pop    %r12
    a429:	0f 95 c0             	setne  %al
    a42c:	0f b6 c0             	movzbl %al,%eax
    a42f:	f7 d8                	neg    %eax
    a431:	c3                   	ret    
    a432:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a438:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffffff,%rax
    a43f:	ff ff 00 
    a442:	48 21 c5             	and    %rax,%rbp
    a445:	e9 18 ff ff ff       	jmp    a362 <init_optimized_libs+0x32>
    a44a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a450:	48 89 e8             	mov    %rbp,%rax
    a453:	25 ff 03 00 00       	and    $0x3ff,%eax
    a458:	48 3d ff 03 00 00    	cmp    $0x3ff,%rax
    a45e:	74 89                	je     a3e9 <init_optimized_libs+0xb9>
    a460:	5b                   	pop    %rbx
    a461:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    a466:	5d                   	pop    %rbp
    a467:	41 5c                	pop    %r12
    a469:	c3                   	ret    
    a46a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a470:	48 89 da             	mov    %rbx,%rdx
    a473:	81 e2 e0 00 00 00    	and    $0xe0,%edx
    a479:	48 81 fa e0 00 00 00 	cmp    $0xe0,%rdx
    a480:	74 80                	je     a402 <init_optimized_libs+0xd2>
    a482:	48 b8 ff ff ff b6 18 	movabs $0xfffee018b6ffffff,%rax
    a489:	e0 fe ff 
    a48c:	48 21 c5             	and    %rax,%rbp
    a48f:	e9 6e ff ff ff       	jmp    a402 <init_optimized_libs+0xd2>
    a494:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a49b:	00 00 00 
    a49e:	66 90                	xchg   %ax,%ax

000000000000a4a0 <sgx_is_within_enclave>:
    a4a0:	f3 0f 1e fa          	endbr64 
    a4a4:	48 8d 05 35 58 02 00 	lea    0x25835(%rip),%rax        # 2fce0 <g_enclave_base>
    a4ab:	4c 8b 00             	mov    (%rax),%r8
    a4ae:	48 8d 05 23 58 02 00 	lea    0x25823(%rip),%rax        # 2fcd8 <g_enclave_size>
    a4b5:	48 8b 08             	mov    (%rax),%rcx
    a4b8:	4c 01 c1             	add    %r8,%rcx
    a4bb:	48 83 e9 01          	sub    $0x1,%rcx
    a4bf:	48 85 f6             	test   %rsi,%rsi
    a4c2:	74 24                	je     a4e8 <sgx_is_within_enclave+0x48>
    a4c4:	48 83 ee 01          	sub    $0x1,%rsi
    a4c8:	48 01 fe             	add    %rdi,%rsi
    a4cb:	0f 93 c2             	setae  %dl
    a4ce:	4c 39 c7             	cmp    %r8,%rdi
    a4d1:	0f 93 c0             	setae  %al
    a4d4:	21 c2                	and    %eax,%edx
    a4d6:	31 c0                	xor    %eax,%eax
    a4d8:	48 39 ce             	cmp    %rcx,%rsi
    a4db:	0f 96 c0             	setbe  %al
    a4de:	21 d0                	and    %edx,%eax
    a4e0:	c3                   	ret    
    a4e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a4e8:	48 89 fe             	mov    %rdi,%rsi
    a4eb:	ba 01 00 00 00       	mov    $0x1,%edx
    a4f0:	eb dc                	jmp    a4ce <sgx_is_within_enclave+0x2e>
    a4f2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a4f9:	00 00 00 
    a4fc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a500 <sgx_is_outside_enclave>:
    a500:	f3 0f 1e fa          	endbr64 
    a504:	48 8d 05 d5 57 02 00 	lea    0x257d5(%rip),%rax        # 2fce0 <g_enclave_base>
    a50b:	48 8b 10             	mov    (%rax),%rdx
    a50e:	48 8d 05 c3 57 02 00 	lea    0x257c3(%rip),%rax        # 2fcd8 <g_enclave_size>
    a515:	48 8b 00             	mov    (%rax),%rax
    a518:	48 85 f6             	test   %rsi,%rsi
    a51b:	74 13                	je     a530 <sgx_is_outside_enclave+0x30>
    a51d:	48 83 ee 01          	sub    $0x1,%rsi
    a521:	48 01 fe             	add    %rdi,%rsi
    a524:	73 0d                	jae    a533 <sgx_is_outside_enclave+0x33>
    a526:	31 c0                	xor    %eax,%eax
    a528:	c3                   	ret    
    a529:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a530:	48 89 fe             	mov    %rdi,%rsi
    a533:	48 8d 44 10 ff       	lea    -0x1(%rax,%rdx,1),%rax
    a538:	48 39 c7             	cmp    %rax,%rdi
    a53b:	0f 97 c0             	seta   %al
    a53e:	48 39 f2             	cmp    %rsi,%rdx
    a541:	0f 97 c2             	seta   %dl
    a544:	09 d0                	or     %edx,%eax
    a546:	0f b6 c0             	movzbl %al,%eax
    a549:	c3                   	ret    
    a54a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000a550 <sgx_ocalloc>:
    a550:	f3 0f 1e fa          	endbr64 
    a554:	53                   	push   %rbx
    a555:	48 89 fb             	mov    %rdi,%rbx
    a558:	48 83 ec 10          	sub    $0x10,%rsp
    a55c:	e8 e2 b3 01 00       	call   25943 <get_thread_data>
    a561:	48 8b 70 20          	mov    0x20(%rax),%rsi
    a565:	48 8b 86 90 00 00 00 	mov    0x90(%rsi),%rax
    a56c:	48 89 c7             	mov    %rax,%rdi
    a56f:	48 83 c7 07          	add    $0x7,%rdi
    a573:	72 28                	jb     a59d <sgx_ocalloc+0x4d>
    a575:	48 8d 15 64 57 02 00 	lea    0x25764(%rip),%rdx        # 2fce0 <g_enclave_base>
    a57c:	48 8b 0a             	mov    (%rdx),%rcx
    a57f:	48 8d 15 52 57 02 00 	lea    0x25752(%rip),%rdx        # 2fcd8 <g_enclave_size>
    a586:	4c 8b 0a             	mov    (%rdx),%r9
    a589:	49 01 c9             	add    %rcx,%r9
    a58c:	4c 89 ca             	mov    %r9,%rdx
    a58f:	48 83 ea 01          	sub    $0x1,%rdx
    a593:	48 39 f9             	cmp    %rdi,%rcx
    a596:	77 10                	ja     a5a8 <sgx_ocalloc+0x58>
    a598:	48 39 d0             	cmp    %rdx,%rax
    a59b:	77 0b                	ja     a5a8 <sgx_ocalloc+0x58>
    a59d:	e8 95 b7 01 00       	call   25d37 <abort>
    a5a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a5a8:	48 39 d8             	cmp    %rbx,%rax
    a5ab:	72 f0                	jb     a59d <sgx_ocalloc+0x4d>
    a5ad:	48 89 c7             	mov    %rax,%rdi
    a5b0:	48 29 df             	sub    %rbx,%rdi
    a5b3:	49 89 f8             	mov    %rdi,%r8
    a5b6:	49 83 e0 f0          	and    $0xfffffffffffffff0,%r8
    a5ba:	48 85 db             	test   %rbx,%rbx
    a5bd:	74 11                	je     a5d0 <sgx_ocalloc+0x80>
    a5bf:	48 83 eb 01          	sub    $0x1,%rbx
    a5c3:	4c 01 c3             	add    %r8,%rbx
    a5c6:	72 d5                	jb     a59d <sgx_ocalloc+0x4d>
    a5c8:	eb 09                	jmp    a5d3 <sgx_ocalloc+0x83>
    a5ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a5d0:	4c 89 c3             	mov    %r8,%rbx
    a5d3:	48 39 d9             	cmp    %rbx,%rcx
    a5d6:	77 05                	ja     a5dd <sgx_ocalloc+0x8d>
    a5d8:	49 39 d0             	cmp    %rdx,%r8
    a5db:	76 c0                	jbe    a59d <sgx_ocalloc+0x4d>
    a5dd:	48 83 e8 01          	sub    $0x1,%rax
    a5e1:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    a5e7:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    a5ee:	74 ad                	je     a59d <sgx_ocalloc+0x4d>
    a5f0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a5f5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    a5fa:	48 39 c7             	cmp    %rax,%rdi
    a5fd:	77 28                	ja     a627 <sgx_ocalloc+0xd7>
    a5ff:	90                   	nop
    a600:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    a605:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    a60a:	c6 00 00             	movb   $0x0,(%rax)
    a60d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    a612:	48 2d 00 10 00 00    	sub    $0x1000,%rax
    a618:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a61d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    a622:	48 39 f8             	cmp    %rdi,%rax
    a625:	73 d9                	jae    a600 <sgx_ocalloc+0xb0>
    a627:	4c 89 86 90 00 00 00 	mov    %r8,0x90(%rsi)
    a62e:	48 83 c4 10          	add    $0x10,%rsp
    a632:	4c 89 c0             	mov    %r8,%rax
    a635:	5b                   	pop    %rbx
    a636:	c3                   	ret    
    a637:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a63e:	00 00 

000000000000a640 <sgx_ocfree>:
    a640:	f3 0f 1e fa          	endbr64 
    a644:	48 83 ec 08          	sub    $0x8,%rsp
    a648:	e8 f6 b2 01 00       	call   25943 <get_thread_data>
    a64d:	48 8b 50 08          	mov    0x8(%rax),%rdx
    a651:	48 8b 52 e8          	mov    -0x18(%rdx),%rdx
    a655:	48 89 d7             	mov    %rdx,%rdi
    a658:	48 83 c7 07          	add    $0x7,%rdi
    a65c:	72 28                	jb     a686 <sgx_ocfree+0x46>
    a65e:	48 8d 0d 7b 56 02 00 	lea    0x2567b(%rip),%rcx        # 2fce0 <g_enclave_base>
    a665:	48 8b 31             	mov    (%rcx),%rsi
    a668:	48 8d 0d 69 56 02 00 	lea    0x25669(%rip),%rcx        # 2fcd8 <g_enclave_size>
    a66f:	4c 8b 01             	mov    (%rcx),%r8
    a672:	49 01 f0             	add    %rsi,%r8
    a675:	4c 89 c1             	mov    %r8,%rcx
    a678:	48 83 e9 01          	sub    $0x1,%rcx
    a67c:	48 39 ca             	cmp    %rcx,%rdx
    a67f:	77 0f                	ja     a690 <sgx_ocfree+0x50>
    a681:	48 39 fe             	cmp    %rdi,%rsi
    a684:	77 0a                	ja     a690 <sgx_ocfree+0x50>
    a686:	e8 ac b6 01 00       	call   25d37 <abort>
    a68b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a690:	48 8b 40 20          	mov    0x20(%rax),%rax
    a694:	48 89 90 90 00 00 00 	mov    %rdx,0x90(%rax)
    a69b:	48 83 c4 08          	add    $0x8,%rsp
    a69f:	c3                   	ret    

000000000000a6a0 <sgx_read_rand>:
    a6a0:	f3 0f 1e fa          	endbr64 
    a6a4:	41 56                	push   %r14
    a6a6:	41 55                	push   %r13
    a6a8:	41 54                	push   %r12
    a6aa:	55                   	push   %rbp
    a6ab:	53                   	push   %rbx
    a6ac:	48 83 ec 10          	sub    $0x10,%rsp
    a6b0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a6b7:	00 00 
    a6b9:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a6be:	31 c0                	xor    %eax,%eax
    a6c0:	48 85 ff             	test   %rdi,%rdi
    a6c3:	0f 84 e7 00 00 00    	je     a7b0 <sgx_read_rand+0x110>
    a6c9:	48 89 f5             	mov    %rsi,%rbp
    a6cc:	48 85 f6             	test   %rsi,%rsi
    a6cf:	0f 84 db 00 00 00    	je     a7b0 <sgx_read_rand+0x110>
    a6d5:	48 8d 05 04 56 02 00 	lea    0x25604(%rip),%rax        # 2fce0 <g_enclave_base>
    a6dc:	48 89 fb             	mov    %rdi,%rbx
    a6df:	48 8b 08             	mov    (%rax),%rcx
    a6e2:	48 8d 05 ef 55 02 00 	lea    0x255ef(%rip),%rax        # 2fcd8 <g_enclave_size>
    a6e9:	48 8b 10             	mov    (%rax),%rdx
    a6ec:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
    a6f0:	31 f6                	xor    %esi,%esi
    a6f2:	48 01 ca             	add    %rcx,%rdx
    a6f5:	48 01 f8             	add    %rdi,%rax
    a6f8:	48 8d 52 ff          	lea    -0x1(%rdx),%rdx
    a6fc:	40 0f 92 c6          	setb   %sil
    a700:	72 3e                	jb     a740 <sgx_read_rand+0xa0>
    a702:	48 39 cf             	cmp    %rcx,%rdi
    a705:	72 39                	jb     a740 <sgx_read_rand+0xa0>
    a707:	48 39 c2             	cmp    %rax,%rdx
    a70a:	73 44                	jae    a750 <sgx_read_rand+0xb0>
    a70c:	48 39 c1             	cmp    %rax,%rcx
    a70f:	77 3f                	ja     a750 <sgx_read_rand+0xb0>
    a711:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    a717:	48 39 d3             	cmp    %rdx,%rbx
    a71a:	77 34                	ja     a750 <sgx_read_rand+0xb0>
    a71c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    a721:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    a728:	00 00 
    a72a:	0f 85 9b 00 00 00    	jne    a7cb <sgx_read_rand+0x12b>
    a730:	48 83 c4 10          	add    $0x10,%rsp
    a734:	44 89 c0             	mov    %r8d,%eax
    a737:	5b                   	pop    %rbx
    a738:	5d                   	pop    %rbp
    a739:	41 5c                	pop    %r12
    a73b:	41 5d                	pop    %r13
    a73d:	41 5e                	pop    %r14
    a73f:	c3                   	ret    
    a740:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    a746:	48 85 f6             	test   %rsi,%rsi
    a749:	75 d1                	jne    a71c <sgx_read_rand+0x7c>
    a74b:	eb bf                	jmp    a70c <sgx_read_rand+0x6c>
    a74d:	0f 1f 00             	nopl   (%rax)
    a750:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    a757:	00 
    a758:	4c 8d 6c 24 04       	lea    0x4(%rsp),%r13
    a75d:	41 be 04 00 00 00    	mov    $0x4,%r14d
    a763:	4c 89 ef             	mov    %r13,%rdi
    a766:	e8 a9 b5 01 00       	call   25d14 <do_rdrand>
    a76b:	85 c0                	test   %eax,%eax
    a76d:	74 51                	je     a7c0 <sgx_read_rand+0x120>
    a76f:	48 83 fd 04          	cmp    $0x4,%rbp
    a773:	4d 89 f4             	mov    %r14,%r12
    a776:	48 89 df             	mov    %rbx,%rdi
    a779:	4c 89 ee             	mov    %r13,%rsi
    a77c:	4c 0f 46 e5          	cmovbe %rbp,%r12
    a780:	4c 89 e2             	mov    %r12,%rdx
    a783:	4c 01 e3             	add    %r12,%rbx
    a786:	e8 65 90 00 00       	call   137f0 <memcpy>
    a78b:	4c 29 e5             	sub    %r12,%rbp
    a78e:	75 d3                	jne    a763 <sgx_read_rand+0xc3>
    a790:	b9 04 00 00 00       	mov    $0x4,%ecx
    a795:	31 d2                	xor    %edx,%edx
    a797:	be 04 00 00 00       	mov    $0x4,%esi
    a79c:	4c 89 ef             	mov    %r13,%rdi
    a79f:	e8 7c 92 00 00       	call   13a20 <memset_s>
    a7a4:	45 31 c0             	xor    %r8d,%r8d
    a7a7:	e9 70 ff ff ff       	jmp    a71c <sgx_read_rand+0x7c>
    a7ac:	0f 1f 40 00          	nopl   0x0(%rax)
    a7b0:	41 b8 02 00 00 00    	mov    $0x2,%r8d
    a7b6:	e9 61 ff ff ff       	jmp    a71c <sgx_read_rand+0x7c>
    a7bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a7c0:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    a7c6:	e9 51 ff ff ff       	jmp    a71c <sgx_read_rand+0x7c>
    a7cb:	e8 70 93 00 00       	call   13b40 <__stack_chk_fail>

000000000000a7d0 <check_static_stack_canary>:
    a7d0:	f3 0f 1e fa          	endbr64 
    a7d4:	48 8d 05 ed 54 02 00 	lea    0x254ed(%rip),%rax        # 2fcc8 <__intel_security_cookie>
    a7db:	48 8b 00             	mov    (%rax),%rax
    a7de:	48 39 87 08 fc fe ff 	cmp    %rax,-0x103f8(%rdi)
    a7e5:	0f 95 c0             	setne  %al
    a7e8:	0f b6 c0             	movzbl %al,%eax
    a7eb:	f7 d8                	neg    %eax
    a7ed:	c3                   	ret    
    a7ee:	66 90                	xchg   %ax,%ax

000000000000a7f0 <sgx_wrpkru>:
    a7f0:	f3 0f 1e fa          	endbr64 
    a7f4:	53                   	push   %rbx
    a7f5:	89 fb                	mov    %edi,%ebx
    a7f7:	e8 b4 14 00 00       	call   bcb0 <is_pkru_enabled>
    a7fc:	45 31 c0             	xor    %r8d,%r8d
    a7ff:	84 c0                	test   %al,%al
    a801:	74 11                	je     a814 <sgx_wrpkru+0x24>
    a803:	89 d8                	mov    %ebx,%eax
    a805:	44 89 c1             	mov    %r8d,%ecx
    a808:	44 89 c2             	mov    %r8d,%edx
    a80b:	0f 01 ef             	wrpkru 
    a80e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    a814:	44 89 c0             	mov    %r8d,%eax
    a817:	5b                   	pop    %rbx
    a818:	c3                   	ret    
    a819:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000a820 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>:
    a820:	41 57                	push   %r15
    a822:	31 c0                	xor    %eax,%eax
    a824:	49 89 cf             	mov    %rcx,%r15
    a827:	41 56                	push   %r14
    a829:	49 89 fe             	mov    %rdi,%r14
    a82c:	41 55                	push   %r13
    a82e:	41 54                	push   %r12
    a830:	49 89 d4             	mov    %rdx,%r12
    a833:	55                   	push   %rbp
    a834:	53                   	push   %rbx
    a835:	48 83 ec 08          	sub    $0x8,%rsp
    a839:	48 8d 2d 00 d1 01 00 	lea    0x1d100(%rip),%rbp        # 27940 <g_global_data>
    a840:	8b 95 58 01 00 00    	mov    0x158(%rbp),%edx
    a846:	85 d2                	test   %edx,%edx
    a848:	75 13                	jne    a85d <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0x3d>
    a84a:	e9 89 00 00 00       	jmp    a8d8 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb8>
    a84f:	90                   	nop
    a850:	8b 95 58 01 00 00    	mov    0x158(%rbp),%edx
    a856:	83 c0 01             	add    $0x1,%eax
    a859:	39 c2                	cmp    %eax,%edx
    a85b:	76 7b                	jbe    a8d8 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb8>
    a85d:	41 89 c5             	mov    %eax,%r13d
    a860:	49 8d 5d 0b          	lea    0xb(%r13),%rbx
    a864:	48 c1 e3 05          	shl    $0x5,%rbx
    a868:	48 01 eb             	add    %rbp,%rbx
    a86b:	0f b7 13             	movzwl (%rbx),%edx
    a86e:	66 39 d6             	cmp    %dx,%si
    a871:	75 dd                	jne    a850 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0x30>
    a873:	48 85 db             	test   %rbx,%rbx
    a876:	74 60                	je     a8d8 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb8>
    a878:	e8 7b b0 01 00       	call   258f8 <get_enclave_base>
    a87d:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    a881:	49 01 d4             	add    %rdx,%r12
    a884:	8b 53 04             	mov    0x4(%rbx),%edx
    a887:	4c 01 e0             	add    %r12,%rax
    a88a:	4c 39 f0             	cmp    %r14,%rax
    a88d:	77 49                	ja     a8d8 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb8>
    a88f:	48 c1 e2 0c          	shl    $0xc,%rdx
    a893:	49 81 c6 00 10 00 00 	add    $0x1000,%r14
    a89a:	48 01 d0             	add    %rdx,%rax
    a89d:	49 39 c6             	cmp    %rax,%r14
    a8a0:	77 36                	ja     a8d8 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb8>
    a8a2:	31 c0                	xor    %eax,%eax
    a8a4:	4d 85 ff             	test   %r15,%r15
    a8a7:	74 1a                	je     a8c3 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xa3>
    a8a9:	49 c1 e5 05          	shl    $0x5,%r13
    a8ad:	4c 01 ed             	add    %r13,%rbp
    a8b0:	48 8b 95 78 01 00 00 	mov    0x178(%rbp),%rdx
    a8b7:	49 89 17             	mov    %rdx,(%r15)
    a8ba:	0f b7 53 02          	movzwl 0x2(%rbx),%edx
    a8be:	66 41 89 57 08       	mov    %dx,0x8(%r15)
    a8c3:	48 83 c4 08          	add    $0x8,%rsp
    a8c7:	5b                   	pop    %rbx
    a8c8:	5d                   	pop    %rbp
    a8c9:	41 5c                	pop    %r12
    a8cb:	41 5d                	pop    %r13
    a8cd:	41 5e                	pop    %r14
    a8cf:	41 5f                	pop    %r15
    a8d1:	c3                   	ret    
    a8d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a8d8:	48 83 c4 08          	add    $0x8,%rsp
    a8dc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    a8e1:	5b                   	pop    %rbx
    a8e2:	5d                   	pop    %rbp
    a8e3:	41 5c                	pop    %r12
    a8e5:	41 5d                	pop    %r13
    a8e7:	41 5e                	pop    %r14
    a8e9:	41 5f                	pop    %r15
    a8eb:	c3                   	ret    
    a8ec:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a8f0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0>:
    a8f0:	48 81 ff ff ef ff ff 	cmp    $0xffffffffffffefff,%rdi
    a8f7:	0f 87 d0 01 00 00    	ja     aacd <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1dd>
    a8fd:	41 57                	push   %r15
    a8ff:	41 56                	push   %r14
    a901:	41 55                	push   %r13
    a903:	49 89 d5             	mov    %rdx,%r13
    a906:	41 54                	push   %r12
    a908:	49 89 f4             	mov    %rsi,%r12
    a90b:	55                   	push   %rbp
    a90c:	48 89 fd             	mov    %rdi,%rbp
    a90f:	53                   	push   %rbx
    a910:	48 83 ec 18          	sub    $0x18,%rsp
    a914:	e8 a7 10 00 00       	call   b9c0 <get_heap_base>
    a919:	48 89 c3             	mov    %rax,%rbx
    a91c:	e8 2f 11 00 00       	call   ba50 <get_heap_min_size>
    a921:	48 01 c3             	add    %rax,%rbx
    a924:	e8 b7 10 00 00       	call   b9e0 <get_heap_size>
    a929:	49 89 c6             	mov    %rax,%r14
    a92c:	e8 1f 11 00 00       	call   ba50 <get_heap_min_size>
    a931:	49 29 c6             	sub    %rax,%r14
    a934:	48 39 dd             	cmp    %rbx,%rbp
    a937:	72 37                	jb     a970 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x80>
    a939:	48 8d 85 00 10 00 00 	lea    0x1000(%rbp),%rax
    a940:	4c 01 f3             	add    %r14,%rbx
    a943:	48 39 d8             	cmp    %rbx,%rax
    a946:	77 28                	ja     a970 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x80>
    a948:	4d 85 ed             	test   %r13,%r13
    a94b:	74 12                	je     a95f <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6f>
    a94d:	b8 08 00 00 00       	mov    $0x8,%eax
    a952:	49 c7 45 00 03 02 00 	movq   $0x203,0x0(%r13)
    a959:	00 
    a95a:	66 41 89 45 08       	mov    %ax,0x8(%r13)
    a95f:	31 c0                	xor    %eax,%eax
    a961:	48 83 c4 18          	add    $0x18,%rsp
    a965:	5b                   	pop    %rbx
    a966:	5d                   	pop    %rbp
    a967:	41 5c                	pop    %r12
    a969:	41 5d                	pop    %r13
    a96b:	41 5e                	pop    %r14
    a96d:	41 5f                	pop    %r15
    a96f:	c3                   	ret    
    a970:	31 d2                	xor    %edx,%edx
    a972:	4c 89 e9             	mov    %r13,%rcx
    a975:	be 07 00 00 00       	mov    $0x7,%esi
    a97a:	48 89 ef             	mov    %rbp,%rdi
    a97d:	e8 9e fe ff ff       	call   a820 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>
    a982:	85 c0                	test   %eax,%eax
    a984:	74 d9                	je     a95f <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6f>
    a986:	48 8d 15 93 53 02 00 	lea    0x25393(%rip),%rdx        # 2fd20 <rsrv_mem_size>
    a98d:	48 8d 05 94 53 02 00 	lea    0x25394(%rip),%rax        # 2fd28 <rsrv_mem_base>
    a994:	48 8b 0a             	mov    (%rdx),%rcx
    a997:	48 8d 15 7a 53 02 00 	lea    0x2537a(%rip),%rdx        # 2fd18 <rsrv_mem_min_size>
    a99e:	48 8b 00             	mov    (%rax),%rax
    a9a1:	48 8b 32             	mov    (%rdx),%rsi
    a9a4:	48 01 c6             	add    %rax,%rsi
    a9a7:	48 39 f5             	cmp    %rsi,%rbp
    a9aa:	72 0f                	jb     a9bb <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0xcb>
    a9ac:	48 8d 95 00 10 00 00 	lea    0x1000(%rbp),%rdx
    a9b3:	48 01 c8             	add    %rcx,%rax
    a9b6:	48 39 c2             	cmp    %rax,%rdx
    a9b9:	76 8d                	jbe    a948 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x58>
    a9bb:	48 8d 15 7e cf 01 00 	lea    0x1cf7e(%rip),%rdx        # 27940 <g_global_data>
    a9c2:	31 c0                	xor    %eax,%eax
    a9c4:	8b 8a 58 01 00 00    	mov    0x158(%rdx),%ecx
    a9ca:	85 c9                	test   %ecx,%ecx
    a9cc:	75 1b                	jne    a9e9 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0xf9>
    a9ce:	e9 c2 00 00 00       	jmp    aa95 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1a5>
    a9d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a9d8:	8b 8a 58 01 00 00    	mov    0x158(%rdx),%ecx
    a9de:	83 c0 01             	add    $0x1,%eax
    a9e1:	39 c1                	cmp    %eax,%ecx
    a9e3:	0f 86 ac 00 00 00    	jbe    aa95 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1a5>
    a9e9:	41 89 c0             	mov    %eax,%r8d
    a9ec:	49 83 c0 0b          	add    $0xb,%r8
    a9f0:	49 c1 e0 05          	shl    $0x5,%r8
    a9f4:	49 01 d0             	add    %rdx,%r8
    a9f7:	41 0f b7 08          	movzwl (%r8),%ecx
    a9fb:	66 81 f9 13 10       	cmp    $0x1013,%cx
    aa00:	75 d6                	jne    a9d8 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0xe8>
    aa02:	4d 85 c0             	test   %r8,%r8
    aa05:	0f 84 8a 00 00 00    	je     aa95 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1a5>
    aa0b:	41 be 0e 00 00 00    	mov    $0xe,%r14d
    aa11:	4d 89 c7             	mov    %r8,%r15
    aa14:	41 8b 47 04          	mov    0x4(%r15),%eax
    aa18:	31 db                	xor    %ebx,%ebx
    aa1a:	83 f8 ff             	cmp    $0xffffffff,%eax
    aa1d:	75 17                	jne    aa36 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x146>
    aa1f:	eb 60                	jmp    aa81 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x191>
    aa21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    aa28:	41 8b 47 04          	mov    0x4(%r15),%eax
    aa2c:	83 c3 01             	add    $0x1,%ebx
    aa2f:	83 c0 01             	add    $0x1,%eax
    aa32:	39 d8                	cmp    %ebx,%eax
    aa34:	76 4b                	jbe    aa81 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x191>
    aa36:	49 8b 57 08          	mov    0x8(%r15),%rdx
    aa3a:	89 d8                	mov    %ebx,%eax
    aa3c:	49 8d 4f 08          	lea    0x8(%r15),%rcx
    aa40:	44 89 f6             	mov    %r14d,%esi
    aa43:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    aa48:	48 89 ef             	mov    %rbp,%rdi
    aa4b:	4c 89 e9             	mov    %r13,%rcx
    aa4e:	48 0f af d0          	imul   %rax,%rdx
    aa52:	48 89 04 24          	mov    %rax,(%rsp)
    aa56:	e8 c5 fd ff ff       	call   a820 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>
    aa5b:	85 c0                	test   %eax,%eax
    aa5d:	75 c9                	jne    aa28 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x138>
    aa5f:	4d 85 e4             	test   %r12,%r12
    aa62:	0f 84 f7 fe ff ff    	je     a95f <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6f>
    aa68:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    aa6d:	48 8b 1c 24          	mov    (%rsp),%rbx
    aa71:	48 8b 11             	mov    (%rcx),%rdx
    aa74:	48 0f af da          	imul   %rdx,%rbx
    aa78:	49 89 1c 24          	mov    %rbx,(%r12)
    aa7c:	e9 e0 fe ff ff       	jmp    a961 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x71>
    aa81:	41 83 c6 01          	add    $0x1,%r14d
    aa85:	41 83 fe 13          	cmp    $0x13,%r14d
    aa89:	75 89                	jne    aa14 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x124>
    aa8b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    aa90:	e9 cc fe ff ff       	jmp    a961 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x71>
    aa95:	bb 0e 00 00 00       	mov    $0xe,%ebx
    aa9a:	31 d2                	xor    %edx,%edx
    aa9c:	4c 89 e9             	mov    %r13,%rcx
    aa9f:	89 de                	mov    %ebx,%esi
    aaa1:	48 89 ef             	mov    %rbp,%rdi
    aaa4:	e8 77 fd ff ff       	call   a820 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>
    aaa9:	85 c0                	test   %eax,%eax
    aaab:	74 0a                	je     aab7 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1c7>
    aaad:	83 c3 01             	add    $0x1,%ebx
    aab0:	83 fb 13             	cmp    $0x13,%ebx
    aab3:	75 e5                	jne    aa9a <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1aa>
    aab5:	eb d4                	jmp    aa8b <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x19b>
    aab7:	4d 85 e4             	test   %r12,%r12
    aaba:	0f 84 9f fe ff ff    	je     a95f <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6f>
    aac0:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    aac7:	00 
    aac8:	e9 94 fe ff ff       	jmp    a961 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x71>
    aacd:	83 c8 ff             	or     $0xffffffff,%eax
    aad0:	c3                   	ret    
    aad1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    aad8:	00 00 00 
    aadb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000aae0 <is_dynamic_thread>:
    aae0:	f3 0f 1e fa          	endbr64 
    aae4:	48 83 ec 28          	sub    $0x28,%rsp
    aae8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    aaef:	00 00 
    aaf1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    aaf6:	31 c0                	xor    %eax,%eax
    aaf8:	48 85 ff             	test   %rdi,%rdi
    aafb:	74 0e                	je     ab0b <is_dynamic_thread+0x2b>
    aafd:	31 f6                	xor    %esi,%esi
    aaff:	48 89 e2             	mov    %rsp,%rdx
    ab02:	e8 e9 fd ff ff       	call   a8f0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0>
    ab07:	85 c0                	test   %eax,%eax
    ab09:	74 1d                	je     ab28 <is_dynamic_thread+0x48>
    ab0b:	31 c0                	xor    %eax,%eax
    ab0d:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    ab12:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    ab19:	00 00 
    ab1b:	75 1a                	jne    ab37 <is_dynamic_thread+0x57>
    ab1d:	48 83 c4 28          	add    $0x28,%rsp
    ab21:	c3                   	ret    
    ab22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ab28:	31 c0                	xor    %eax,%eax
    ab2a:	48 81 3c 24 00 01 00 	cmpq   $0x100,(%rsp)
    ab31:	00 
    ab32:	0f 94 c0             	sete   %al
    ab35:	eb d6                	jmp    ab0d <is_dynamic_thread+0x2d>
    ab37:	e8 04 90 00 00       	call   13b40 <__stack_chk_fail>
    ab3c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000ab40 <is_dynamic_thread_exist>:
    ab40:	f3 0f 1e fa          	endbr64 
    ab44:	48 8d 05 a1 51 02 00 	lea    0x251a1(%rip),%rax        # 2fcec <EDMM_supported>
    ab4b:	8b 00                	mov    (%rax),%eax
    ab4d:	85 c0                	test   %eax,%eax
    ab4f:	74 51                	je     aba2 <is_dynamic_thread_exist+0x62>
    ab51:	48 8d 0d e8 cd 01 00 	lea    0x1cde8(%rip),%rcx        # 27940 <g_global_data>
    ab58:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    ab5e:	85 c0                	test   %eax,%eax
    ab60:	74 3e                	je     aba0 <is_dynamic_thread_exist+0x60>
    ab62:	31 d2                	xor    %edx,%edx
    ab64:	eb 17                	jmp    ab7d <is_dynamic_thread_exist+0x3d>
    ab66:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    ab6d:	00 00 00 
    ab70:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    ab76:	83 c2 01             	add    $0x1,%edx
    ab79:	39 d0                	cmp    %edx,%eax
    ab7b:	76 23                	jbe    aba0 <is_dynamic_thread_exist+0x60>
    ab7d:	89 d0                	mov    %edx,%eax
    ab7f:	48 83 c0 0b          	add    $0xb,%rax
    ab83:	48 c1 e0 05          	shl    $0x5,%rax
    ab87:	48 01 c8             	add    %rcx,%rax
    ab8a:	0f b7 30             	movzwl (%rax),%esi
    ab8d:	66 83 fe 12          	cmp    $0x12,%si
    ab91:	75 dd                	jne    ab70 <is_dynamic_thread_exist+0x30>
    ab93:	48 85 c0             	test   %rax,%rax
    ab96:	0f 95 c0             	setne  %al
    ab99:	0f b6 c0             	movzbl %al,%eax
    ab9c:	c3                   	ret    
    ab9d:	0f 1f 00             	nopl   (%rax)
    aba0:	31 c0                	xor    %eax,%eax
    aba2:	c3                   	ret    
    aba3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    abaa:	00 00 00 
    abad:	0f 1f 00             	nopl   (%rax)

000000000000abb0 <get_dynamic_stack_max_page>:
    abb0:	f3 0f 1e fa          	endbr64 
    abb4:	48 8d 0d 85 cd 01 00 	lea    0x1cd85(%rip),%rcx        # 27940 <g_global_data>
    abbb:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    abc1:	85 c0                	test   %eax,%eax
    abc3:	74 3d                	je     ac02 <get_dynamic_stack_max_page+0x52>
    abc5:	31 d2                	xor    %edx,%edx
    abc7:	eb 14                	jmp    abdd <get_dynamic_stack_max_page+0x2d>
    abc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    abd0:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    abd6:	83 c2 01             	add    $0x1,%edx
    abd9:	39 d0                	cmp    %edx,%eax
    abdb:	76 23                	jbe    ac00 <get_dynamic_stack_max_page+0x50>
    abdd:	89 d0                	mov    %edx,%eax
    abdf:	48 83 c0 0b          	add    $0xb,%rax
    abe3:	48 c1 e0 05          	shl    $0x5,%rax
    abe7:	48 01 c8             	add    %rcx,%rax
    abea:	0f b7 30             	movzwl (%rax),%esi
    abed:	66 83 fe 07          	cmp    $0x7,%si
    abf1:	75 dd                	jne    abd0 <get_dynamic_stack_max_page+0x20>
    abf3:	48 85 c0             	test   %rax,%rax
    abf6:	74 08                	je     ac00 <get_dynamic_stack_max_page+0x50>
    abf8:	8b 40 04             	mov    0x4(%rax),%eax
    abfb:	c3                   	ret    
    abfc:	0f 1f 40 00          	nopl   0x0(%rax)
    ac00:	31 c0                	xor    %eax,%eax
    ac02:	c3                   	ret    
    ac03:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    ac0a:	00 00 00 
    ac0d:	0f 1f 00             	nopl   (%rax)

000000000000ac10 <do_add_thread>:
    ac10:	f3 0f 1e fa          	endbr64 
    ac14:	41 55                	push   %r13
    ac16:	41 54                	push   %r12
    ac18:	49 89 fc             	mov    %rdi,%r12
    ac1b:	55                   	push   %rbp
    ac1c:	53                   	push   %rbx
    ac1d:	48 83 ec 18          	sub    $0x18,%rsp
    ac21:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ac28:	00 00 
    ac2a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    ac2f:	31 c0                	xor    %eax,%eax
    ac31:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    ac38:	00 
    ac39:	e8 ba ac 01 00       	call   258f8 <get_enclave_base>
    ac3e:	31 d2                	xor    %edx,%edx
    ac40:	48 89 e6             	mov    %rsp,%rsi
    ac43:	4c 89 e7             	mov    %r12,%rdi
    ac46:	48 89 c3             	mov    %rax,%rbx
    ac49:	e8 a2 fc ff ff       	call   a8f0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0>
    ac4e:	85 c0                	test   %eax,%eax
    ac50:	75 5b                	jne    acad <do_add_thread+0x9d>
    ac52:	48 8d 2d e7 cc 01 00 	lea    0x1cce7(%rip),%rbp        # 27940 <g_global_data>
    ac59:	8b 85 58 01 00 00    	mov    0x158(%rbp),%eax
    ac5f:	85 c0                	test   %eax,%eax
    ac61:	74 4a                	je     acad <do_add_thread+0x9d>
    ac63:	31 d2                	xor    %edx,%edx
    ac65:	eb 16                	jmp    ac7d <do_add_thread+0x6d>
    ac67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ac6e:	00 00 
    ac70:	8b 85 58 01 00 00    	mov    0x158(%rbp),%eax
    ac76:	83 c2 01             	add    $0x1,%edx
    ac79:	39 d0                	cmp    %edx,%eax
    ac7b:	76 30                	jbe    acad <do_add_thread+0x9d>
    ac7d:	89 d0                	mov    %edx,%eax
    ac7f:	48 83 c0 0b          	add    $0xb,%rax
    ac83:	48 c1 e0 05          	shl    $0x5,%rax
    ac87:	48 01 e8             	add    %rbp,%rax
    ac8a:	44 0f b7 28          	movzwl (%rax),%r13d
    ac8e:	66 41 83 fd 0e       	cmp    $0xe,%r13w
    ac93:	75 db                	jne    ac70 <do_add_thread+0x60>
    ac95:	48 85 c0             	test   %rax,%rax
    ac98:	74 13                	je     acad <do_add_thread+0x9d>
    ac9a:	48 8b 50 08          	mov    0x8(%rax),%rdx
    ac9e:	48 8b 04 24          	mov    (%rsp),%rax
    aca2:	48 01 d8             	add    %rbx,%rax
    aca5:	48 01 d0             	add    %rdx,%rax
    aca8:	4c 39 e0             	cmp    %r12,%rax
    acab:	74 48                	je     acf5 <do_add_thread+0xe5>
    acad:	b8 01 00 00 00       	mov    $0x1,%eax
    acb2:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    acb7:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
    acbe:	00 00 
    acc0:	0f 85 e9 00 00 00    	jne    adaf <do_add_thread+0x19f>
    acc6:	48 83 c4 18          	add    $0x18,%rsp
    acca:	5b                   	pop    %rbx
    accb:	5d                   	pop    %rbp
    accc:	41 5c                	pop    %r12
    acce:	41 5d                	pop    %r13
    acd0:	c3                   	ret    
    acd1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    acd8:	48 85 c0             	test   %rax,%rax
    acdb:	74 0d                	je     acea <do_add_thread+0xda>
    acdd:	0f b7 50 02          	movzwl 0x2(%rax),%edx
    ace1:	83 e2 20             	and    $0x20,%edx
    ace4:	0f 85 9e 00 00 00    	jne    ad88 <do_add_thread+0x178>
    acea:	41 83 c5 01          	add    $0x1,%r13d
    acee:	66 41 83 fd 13       	cmp    $0x13,%r13w
    acf3:	74 3b                	je     ad30 <do_add_thread+0x120>
    acf5:	8b 85 58 01 00 00    	mov    0x158(%rbp),%eax
    acfb:	31 d2                	xor    %edx,%edx
    acfd:	85 c0                	test   %eax,%eax
    acff:	75 14                	jne    ad15 <do_add_thread+0x105>
    ad01:	eb e7                	jmp    acea <do_add_thread+0xda>
    ad03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ad08:	8b 85 58 01 00 00    	mov    0x158(%rbp),%eax
    ad0e:	83 c2 01             	add    $0x1,%edx
    ad11:	39 d0                	cmp    %edx,%eax
    ad13:	76 d5                	jbe    acea <do_add_thread+0xda>
    ad15:	89 d0                	mov    %edx,%eax
    ad17:	48 83 c0 0b          	add    $0xb,%rax
    ad1b:	48 c1 e0 05          	shl    $0x5,%rax
    ad1f:	48 01 e8             	add    %rbp,%rax
    ad22:	0f b7 08             	movzwl (%rax),%ecx
    ad25:	66 44 39 e9          	cmp    %r13w,%cx
    ad29:	75 dd                	jne    ad08 <do_add_thread+0xf8>
    ad2b:	eb ab                	jmp    acd8 <do_add_thread+0xc8>
    ad2d:	0f 1f 00             	nopl   (%rax)
    ad30:	ba 48 00 00 00       	mov    $0x48,%edx
    ad35:	48 8d b5 10 01 00 00 	lea    0x110(%rbp),%rsi
    ad3c:	4c 89 e7             	mov    %r12,%rdi
    ad3f:	e8 ac 8a 00 00       	call   137f0 <memcpy>
    ad44:	4c 89 e0             	mov    %r12,%rax
    ad47:	ba 00 01 00 00       	mov    $0x100,%edx
    ad4c:	4c 89 e7             	mov    %r12,%rdi
    ad4f:	48 29 d8             	sub    %rbx,%rax
    ad52:	49 01 44 24 10       	add    %rax,0x10(%r12)
    ad57:	4c 89 e0             	mov    %r12,%rax
    ad5a:	be 00 10 00 00       	mov    $0x1000,%esi
    ad5f:	48 29 d8             	sub    %rbx,%rax
    ad62:	49 01 44 24 30       	add    %rax,0x30(%r12)
    ad67:	4c 89 e0             	mov    %r12,%rax
    ad6a:	48 29 d8             	sub    %rbx,%rax
    ad6d:	49 01 44 24 38       	add    %rax,0x38(%r12)
    ad72:	e8 79 47 00 00       	call   f4f0 <mm_modify_type>
    ad77:	85 c0                	test   %eax,%eax
    ad79:	0f 95 c0             	setne  %al
    ad7c:	0f b6 c0             	movzbl %al,%eax
    ad7f:	e9 2e ff ff ff       	jmp    acb2 <do_add_thread+0xa2>
    ad84:	0f 1f 40 00          	nopl   0x0(%rax)
    ad88:	48 8b 3c 24          	mov    (%rsp),%rdi
    ad8c:	8b 70 04             	mov    0x4(%rax),%esi
    ad8f:	48 8b 40 08          	mov    0x8(%rax),%rax
    ad93:	48 01 df             	add    %rbx,%rdi
    ad96:	48 c1 e6 0c          	shl    $0xc,%rsi
    ad9a:	48 01 c7             	add    %rax,%rdi
    ad9d:	e8 1e 47 00 00       	call   f4c0 <mm_commit>
    ada2:	85 c0                	test   %eax,%eax
    ada4:	0f 84 40 ff ff ff    	je     acea <do_add_thread+0xda>
    adaa:	e9 fe fe ff ff       	jmp    acad <do_add_thread+0x9d>
    adaf:	e8 8c 8d 00 00       	call   13b40 <__stack_chk_fail>
    adb4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    adbb:	00 00 00 
    adbe:	66 90                	xchg   %ax,%ax

000000000000adc0 <sgx_set_ssa_aexnotify>:
    adc0:	f3 0f 1e fa          	endbr64 
    adc4:	55                   	push   %rbp
    adc5:	89 fd                	mov    %edi,%ebp
    adc7:	53                   	push   %rbx
    adc8:	48 83 ec 08          	sub    $0x8,%rsp
    adcc:	e8 72 ab 01 00       	call   25943 <get_thread_data>
    add1:	48 85 c0             	test   %rax,%rax
    add4:	74 32                	je     ae08 <sgx_set_ssa_aexnotify+0x48>
    add6:	48 89 c3             	mov    %rax,%rbx
    add9:	e8 12 9f 01 00       	call   24cf0 <sgx_self_report>
    adde:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    ade2:	74 24                	je     ae08 <sgx_set_ssa_aexnotify+0x48>
    ade4:	48 8b 53 20          	mov    0x20(%rbx),%rdx
    ade8:	0f b6 82 a7 00 00 00 	movzbl 0xa7(%rdx),%eax
    adef:	85 ed                	test   %ebp,%ebp
    adf1:	74 25                	je     ae18 <sgx_set_ssa_aexnotify+0x58>
    adf3:	83 c8 01             	or     $0x1,%eax
    adf6:	88 82 a7 00 00 00    	mov    %al,0xa7(%rdx)
    adfc:	48 83 c4 08          	add    $0x8,%rsp
    ae00:	31 c0                	xor    %eax,%eax
    ae02:	5b                   	pop    %rbx
    ae03:	5d                   	pop    %rbp
    ae04:	c3                   	ret    
    ae05:	0f 1f 00             	nopl   (%rax)
    ae08:	48 83 c4 08          	add    $0x8,%rsp
    ae0c:	b8 01 00 00 00       	mov    $0x1,%eax
    ae11:	5b                   	pop    %rbx
    ae12:	5d                   	pop    %rbp
    ae13:	c3                   	ret    
    ae14:	0f 1f 40 00          	nopl   0x0(%rax)
    ae18:	83 e0 fe             	and    $0xfffffffe,%eax
    ae1b:	88 82 a7 00 00 00    	mov    %al,0xa7(%rdx)
    ae21:	48 83 c4 08          	add    $0x8,%rsp
    ae25:	31 c0                	xor    %eax,%eax
    ae27:	5b                   	pop    %rbx
    ae28:	5d                   	pop    %rbp
    ae29:	c3                   	ret    
    ae2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000ae30 <sgx_apply_mitigations>:
    ae30:	f3 0f 1e fa          	endbr64 
    ae34:	55                   	push   %rbp
    ae35:	48 89 fd             	mov    %rdi,%rbp
    ae38:	53                   	push   %rbx
    ae39:	48 83 ec 08          	sub    $0x8,%rsp
    ae3d:	e8 01 ab 01 00       	call   25943 <get_thread_data>
    ae42:	48 8b 58 48          	mov    0x48(%rax),%rbx
    ae46:	48 85 db             	test   %rbx,%rbx
    ae49:	74 17                	je     ae62 <sgx_apply_mitigations+0x32>
    ae4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ae50:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    ae54:	48 89 ef             	mov    %rbp,%rdi
    ae57:	ff 13                	call   *(%rbx)
    ae59:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
    ae5d:	48 85 db             	test   %rbx,%rbx
    ae60:	75 ee                	jne    ae50 <sgx_apply_mitigations+0x20>
    ae62:	48 83 c4 08          	add    $0x8,%rsp
    ae66:	31 c0                	xor    %eax,%eax
    ae68:	5b                   	pop    %rbx
    ae69:	5d                   	pop    %rbp
    ae6a:	c3                   	ret    
    ae6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ae70 <_pthread_thread_run>:
    ae70:	f3 0f 1e fa          	endbr64 
    ae74:	31 c0                	xor    %eax,%eax
    ae76:	c3                   	ret    
    ae77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ae7e:	00 00 

000000000000ae80 <_ZL11do_save_tcsPv>:
    ae80:	55                   	push   %rbp
    ae81:	53                   	push   %rbx
    ae82:	48 89 fb             	mov    %rdi,%rbx
    ae85:	48 83 ec 18          	sub    $0x18,%rsp
    ae89:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ae90:	00 00 
    ae92:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    ae97:	31 c0                	xor    %eax,%eax
    ae99:	48 83 3d 4f 73 02 00 	cmpq   $0x0,0x2734f(%rip)        # 321f0 <_ZL12g_tcs_cookie>
    aea0:	00 
    aea1:	74 4d                	je     aef0 <_ZL11do_save_tcsPv+0x70>
    aea3:	bf 10 00 00 00       	mov    $0x10,%edi
    aea8:	e8 83 5b 00 00       	call   10a30 <dlmalloc>
    aead:	48 85 c0             	test   %rax,%rax
    aeb0:	74 68                	je     af1a <_ZL11do_save_tcsPv+0x9a>
    aeb2:	48 8b 15 3f 73 02 00 	mov    0x2733f(%rip),%rdx        # 321f8 <_ZL10g_tcs_node>
    aeb9:	48 33 1d 30 73 02 00 	xor    0x27330(%rip),%rbx        # 321f0 <_ZL12g_tcs_cookie>
    aec0:	48 89 05 31 73 02 00 	mov    %rax,0x27331(%rip)        # 321f8 <_ZL10g_tcs_node>
    aec7:	48 89 18             	mov    %rbx,(%rax)
    aeca:	48 89 50 08          	mov    %rdx,0x8(%rax)
    aece:	31 c0                	xor    %eax,%eax
    aed0:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    aed5:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    aedc:	00 00 
    aede:	75 62                	jne    af42 <_ZL11do_save_tcsPv+0xc2>
    aee0:	48 83 c4 18          	add    $0x18,%rsp
    aee4:	5b                   	pop    %rbx
    aee5:	5d                   	pop    %rbp
    aee6:	c3                   	ret    
    aee7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    aeee:	00 00 
    aef0:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    aef7:	00 
    aef8:	48 89 e5             	mov    %rsp,%rbp
    aefb:	eb 0c                	jmp    af09 <_ZL11do_save_tcsPv+0x89>
    aefd:	0f 1f 00             	nopl   (%rax)
    af00:	48 8b 04 24          	mov    (%rsp),%rax
    af04:	48 85 c0             	test   %rax,%rax
    af07:	75 1f                	jne    af28 <_ZL11do_save_tcsPv+0xa8>
    af09:	be 08 00 00 00       	mov    $0x8,%esi
    af0e:	48 89 ef             	mov    %rbp,%rdi
    af11:	e8 8a f7 ff ff       	call   a6a0 <sgx_read_rand>
    af16:	85 c0                	test   %eax,%eax
    af18:	74 e6                	je     af00 <_ZL11do_save_tcsPv+0x80>
    af1a:	b8 01 00 00 00       	mov    $0x1,%eax
    af1f:	eb af                	jmp    aed0 <_ZL11do_save_tcsPv+0x50>
    af21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    af28:	48 83 3d c0 72 02 00 	cmpq   $0x0,0x272c0(%rip)        # 321f0 <_ZL12g_tcs_cookie>
    af2f:	00 
    af30:	0f 85 6d ff ff ff    	jne    aea3 <_ZL11do_save_tcsPv+0x23>
    af36:	48 89 05 b3 72 02 00 	mov    %rax,0x272b3(%rip)        # 321f0 <_ZL12g_tcs_cookie>
    af3d:	e9 61 ff ff ff       	jmp    aea3 <_ZL11do_save_tcsPv+0x23>
    af42:	e8 f9 8b 00 00       	call   13b40 <__stack_chk_fail>
    af47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    af4e:	00 00 

000000000000af50 <_ZL18add_static_threadsPVK9_layout_tS1_m>:
    af50:	48 39 f7             	cmp    %rsi,%rdi
    af53:	0f 83 cf 00 00 00    	jae    b028 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xd8>
    af59:	41 56                	push   %r14
    af5b:	41 55                	push   %r13
    af5d:	41 54                	push   %r12
    af5f:	49 89 d4             	mov    %rdx,%r12
    af62:	55                   	push   %rbp
    af63:	48 89 f5             	mov    %rsi,%rbp
    af66:	53                   	push   %rbx
    af67:	48 89 fb             	mov    %rdi,%rbx
    af6a:	eb 11                	jmp    af7d <_ZL18add_static_threadsPVK9_layout_tS1_m+0x2d>
    af6c:	0f 1f 40 00          	nopl   0x0(%rax)
    af70:	48 83 c3 20          	add    $0x20,%rbx
    af74:	48 39 dd             	cmp    %rbx,%rbp
    af77:	0f 86 9b 00 00 00    	jbe    b018 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xc8>
    af7d:	0f b7 03             	movzwl (%rbx),%eax
    af80:	f6 c4 10             	test   $0x10,%ah
    af83:	75 13                	jne    af98 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x48>
    af85:	48 8b 43 18          	mov    0x18(%rbx),%rax
    af89:	f6 c4 01             	test   $0x1,%ah
    af8c:	74 0a                	je     af98 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x48>
    af8e:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
    af92:	66 83 f8 03          	cmp    $0x3,%ax
    af96:	74 50                	je     afe8 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x98>
    af98:	0f b7 03             	movzwl (%rbx),%eax
    af9b:	f6 c4 10             	test   $0x10,%ah
    af9e:	74 d0                	je     af70 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    afa0:	8b 43 04             	mov    0x4(%rbx),%eax
    afa3:	85 c0                	test   %eax,%eax
    afa5:	74 c9                	je     af70 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    afa7:	45 31 ed             	xor    %r13d,%r13d
    afaa:	45 31 f6             	xor    %r14d,%r14d
    afad:	48 8b 43 08          	mov    0x8(%rbx),%rax
    afb1:	0f b7 7b 02          	movzwl 0x2(%rbx),%edi
    afb5:	48 89 de             	mov    %rbx,%rsi
    afb8:	f7 df                	neg    %edi
    afba:	49 01 c6             	add    %rax,%r14
    afbd:	48 63 ff             	movslq %edi,%rdi
    afc0:	4c 89 f2             	mov    %r14,%rdx
    afc3:	48 c1 e7 05          	shl    $0x5,%rdi
    afc7:	48 01 df             	add    %rbx,%rdi
    afca:	e8 81 ff ff ff       	call   af50 <_ZL18add_static_threadsPVK9_layout_tS1_m>
    afcf:	85 c0                	test   %eax,%eax
    afd1:	75 38                	jne    b00b <_ZL18add_static_threadsPVK9_layout_tS1_m+0xbb>
    afd3:	8b 43 04             	mov    0x4(%rbx),%eax
    afd6:	41 83 c5 01          	add    $0x1,%r13d
    afda:	44 39 e8             	cmp    %r13d,%eax
    afdd:	77 ce                	ja     afad <_ZL18add_static_threadsPVK9_layout_tS1_m+0x5d>
    afdf:	eb 8f                	jmp    af70 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    afe1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    afe8:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    afec:	4e 8d 2c 27          	lea    (%rdi,%r12,1),%r13
    aff0:	e8 03 a9 01 00       	call   258f8 <get_enclave_base>
    aff5:	4a 8d 3c 28          	lea    (%rax,%r13,1),%rdi
    aff9:	e8 82 fe ff ff       	call   ae80 <_ZL11do_save_tcsPv>
    affe:	85 c0                	test   %eax,%eax
    b000:	0f 84 6a ff ff ff    	je     af70 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    b006:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    b00b:	5b                   	pop    %rbx
    b00c:	5d                   	pop    %rbp
    b00d:	41 5c                	pop    %r12
    b00f:	41 5d                	pop    %r13
    b011:	41 5e                	pop    %r14
    b013:	c3                   	ret    
    b014:	0f 1f 40 00          	nopl   0x0(%rax)
    b018:	5b                   	pop    %rbx
    b019:	31 c0                	xor    %eax,%eax
    b01b:	5d                   	pop    %rbp
    b01c:	41 5c                	pop    %r12
    b01e:	41 5d                	pop    %r13
    b020:	41 5e                	pop    %r14
    b022:	c3                   	ret    
    b023:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b028:	31 c0                	xor    %eax,%eax
    b02a:	c3                   	ret    
    b02b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000b030 <_ZL10trts_ecalljPv>:
    b030:	f3 0f 1e fa          	endbr64 
    b034:	0f b6 05 65 53 02 00 	movzbl 0x25365(%rip),%eax        # 303a0 <_ZL16g_is_first_ecall>
    b03b:	41 54                	push   %r12
    b03d:	55                   	push   %rbp
    b03e:	48 89 f5             	mov    %rsi,%rbp
    b041:	53                   	push   %rbx
    b042:	89 fb                	mov    %edi,%ebx
    b044:	84 c0                	test   %al,%al
    b046:	0f 85 c4 00 00 00    	jne    b110 <_ZL10trts_ecalljPv+0xe0>
    b04c:	83 fb fa             	cmp    $0xfffffffa,%ebx
    b04f:	0f 84 8b 00 00 00    	je     b0e0 <_ZL10trts_ecalljPv+0xb0>
    b055:	4c 8d 25 24 49 02 00 	lea    0x24924(%rip),%r12        # 2f980 <g_ecall_table>
    b05c:	49 3b 1c 24          	cmp    (%r12),%rbx
    b060:	73 6e                	jae    b0d0 <_ZL10trts_ecalljPv+0xa0>
    b062:	e8 dc a8 01 00       	call   25943 <get_thread_data>
    b067:	0f ae e8             	lfence 
    b06a:	48 8b 50 08          	mov    0x8(%rax),%rdx
    b06e:	48 3b 50 10          	cmp    0x10(%rax),%rdx
    b072:	0f 84 b8 00 00 00    	je     b130 <_ZL10trts_ecalljPv+0x100>
    b078:	48 81 7a 20 44 49 43 	cmpq   $0x4f434944,0x20(%rdx)
    b07f:	4f 
    b080:	0f 85 65 01 00 00    	jne    b1eb <_ZL10trts_ecalljPv+0x1bb>
    b086:	48 8d 05 73 af 01 00 	lea    0x1af73(%rip),%rax        # 26000 <g_dyn_entry_table>
    b08d:	48 8b 52 28          	mov    0x28(%rdx),%rdx
    b091:	48 3b 10             	cmp    (%rax),%rdx
    b094:	73 3a                	jae    b0d0 <_ZL10trts_ecalljPv+0xa0>
    b096:	49 0f af 14 24       	imul   (%r12),%rdx
    b09b:	48 01 d8             	add    %rbx,%rax
    b09e:	80 7c 02 08 00       	cmpb   $0x0,0x8(%rdx,%rax,1)
    b0a3:	74 7a                	je     b11f <_ZL10trts_ecalljPv+0xef>
    b0a5:	48 c1 e3 04          	shl    $0x4,%rbx
    b0a9:	31 f6                	xor    %esi,%esi
    b0ab:	49 8b 5c 1c 08       	mov    0x8(%r12,%rbx,1),%rbx
    b0b0:	48 89 df             	mov    %rbx,%rdi
    b0b3:	e8 e8 f3 ff ff       	call   a4a0 <sgx_is_within_enclave>
    b0b8:	85 c0                	test   %eax,%eax
    b0ba:	74 3c                	je     b0f8 <_ZL10trts_ecalljPv+0xc8>
    b0bc:	0f ae e8             	lfence 
    b0bf:	48 89 d8             	mov    %rbx,%rax
    b0c2:	48 89 ef             	mov    %rbp,%rdi
    b0c5:	5b                   	pop    %rbx
    b0c6:	5d                   	pop    %rbp
    b0c7:	41 5c                	pop    %r12
    b0c9:	ff e0                	jmp    *%rax
    b0cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b0d0:	41 bc 01 10 00 00    	mov    $0x1001,%r12d
    b0d6:	44 89 e0             	mov    %r12d,%eax
    b0d9:	5b                   	pop    %rbx
    b0da:	5d                   	pop    %rbp
    b0db:	41 5c                	pop    %r12
    b0dd:	c3                   	ret    
    b0de:	66 90                	xchg   %ax,%ax
    b0e0:	0f ae e8             	lfence 
    b0e3:	48 89 ef             	mov    %rbp,%rdi
    b0e6:	5b                   	pop    %rbx
    b0e7:	48 8d 05 82 fd ff ff 	lea    -0x27e(%rip),%rax        # ae70 <_pthread_thread_run>
    b0ee:	5d                   	pop    %rbp
    b0ef:	41 5c                	pop    %r12
    b0f1:	ff e0                	jmp    *%rax
    b0f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b0f8:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    b0fe:	5b                   	pop    %rbx
    b0ff:	5d                   	pop    %rbp
    b100:	44 89 e0             	mov    %r12d,%eax
    b103:	41 5c                	pop    %r12
    b105:	c3                   	ret    
    b106:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b10d:	00 00 00 
    b110:	e8 2e a8 01 00       	call   25943 <get_thread_data>
    b115:	48 8b 48 10          	mov    0x10(%rax),%rcx
    b119:	48 39 48 08          	cmp    %rcx,0x8(%rax)
    b11d:	74 29                	je     b148 <_ZL10trts_ecalljPv+0x118>
    b11f:	41 bc 07 10 00 00    	mov    $0x1007,%r12d
    b125:	5b                   	pop    %rbx
    b126:	5d                   	pop    %rbp
    b127:	44 89 e0             	mov    %r12d,%eax
    b12a:	41 5c                	pop    %r12
    b12c:	c3                   	ret    
    b12d:	0f 1f 00             	nopl   (%rax)
    b130:	48 89 d8             	mov    %rbx,%rax
    b133:	48 c1 e0 04          	shl    $0x4,%rax
    b137:	41 80 7c 04 10 00    	cmpb   $0x0,0x10(%r12,%rax,1)
    b13d:	0f 84 62 ff ff ff    	je     b0a5 <_ZL10trts_ecalljPv+0x75>
    b143:	eb da                	jmp    b11f <_ZL10trts_ecalljPv+0xef>
    b145:	0f 1f 00             	nopl   (%rax)
    b148:	48 8d 3d 9d 70 02 00 	lea    0x2709d(%rip),%rdi        # 321ec <_ZL10g_ife_lock>
    b14f:	e8 1c 4f 00 00       	call   10070 <sgx_spin_lock>
    b154:	0f b6 05 45 52 02 00 	movzbl 0x25245(%rip),%eax        # 303a0 <_ZL16g_is_first_ecall>
    b15b:	84 c0                	test   %al,%al
    b15d:	74 53                	je     b1b2 <_ZL10trts_ecalljPv+0x182>
    b15f:	48 8d 05 86 4b 02 00 	lea    0x24b86(%rip),%rax        # 2fcec <EDMM_supported>
    b166:	8b 00                	mov    (%rax),%eax
    b168:	85 c0                	test   %eax,%eax
    b16a:	74 3a                	je     b1a6 <_ZL10trts_ecalljPv+0x176>
    b16c:	48 8d 05 cd c7 01 00 	lea    0x1c7cd(%rip),%rax        # 27940 <g_global_data>
    b173:	31 d2                	xor    %edx,%edx
    b175:	8b b0 58 01 00 00    	mov    0x158(%rax),%esi
    b17b:	48 8d b8 60 01 00 00 	lea    0x160(%rax),%rdi
    b182:	48 c1 e6 05          	shl    $0x5,%rsi
    b186:	48 01 fe             	add    %rdi,%rsi
    b189:	e8 c2 fd ff ff       	call   af50 <_ZL18add_static_threadsPVK9_layout_tS1_m>
    b18e:	85 c0                	test   %eax,%eax
    b190:	75 31                	jne    b1c3 <_ZL10trts_ecalljPv+0x193>
    b192:	e8 61 a7 01 00       	call   258f8 <get_enclave_base>
    b197:	48 89 c7             	mov    %rax,%rdi
    b19a:	e8 f1 19 00 00       	call   cb90 <change_protection>
    b19f:	41 89 c4             	mov    %eax,%r12d
    b1a2:	85 c0                	test   %eax,%eax
    b1a4:	75 34                	jne    b1da <_ZL10trts_ecalljPv+0x1aa>
    b1a6:	e8 f5 1c 00 00       	call   cea0 <init_global_object>
    b1ab:	c6 05 ee 51 02 00 00 	movb   $0x0,0x251ee(%rip)        # 303a0 <_ZL16g_is_first_ecall>
    b1b2:	48 8d 3d 33 70 02 00 	lea    0x27033(%rip),%rdi        # 321ec <_ZL10g_ife_lock>
    b1b9:	e8 52 4f 00 00       	call   10110 <sgx_spin_unlock>
    b1be:	e9 89 fe ff ff       	jmp    b04c <_ZL10trts_ecalljPv+0x1c>
    b1c3:	48 8d 3d 22 70 02 00 	lea    0x27022(%rip),%rdi        # 321ec <_ZL10g_ife_lock>
    b1ca:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    b1d0:	e8 3b 4f 00 00       	call   10110 <sgx_spin_unlock>
    b1d5:	e9 fc fe ff ff       	jmp    b0d6 <_ZL10trts_ecalljPv+0xa6>
    b1da:	48 8d 3d 0b 70 02 00 	lea    0x2700b(%rip),%rdi        # 321ec <_ZL10g_ife_lock>
    b1e1:	e8 2a 4f 00 00       	call   10110 <sgx_spin_unlock>
    b1e6:	e9 eb fe ff ff       	jmp    b0d6 <_ZL10trts_ecalljPv+0xa6>
    b1eb:	e8 47 ab 01 00       	call   25d37 <abort>

000000000000b1f0 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.isra.0.constprop.0>:
    b1f0:	e9 3b fe ff ff       	jmp    b030 <_ZL10trts_ecalljPv>
    b1f5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b1fc:	00 00 00 
    b1ff:	90                   	nop

000000000000b200 <_Z16_pthread_enabledv>:
    b200:	f3 0f 1e fa          	endbr64 
    b204:	31 c0                	xor    %eax,%eax
    b206:	c3                   	ret    
    b207:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b20e:	00 00 

000000000000b210 <_Z24_pthread_tls_store_state9_status_t>:
    b210:	f3 0f 1e fa          	endbr64 
    b214:	c3                   	ret    
    b215:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b21c:	00 00 00 
    b21f:	90                   	nop

000000000000b220 <_Z22_pthread_tls_get_statev>:
    b220:	f3 0f 1e fa          	endbr64 
    b224:	31 c0                	xor    %eax,%eax
    b226:	c3                   	ret    
    b227:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b22e:	00 00 

000000000000b230 <_Z26_pthread_tls_store_contextPv>:
    b230:	f3 0f 1e fa          	endbr64 
    b234:	c3                   	ret    
    b235:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b23c:	00 00 00 
    b23f:	90                   	nop

000000000000b240 <_Z20_pthread_wakeup_joinPv>:
    b240:	f3 0f 1e fa          	endbr64 
    b244:	c3                   	ret    
    b245:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b24c:	00 00 00 
    b24f:	90                   	nop

000000000000b250 <_Z24_pthread_tls_destructorsv>:
    b250:	f3 0f 1e fa          	endbr64 
    b254:	c3                   	ret    
    b255:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b25c:	00 00 00 
    b25f:	90                   	nop

000000000000b260 <tc_set_idle>:
    b260:	f3 0f 1e fa          	endbr64 
    b264:	c3                   	ret    
    b265:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b26c:	00 00 00 
    b26f:	90                   	nop

000000000000b270 <do_init_thread>:
    b270:	f3 0f 1e fa          	endbr64 
    b274:	41 57                	push   %r15
    b276:	ba c0 00 00 00       	mov    $0xc0,%edx
    b27b:	41 56                	push   %r14
    b27d:	41 55                	push   %r13
    b27f:	41 54                	push   %r12
    b281:	41 89 f4             	mov    %esi,%r12d
    b284:	55                   	push   %rbp
    b285:	48 89 fd             	mov    %rdi,%rbp
    b288:	53                   	push   %rbx
    b289:	48 83 ec 28          	sub    $0x28,%rsp
    b28d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b294:	00 00 
    b296:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    b29b:	31 c0                	xor    %eax,%eax
    b29d:	48 8d 05 9c c6 01 00 	lea    0x1c69c(%rip),%rax        # 27940 <g_global_data>
    b2a4:	48 8d 70 50          	lea    0x50(%rax),%rsi
    b2a8:	48 8b 58 50          	mov    0x50(%rax),%rbx
    b2ac:	48 01 fb             	add    %rdi,%rbx
    b2af:	48 89 df             	mov    %rbx,%rdi
    b2b2:	4c 8b 7b 28          	mov    0x28(%rbx),%r15
    b2b6:	4c 8b 73 30          	mov    0x30(%rbx),%r14
    b2ba:	4c 8b ab b0 00 00 00 	mov    0xb0(%rbx),%r13
    b2c1:	e8 2a 85 00 00       	call   137f0 <memcpy>
    b2c6:	48 8d 85 00 fc ff ff 	lea    -0x400(%rbp),%rax
    b2cd:	48 8b 53 18          	mov    0x18(%rbx),%rdx
    b2d1:	48 01 2b             	add    %rbp,(%rbx)
    b2d4:	48 01 43 08          	add    %rax,0x8(%rbx)
    b2d8:	48 01 43 10          	add    %rax,0x10(%rbx)
    b2dc:	48 8d 05 e5 49 02 00 	lea    0x249e5(%rip),%rax        # 2fcc8 <__intel_security_cookie>
    b2e3:	48 01 ea             	add    %rbp,%rdx
    b2e6:	48 01 6b 20          	add    %rbp,0x20(%rbx)
    b2ea:	48 8b 00             	mov    (%rax),%rax
    b2ed:	48 01 6b 58          	add    %rbp,0x58(%rbx)
    b2f1:	48 01 6b 70          	add    %rbp,0x70(%rbx)
    b2f5:	48 01 6b 68          	add    %rbp,0x68(%rbx)
    b2f9:	48 89 53 18          	mov    %rdx,0x18(%rbx)
    b2fd:	48 89 93 b0 00 00 00 	mov    %rdx,0xb0(%rbx)
    b304:	4c 89 7b 28          	mov    %r15,0x28(%rbx)
    b308:	4c 89 73 30          	mov    %r14,0x30(%rbx)
    b30c:	48 89 85 08 fc fe ff 	mov    %rax,-0x103f8(%rbp)
    b313:	48 8d 05 d2 49 02 00 	lea    0x249d2(%rip),%rax        # 2fcec <EDMM_supported>
    b31a:	8b 00                	mov    (%rax),%eax
    b31c:	85 c0                	test   %eax,%eax
    b31e:	74 09                	je     b329 <do_init_thread+0xb9>
    b320:	45 84 e4             	test   %r12b,%r12b
    b323:	0f 85 b7 00 00 00    	jne    b3e0 <do_init_thread+0x170>
    b329:	48 8d 15 a4 49 02 00 	lea    0x249a4(%rip),%rdx        # 2fcd4 <g_aexnotify_supported>
    b330:	83 3a 01             	cmpl   $0x1,(%rdx)
    b333:	75 08                	jne    b33d <do_init_thread+0xcd>
    b335:	48 c7 43 50 01 00 00 	movq   $0x1,0x50(%rbx)
    b33c:	00 
    b33d:	4d 85 ed             	test   %r13,%r13
    b340:	75 6e                	jne    b3b0 <do_init_thread+0x140>
    b342:	85 c0                	test   %eax,%eax
    b344:	75 7a                	jne    b3c0 <do_init_thread+0x150>
    b346:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    b34d:	00 00 
    b34f:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    b356:	00 00 
    b358:	e8 9b a5 01 00       	call   258f8 <get_enclave_base>
    b35d:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    b362:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    b367:	48 89 c7             	mov    %rax,%rdi
    b36a:	e8 a1 15 00 00       	call   c910 <elf_tls_info>
    b36f:	41 89 c0             	mov    %eax,%r8d
    b372:	b8 01 00 00 00       	mov    $0x1,%eax
    b377:	45 85 c0             	test   %r8d,%r8d
    b37a:	75 0a                	jne    b386 <do_init_thread+0x116>
    b37c:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
    b382:	75 6c                	jne    b3f0 <do_init_thread+0x180>
    b384:	31 c0                	xor    %eax,%eax
    b386:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    b38b:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    b392:	00 00 
    b394:	0f 85 bb 00 00 00    	jne    b455 <do_init_thread+0x1e5>
    b39a:	48 83 c4 28          	add    $0x28,%rsp
    b39e:	5b                   	pop    %rbx
    b39f:	5d                   	pop    %rbp
    b3a0:	41 5c                	pop    %r12
    b3a2:	41 5d                	pop    %r13
    b3a4:	41 5e                	pop    %r14
    b3a6:	41 5f                	pop    %r15
    b3a8:	c3                   	ret    
    b3a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b3b0:	4c 89 ab b0 00 00 00 	mov    %r13,0xb0(%rbx)
    b3b7:	eb 8d                	jmp    b346 <do_init_thread+0xd6>
    b3b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b3c0:	45 84 e4             	test   %r12b,%r12b
    b3c3:	74 7b                	je     b440 <do_init_thread+0x1d0>
    b3c5:	e8 e6 f7 ff ff       	call   abb0 <get_dynamic_stack_max_page>
    b3ca:	89 c0                	mov    %eax,%eax
    b3cc:	48 c1 e0 0c          	shl    $0xc,%rax
    b3d0:	48 01 83 b0 00 00 00 	add    %rax,0xb0(%rbx)
    b3d7:	e9 6a ff ff ff       	jmp    b346 <do_init_thread+0xd6>
    b3dc:	0f 1f 40 00          	nopl   0x0(%rax)
    b3e0:	48 c7 43 30 01 00 00 	movq   $0x1,0x30(%rbx)
    b3e7:	00 
    b3e8:	e9 3c ff ff ff       	jmp    b329 <do_init_thread+0xb9>
    b3ed:	0f 1f 00             	nopl   (%rax)
    b3f0:	48 8b 03             	mov    (%rbx),%rax
    b3f3:	48 8b 7b 68          	mov    0x68(%rbx),%rdi
    b3f7:	31 f6                	xor    %esi,%esi
    b3f9:	48 8d 90 ff 0f 00 00 	lea    0xfff(%rax),%rdx
    b400:	48 29 fa             	sub    %rdi,%rdx
    b403:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    b40a:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    b411:	e8 fa 85 00 00       	call   13a10 <memset>
    b416:	48 8b 7b 68          	mov    0x68(%rbx),%rdi
    b41a:	48 8b 03             	mov    (%rbx),%rax
    b41d:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    b422:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    b427:	48 29 f8             	sub    %rdi,%rax
    b42a:	48 39 c2             	cmp    %rax,%rdx
    b42d:	0f 87 51 ff ff ff    	ja     b384 <do_init_thread+0x114>
    b433:	e8 b8 83 00 00       	call   137f0 <memcpy>
    b438:	e9 47 ff ff ff       	jmp    b384 <do_init_thread+0x114>
    b43d:	0f 1f 00             	nopl   (%rax)
    b440:	48 89 ef             	mov    %rbp,%rdi
    b443:	e8 98 f6 ff ff       	call   aae0 <is_dynamic_thread>
    b448:	85 c0                	test   %eax,%eax
    b44a:	0f 85 75 ff ff ff    	jne    b3c5 <do_init_thread+0x155>
    b450:	e9 f1 fe ff ff       	jmp    b346 <do_init_thread+0xd6>
    b455:	e8 e6 86 00 00       	call   13b40 <__stack_chk_fail>
    b45a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000b460 <do_ecall>:
    b460:	f3 0f 1e fa          	endbr64 
    b464:	55                   	push   %rbp
    b465:	48 89 d5             	mov    %rdx,%rbp
    b468:	48 83 ec 70          	sub    $0x70,%rsp
    b46c:	89 7c 24 10          	mov    %edi,0x10(%rsp)
    b470:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    b475:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b47c:	00 00 
    b47e:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    b483:	31 c0                	xor    %eax,%eax
    b485:	e8 7a a4 01 00       	call   25904 <get_enclave_state>
    b48a:	41 89 c0             	mov    %eax,%r8d
    b48d:	b8 01 00 00 00       	mov    $0x1,%eax
    b492:	41 83 f8 02          	cmp    $0x2,%r8d
    b496:	74 20                	je     b4b8 <do_ecall+0x58>
    b498:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
    b49d:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    b4a4:	00 00 
    b4a6:	0f 85 f2 01 00 00    	jne    b69e <do_ecall+0x23e>
    b4ac:	48 83 c4 70          	add    $0x70,%rsp
    b4b0:	5d                   	pop    %rbp
    b4b1:	c3                   	ret    
    b4b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b4b8:	e8 86 a4 01 00       	call   25943 <get_thread_data>
    b4bd:	48 89 04 24          	mov    %rax,(%rsp)
    b4c1:	48 85 c0             	test   %rax,%rax
    b4c4:	0f 84 1a 01 00 00    	je     b5e4 <do_ecall+0x184>
    b4ca:	48 8b 04 24          	mov    (%rsp),%rax
    b4ce:	48 8b 48 08          	mov    0x8(%rax),%rcx
    b4d2:	48 39 48 10          	cmp    %rcx,0x10(%rax)
    b4d6:	0f 84 f4 00 00 00    	je     b5d0 <do_ecall+0x170>
    b4dc:	e8 62 a4 01 00       	call   25943 <get_thread_data>
    b4e1:	48 83 78 50 01       	cmpq   $0x1,0x50(%rax)
    b4e6:	48 89 04 24          	mov    %rax,(%rsp)
    b4ea:	0f 84 10 01 00 00    	je     b600 <do_ecall+0x1a0>
    b4f0:	48 8b 04 24          	mov    (%rsp),%rax
    b4f4:	48 8b 48 08          	mov    0x8(%rax),%rcx
    b4f8:	48 39 48 10          	cmp    %rcx,0x10(%rax)
    b4fc:	74 4a                	je     b548 <do_ecall+0xe8>
    b4fe:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    b503:	8b 7c 24 10          	mov    0x10(%rsp),%edi
    b507:	e8 24 fb ff ff       	call   b030 <_ZL10trts_ecalljPv>
    b50c:	48 8d 15 2d c4 01 00 	lea    0x1c42d(%rip),%rdx        # 27940 <g_global_data>
    b513:	48 8b 52 38          	mov    0x38(%rdx),%rdx
    b517:	48 85 d2             	test   %rdx,%rdx
    b51a:	0f 84 78 ff ff ff    	je     b498 <do_ecall+0x38>
    b520:	48 8b 0c 24          	mov    (%rsp),%rcx
    b524:	48 8b 71 08          	mov    0x8(%rcx),%rsi
    b528:	48 39 71 10          	cmp    %rsi,0x10(%rcx)
    b52c:	0f 85 66 ff ff ff    	jne    b498 <do_ecall+0x38>
    b532:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
    b536:	e8 25 fd ff ff       	call   b260 <tc_set_idle>
    b53b:	8b 44 24 1c          	mov    0x1c(%rsp),%eax
    b53f:	e9 54 ff ff ff       	jmp    b498 <do_ecall+0x38>
    b544:	0f 1f 40 00          	nopl   0x0(%rax)
    b548:	31 ff                	xor    %edi,%edi
    b54a:	e8 a1 f2 ff ff       	call   a7f0 <sgx_wrpkru>
    b54f:	e8 ac fc ff ff       	call   b200 <_Z16_pthread_enabledv>
    b554:	84 c0                	test   %al,%al
    b556:	0f 84 04 01 00 00    	je     b660 <do_ecall+0x200>
    b55c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b560:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    b565:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    b56a:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    b56f:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    b574:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    b579:	e8 2d 8d 00 00       	call   142ab <_setjmp>
    b57e:	f3 0f 1e fa          	endbr64 
    b582:	85 c0                	test   %eax,%eax
    b584:	0f 84 96 00 00 00    	je     b620 <do_ecall+0x1c0>
    b58a:	48 8b 0c 24          	mov    (%rsp),%rcx
    b58e:	48 8b 41 10          	mov    0x10(%rcx),%rax
    b592:	48 89 41 08          	mov    %rax,0x8(%rcx)
    b596:	b8 09 00 00 00       	mov    $0x9,%eax
    b59b:	bf 09 00 00 00       	mov    $0x9,%edi
    b5a0:	89 44 24 18          	mov    %eax,0x18(%rsp)
    b5a4:	e8 67 fc ff ff       	call   b210 <_Z24_pthread_tls_store_state9_status_t>
    b5a9:	8b 44 24 18          	mov    0x18(%rsp),%eax
    b5ad:	89 44 24 14          	mov    %eax,0x14(%rsp)
    b5b1:	e8 9a fc ff ff       	call   b250 <_Z24_pthread_tls_destructorsv>
    b5b6:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    b5bb:	e8 80 fc ff ff       	call   b240 <_Z20_pthread_wakeup_joinPv>
    b5c0:	8b 44 24 14          	mov    0x14(%rsp),%eax
    b5c4:	e9 43 ff ff ff       	jmp    b50c <do_ecall+0xac>
    b5c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b5d0:	48 8d 05 69 c3 01 00 	lea    0x1c369(%rip),%rax        # 27940 <g_global_data>
    b5d7:	48 8b 40 38          	mov    0x38(%rax),%rax
    b5db:	48 85 c0             	test   %rax,%rax
    b5de:	0f 84 9c 00 00 00    	je     b680 <do_ecall+0x220>
    b5e4:	31 f6                	xor    %esi,%esi
    b5e6:	48 89 ef             	mov    %rbp,%rdi
    b5e9:	e8 82 fc ff ff       	call   b270 <do_init_thread>
    b5ee:	85 c0                	test   %eax,%eax
    b5f0:	0f 84 e6 fe ff ff    	je     b4dc <do_ecall+0x7c>
    b5f6:	e9 9d fe ff ff       	jmp    b498 <do_ecall+0x38>
    b5fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b600:	48 8b 04 24          	mov    (%rsp),%rax
    b604:	bf 01 00 00 00       	mov    $0x1,%edi
    b609:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
    b610:	00 
    b611:	e8 aa f7 ff ff       	call   adc0 <sgx_set_ssa_aexnotify>
    b616:	e9 d5 fe ff ff       	jmp    b4f0 <do_ecall+0x90>
    b61b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b620:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    b625:	e8 06 fc ff ff       	call   b230 <_Z26_pthread_tls_store_contextPv>
    b62a:	0f c7 f0             	rdrand %eax
    b62d:	73 fb                	jae    b62a <do_ecall+0x1ca>
    b62f:	8b 6c 24 10          	mov    0x10(%rsp),%ebp
    b633:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    b638:	89 ef                	mov    %ebp,%edi
    b63a:	e8 b1 fb ff ff       	call   b1f0 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.isra.0.constprop.0>
    b63f:	83 fd fa             	cmp    $0xfffffffa,%ebp
    b642:	0f 84 53 ff ff ff    	je     b59b <do_ecall+0x13b>
    b648:	83 f8 09             	cmp    $0x9,%eax
    b64b:	0f 85 5c ff ff ff    	jne    b5ad <do_ecall+0x14d>
    b651:	e9 45 ff ff ff       	jmp    b59b <do_ecall+0x13b>
    b656:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b65d:	00 00 00 
    b660:	0f c7 f0             	rdrand %eax
    b663:	73 fb                	jae    b660 <do_ecall+0x200>
    b665:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    b66a:	8b 7c 24 10          	mov    0x10(%rsp),%edi
    b66e:	e8 7d fb ff ff       	call   b1f0 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.isra.0.constprop.0>
    b673:	e9 94 fe ff ff       	jmp    b50c <do_ecall+0xac>
    b678:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b67f:	00 
    b680:	e8 9b fb ff ff       	call   b220 <_Z22_pthread_tls_get_statev>
    b685:	83 f8 09             	cmp    $0x9,%eax
    b688:	0f 84 56 ff ff ff    	je     b5e4 <do_ecall+0x184>
    b68e:	83 7c 24 10 fa       	cmpl   $0xfffffffa,0x10(%rsp)
    b693:	0f 85 43 fe ff ff    	jne    b4dc <do_ecall+0x7c>
    b699:	e9 46 ff ff ff       	jmp    b5e4 <do_ecall+0x184>
    b69e:	e8 9d 84 00 00       	call   13b40 <__stack_chk_fail>
    b6a3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b6aa:	00 00 00 
    b6ad:	0f 1f 00             	nopl   (%rax)

000000000000b6b0 <do_ecall_add_thread>:
    b6b0:	f3 0f 1e fa          	endbr64 
    b6b4:	41 54                	push   %r12
    b6b6:	53                   	push   %rbx
    b6b7:	48 89 fb             	mov    %rdi,%rbx
    b6ba:	48 83 ec 08          	sub    $0x8,%rsp
    b6be:	e8 bd 05 00 00       	call   bc80 <is_utility_thread>
    b6c3:	3c 01                	cmp    $0x1,%al
    b6c5:	0f 85 ad 00 00 00    	jne    b778 <do_ecall_add_thread+0xc8>
    b6cb:	48 85 db             	test   %rbx,%rbx
    b6ce:	0f 84 a4 00 00 00    	je     b778 <do_ecall_add_thread+0xc8>
    b6d4:	be 08 00 00 00       	mov    $0x8,%esi
    b6d9:	48 89 df             	mov    %rbx,%rdi
    b6dc:	e8 1f ee ff ff       	call   a500 <sgx_is_outside_enclave>
    b6e1:	85 c0                	test   %eax,%eax
    b6e3:	0f 84 8f 00 00 00    	je     b778 <do_ecall_add_thread+0xc8>
    b6e9:	0f ae e8             	lfence 
    b6ec:	48 8b 1b             	mov    (%rbx),%rbx
    b6ef:	48 85 db             	test   %rbx,%rbx
    b6f2:	0f 84 80 00 00 00    	je     b778 <do_ecall_add_thread+0xc8>
    b6f8:	0f ae e8             	lfence 
    b6fb:	48 89 df             	mov    %rbx,%rdi
    b6fe:	e8 7d f7 ff ff       	call   ae80 <_ZL11do_save_tcsPv>
    b703:	41 89 c4             	mov    %eax,%r12d
    b706:	85 c0                	test   %eax,%eax
    b708:	75 74                	jne    b77e <do_ecall_add_thread+0xce>
    b70a:	48 89 df             	mov    %rbx,%rdi
    b70d:	e8 fe f4 ff ff       	call   ac10 <do_add_thread>
    b712:	41 89 c4             	mov    %eax,%r12d
    b715:	85 c0                	test   %eax,%eax
    b717:	74 65                	je     b77e <do_ecall_add_thread+0xce>
    b719:	e8 62 05 00 00       	call   bc80 <is_utility_thread>
    b71e:	84 c0                	test   %al,%al
    b720:	74 5c                	je     b77e <do_ecall_add_thread+0xce>
    b722:	4c 8b 05 cf 6a 02 00 	mov    0x26acf(%rip),%r8        # 321f8 <_ZL10g_tcs_node>
    b729:	4d 85 c0             	test   %r8,%r8
    b72c:	74 50                	je     b77e <do_ecall_add_thread+0xce>
    b72e:	48 8b 0d bb 6a 02 00 	mov    0x26abb(%rip),%rcx        # 321f0 <_ZL12g_tcs_cookie>
    b735:	49 8b 00             	mov    (%r8),%rax
    b738:	49 8b 78 08          	mov    0x8(%r8),%rdi
    b73c:	48 31 c8             	xor    %rcx,%rax
    b73f:	48 39 c3             	cmp    %rax,%rbx
    b742:	74 45                	je     b789 <do_ecall_add_thread+0xd9>
    b744:	48 85 ff             	test   %rdi,%rdi
    b747:	75 12                	jne    b75b <do_ecall_add_thread+0xab>
    b749:	eb 33                	jmp    b77e <do_ecall_add_thread+0xce>
    b74b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b750:	49 89 f8             	mov    %rdi,%r8
    b753:	48 85 c0             	test   %rax,%rax
    b756:	74 26                	je     b77e <do_ecall_add_thread+0xce>
    b758:	48 89 c7             	mov    %rax,%rdi
    b75b:	48 8b 17             	mov    (%rdi),%rdx
    b75e:	48 8b 47 08          	mov    0x8(%rdi),%rax
    b762:	48 31 ca             	xor    %rcx,%rdx
    b765:	48 39 d3             	cmp    %rdx,%rbx
    b768:	75 e6                	jne    b750 <do_ecall_add_thread+0xa0>
    b76a:	49 89 40 08          	mov    %rax,0x8(%r8)
    b76e:	e8 2d 6d 00 00       	call   124a0 <dlfree>
    b773:	eb 09                	jmp    b77e <do_ecall_add_thread+0xce>
    b775:	0f 1f 00             	nopl   (%rax)
    b778:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    b77e:	48 83 c4 08          	add    $0x8,%rsp
    b782:	44 89 e0             	mov    %r12d,%eax
    b785:	5b                   	pop    %rbx
    b786:	41 5c                	pop    %r12
    b788:	c3                   	ret    
    b789:	48 89 3d 68 6a 02 00 	mov    %rdi,0x26a68(%rip)        # 321f8 <_ZL10g_tcs_node>
    b790:	4c 89 c7             	mov    %r8,%rdi
    b793:	e8 08 6d 00 00       	call   124a0 <dlfree>
    b798:	eb e4                	jmp    b77e <do_ecall_add_thread+0xce>
    b79a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000b7a0 <do_uninit_enclave>:
    b7a0:	f3 0f 1e fa          	endbr64 
    b7a4:	48 8d 05 41 45 02 00 	lea    0x24541(%rip),%rax        # 2fcec <EDMM_supported>
    b7ab:	41 54                	push   %r12
    b7ad:	55                   	push   %rbp
    b7ae:	53                   	push   %rbx
    b7af:	8b 00                	mov    (%rax),%eax
    b7b1:	85 c0                	test   %eax,%eax
    b7b3:	0f 84 b4 00 00 00    	je     b86d <do_uninit_enclave+0xcd>
    b7b9:	49 89 fc             	mov    %rdi,%r12
    b7bc:	e8 bf 04 00 00       	call   bc80 <is_utility_thread>
    b7c1:	84 c0                	test   %al,%al
    b7c3:	0f 84 97 00 00 00    	je     b860 <do_uninit_enclave+0xc0>
    b7c9:	f0 83 0d 17 6a 02 00 	lock orl $0x1,0x26a17(%rip)        # 321e8 <g_uninit_flag>
    b7d0:	01 
    b7d1:	48 8b 2d 20 6a 02 00 	mov    0x26a20(%rip),%rbp        # 321f8 <_ZL10g_tcs_node>
    b7d8:	48 c7 05 15 6a 02 00 	movq   $0x0,0x26a15(%rip)        # 321f8 <_ZL10g_tcs_node>
    b7df:	00 00 00 00 
    b7e3:	48 85 ed             	test   %rbp,%rbp
    b7e6:	74 3a                	je     b822 <do_uninit_enclave+0x82>
    b7e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b7ef:	00 
    b7f0:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    b7f4:	48 33 3d f5 69 02 00 	xor    0x269f5(%rip),%rdi        # 321f0 <_ZL12g_tcs_cookie>
    b7fb:	4c 39 e7             	cmp    %r12,%rdi
    b7fe:	74 0e                	je     b80e <do_uninit_enclave+0x6e>
    b800:	be 00 10 00 00       	mov    $0x1000,%esi
    b805:	e8 d6 3c 00 00       	call   f4e0 <mm_dealloc>
    b80a:	85 c0                	test   %eax,%eax
    b80c:	75 5f                	jne    b86d <do_uninit_enclave+0xcd>
    b80e:	48 8b 5d 08          	mov    0x8(%rbp),%rbx
    b812:	48 89 ef             	mov    %rbp,%rdi
    b815:	e8 86 6c 00 00       	call   124a0 <dlfree>
    b81a:	48 89 dd             	mov    %rbx,%rbp
    b81d:	48 85 ed             	test   %rbp,%rbp
    b820:	75 ce                	jne    b7f0 <do_uninit_enclave+0x50>
    b822:	48 8d 3d c3 69 02 00 	lea    0x269c3(%rip),%rdi        # 321ec <_ZL10g_ife_lock>
    b829:	e8 42 48 00 00       	call   10070 <sgx_spin_lock>
    b82e:	0f b6 05 6b 4b 02 00 	movzbl 0x24b6b(%rip),%eax        # 303a0 <_ZL16g_is_first_ecall>
    b835:	84 c0                	test   %al,%al
    b837:	74 4f                	je     b888 <do_uninit_enclave+0xe8>
    b839:	48 8d 3d ac 69 02 00 	lea    0x269ac(%rip),%rdi        # 321ec <_ZL10g_ife_lock>
    b840:	e8 cb 48 00 00       	call   10110 <sgx_spin_unlock>
    b845:	bf 03 00 00 00       	mov    $0x3,%edi
    b84a:	e8 c6 a0 01 00       	call   25915 <set_enclave_state>
    b84f:	5b                   	pop    %rbx
    b850:	31 c0                	xor    %eax,%eax
    b852:	5d                   	pop    %rbp
    b853:	41 5c                	pop    %r12
    b855:	c3                   	ret    
    b856:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b85d:	00 00 00 
    b860:	e8 db f2 ff ff       	call   ab40 <is_dynamic_thread_exist>
    b865:	85 c0                	test   %eax,%eax
    b867:	0f 84 5c ff ff ff    	je     b7c9 <do_uninit_enclave+0x29>
    b86d:	bf 03 00 00 00       	mov    $0x3,%edi
    b872:	e8 9e a0 01 00       	call   25915 <set_enclave_state>
    b877:	5b                   	pop    %rbx
    b878:	b8 01 00 00 00       	mov    $0x1,%eax
    b87d:	5d                   	pop    %rbp
    b87e:	41 5c                	pop    %r12
    b880:	c3                   	ret    
    b881:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b888:	e8 b3 16 00 00       	call   cf40 <uninit_global_object>
    b88d:	eb aa                	jmp    b839 <do_uninit_enclave+0x99>
    b88f:	90                   	nop

000000000000b890 <sgx_ocall>:
    b890:	f3 0f 1e fa          	endbr64 
    b894:	8d 47 07             	lea    0x7(%rdi),%eax
    b897:	83 f8 05             	cmp    $0x5,%eax
    b89a:	76 12                	jbe    b8ae <sgx_ocall+0x1e>
    b89c:	85 ff                	test   %edi,%edi
    b89e:	74 0e                	je     b8ae <sgx_ocall+0x1e>
    b8a0:	48 8d 15 59 a7 01 00 	lea    0x1a759(%rip),%rdx        # 26000 <g_dyn_entry_table>
    b8a7:	89 f8                	mov    %edi,%eax
    b8a9:	48 3b 02             	cmp    (%rdx),%rax
    b8ac:	73 0a                	jae    b8b8 <sgx_ocall+0x28>
    b8ae:	e9 2c a3 01 00       	jmp    25bdf <__morestack>
    b8b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b8b8:	b8 01 10 00 00       	mov    $0x1001,%eax
    b8bd:	c3                   	ret    
    b8be:	66 90                	xchg   %ax,%ax

000000000000b8c0 <update_ocall_lastsp>:
    b8c0:	f3 0f 1e fa          	endbr64 
    b8c4:	53                   	push   %rbx
    b8c5:	48 89 fb             	mov    %rdi,%rbx
    b8c8:	e8 76 a0 01 00       	call   25943 <get_thread_data>
    b8cd:	ba 01 00 00 00       	mov    $0x1,%edx
    b8d2:	4c 8b 40 08          	mov    0x8(%rax),%r8
    b8d6:	4c 89 43 30          	mov    %r8,0x30(%rbx)
    b8da:	4c 39 40 10          	cmp    %r8,0x10(%rax)
    b8de:	74 0b                	je     b8eb <update_ocall_lastsp+0x2b>
    b8e0:	49 8b 88 90 00 00 00 	mov    0x90(%r8),%rcx
    b8e7:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    b8eb:	48 89 93 90 00 00 00 	mov    %rdx,0x90(%rbx)
    b8f2:	48 89 58 08          	mov    %rbx,0x8(%rax)
    b8f6:	4c 89 c0             	mov    %r8,%rax
    b8f9:	5b                   	pop    %rbx
    b8fa:	c3                   	ret    
    b8fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000b900 <do_oret>:
    b900:	f3 0f 1e fa          	endbr64 
    b904:	55                   	push   %rbp
    b905:	48 89 fd             	mov    %rdi,%rbp
    b908:	53                   	push   %rbx
    b909:	48 83 ec 18          	sub    $0x18,%rsp
    b90d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b914:	00 00 
    b916:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b91b:	31 c0                	xor    %eax,%eax
    b91d:	e8 21 a0 01 00       	call   25943 <get_thread_data>
    b922:	48 83 78 50 01       	cmpq   $0x1,0x50(%rax)
    b927:	48 89 c3             	mov    %rax,%rbx
    b92a:	74 54                	je     b980 <do_oret+0x80>
    b92c:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    b930:	48 89 3c 24          	mov    %rdi,(%rsp)
    b934:	48 85 ff             	test   %rdi,%rdi
    b937:	74 27                	je     b960 <do_oret+0x60>
    b939:	48 89 e0             	mov    %rsp,%rax
    b93c:	48 39 f8             	cmp    %rdi,%rax
    b93f:	73 1f                	jae    b960 <do_oret+0x60>
    b941:	48 8b 43 10          	mov    0x10(%rbx),%rax
    b945:	48 8d 90 10 ff ff ff 	lea    -0xf0(%rax),%rdx
    b94c:	48 39 fa             	cmp    %rdi,%rdx
    b94f:	72 0f                	jb     b960 <do_oret+0x60>
    b951:	48 81 7f 20 44 49 43 	cmpq   $0x4f434944,0x20(%rdi)
    b958:	4f 
    b959:	74 3d                	je     b998 <do_oret+0x98>
    b95b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b960:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    b965:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    b96c:	00 00 
    b96e:	75 44                	jne    b9b4 <do_oret+0xb4>
    b970:	48 83 c4 18          	add    $0x18,%rsp
    b974:	b8 01 00 00 00       	mov    $0x1,%eax
    b979:	5b                   	pop    %rbx
    b97a:	5d                   	pop    %rbp
    b97b:	c3                   	ret    
    b97c:	0f 1f 40 00          	nopl   0x0(%rax)
    b980:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
    b987:	00 
    b988:	bf 01 00 00 00       	mov    $0x1,%edi
    b98d:	e8 2e f4 ff ff       	call   adc0 <sgx_set_ssa_aexnotify>
    b992:	eb 98                	jmp    b92c <do_oret+0x2c>
    b994:	0f 1f 40 00          	nopl   0x0(%rax)
    b998:	48 8b 57 30          	mov    0x30(%rdi),%rdx
    b99c:	48 39 d0             	cmp    %rdx,%rax
    b99f:	72 bf                	jb     b960 <do_oret+0x60>
    b9a1:	48 39 fa             	cmp    %rdi,%rdx
    b9a4:	76 ba                	jbe    b960 <do_oret+0x60>
    b9a6:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    b9aa:	48 89 ee             	mov    %rbp,%rsi
    b9ad:	e8 40 a2 01 00       	call   25bf2 <asm_oret>
    b9b2:	eb ac                	jmp    b960 <do_oret+0x60>
    b9b4:	e8 87 81 00 00       	call   13b40 <__stack_chk_fail>
    b9b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000b9c0 <get_heap_base>:
    b9c0:	f3 0f 1e fa          	endbr64 
    b9c4:	48 83 ec 08          	sub    $0x8,%rsp
    b9c8:	e8 2b 9f 01 00       	call   258f8 <get_enclave_base>
    b9cd:	48 8d 15 6c bf 01 00 	lea    0x1bf6c(%rip),%rdx        # 27940 <g_global_data>
    b9d4:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    b9d8:	48 83 c4 08          	add    $0x8,%rsp
    b9dc:	48 01 d0             	add    %rdx,%rax
    b9df:	c3                   	ret    

000000000000b9e0 <get_heap_size>:
    b9e0:	f3 0f 1e fa          	endbr64 
    b9e4:	48 8d 05 01 43 02 00 	lea    0x24301(%rip),%rax        # 2fcec <EDMM_supported>
    b9eb:	48 8d 0d 4e bf 01 00 	lea    0x1bf4e(%rip),%rcx        # 27940 <g_global_data>
    b9f2:	8b 00                	mov    (%rax),%eax
    b9f4:	4c 8b 41 18          	mov    0x18(%rcx),%r8
    b9f8:	85 c0                	test   %eax,%eax
    b9fa:	74 41                	je     ba3d <get_heap_size+0x5d>
    b9fc:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    ba02:	85 c0                	test   %eax,%eax
    ba04:	74 37                	je     ba3d <get_heap_size+0x5d>
    ba06:	31 d2                	xor    %edx,%edx
    ba08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ba0f:	00 
    ba10:	89 d0                	mov    %edx,%eax
    ba12:	48 83 c0 0b          	add    $0xb,%rax
    ba16:	48 c1 e0 05          	shl    $0x5,%rax
    ba1a:	48 01 c8             	add    %rcx,%rax
    ba1d:	0f b7 30             	movzwl (%rax),%esi
    ba20:	66 83 fe 03          	cmp    $0x3,%si
    ba24:	75 0a                	jne    ba30 <get_heap_size+0x50>
    ba26:	8b 40 04             	mov    0x4(%rax),%eax
    ba29:	48 c1 e0 0c          	shl    $0xc,%rax
    ba2d:	49 01 c0             	add    %rax,%r8
    ba30:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    ba36:	83 c2 01             	add    $0x1,%edx
    ba39:	39 d0                	cmp    %edx,%eax
    ba3b:	77 d3                	ja     ba10 <get_heap_size+0x30>
    ba3d:	4c 89 c0             	mov    %r8,%rax
    ba40:	c3                   	ret    
    ba41:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    ba48:	00 00 00 
    ba4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ba50 <get_heap_min_size>:
    ba50:	f3 0f 1e fa          	endbr64 
    ba54:	48 8d 0d e5 be 01 00 	lea    0x1bee5(%rip),%rcx        # 27940 <g_global_data>
    ba5b:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    ba61:	85 c0                	test   %eax,%eax
    ba63:	74 3b                	je     baa0 <get_heap_min_size+0x50>
    ba65:	31 d2                	xor    %edx,%edx
    ba67:	eb 14                	jmp    ba7d <get_heap_min_size+0x2d>
    ba69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ba70:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    ba76:	83 c2 01             	add    $0x1,%edx
    ba79:	39 d0                	cmp    %edx,%eax
    ba7b:	76 23                	jbe    baa0 <get_heap_min_size+0x50>
    ba7d:	89 d0                	mov    %edx,%eax
    ba7f:	48 83 c0 0b          	add    $0xb,%rax
    ba83:	48 c1 e0 05          	shl    $0x5,%rax
    ba87:	48 01 c8             	add    %rcx,%rax
    ba8a:	0f b7 30             	movzwl (%rax),%esi
    ba8d:	66 83 fe 01          	cmp    $0x1,%si
    ba91:	75 dd                	jne    ba70 <get_heap_min_size+0x20>
    ba93:	8b 40 04             	mov    0x4(%rax),%eax
    ba96:	48 c1 e0 0c          	shl    $0xc,%rax
    ba9a:	c3                   	ret    
    ba9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    baa0:	31 c0                	xor    %eax,%eax
    baa2:	c3                   	ret    
    baa3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    baaa:	00 00 00 
    baad:	0f 1f 00             	nopl   (%rax)

000000000000bab0 <get_rsrv_base>:
    bab0:	f3 0f 1e fa          	endbr64 
    bab4:	48 83 ec 08          	sub    $0x8,%rsp
    bab8:	e8 3b 9e 01 00       	call   258f8 <get_enclave_base>
    babd:	48 8d 15 7c be 01 00 	lea    0x1be7c(%rip),%rdx        # 27940 <g_global_data>
    bac4:	48 8b 52 20          	mov    0x20(%rdx),%rdx
    bac8:	48 83 c4 08          	add    $0x8,%rsp
    bacc:	48 01 d0             	add    %rdx,%rax
    bacf:	c3                   	ret    

000000000000bad0 <get_rsrv_size>:
    bad0:	f3 0f 1e fa          	endbr64 
    bad4:	48 8d 05 11 42 02 00 	lea    0x24211(%rip),%rax        # 2fcec <EDMM_supported>
    badb:	48 8d 0d 5e be 01 00 	lea    0x1be5e(%rip),%rcx        # 27940 <g_global_data>
    bae2:	8b 00                	mov    (%rax),%eax
    bae4:	4c 8b 41 28          	mov    0x28(%rcx),%r8
    bae8:	85 c0                	test   %eax,%eax
    baea:	74 41                	je     bb2d <get_rsrv_size+0x5d>
    baec:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    baf2:	85 c0                	test   %eax,%eax
    baf4:	74 37                	je     bb2d <get_rsrv_size+0x5d>
    baf6:	31 d2                	xor    %edx,%edx
    baf8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    baff:	00 
    bb00:	89 d0                	mov    %edx,%eax
    bb02:	48 83 c0 0b          	add    $0xb,%rax
    bb06:	48 c1 e0 05          	shl    $0x5,%rax
    bb0a:	48 01 c8             	add    %rcx,%rax
    bb0d:	0f b7 30             	movzwl (%rax),%esi
    bb10:	66 83 fe 16          	cmp    $0x16,%si
    bb14:	75 0a                	jne    bb20 <get_rsrv_size+0x50>
    bb16:	8b 40 04             	mov    0x4(%rax),%eax
    bb19:	48 c1 e0 0c          	shl    $0xc,%rax
    bb1d:	49 01 c0             	add    %rax,%r8
    bb20:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    bb26:	83 c2 01             	add    $0x1,%edx
    bb29:	39 d0                	cmp    %edx,%eax
    bb2b:	77 d3                	ja     bb00 <get_rsrv_size+0x30>
    bb2d:	4c 89 c0             	mov    %r8,%rax
    bb30:	c3                   	ret    
    bb31:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    bb38:	00 00 00 
    bb3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000bb40 <get_rsrv_min_size>:
    bb40:	f3 0f 1e fa          	endbr64 
    bb44:	48 8d 0d f5 bd 01 00 	lea    0x1bdf5(%rip),%rcx        # 27940 <g_global_data>
    bb4b:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    bb51:	85 c0                	test   %eax,%eax
    bb53:	74 3b                	je     bb90 <get_rsrv_min_size+0x50>
    bb55:	31 d2                	xor    %edx,%edx
    bb57:	eb 14                	jmp    bb6d <get_rsrv_min_size+0x2d>
    bb59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    bb60:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    bb66:	83 c2 01             	add    $0x1,%edx
    bb69:	39 d0                	cmp    %edx,%eax
    bb6b:	76 23                	jbe    bb90 <get_rsrv_min_size+0x50>
    bb6d:	89 d0                	mov    %edx,%eax
    bb6f:	48 83 c0 0b          	add    $0xb,%rax
    bb73:	48 c1 e0 05          	shl    $0x5,%rax
    bb77:	48 01 c8             	add    %rcx,%rax
    bb7a:	0f b7 30             	movzwl (%rax),%esi
    bb7d:	66 83 fe 14          	cmp    $0x14,%si
    bb81:	75 dd                	jne    bb60 <get_rsrv_min_size+0x20>
    bb83:	8b 40 04             	mov    0x4(%rax),%eax
    bb86:	48 c1 e0 0c          	shl    $0xc,%rax
    bb8a:	c3                   	ret    
    bb8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    bb90:	31 c0                	xor    %eax,%eax
    bb92:	c3                   	ret    
    bb93:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    bb9a:	00 00 00 
    bb9d:	0f 1f 00             	nopl   (%rax)

000000000000bba0 <get_errno_addr>:
    bba0:	f3 0f 1e fa          	endbr64 
    bba4:	48 83 ec 08          	sub    $0x8,%rsp
    bba8:	e8 96 9d 01 00       	call   25943 <get_thread_data>
    bbad:	48 83 c4 08          	add    $0x8,%rsp
    bbb1:	48 83 c0 40          	add    $0x40,%rax
    bbb5:	c3                   	ret    
    bbb6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    bbbd:	00 00 00 

000000000000bbc0 <feature_supported>:
    bbc0:	f3 0f 1e fa          	endbr64 
    bbc4:	48 85 ff             	test   %rdi,%rdi
    bbc7:	74 37                	je     bc00 <feature_supported+0x40>
    bbc9:	31 d2                	xor    %edx,%edx
    bbcb:	eb 08                	jmp    bbd5 <feature_supported+0x15>
    bbcd:	0f 1f 00             	nopl   (%rax)
    bbd0:	48 85 c0             	test   %rax,%rax
    bbd3:	78 2b                	js     bc00 <feature_supported+0x40>
    bbd5:	89 d0                	mov    %edx,%eax
    bbd7:	83 c2 01             	add    $0x1,%edx
    bbda:	41 89 d1             	mov    %edx,%r9d
    bbdd:	49 89 c0             	mov    %rax,%r8
    bbe0:	48 8b 04 c7          	mov    (%rdi,%rax,8),%rax
    bbe4:	41 c1 e1 06          	shl    $0x6,%r9d
    bbe8:	44 39 ce             	cmp    %r9d,%esi
    bbeb:	73 e3                	jae    bbd0 <feature_supported+0x10>
    bbed:	41 c1 e0 06          	shl    $0x6,%r8d
    bbf1:	44 29 c6             	sub    %r8d,%esi
    bbf4:	89 f1                	mov    %esi,%ecx
    bbf6:	48 d3 e8             	shr    %cl,%rax
    bbf9:	83 e0 01             	and    $0x1,%eax
    bbfc:	c3                   	ret    
    bbfd:	0f 1f 00             	nopl   (%rax)
    bc00:	31 c0                	xor    %eax,%eax
    bc02:	c3                   	ret    
    bc03:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    bc0a:	00 00 00 
    bc0d:	0f 1f 00             	nopl   (%rax)

000000000000bc10 <is_stack_addr>:
    bc10:	f3 0f 1e fa          	endbr64 
    bc14:	55                   	push   %rbp
    bc15:	48 89 f5             	mov    %rsi,%rbp
    bc18:	53                   	push   %rbx
    bc19:	48 89 fb             	mov    %rdi,%rbx
    bc1c:	48 83 ec 08          	sub    $0x8,%rsp
    bc20:	e8 1e 9d 01 00       	call   25943 <get_thread_data>
    bc25:	31 c9                	xor    %ecx,%ecx
    bc27:	48 01 dd             	add    %rbx,%rbp
    bc2a:	48 89 c2             	mov    %rax,%rdx
    bc2d:	0f 92 c1             	setb   %cl
    bc30:	48 3b 68 10          	cmp    0x10(%rax),%rbp
    bc34:	0f 96 c0             	setbe  %al
    bc37:	48 39 5a 18          	cmp    %rbx,0x18(%rdx)
    bc3b:	0f 96 c2             	setbe  %dl
    bc3e:	21 d0                	and    %edx,%eax
    bc40:	48 85 c9             	test   %rcx,%rcx
    bc43:	0f 94 c2             	sete   %dl
    bc46:	48 83 c4 08          	add    $0x8,%rsp
    bc4a:	21 d0                	and    %edx,%eax
    bc4c:	5b                   	pop    %rbx
    bc4d:	5d                   	pop    %rbp
    bc4e:	c3                   	ret    
    bc4f:	90                   	nop

000000000000bc50 <is_valid_sp>:
    bc50:	f3 0f 1e fa          	endbr64 
    bc54:	40 f6 c7 07          	test   $0x7,%dil
    bc58:	74 06                	je     bc60 <is_valid_sp+0x10>
    bc5a:	31 c0                	xor    %eax,%eax
    bc5c:	c3                   	ret    
    bc5d:	0f 1f 00             	nopl   (%rax)
    bc60:	53                   	push   %rbx
    bc61:	48 89 fb             	mov    %rdi,%rbx
    bc64:	e8 da 9c 01 00       	call   25943 <get_thread_data>
    bc69:	48 89 c2             	mov    %rax,%rdx
    bc6c:	48 3b 58 10          	cmp    0x10(%rax),%rbx
    bc70:	0f 96 c0             	setbe  %al
    bc73:	48 3b 5a 18          	cmp    0x18(%rdx),%rbx
    bc77:	5b                   	pop    %rbx
    bc78:	0f 93 c2             	setae  %dl
    bc7b:	21 d0                	and    %edx,%eax
    bc7d:	c3                   	ret    
    bc7e:	66 90                	xchg   %ax,%ax

000000000000bc80 <is_utility_thread>:
    bc80:	f3 0f 1e fa          	endbr64 
    bc84:	48 83 ec 08          	sub    $0x8,%rsp
    bc88:	e8 b6 9c 01 00       	call   25943 <get_thread_data>
    bc8d:	45 31 c0             	xor    %r8d,%r8d
    bc90:	48 85 c0             	test   %rax,%rax
    bc93:	74 08                	je     bc9d <is_utility_thread+0x1d>
    bc95:	4c 8b 40 30          	mov    0x30(%rax),%r8
    bc99:	41 83 e0 01          	and    $0x1,%r8d
    bc9d:	44 89 c0             	mov    %r8d,%eax
    bca0:	48 83 c4 08          	add    $0x8,%rsp
    bca4:	c3                   	ret    
    bca5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    bcac:	00 00 00 
    bcaf:	90                   	nop

000000000000bcb0 <is_pkru_enabled>:
    bcb0:	f3 0f 1e fa          	endbr64 
    bcb4:	48 83 ec 08          	sub    $0x8,%rsp
    bcb8:	e8 e3 07 00 00       	call   c4a0 <get_xfeature_state>
    bcbd:	48 83 c4 08          	add    $0x8,%rsp
    bcc1:	48 c1 e8 09          	shr    $0x9,%rax
    bcc5:	83 e0 01             	and    $0x1,%eax
    bcc8:	c3                   	ret    
    bcc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000bcd0 <get_xsave_size>:
    bcd0:	f3 0f 1e fa          	endbr64 
    bcd4:	48 8d 05 65 bc 01 00 	lea    0x1bc65(%rip),%rax        # 27940 <g_global_data>
    bcdb:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
    bce2:	c3                   	ret    
    bce3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    bcea:	00 00 00 
    bced:	0f 1f 00             	nopl   (%rax)

000000000000bcf0 <get_ssa_aexnotify>:
    bcf0:	f3 0f 1e fa          	endbr64 
    bcf4:	48 83 ec 08          	sub    $0x8,%rsp
    bcf8:	e8 46 9c 01 00       	call   25943 <get_thread_data>
    bcfd:	48 85 c0             	test   %rax,%rax
    bd00:	74 16                	je     bd18 <get_ssa_aexnotify+0x28>
    bd02:	48 8b 40 20          	mov    0x20(%rax),%rax
    bd06:	0f b6 80 a7 00 00 00 	movzbl 0xa7(%rax),%eax
    bd0d:	48 83 c4 08          	add    $0x8,%rsp
    bd11:	83 e0 01             	and    $0x1,%eax
    bd14:	c3                   	ret    
    bd15:	0f 1f 00             	nopl   (%rax)
    bd18:	31 c0                	xor    %eax,%eax
    bd1a:	48 83 c4 08          	add    $0x8,%rsp
    bd1e:	c3                   	ret    
    bd1f:	90                   	nop

000000000000bd20 <internal_handle_exception>:
    bd20:	f3 0f 1e fa          	endbr64 
    bd24:	55                   	push   %rbp
    bd25:	48 89 e5             	mov    %rsp,%rbp
    bd28:	41 57                	push   %r15
    bd2a:	41 56                	push   %r14
    bd2c:	41 55                	push   %r13
    bd2e:	41 54                	push   %r12
    bd30:	49 89 fc             	mov    %rdi,%r12
    bd33:	53                   	push   %rbx
    bd34:	48 83 ec 38          	sub    $0x38,%rsp
    bd38:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    bd3f:	00 00 
    bd41:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    bd45:	31 c0                	xor    %eax,%eax
    bd47:	e8 f7 9b 01 00       	call   25943 <get_thread_data>
    bd4c:	48 8b 58 20          	mov    0x20(%rax),%rbx
    bd50:	49 89 c5             	mov    %rax,%r13
    bd53:	e8 78 ff ff ff       	call   bcd0 <get_xsave_size>
    bd58:	4d 85 e4             	test   %r12,%r12
    bd5b:	0f 84 71 01 00 00    	je     bed2 <internal_handle_exception+0x1b2>
    bd61:	48 8d b3 ff 0f 00 00 	lea    0xfff(%rbx),%rsi
    bd68:	48 05 b7 10 00 00    	add    $0x10b7,%rax
    bd6e:	49 8b 94 24 b0 00 00 	mov    0xb0(%r12),%rdx
    bd75:	00 
    bd76:	4d 8d b4 24 c0 00 00 	lea    0xc0(%r12),%r14
    bd7d:	00 
    bd7e:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    bd84:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    bd8b:	4c 89 f7             	mov    %r14,%rdi
    bd8e:	48 29 c6             	sub    %rax,%rsi
    bd91:	e8 5a 7a 00 00       	call   137f0 <memcpy>
    bd96:	41 8b 84 24 a8 00 00 	mov    0xa8(%r12),%eax
    bd9d:	00 
    bd9e:	85 c0                	test   %eax,%eax
    bda0:	0f 84 11 01 00 00    	je     beb7 <internal_handle_exception+0x197>
    bda6:	49 8b 45 78          	mov    0x78(%r13),%rax
    bdaa:	48 85 c0             	test   %rax,%rax
    bdad:	0f 88 1f 01 00 00    	js     bed2 <internal_handle_exception+0x1b2>
    bdb3:	41 83 bc 24 90 00 00 	cmpl   $0xe,0x90(%r12)
    bdba:	00 0e 
    bdbc:	48 8d 50 01          	lea    0x1(%rax),%rdx
    bdc0:	49 89 55 78          	mov    %rdx,0x78(%r13)
    bdc4:	75 28                	jne    bdee <internal_handle_exception+0xce>
    bdc6:	48 8b 15 33 64 02 00 	mov    0x26433(%rip),%rdx        # 32200 <g_mm_pfhandler>
    bdcd:	48 85 d2             	test   %rdx,%rdx
    bdd0:	74 1c                	je     bdee <internal_handle_exception+0xce>
    bdd2:	49 89 45 78          	mov    %rax,0x78(%r13)
    bdd6:	49 8d bc 24 98 00 00 	lea    0x98(%r12),%rdi
    bddd:	00 
    bdde:	ff d2                	call   *%rdx
    bde0:	83 c0 01             	add    $0x1,%eax
    bde3:	0f 84 ce 00 00 00    	je     beb7 <internal_handle_exception+0x197>
    bde9:	49 83 45 78 01       	addq   $0x1,0x78(%r13)
    bdee:	48 8d 3d 1b 64 02 00 	lea    0x2641b(%rip),%rdi        # 32210 <_ZL14g_handler_lock>
    bdf5:	e8 76 42 00 00       	call   10070 <sgx_spin_lock>
    bdfa:	48 8b 05 17 64 02 00 	mov    0x26417(%rip),%rax        # 32218 <_ZL12g_first_node>
    be01:	48 85 c0             	test   %rax,%rax
    be04:	0f 84 4e 02 00 00    	je     c058 <internal_handle_exception+0x338>
    be0a:	45 31 ff             	xor    %r15d,%r15d
    be0d:	0f 1f 00             	nopl   (%rax)
    be10:	48 8b 40 08          	mov    0x8(%rax),%rax
    be14:	49 83 c7 08          	add    $0x8,%r15
    be18:	48 85 c0             	test   %rax,%rax
    be1b:	75 f3                	jne    be10 <internal_handle_exception+0xf0>
    be1d:	4d 85 ff             	test   %r15,%r15
    be20:	0f 84 32 02 00 00    	je     c058 <internal_handle_exception+0x338>
    be26:	4c 89 ff             	mov    %r15,%rdi
    be29:	e8 52 40 00 00       	call   fe80 <alloca>
    be2e:	48 89 c3             	mov    %rax,%rbx
    be31:	48 85 c0             	test   %rax,%rax
    be34:	0f 84 93 02 00 00    	je     c0cd <internal_handle_exception+0x3ad>
    be3a:	48 8b 05 d7 63 02 00 	mov    0x263d7(%rip),%rax        # 32218 <_ZL12g_first_node>
    be41:	48 85 c0             	test   %rax,%rax
    be44:	74 1e                	je     be64 <internal_handle_exception+0x144>
    be46:	48 89 da             	mov    %rbx,%rdx
    be49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    be50:	48 8b 08             	mov    (%rax),%rcx
    be53:	48 8b 40 08          	mov    0x8(%rax),%rax
    be57:	48 83 c2 08          	add    $0x8,%rdx
    be5b:	48 89 4a f8          	mov    %rcx,-0x8(%rdx)
    be5f:	48 85 c0             	test   %rax,%rax
    be62:	75 ec                	jne    be50 <internal_handle_exception+0x130>
    be64:	48 8d 3d a5 63 02 00 	lea    0x263a5(%rip),%rdi        # 32210 <_ZL14g_handler_lock>
    be6b:	49 01 df             	add    %rbx,%r15
    be6e:	e8 9d 42 00 00       	call   10110 <sgx_spin_unlock>
    be73:	49 83 6d 78 01       	subq   $0x1,0x78(%r13)
    be78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    be7f:	00 
    be80:	48 8b 03             	mov    (%rbx),%rax
    be83:	4c 89 e7             	mov    %r12,%rdi
    be86:	48 33 05 7b 63 02 00 	xor    0x2637b(%rip),%rax        # 32208 <_ZL12g_veh_cookie>
    be8d:	ff d0                	call   *%rax
    be8f:	83 f8 ff             	cmp    $0xffffffff,%eax
    be92:	0f 84 d9 01 00 00    	je     c071 <internal_handle_exception+0x351>
    be98:	48 83 c3 08          	add    $0x8,%rbx
    be9c:	4c 39 fb             	cmp    %r15,%rbx
    be9f:	75 df                	jne    be80 <internal_handle_exception+0x160>
    bea1:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
    bea6:	e8 a5 fd ff ff       	call   bc50 <is_valid_sp>
    beab:	84 c0                	test   %al,%al
    bead:	74 23                	je     bed2 <internal_handle_exception+0x1b2>
    beaf:	49 c7 45 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r13)
    beb6:	ff 
    beb7:	41 83 bc 24 ac 00 00 	cmpl   $0x1,0xac(%r12)
    bebe:	00 01 
    bec0:	74 1d                	je     bedf <internal_handle_exception+0x1bf>
    bec2:	4c 89 f7             	mov    %r14,%rdi
    bec5:	e8 d7 95 01 00       	call   254a1 <restore_xregs>
    beca:	4c 89 e7             	mov    %r12,%rdi
    becd:	e8 78 9e 01 00       	call   25d4a <continue_execution>
    bed2:	49 c7 45 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r13)
    bed9:	ff 
    beda:	e8 58 9e 01 00       	call   25d37 <abort>
    bedf:	4c 89 e7             	mov    %r12,%rdi
    bee2:	e8 49 ef ff ff       	call   ae30 <sgx_apply_mitigations>
    bee7:	4c 89 f7             	mov    %r14,%rdi
    beea:	e8 b2 95 01 00       	call   254a1 <restore_xregs>
    beef:	e8 4f 9a 01 00       	call   25943 <get_thread_data>
    bef4:	49 89 c7             	mov    %rax,%r15
    bef7:	48 8b 40 10          	mov    0x10(%rax),%rax
    befb:	49 89 c6             	mov    %rax,%r14
    befe:	49 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%r14
    bf05:	75 07                	jne    bf0e <internal_handle_exception+0x1ee>
    bf07:	4c 8d b0 00 f0 ff ff 	lea    -0x1000(%rax),%r14
    bf0e:	4c 89 e0             	mov    %r12,%rax
    bf11:	49 8b 57 18          	mov    0x18(%r15),%rdx
    bf15:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    bf1b:	4c 39 f0             	cmp    %r14,%rax
    bf1e:	0f 84 94 01 00 00    	je     c0b8 <internal_handle_exception+0x398>
    bf24:	4c 8d b0 00 10 00 00 	lea    0x1000(%rax),%r14
    bf2b:	49 83 ce 01          	or     $0x1,%r14
    bf2f:	49 8b 84 24 88 00 00 	mov    0x88(%r12),%rax
    bf36:	00 
    bf37:	48 89 c2             	mov    %rax,%rdx
    bf3a:	48 c1 e8 0b          	shr    $0xb,%rax
    bf3e:	25 fe 0f 00 00       	and    $0xffe,%eax
    bf43:	48 03 05 9e 40 02 00 	add    0x2409e(%rip),%rax        # 2ffe8 <_GLOBAL_OFFSET_TABLE_+0x30>
    bf4a:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    bf51:	44 0f b7 08          	movzwl (%rax),%r9d
    bf55:	48 89 c1             	mov    %rax,%rcx
    bf58:	49 8d 1c 11          	lea    (%r9,%rdx,1),%rbx
    bf5c:	80 3b c3             	cmpb   $0xc3,(%rbx)
    bf5f:	74 2f                	je     bf90 <internal_handle_exception+0x270>
    bf61:	49 89 d1             	mov    %rdx,%r9
    bf64:	48 8d 82 00 10 00 00 	lea    0x1000(%rdx),%rax
    bf6b:	eb 10                	jmp    bf7d <internal_handle_exception+0x25d>
    bf6d:	0f 1f 00             	nopl   (%rax)
    bf70:	49 83 c1 01          	add    $0x1,%r9
    bf74:	49 39 c1             	cmp    %rax,%r9
    bf77:	0f 84 61 01 00 00    	je     c0de <internal_handle_exception+0x3be>
    bf7d:	41 80 39 c3          	cmpb   $0xc3,(%r9)
    bf81:	75 ed                	jne    bf70 <internal_handle_exception+0x250>
    bf83:	44 89 c8             	mov    %r9d,%eax
    bf86:	4c 89 cb             	mov    %r9,%rbx
    bf89:	66 25 ff 0f          	and    $0xfff,%ax
    bf8d:	66 89 01             	mov    %ax,(%rcx)
    bf90:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    bf94:	4c 89 e7             	mov    %r12,%rdi
    bf97:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
    bf9b:	e8 40 ce ff ff       	call   8de0 <ct_decode>
    bfa0:	4d 89 f1             	mov    %r14,%r9
    bfa3:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    bfa7:	49 83 e1 fe          	and    $0xfffffffffffffffe,%r9
    bfab:	48 63 c8             	movslq %eax,%rcx
    bfae:	4d 89 c8             	mov    %r9,%r8
    bfb1:	4c 89 4d a8          	mov    %r9,-0x58(%rbp)
    bfb5:	48 83 f9 01          	cmp    $0x1,%rcx
    bfb9:	4c 0f 44 c6          	cmove  %rsi,%r8
    bfbd:	48 83 f9 02          	cmp    $0x2,%rcx
    bfc1:	4c 0f 44 c6          	cmove  %rsi,%r8
    bfc5:	be 01 00 00 00       	mov    $0x1,%esi
    bfca:	4c 89 c7             	mov    %r8,%rdi
    bfcd:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    bfd1:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
    bfd5:	e8 c6 e4 ff ff       	call   a4a0 <sgx_is_within_enclave>
    bfda:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    bfde:	4c 8b 45 b8          	mov    -0x48(%rbp),%r8
    bfe2:	4c 8b 4d a8          	mov    -0x58(%rbp),%r9
    bfe6:	85 c0                	test   %eax,%eax
    bfe8:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    bfec:	48 98                	cltq   
    bfee:	48 89 d6             	mov    %rdx,%rsi
    bff1:	4d 0f 44 c1          	cmove  %r9,%r8
    bff5:	48 83 ce 01          	or     $0x1,%rsi
    bff9:	48 83 f9 02          	cmp    $0x2,%rcx
    bffd:	48 0f 44 d6          	cmove  %rsi,%rdx
    c001:	48 89 d1             	mov    %rdx,%rcx
    c004:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    c008:	48 89 ce             	mov    %rcx,%rsi
    c00b:	48 83 f8 01          	cmp    $0x1,%rax
    c00f:	48 0f 44 f2          	cmove  %rdx,%rsi
    c013:	41 83 af bc 00 00 00 	subl   $0x1,0xbc(%r15)
    c01a:	01 
    c01b:	78 6b                	js     c088 <internal_handle_exception+0x368>
    c01d:	41 8b 87 b8 00 00 00 	mov    0xb8(%r15),%eax
    c024:	49 89 d9             	mov    %rbx,%r9
    c027:	4c 89 e7             	mov    %r12,%rdi
    c02a:	89 c2                	mov    %eax,%edx
    c02c:	c1 e0 04             	shl    $0x4,%eax
    c02f:	83 e0 10             	and    $0x10,%eax
    c032:	d1 ea                	shr    %edx
    c034:	89 c1                	mov    %eax,%ecx
    c036:	41 89 97 b8 00 00 00 	mov    %edx,0xb8(%r15)
    c03d:	4c 89 f2             	mov    %r14,%rdx
    c040:	48 09 f1             	or     %rsi,%rcx
    c043:	49 8b 77 20          	mov    0x20(%r15),%rsi
    c047:	48 81 c6 a7 00 00 00 	add    $0xa7,%rsi
    c04e:	e8 ad 95 01 00       	call   25600 <constant_time_apply_sgxstep_mitigation_and_continue_execution>
    c053:	e9 7a fe ff ff       	jmp    bed2 <internal_handle_exception+0x1b2>
    c058:	48 8d 3d b1 61 02 00 	lea    0x261b1(%rip),%rdi        # 32210 <_ZL14g_handler_lock>
    c05f:	e8 ac 40 00 00       	call   10110 <sgx_spin_unlock>
    c064:	49 c7 45 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r13)
    c06b:	ff 
    c06c:	e9 46 fe ff ff       	jmp    beb7 <internal_handle_exception+0x197>
    c071:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
    c076:	e8 d5 fb ff ff       	call   bc50 <is_valid_sp>
    c07b:	84 c0                	test   %al,%al
    c07d:	0f 84 4f fe ff ff    	je     bed2 <internal_handle_exception+0x1b2>
    c083:	e9 2f fe ff ff       	jmp    beb7 <internal_handle_exception+0x197>
    c088:	49 8d bf b8 00 00 00 	lea    0xb8(%r15),%rdi
    c08f:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    c093:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
    c097:	e8 78 9c 01 00       	call   25d14 <do_rdrand>
    c09c:	4c 8b 45 b8          	mov    -0x48(%rbp),%r8
    c0a0:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
    c0a4:	85 c0                	test   %eax,%eax
    c0a6:	74 42                	je     c0ea <internal_handle_exception+0x3ca>
    c0a8:	41 c7 87 bc 00 00 00 	movl   $0x1f,0xbc(%r15)
    c0af:	1f 00 00 00 
    c0b3:	e9 65 ff ff ff       	jmp    c01d <internal_handle_exception+0x2fd>
    c0b8:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    c0bf:	4c 39 f2             	cmp    %r14,%rdx
    c0c2:	0f 85 63 fe ff ff    	jne    bf2b <internal_handle_exception+0x20b>
    c0c8:	e9 62 fe ff ff       	jmp    bf2f <internal_handle_exception+0x20f>
    c0cd:	48 8d 3d 3c 61 02 00 	lea    0x2613c(%rip),%rdi        # 32210 <_ZL14g_handler_lock>
    c0d4:	e8 37 40 00 00       	call   10110 <sgx_spin_unlock>
    c0d9:	e9 f4 fd ff ff       	jmp    bed2 <internal_handle_exception+0x1b2>
    c0de:	48 8d 1d 12 98 01 00 	lea    0x19812(%rip),%rbx        # 258f7 <__ct_mitigation_ret>
    c0e5:	e9 a6 fe ff ff       	jmp    bf90 <internal_handle_exception+0x270>
    c0ea:	49 c7 47 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r15)
    c0f1:	ff 
    c0f2:	e8 40 9c 01 00       	call   25d37 <abort>
    c0f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c0fe:	00 00 

000000000000c100 <trts_handle_exception>:
    c100:	f3 0f 1e fa          	endbr64 
    c104:	41 57                	push   %r15
    c106:	41 56                	push   %r14
    c108:	41 55                	push   %r13
    c10a:	41 54                	push   %r12
    c10c:	55                   	push   %rbp
    c10d:	53                   	push   %rbx
    c10e:	48 89 fb             	mov    %rdi,%rbx
    c111:	48 83 ec 08          	sub    $0x8,%rsp
    c115:	e8 29 98 01 00       	call   25943 <get_thread_data>
    c11a:	48 85 c0             	test   %rax,%rax
    c11d:	48 89 c5             	mov    %rax,%rbp
    c120:	0f 94 c2             	sete   %dl
    c123:	48 85 db             	test   %rbx,%rbx
    c126:	0f 94 c0             	sete   %al
    c129:	08 c2                	or     %al,%dl
    c12b:	75 33                	jne    c160 <trts_handle_exception+0x60>
    c12d:	48 89 df             	mov    %rbx,%rdi
    c130:	41 89 d4             	mov    %edx,%r12d
    c133:	e8 98 e6 ff ff       	call   a7d0 <check_static_stack_canary>
    c138:	85 c0                	test   %eax,%eax
    c13a:	75 24                	jne    c160 <trts_handle_exception+0x60>
    c13c:	e8 c3 97 01 00       	call   25904 <get_enclave_state>
    c141:	83 f8 02             	cmp    $0x2,%eax
    c144:	75 1a                	jne    c160 <trts_handle_exception+0x60>
    c146:	48 83 7d 78 ff       	cmpq   $0xffffffffffffffff,0x78(%rbp)
    c14b:	74 13                	je     c160 <trts_handle_exception+0x60>
    c14d:	48 8b 45 10          	mov    0x10(%rbp),%rax
    c151:	48 05 00 04 01 00    	add    $0x10400,%rax
    c157:	48 39 c3             	cmp    %rax,%rbx
    c15a:	74 24                	je     c180 <trts_handle_exception+0x80>
    c15c:	0f 1f 40 00          	nopl   0x0(%rax)
    c160:	bf 03 00 00 00       	mov    $0x3,%edi
    c165:	e8 ab 97 01 00       	call   25915 <set_enclave_state>
    c16a:	b8 06 10 00 00       	mov    $0x1006,%eax
    c16f:	48 83 c4 08          	add    $0x8,%rsp
    c173:	5b                   	pop    %rbx
    c174:	5d                   	pop    %rbp
    c175:	41 5c                	pop    %r12
    c177:	41 5d                	pop    %r13
    c179:	41 5e                	pop    %r14
    c17b:	41 5f                	pop    %r15
    c17d:	c3                   	ret    
    c17e:	66 90                	xchg   %ax,%ax
    c180:	4c 8b 6d 20          	mov    0x20(%rbp),%r13
    c184:	e8 47 fb ff ff       	call   bcd0 <get_xsave_size>
    c189:	48 05 b7 10 00 00    	add    $0x10b7,%rax
    c18f:	49 81 e5 00 f0 ff ff 	and    $0xfffffffffffff000,%r13
    c196:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    c19c:	49 29 c5             	sub    %rax,%r13
    c19f:	4c 39 eb             	cmp    %r13,%rbx
    c1a2:	75 bc                	jne    c160 <trts_handle_exception+0x60>
    c1a4:	48 8b 5d 20          	mov    0x20(%rbp),%rbx
    c1a8:	be 08 00 00 00       	mov    $0x8,%esi
    c1ad:	4c 8b b3 90 00 00 00 	mov    0x90(%rbx),%r14
    c1b4:	4c 89 f7             	mov    %r14,%rdi
    c1b7:	e8 44 e3 ff ff       	call   a500 <sgx_is_outside_enclave>
    c1bc:	85 c0                	test   %eax,%eax
    c1be:	0f 84 f4 01 00 00    	je     c3b8 <trts_handle_exception+0x2b8>
    c1c4:	4c 8b 6b 20          	mov    0x20(%rbx),%r13
    c1c8:	4d 39 ee             	cmp    %r13,%r14
    c1cb:	0f 84 e7 01 00 00    	je     c3b8 <trts_handle_exception+0x2b8>
    c1d1:	31 f6                	xor    %esi,%esi
    c1d3:	4c 89 ef             	mov    %r13,%rdi
    c1d6:	e8 35 fa ff ff       	call   bc10 <is_stack_addr>
    c1db:	84 c0                	test   %al,%al
    c1dd:	0f 84 d5 01 00 00    	je     c3b8 <trts_handle_exception+0x2b8>
    c1e3:	48 8b 45 38          	mov    0x38(%rbp),%rax
    c1e7:	48 8d b0 b8 01 00 00 	lea    0x1b8(%rax),%rsi
    c1ee:	49 29 f5             	sub    %rsi,%r13
    c1f1:	49 83 e5 c0          	and    $0xffffffffffffffc0,%r13
    c1f5:	4c 89 ef             	mov    %r13,%rdi
    c1f8:	e8 13 fa ff ff       	call   bc10 <is_stack_addr>
    c1fd:	84 c0                	test   %al,%al
    c1ff:	0f 84 b3 01 00 00    	je     c3b8 <trts_handle_exception+0x2b8>
    c205:	4d 8d 7d f8          	lea    -0x8(%r13),%r15
    c209:	be 08 00 00 00       	mov    $0x8,%esi
    c20e:	4c 89 ff             	mov    %r15,%rdi
    c211:	e8 fa f9 ff ff       	call   bc10 <is_stack_addr>
    c216:	41 89 c6             	mov    %eax,%r14d
    c219:	84 c0                	test   %al,%al
    c21b:	0f 84 97 01 00 00    	je     c3b8 <trts_handle_exception+0x2b8>
    c221:	48 8b bd b0 00 00 00 	mov    0xb0(%rbp),%rdi
    c228:	4c 39 ff             	cmp    %r15,%rdi
    c22b:	0f 86 9b 01 00 00    	jbe    c3cc <trts_handle_exception+0x2cc>
    c231:	4c 8d a7 ff 0f 00 00 	lea    0xfff(%rdi),%r12
    c238:	4d 29 fc             	sub    %r15,%r12
    c23b:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    c242:	4c 39 e7             	cmp    %r12,%rdi
    c245:	0f 86 6d 01 00 00    	jbe    c3b8 <trts_handle_exception+0x2b8>
    c24b:	4c 29 e7             	sub    %r12,%rdi
    c24e:	48 3b 7d 18          	cmp    0x18(%rbp),%rdi
    c252:	0f 82 60 01 00 00    	jb     c3b8 <trts_handle_exception+0x2b8>
    c258:	4d 85 e4             	test   %r12,%r12
    c25b:	0f 84 57 01 00 00    	je     c3b8 <trts_handle_exception+0x2b8>
    c261:	4c 89 e6             	mov    %r12,%rsi
    c264:	e8 57 32 00 00       	call   f4c0 <mm_commit>
    c269:	85 c0                	test   %eax,%eax
    c26b:	0f 85 47 01 00 00    	jne    c3b8 <trts_handle_exception+0x2b8>
    c271:	48 8d 05 5c 3a 02 00 	lea    0x23a5c(%rip),%rax        # 2fcd4 <g_aexnotify_supported>
    c278:	4c 29 a5 b0 00 00 00 	sub    %r12,0xb0(%rbp)
    c27f:	45 89 f4             	mov    %r14d,%r12d
    c282:	8b 08                	mov    (%rax),%ecx
    c284:	31 c0                	xor    %eax,%eax
    c286:	41 89 85 a8 00 00 00 	mov    %eax,0xa8(%r13)
    c28d:	0f b6 83 a0 00 00 00 	movzbl 0xa0(%rbx),%eax
    c294:	41 89 85 90 00 00 00 	mov    %eax,0x90(%r13)
    c29b:	0f b6 93 a1 00 00 00 	movzbl 0xa1(%rbx),%edx
    c2a2:	83 e8 0d             	sub    $0xd,%eax
    c2a5:	83 e2 07             	and    $0x7,%edx
    c2a8:	41 89 95 94 00 00 00 	mov    %edx,0x94(%r13)
    c2af:	48 8b 55 38          	mov    0x38(%rbp),%rdx
    c2b3:	49 89 95 b0 00 00 00 	mov    %rdx,0xb0(%r13)
    c2ba:	48 8b 13             	mov    (%rbx),%rdx
    c2bd:	49 89 55 00          	mov    %rdx,0x0(%r13)
    c2c1:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    c2c5:	49 89 55 08          	mov    %rdx,0x8(%r13)
    c2c9:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    c2cd:	49 89 55 10          	mov    %rdx,0x10(%r13)
    c2d1:	48 8b 53 18          	mov    0x18(%rbx),%rdx
    c2d5:	49 89 55 18          	mov    %rdx,0x18(%r13)
    c2d9:	48 8b 53 20          	mov    0x20(%rbx),%rdx
    c2dd:	49 89 55 20          	mov    %rdx,0x20(%r13)
    c2e1:	48 8b 53 28          	mov    0x28(%rbx),%rdx
    c2e5:	49 89 55 28          	mov    %rdx,0x28(%r13)
    c2e9:	48 8b 53 30          	mov    0x30(%rbx),%rdx
    c2ed:	49 89 55 30          	mov    %rdx,0x30(%r13)
    c2f1:	48 8b 53 38          	mov    0x38(%rbx),%rdx
    c2f5:	49 89 55 38          	mov    %rdx,0x38(%r13)
    c2f9:	48 8b 93 80 00 00 00 	mov    0x80(%rbx),%rdx
    c300:	49 89 95 80 00 00 00 	mov    %rdx,0x80(%r13)
    c307:	48 8b 93 88 00 00 00 	mov    0x88(%rbx),%rdx
    c30e:	49 89 95 88 00 00 00 	mov    %rdx,0x88(%r13)
    c315:	48 8b 73 40          	mov    0x40(%rbx),%rsi
    c319:	49 89 75 40          	mov    %rsi,0x40(%r13)
    c31d:	48 8b 73 48          	mov    0x48(%rbx),%rsi
    c321:	49 89 75 48          	mov    %rsi,0x48(%r13)
    c325:	48 8b 73 50          	mov    0x50(%rbx),%rsi
    c329:	49 89 75 50          	mov    %rsi,0x50(%r13)
    c32d:	48 8b 73 58          	mov    0x58(%rbx),%rsi
    c331:	49 89 75 58          	mov    %rsi,0x58(%r13)
    c335:	48 8b 73 60          	mov    0x60(%rbx),%rsi
    c339:	49 89 75 60          	mov    %rsi,0x60(%r13)
    c33d:	48 8b 73 68          	mov    0x68(%rbx),%rsi
    c341:	49 89 75 68          	mov    %rsi,0x68(%r13)
    c345:	48 8b 73 70          	mov    0x70(%rbx),%rsi
    c349:	49 89 75 70          	mov    %rsi,0x70(%r13)
    c34d:	48 8b 73 78          	mov    0x78(%rbx),%rsi
    c351:	49 89 75 78          	mov    %rsi,0x78(%r13)
    c355:	83 f8 01             	cmp    $0x1,%eax
    c358:	77 15                	ja     c36f <trts_handle_exception+0x26f>
    c35a:	48 8b 43 f0          	mov    -0x10(%rbx),%rax
    c35e:	49 89 85 98 00 00 00 	mov    %rax,0x98(%r13)
    c365:	8b 43 f8             	mov    -0x8(%rbx),%eax
    c368:	41 89 85 a0 00 00 00 	mov    %eax,0xa0(%r13)
    c36f:	85 c9                	test   %ecx,%ecx
    c371:	0f 84 9a 00 00 00    	je     c411 <trts_handle_exception+0x311>
    c377:	49 89 55 f8          	mov    %rdx,-0x8(%r13)
    c37b:	e8 70 f9 ff ff       	call   bcf0 <get_ssa_aexnotify>
    c380:	48 8b 7d 58          	mov    0x58(%rbp),%rdi
    c384:	41 89 85 ac 00 00 00 	mov    %eax,0xac(%r13)
    c38b:	e8 11 91 01 00       	call   254a1 <restore_xregs>
    c390:	41 83 bd ac 00 00 00 	cmpl   $0x1,0xac(%r13)
    c397:	01 
    c398:	0f 84 f0 00 00 00    	je     c48e <trts_handle_exception+0x38e>
    c39e:	48 8d 15 7b f9 ff ff 	lea    -0x685(%rip),%rdx        # bd20 <internal_handle_exception>
    c3a5:	4c 89 fe             	mov    %r15,%rsi
    c3a8:	4c 89 ef             	mov    %r13,%rdi
    c3ab:	e8 00 9a 01 00       	call   25db0 <second_phase>
    c3b0:	e9 ab fd ff ff       	jmp    c160 <trts_handle_exception+0x60>
    c3b5:	0f 1f 00             	nopl   (%rax)
    c3b8:	bf 03 00 00 00       	mov    $0x3,%edi
    c3bd:	e8 53 95 01 00       	call   25915 <set_enclave_state>
    c3c2:	b8 09 10 00 00       	mov    $0x1009,%eax
    c3c7:	e9 a3 fd ff ff       	jmp    c16f <trts_handle_exception+0x6f>
    c3cc:	48 8d 15 01 39 02 00 	lea    0x23901(%rip),%rdx        # 2fcd4 <g_aexnotify_supported>
    c3d3:	48 8b 83 88 00 00 00 	mov    0x88(%rbx),%rax
    c3da:	48 3b 05 ff 3b 02 00 	cmp    0x23bff(%rip),%rax        # 2ffe0 <_GLOBAL_OFFSET_TABLE_+0x28>
    c3e1:	8b 0a                	mov    (%rdx),%ecx
    c3e3:	74 5c                	je     c441 <trts_handle_exception+0x341>
    c3e5:	48 3b 05 ec 3b 02 00 	cmp    0x23bec(%rip),%rax        # 2ffd8 <_GLOBAL_OFFSET_TABLE_+0x20>
    c3ec:	74 76                	je     c464 <trts_handle_exception+0x364>
    c3ee:	85 c9                	test   %ecx,%ecx
    c3f0:	75 0d                	jne    c3ff <trts_handle_exception+0x2ff>
    c3f2:	80 bb a3 00 00 00 00 	cmpb   $0x0,0xa3(%rbx)
    c3f9:	0f 89 61 fd ff ff    	jns    c160 <trts_handle_exception+0x60>
    c3ff:	0f b6 83 a3 00 00 00 	movzbl 0xa3(%rbx),%eax
    c406:	c0 e8 07             	shr    $0x7,%al
    c409:	0f b6 c0             	movzbl %al,%eax
    c40c:	e9 75 fe ff ff       	jmp    c286 <trts_handle_exception+0x186>
    c411:	45 84 e4             	test   %r12b,%r12b
    c414:	75 20                	jne    c436 <trts_handle_exception+0x336>
    c416:	48 8d 05 03 f9 ff ff 	lea    -0x6fd(%rip),%rax        # bd20 <internal_handle_exception>
    c41d:	4c 89 7b 20          	mov    %r15,0x20(%rbx)
    c421:	48 89 83 88 00 00 00 	mov    %rax,0x88(%rbx)
    c428:	4c 89 2b             	mov    %r13,(%rbx)
    c42b:	4c 89 6b 38          	mov    %r13,0x38(%rbx)
    c42f:	49 8b 95 88 00 00 00 	mov    0x88(%r13),%rdx
    c436:	49 89 55 f8          	mov    %rdx,-0x8(%r13)
    c43a:	31 c0                	xor    %eax,%eax
    c43c:	e9 2e fd ff ff       	jmp    c16f <trts_handle_exception+0x6f>
    c441:	48 83 3b 00          	cmpq   $0x0,(%rbx)
    c445:	75 9e                	jne    c3e5 <trts_handle_exception+0x2e5>
    c447:	48 83 c0 03          	add    $0x3,%rax
    c44b:	48 83 8b 80 00 00 00 	orq    $0x1,0x80(%rbx)
    c452:	01 
    c453:	45 89 f4             	mov    %r14d,%r12d
    c456:	48 89 83 88 00 00 00 	mov    %rax,0x88(%rbx)
    c45d:	31 c0                	xor    %eax,%eax
    c45f:	e9 22 fe ff ff       	jmp    c286 <trts_handle_exception+0x186>
    c464:	48 83 3b 08          	cmpq   $0x8,(%rbx)
    c468:	75 84                	jne    c3ee <trts_handle_exception+0x2ee>
    c46a:	48 83 c0 03          	add    $0x3,%rax
    c46e:	48 83 8b 80 00 00 00 	orq    $0x40,0x80(%rbx)
    c475:	40 
    c476:	45 89 f4             	mov    %r14d,%r12d
    c479:	48 89 83 88 00 00 00 	mov    %rax,0x88(%rbx)
    c480:	31 c0                	xor    %eax,%eax
    c482:	48 c7 03 01 00 00 00 	movq   $0x1,(%rbx)
    c489:	e9 f8 fd ff ff       	jmp    c286 <trts_handle_exception+0x186>
    c48e:	31 ff                	xor    %edi,%edi
    c490:	e8 2b e9 ff ff       	call   adc0 <sgx_set_ssa_aexnotify>
    c495:	e9 04 ff ff ff       	jmp    c39e <trts_handle_exception+0x29e>
    c49a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000c4a0 <get_xfeature_state>:
    c4a0:	f3 0f 1e fa          	endbr64 
    c4a4:	48 83 ec 08          	sub    $0x8,%rsp
    c4a8:	e8 43 88 01 00       	call   24cf0 <sgx_self_report>
    c4ad:	31 d2                	xor    %edx,%edx
    c4af:	48 8b 40 38          	mov    0x38(%rax),%rax
    c4b3:	48 83 f8 03          	cmp    $0x3,%rax
    c4b7:	0f 95 c2             	setne  %dl
    c4ba:	89 15 04 5d 02 00    	mov    %edx,0x25d04(%rip)        # 321c4 <g_xsave_enabled>
    c4c0:	48 83 c4 08          	add    $0x8,%rsp
    c4c4:	c3                   	ret    
    c4c5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    c4cc:	00 00 00 
    c4cf:	90                   	nop

000000000000c4d0 <has_text_relo>:
    c4d0:	85 d2                	test   %edx,%edx
    c4d2:	74 63                	je     c537 <has_text_relo+0x67>
    c4d4:	8d 42 ff             	lea    -0x1(%rdx),%eax
    c4d7:	48 83 c0 01          	add    $0x1,%rax
    c4db:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c4e2:	00 
    c4e3:	48 29 c2             	sub    %rax,%rdx
    c4e6:	48 8d 04 d6          	lea    (%rsi,%rdx,8),%rax
    c4ea:	eb 0d                	jmp    c4f9 <has_text_relo+0x29>
    c4ec:	0f 1f 40 00          	nopl   0x0(%rax)
    c4f0:	48 83 c6 38          	add    $0x38,%rsi
    c4f4:	48 39 c6             	cmp    %rax,%rsi
    c4f7:	74 3e                	je     c537 <has_text_relo+0x67>
    c4f9:	83 3e 02             	cmpl   $0x2,(%rsi)
    c4fc:	75 f2                	jne    c4f0 <has_text_relo+0x20>
    c4fe:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    c502:	48 8b 46 18          	mov    0x18(%rsi),%rax
    c506:	48 01 f8             	add    %rdi,%rax
    c509:	48 c1 e9 04          	shr    $0x4,%rcx
    c50d:	74 28                	je     c537 <has_text_relo+0x67>
    c50f:	48 c1 e1 04          	shl    $0x4,%rcx
    c513:	48 01 c1             	add    %rax,%rcx
    c516:	eb 17                	jmp    c52f <has_text_relo+0x5f>
    c518:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c51f:	00 
    c520:	48 83 fa 16          	cmp    $0x16,%rdx
    c524:	74 1a                	je     c540 <has_text_relo+0x70>
    c526:	48 83 c0 10          	add    $0x10,%rax
    c52a:	48 39 c1             	cmp    %rax,%rcx
    c52d:	74 08                	je     c537 <has_text_relo+0x67>
    c52f:	48 8b 10             	mov    (%rax),%rdx
    c532:	48 85 d2             	test   %rdx,%rdx
    c535:	75 e9                	jne    c520 <has_text_relo+0x50>
    c537:	31 c0                	xor    %eax,%eax
    c539:	c3                   	ret    
    c53a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c540:	b8 01 00 00 00       	mov    $0x1,%eax
    c545:	c3                   	ret    
    c546:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    c54d:	00 00 00 

000000000000c550 <do_relocs>:
    c550:	48 01 fe             	add    %rdi,%rsi
    c553:	48 01 fa             	add    %rdi,%rdx
    c556:	48 85 c9             	test   %rcx,%rcx
    c559:	0f 84 b8 01 00 00    	je     c717 <do_relocs+0x1c7>
    c55f:	55                   	push   %rbp
    c560:	45 31 c9             	xor    %r9d,%r9d
    c563:	4c 8d 15 96 a3 01 00 	lea    0x1a396(%rip),%r10        # 26900 <g_dyn_entry_table+0x900>
    c56a:	53                   	push   %rbx
    c56b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c570:	4c 8b 1e             	mov    (%rsi),%r11
    c573:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c577:	49 01 fb             	add    %rdi,%r11
    c57a:	41 89 c0             	mov    %eax,%r8d
    c57d:	83 f8 12             	cmp    $0x12,%eax
    c580:	77 42                	ja     c5c4 <do_relocs+0x74>
    c582:	4f 63 04 82          	movslq (%r10,%r8,4),%r8
    c586:	4d 01 d0             	add    %r10,%r8
    c589:	3e 41 ff e0          	notrack jmp *%r8
    c58d:	0f 1f 00             	nopl   (%rax)
    c590:	48 c1 e8 20          	shr    $0x20,%rax
    c594:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    c598:	4c 8d 04 c2          	lea    (%rdx,%rax,8),%r8
    c59c:	41 0f b6 40 04       	movzbl 0x4(%r8),%eax
    c5a1:	c0 e8 04             	shr    $0x4,%al
    c5a4:	3c 02                	cmp    $0x2,%al
    c5a6:	0f 84 c4 00 00 00    	je     c670 <do_relocs+0x120>
    c5ac:	4d 85 c0             	test   %r8,%r8
    c5af:	74 4f                	je     c600 <do_relocs+0xb0>
    c5b1:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    c5b7:	75 0b                	jne    c5c4 <do_relocs+0x74>
    c5b9:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    c5be:	0f 84 dc 00 00 00    	je     c6a0 <do_relocs+0x150>
    c5c4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    c5c9:	5b                   	pop    %rbx
    c5ca:	5d                   	pop    %rbp
    c5cb:	c3                   	ret    
    c5cc:	0f 1f 40 00          	nopl   0x0(%rax)
    c5d0:	48 c1 e8 20          	shr    $0x20,%rax
    c5d4:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    c5d8:	4c 8d 04 c2          	lea    (%rdx,%rax,8),%r8
    c5dc:	41 0f b6 40 04       	movzbl 0x4(%r8),%eax
    c5e1:	c0 e8 04             	shr    $0x4,%al
    c5e4:	3c 02                	cmp    $0x2,%al
    c5e6:	0f 84 94 00 00 00    	je     c680 <do_relocs+0x130>
    c5ec:	4d 85 c0             	test   %r8,%r8
    c5ef:	74 0f                	je     c600 <do_relocs+0xb0>
    c5f1:	48 8b 46 10          	mov    0x10(%rsi),%rax
    c5f5:	48 01 f8             	add    %rdi,%rax
    c5f8:	49 03 40 08          	add    0x8(%r8),%rax
    c5fc:	49 89 03             	mov    %rax,(%r11)
    c5ff:	90                   	nop
    c600:	49 83 c1 01          	add    $0x1,%r9
    c604:	48 83 c6 18          	add    $0x18,%rsi
    c608:	4c 39 c9             	cmp    %r9,%rcx
    c60b:	0f 85 5f ff ff ff    	jne    c570 <do_relocs+0x20>
    c611:	31 c0                	xor    %eax,%eax
    c613:	5b                   	pop    %rbx
    c614:	5d                   	pop    %rbp
    c615:	c3                   	ret    
    c616:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    c61d:	00 00 00 
    c620:	48 c1 e8 20          	shr    $0x20,%rax
    c624:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    c628:	4c 8d 04 c2          	lea    (%rdx,%rax,8),%r8
    c62c:	41 0f b6 40 04       	movzbl 0x4(%r8),%eax
    c631:	c0 e8 04             	shr    $0x4,%al
    c634:	3c 02                	cmp    $0x2,%al
    c636:	74 58                	je     c690 <do_relocs+0x140>
    c638:	4d 85 c0             	test   %r8,%r8
    c63b:	74 c3                	je     c600 <do_relocs+0xb0>
    c63d:	48 8b 46 10          	mov    0x10(%rsi),%rax
    c641:	49 03 40 08          	add    0x8(%r8),%rax
    c645:	49 89 03             	mov    %rax,(%r11)
    c648:	eb b6                	jmp    c600 <do_relocs+0xb0>
    c64a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c650:	49 c7 03 01 00 00 00 	movq   $0x1,(%r11)
    c657:	eb a7                	jmp    c600 <do_relocs+0xb0>
    c659:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c660:	48 8b 46 10          	mov    0x10(%rsi),%rax
    c664:	48 01 f8             	add    %rdi,%rax
    c667:	49 89 03             	mov    %rax,(%r11)
    c66a:	eb 94                	jmp    c600 <do_relocs+0xb0>
    c66c:	0f 1f 40 00          	nopl   0x0(%rax)
    c670:	49 83 78 08 00       	cmpq   $0x0,0x8(%r8)
    c675:	0f 85 31 ff ff ff    	jne    c5ac <do_relocs+0x5c>
    c67b:	eb 83                	jmp    c600 <do_relocs+0xb0>
    c67d:	0f 1f 00             	nopl   (%rax)
    c680:	49 83 78 08 00       	cmpq   $0x0,0x8(%r8)
    c685:	0f 85 61 ff ff ff    	jne    c5ec <do_relocs+0x9c>
    c68b:	e9 70 ff ff ff       	jmp    c600 <do_relocs+0xb0>
    c690:	49 83 78 08 00       	cmpq   $0x0,0x8(%r8)
    c695:	75 a1                	jne    c638 <do_relocs+0xe8>
    c697:	e9 64 ff ff ff       	jmp    c600 <do_relocs+0xb0>
    c69c:	0f 1f 40 00          	nopl   0x0(%rax)
    c6a0:	48 89 f8             	mov    %rdi,%rax
    c6a3:	48 03 47 20          	add    0x20(%rdi),%rax
    c6a7:	0f 84 17 ff ff ff    	je     c5c4 <do_relocs+0x74>
    c6ad:	0f b7 5f 38          	movzwl 0x38(%rdi),%ebx
    c6b1:	85 db                	test   %ebx,%ebx
    c6b3:	0f 84 0b ff ff ff    	je     c5c4 <do_relocs+0x74>
    c6b9:	8d 6b ff             	lea    -0x1(%rbx),%ebp
    c6bc:	48 8d 1c ed 00 00 00 	lea    0x0(,%rbp,8),%rbx
    c6c3:	00 
    c6c4:	48 29 eb             	sub    %rbp,%rbx
    c6c7:	48 8d 5c d8 38       	lea    0x38(%rax,%rbx,8),%rbx
    c6cc:	eb 0f                	jmp    c6dd <do_relocs+0x18d>
    c6ce:	66 90                	xchg   %ax,%ax
    c6d0:	48 83 c0 38          	add    $0x38,%rax
    c6d4:	48 39 c3             	cmp    %rax,%rbx
    c6d7:	0f 84 e7 fe ff ff    	je     c5c4 <do_relocs+0x74>
    c6dd:	83 38 07             	cmpl   $0x7,(%rax)
    c6e0:	75 ee                	jne    c6d0 <do_relocs+0x180>
    c6e2:	48 8b 58 28          	mov    0x28(%rax),%rbx
    c6e6:	48 8b 40 30          	mov    0x30(%rax),%rax
    c6ea:	48 83 f8 01          	cmp    $0x1,%rax
    c6ee:	76 0b                	jbe    c6fb <do_relocs+0x1ab>
    c6f0:	48 8d 5c 03 ff       	lea    -0x1(%rbx,%rax,1),%rbx
    c6f5:	48 f7 d8             	neg    %rax
    c6f8:	48 21 c3             	and    %rax,%rbx
    c6fb:	48 85 db             	test   %rbx,%rbx
    c6fe:	0f 84 c0 fe ff ff    	je     c5c4 <do_relocs+0x74>
    c704:	48 8b 46 10          	mov    0x10(%rsi),%rax
    c708:	49 03 40 08          	add    0x8(%r8),%rax
    c70c:	48 29 d8             	sub    %rbx,%rax
    c70f:	49 89 03             	mov    %rax,(%r11)
    c712:	e9 e9 fe ff ff       	jmp    c600 <do_relocs+0xb0>
    c717:	31 c0                	xor    %eax,%eax
    c719:	c3                   	ret    
    c71a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000c720 <relocate_enclave>:
    c720:	f3 0f 1e fa          	endbr64 
    c724:	48 85 ff             	test   %rdi,%rdi
    c727:	0f 84 9b 01 00 00    	je     c8c8 <relocate_enclave+0x1a8>
    c72d:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    c733:	0f 85 8f 01 00 00    	jne    c8c8 <relocate_enclave+0x1a8>
    c739:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    c73e:	0f 85 84 01 00 00    	jne    c8c8 <relocate_enclave+0x1a8>
    c744:	41 57                	push   %r15
    c746:	41 56                	push   %r14
    c748:	41 55                	push   %r13
    c74a:	41 54                	push   %r12
    c74c:	55                   	push   %rbp
    c74d:	53                   	push   %rbx
    c74e:	48 89 fb             	mov    %rdi,%rbx
    c751:	48 83 ec 08          	sub    $0x8,%rsp
    c755:	48 03 5f 20          	add    0x20(%rdi),%rbx
    c759:	0f 84 e5 00 00 00    	je     c844 <relocate_enclave+0x124>
    c75f:	31 ed                	xor    %ebp,%ebp
    c761:	66 83 7f 38 00       	cmpw   $0x0,0x38(%rdi)
    c766:	4c 8d 25 df a1 01 00 	lea    0x1a1df(%rip),%r12        # 2694c <g_dyn_entry_table+0x94c>
    c76d:	75 1c                	jne    c78b <relocate_enclave+0x6b>
    c76f:	e9 7c 01 00 00       	jmp    c8f0 <relocate_enclave+0x1d0>
    c774:	0f 1f 40 00          	nopl   0x0(%rax)
    c778:	0f b7 47 38          	movzwl 0x38(%rdi),%eax
    c77c:	83 c5 01             	add    $0x1,%ebp
    c77f:	48 83 c3 38          	add    $0x38,%rbx
    c783:	39 e8                	cmp    %ebp,%eax
    c785:	0f 86 65 01 00 00    	jbe    c8f0 <relocate_enclave+0x1d0>
    c78b:	83 3b 02             	cmpl   $0x2,(%rbx)
    c78e:	75 e8                	jne    c778 <relocate_enclave+0x58>
    c790:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    c794:	4c 8b 5b 20          	mov    0x20(%rbx),%r11
    c798:	48 01 fe             	add    %rdi,%rsi
    c79b:	49 c1 eb 04          	shr    $0x4,%r11
    c79f:	74 d7                	je     c778 <relocate_enclave+0x58>
    c7a1:	49 c1 e3 04          	shl    $0x4,%r11
    c7a5:	45 31 f6             	xor    %r14d,%r14d
    c7a8:	45 31 ed             	xor    %r13d,%r13d
    c7ab:	31 c0                	xor    %eax,%eax
    c7ad:	49 01 f3             	add    %rsi,%r11
    c7b0:	45 31 ff             	xor    %r15d,%r15d
    c7b3:	45 31 d2             	xor    %r10d,%r10d
    c7b6:	45 31 c9             	xor    %r9d,%r9d
    c7b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c7c0:	4c 8b 06             	mov    (%rsi),%r8
    c7c3:	4d 85 c0             	test   %r8,%r8
    c7c6:	74 28                	je     c7f0 <relocate_enclave+0xd0>
    c7c8:	49 83 f8 17          	cmp    $0x17,%r8
    c7cc:	77 0f                	ja     c7dd <relocate_enclave+0xbd>
    c7ce:	4f 63 04 84          	movslq (%r12,%r8,4),%r8
    c7d2:	4d 01 e0             	add    %r12,%r8
    c7d5:	3e 41 ff e0          	notrack jmp *%r8
    c7d9:	4c 8b 76 08          	mov    0x8(%rsi),%r14
    c7dd:	48 83 c6 10          	add    $0x10,%rsi
    c7e1:	49 39 f3             	cmp    %rsi,%r11
    c7e4:	75 da                	jne    c7c0 <relocate_enclave+0xa0>
    c7e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    c7ed:	00 00 00 
    c7f0:	4d 85 d2             	test   %r10,%r10
    c7f3:	0f 84 d7 00 00 00    	je     c8d0 <relocate_enclave+0x1b0>
    c7f9:	4d 85 ed             	test   %r13,%r13
    c7fc:	74 46                	je     c844 <relocate_enclave+0x124>
    c7fe:	31 d2                	xor    %edx,%edx
    c800:	4c 89 d6             	mov    %r10,%rsi
    c803:	4c 89 0c 24          	mov    %r9,(%rsp)
    c807:	49 f7 f5             	div    %r13
    c80a:	4c 89 ca             	mov    %r9,%rdx
    c80d:	48 89 c1             	mov    %rax,%rcx
    c810:	e8 3b fd ff ff       	call   c550 <do_relocs>
    c815:	4c 8b 0c 24          	mov    (%rsp),%r9
    c819:	85 c0                	test   %eax,%eax
    c81b:	75 27                	jne    c844 <relocate_enclave+0x124>
    c81d:	4d 85 ff             	test   %r15,%r15
    c820:	0f 84 52 ff ff ff    	je     c778 <relocate_enclave+0x58>
    c826:	31 d2                	xor    %edx,%edx
    c828:	4c 89 f0             	mov    %r14,%rax
    c82b:	4c 89 fe             	mov    %r15,%rsi
    c82e:	49 f7 f5             	div    %r13
    c831:	4c 89 ca             	mov    %r9,%rdx
    c834:	48 89 c1             	mov    %rax,%rcx
    c837:	e8 14 fd ff ff       	call   c550 <do_relocs>
    c83c:	85 c0                	test   %eax,%eax
    c83e:	0f 84 34 ff ff ff    	je     c778 <relocate_enclave+0x58>
    c844:	48 83 c4 08          	add    $0x8,%rsp
    c848:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    c84d:	5b                   	pop    %rbx
    c84e:	5d                   	pop    %rbp
    c84f:	41 5c                	pop    %r12
    c851:	41 5d                	pop    %r13
    c853:	41 5e                	pop    %r14
    c855:	41 5f                	pop    %r15
    c857:	c3                   	ret    
    c858:	4c 8b 7e 08          	mov    0x8(%rsi),%r15
    c85c:	48 83 c6 10          	add    $0x10,%rsi
    c860:	49 39 f3             	cmp    %rsi,%r11
    c863:	0f 85 57 ff ff ff    	jne    c7c0 <relocate_enclave+0xa0>
    c869:	eb 85                	jmp    c7f0 <relocate_enclave+0xd0>
    c86b:	4c 8b 6e 08          	mov    0x8(%rsi),%r13
    c86f:	48 83 c6 10          	add    $0x10,%rsi
    c873:	49 39 f3             	cmp    %rsi,%r11
    c876:	0f 85 44 ff ff ff    	jne    c7c0 <relocate_enclave+0xa0>
    c87c:	e9 6f ff ff ff       	jmp    c7f0 <relocate_enclave+0xd0>
    c881:	48 8b 46 08          	mov    0x8(%rsi),%rax
    c885:	48 83 c6 10          	add    $0x10,%rsi
    c889:	49 39 f3             	cmp    %rsi,%r11
    c88c:	0f 85 2e ff ff ff    	jne    c7c0 <relocate_enclave+0xa0>
    c892:	e9 59 ff ff ff       	jmp    c7f0 <relocate_enclave+0xd0>
    c897:	4c 8b 56 08          	mov    0x8(%rsi),%r10
    c89b:	48 83 c6 10          	add    $0x10,%rsi
    c89f:	49 39 f3             	cmp    %rsi,%r11
    c8a2:	0f 85 18 ff ff ff    	jne    c7c0 <relocate_enclave+0xa0>
    c8a8:	e9 43 ff ff ff       	jmp    c7f0 <relocate_enclave+0xd0>
    c8ad:	4c 8b 4e 08          	mov    0x8(%rsi),%r9
    c8b1:	48 83 c6 10          	add    $0x10,%rsi
    c8b5:	49 39 f3             	cmp    %rsi,%r11
    c8b8:	0f 85 02 ff ff ff    	jne    c7c0 <relocate_enclave+0xa0>
    c8be:	e9 2d ff ff ff       	jmp    c7f0 <relocate_enclave+0xd0>
    c8c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c8c8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    c8cd:	c3                   	ret    
    c8ce:	66 90                	xchg   %ax,%ax
    c8d0:	4d 85 ff             	test   %r15,%r15
    c8d3:	0f 84 9f fe ff ff    	je     c778 <relocate_enclave+0x58>
    c8d9:	4d 85 ed             	test   %r13,%r13
    c8dc:	0f 85 44 ff ff ff    	jne    c826 <relocate_enclave+0x106>
    c8e2:	e9 5d ff ff ff       	jmp    c844 <relocate_enclave+0x124>
    c8e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c8ee:	00 00 
    c8f0:	48 83 c4 08          	add    $0x8,%rsp
    c8f4:	31 c0                	xor    %eax,%eax
    c8f6:	5b                   	pop    %rbx
    c8f7:	5d                   	pop    %rbp
    c8f8:	41 5c                	pop    %r12
    c8fa:	41 5d                	pop    %r13
    c8fc:	41 5e                	pop    %r14
    c8fe:	41 5f                	pop    %r15
    c900:	c3                   	ret    
    c901:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    c908:	00 00 00 
    c90b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000c910 <elf_tls_info>:
    c910:	f3 0f 1e fa          	endbr64 
    c914:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    c919:	48 85 ff             	test   %rdi,%rdi
    c91c:	0f 84 81 00 00 00    	je     c9a3 <elf_tls_info+0x93>
    c922:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    c928:	75 78                	jne    c9a2 <elf_tls_info+0x92>
    c92a:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    c92f:	75 71                	jne    c9a2 <elf_tls_info+0x92>
    c931:	48 8b 47 20          	mov    0x20(%rdi),%rax
    c935:	48 01 f8             	add    %rdi,%rax
    c938:	48 85 f6             	test   %rsi,%rsi
    c93b:	41 0f 94 c0          	sete   %r8b
    c93f:	48 85 d2             	test   %rdx,%rdx
    c942:	0f 94 c1             	sete   %cl
    c945:	41 08 c8             	or     %cl,%r8b
    c948:	75 5a                	jne    c9a4 <elf_tls_info+0x94>
    c94a:	48 85 c0             	test   %rax,%rax
    c94d:	74 55                	je     c9a4 <elf_tls_info+0x94>
    c94f:	0f b7 4f 38          	movzwl 0x38(%rdi),%ecx
    c953:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    c95a:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    c961:	85 c9                	test   %ecx,%ecx
    c963:	74 3b                	je     c9a0 <elf_tls_info+0x90>
    c965:	44 8d 41 ff          	lea    -0x1(%rcx),%r8d
    c969:	4a 8d 0c c5 00 00 00 	lea    0x0(,%r8,8),%rcx
    c970:	00 
    c971:	4c 29 c1             	sub    %r8,%rcx
    c974:	48 8d 4c c8 38       	lea    0x38(%rax,%rcx,8),%rcx
    c979:	eb 0e                	jmp    c989 <elf_tls_info+0x79>
    c97b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c980:	48 83 c0 38          	add    $0x38,%rax
    c984:	48 39 c8             	cmp    %rcx,%rax
    c987:	74 17                	je     c9a0 <elf_tls_info+0x90>
    c989:	83 38 07             	cmpl   $0x7,(%rax)
    c98c:	75 f2                	jne    c980 <elf_tls_info+0x70>
    c98e:	48 03 78 10          	add    0x10(%rax),%rdi
    c992:	48 89 3e             	mov    %rdi,(%rsi)
    c995:	48 8b 40 20          	mov    0x20(%rax),%rax
    c999:	48 89 02             	mov    %rax,(%rdx)
    c99c:	31 c0                	xor    %eax,%eax
    c99e:	c3                   	ret    
    c99f:	90                   	nop
    c9a0:	31 c0                	xor    %eax,%eax
    c9a2:	c3                   	ret    
    c9a3:	c3                   	ret    
    c9a4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    c9a9:	c3                   	ret    
    c9aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000c9b0 <elf_get_init_array>:
    c9b0:	f3 0f 1e fa          	endbr64 
    c9b4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    c9b9:	48 85 ff             	test   %rdi,%rdi
    c9bc:	0f 84 d1 00 00 00    	je     ca93 <elf_get_init_array+0xe3>
    c9c2:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    c9c8:	0f 85 bf 00 00 00    	jne    ca8d <elf_get_init_array+0xdd>
    c9ce:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    c9d3:	0f 85 b4 00 00 00    	jne    ca8d <elf_get_init_array+0xdd>
    c9d9:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
    c9dd:	48 01 f9             	add    %rdi,%rcx
    c9e0:	48 85 f6             	test   %rsi,%rsi
    c9e3:	41 0f 94 c0          	sete   %r8b
    c9e7:	48 85 d2             	test   %rdx,%rdx
    c9ea:	0f 94 c0             	sete   %al
    c9ed:	41 08 c0             	or     %al,%r8b
    c9f0:	0f 85 92 00 00 00    	jne    ca88 <elf_get_init_array+0xd8>
    c9f6:	48 85 c9             	test   %rcx,%rcx
    c9f9:	0f 84 89 00 00 00    	je     ca88 <elf_get_init_array+0xd8>
    c9ff:	0f b7 47 38          	movzwl 0x38(%rdi),%eax
    ca03:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    ca0a:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    ca11:	85 c0                	test   %eax,%eax
    ca13:	74 7b                	je     ca90 <elf_get_init_array+0xe0>
    ca15:	44 8d 40 ff          	lea    -0x1(%rax),%r8d
    ca19:	4a 8d 04 c5 00 00 00 	lea    0x0(,%r8,8),%rax
    ca20:	00 
    ca21:	4c 29 c0             	sub    %r8,%rax
    ca24:	4c 8d 54 c1 38       	lea    0x38(%rcx,%rax,8),%r10
    ca29:	eb 0e                	jmp    ca39 <elf_get_init_array+0x89>
    ca2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ca30:	48 83 c1 38          	add    $0x38,%rcx
    ca34:	4c 39 d1             	cmp    %r10,%rcx
    ca37:	74 57                	je     ca90 <elf_get_init_array+0xe0>
    ca39:	83 39 02             	cmpl   $0x2,(%rcx)
    ca3c:	75 f2                	jne    ca30 <elf_get_init_array+0x80>
    ca3e:	48 8b 41 18          	mov    0x18(%rcx),%rax
    ca42:	4c 8b 49 20          	mov    0x20(%rcx),%r9
    ca46:	48 01 f8             	add    %rdi,%rax
    ca49:	49 c1 e9 04          	shr    $0x4,%r9
    ca4d:	74 e1                	je     ca30 <elf_get_init_array+0x80>
    ca4f:	49 c1 e1 04          	shl    $0x4,%r9
    ca53:	49 01 c1             	add    %rax,%r9
    ca56:	eb 1e                	jmp    ca76 <elf_get_init_array+0xc6>
    ca58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ca5f:	00 
    ca60:	49 83 f8 1b          	cmp    $0x1b,%r8
    ca64:	75 07                	jne    ca6d <elf_get_init_array+0xbd>
    ca66:	4c 8b 40 08          	mov    0x8(%rax),%r8
    ca6a:	4c 89 02             	mov    %r8,(%rdx)
    ca6d:	48 83 c0 10          	add    $0x10,%rax
    ca71:	49 39 c1             	cmp    %rax,%r9
    ca74:	74 ba                	je     ca30 <elf_get_init_array+0x80>
    ca76:	4c 8b 00             	mov    (%rax),%r8
    ca79:	49 83 f8 19          	cmp    $0x19,%r8
    ca7d:	75 e1                	jne    ca60 <elf_get_init_array+0xb0>
    ca7f:	4c 8b 40 08          	mov    0x8(%rax),%r8
    ca83:	4c 89 06             	mov    %r8,(%rsi)
    ca86:	eb e5                	jmp    ca6d <elf_get_init_array+0xbd>
    ca88:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    ca8d:	c3                   	ret    
    ca8e:	66 90                	xchg   %ax,%ax
    ca90:	31 c0                	xor    %eax,%eax
    ca92:	c3                   	ret    
    ca93:	c3                   	ret    
    ca94:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    ca9b:	00 00 00 
    ca9e:	66 90                	xchg   %ax,%ax

000000000000caa0 <elf_get_uninit_array>:
    caa0:	f3 0f 1e fa          	endbr64 
    caa4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    caa9:	48 85 ff             	test   %rdi,%rdi
    caac:	0f 84 d1 00 00 00    	je     cb83 <elf_get_uninit_array+0xe3>
    cab2:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    cab8:	0f 85 bf 00 00 00    	jne    cb7d <elf_get_uninit_array+0xdd>
    cabe:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    cac3:	0f 85 b4 00 00 00    	jne    cb7d <elf_get_uninit_array+0xdd>
    cac9:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
    cacd:	48 01 f9             	add    %rdi,%rcx
    cad0:	48 85 f6             	test   %rsi,%rsi
    cad3:	41 0f 94 c0          	sete   %r8b
    cad7:	48 85 d2             	test   %rdx,%rdx
    cada:	0f 94 c0             	sete   %al
    cadd:	41 08 c0             	or     %al,%r8b
    cae0:	0f 85 92 00 00 00    	jne    cb78 <elf_get_uninit_array+0xd8>
    cae6:	48 85 c9             	test   %rcx,%rcx
    cae9:	0f 84 89 00 00 00    	je     cb78 <elf_get_uninit_array+0xd8>
    caef:	0f b7 47 38          	movzwl 0x38(%rdi),%eax
    caf3:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    cafa:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    cb01:	85 c0                	test   %eax,%eax
    cb03:	74 7b                	je     cb80 <elf_get_uninit_array+0xe0>
    cb05:	44 8d 40 ff          	lea    -0x1(%rax),%r8d
    cb09:	4a 8d 04 c5 00 00 00 	lea    0x0(,%r8,8),%rax
    cb10:	00 
    cb11:	4c 29 c0             	sub    %r8,%rax
    cb14:	4c 8d 54 c1 38       	lea    0x38(%rcx,%rax,8),%r10
    cb19:	eb 0e                	jmp    cb29 <elf_get_uninit_array+0x89>
    cb1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    cb20:	48 83 c1 38          	add    $0x38,%rcx
    cb24:	4c 39 d1             	cmp    %r10,%rcx
    cb27:	74 57                	je     cb80 <elf_get_uninit_array+0xe0>
    cb29:	83 39 02             	cmpl   $0x2,(%rcx)
    cb2c:	75 f2                	jne    cb20 <elf_get_uninit_array+0x80>
    cb2e:	48 8b 41 18          	mov    0x18(%rcx),%rax
    cb32:	4c 8b 49 20          	mov    0x20(%rcx),%r9
    cb36:	48 01 f8             	add    %rdi,%rax
    cb39:	49 c1 e9 04          	shr    $0x4,%r9
    cb3d:	74 e1                	je     cb20 <elf_get_uninit_array+0x80>
    cb3f:	49 c1 e1 04          	shl    $0x4,%r9
    cb43:	49 01 c1             	add    %rax,%r9
    cb46:	eb 1e                	jmp    cb66 <elf_get_uninit_array+0xc6>
    cb48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    cb4f:	00 
    cb50:	49 83 f8 1c          	cmp    $0x1c,%r8
    cb54:	75 07                	jne    cb5d <elf_get_uninit_array+0xbd>
    cb56:	4c 8b 40 08          	mov    0x8(%rax),%r8
    cb5a:	4c 89 02             	mov    %r8,(%rdx)
    cb5d:	48 83 c0 10          	add    $0x10,%rax
    cb61:	49 39 c1             	cmp    %rax,%r9
    cb64:	74 ba                	je     cb20 <elf_get_uninit_array+0x80>
    cb66:	4c 8b 00             	mov    (%rax),%r8
    cb69:	49 83 f8 1a          	cmp    $0x1a,%r8
    cb6d:	75 e1                	jne    cb50 <elf_get_uninit_array+0xb0>
    cb6f:	4c 8b 40 08          	mov    0x8(%rax),%r8
    cb73:	4c 89 06             	mov    %r8,(%rsi)
    cb76:	eb e5                	jmp    cb5d <elf_get_uninit_array+0xbd>
    cb78:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    cb7d:	c3                   	ret    
    cb7e:	66 90                	xchg   %ax,%ax
    cb80:	31 c0                	xor    %eax,%eax
    cb82:	c3                   	ret    
    cb83:	c3                   	ret    
    cb84:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    cb8b:	00 00 00 
    cb8e:	66 90                	xchg   %ax,%ax

000000000000cb90 <change_protection>:
    cb90:	f3 0f 1e fa          	endbr64 
    cb94:	48 85 ff             	test   %rdi,%rdi
    cb97:	0f 84 ce 01 00 00    	je     cd6b <change_protection+0x1db>
    cb9d:	41 56                	push   %r14
    cb9f:	41 55                	push   %r13
    cba1:	41 54                	push   %r12
    cba3:	49 89 fc             	mov    %rdi,%r12
    cba6:	55                   	push   %rbp
    cba7:	53                   	push   %rbx
    cba8:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    cbae:	0f 85 bc 00 00 00    	jne    cc70 <change_protection+0xe0>
    cbb4:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    cbb9:	0f 85 b1 00 00 00    	jne    cc70 <change_protection+0xe0>
    cbbf:	48 89 fb             	mov    %rdi,%rbx
    cbc2:	48 03 5f 20          	add    0x20(%rdi),%rbx
    cbc6:	0f 84 a4 00 00 00    	je     cc70 <change_protection+0xe0>
    cbcc:	44 0f b7 47 38       	movzwl 0x38(%rdi),%r8d
    cbd1:	48 89 de             	mov    %rbx,%rsi
    cbd4:	44 89 c2             	mov    %r8d,%edx
    cbd7:	e8 f4 f8 ff ff       	call   c4d0 <has_text_relo>
    cbdc:	41 89 c6             	mov    %eax,%r14d
    cbdf:	45 85 c0             	test   %r8d,%r8d
    cbe2:	0f 84 f0 00 00 00    	je     ccd8 <change_protection+0x148>
    cbe8:	48 bd ff ff ff ff 02 	movabs $0x2ffffffff,%rbp
    cbef:	00 00 00 
    cbf2:	45 31 ed             	xor    %r13d,%r13d
    cbf5:	eb 20                	jmp    cc17 <change_protection+0x87>
    cbf7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    cbfe:	00 00 
    cc00:	41 0f b7 44 24 38    	movzwl 0x38(%r12),%eax
    cc06:	41 83 c5 01          	add    $0x1,%r13d
    cc0a:	48 83 c3 38          	add    $0x38,%rbx
    cc0e:	44 39 e8             	cmp    %r13d,%eax
    cc11:	0f 86 c1 00 00 00    	jbe    ccd8 <change_protection+0x148>
    cc17:	45 85 f6             	test   %r14d,%r14d
    cc1a:	74 0c                	je     cc28 <change_protection+0x98>
    cc1c:	48 8b 03             	mov    (%rbx),%rax
    cc1f:	48 21 e8             	and    %rbp,%rax
    cc22:	48 83 f8 01          	cmp    $0x1,%rax
    cc26:	74 58                	je     cc80 <change_protection+0xf0>
    cc28:	81 3b 52 e5 74 64    	cmpl   $0x6474e552,(%rbx)
    cc2e:	75 d0                	jne    cc00 <change_protection+0x70>
    cc30:	48 8b 43 10          	mov    0x10(%rbx),%rax
    cc34:	48 89 c7             	mov    %rax,%rdi
    cc37:	48 03 43 28          	add    0x28(%rbx),%rax
    cc3b:	48 89 c6             	mov    %rax,%rsi
    cc3e:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    cc45:	48 81 c6 ff 0f 00 00 	add    $0xfff,%rsi
    cc4c:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    cc53:	48 39 f7             	cmp    %rsi,%rdi
    cc56:	74 a8                	je     cc00 <change_protection+0x70>
    cc58:	48 29 fe             	sub    %rdi,%rsi
    cc5b:	ba 01 00 00 00       	mov    $0x1,%edx
    cc60:	4c 01 e7             	add    %r12,%rdi
    cc63:	e8 98 28 00 00       	call   f500 <mm_modify_permissions>
    cc68:	85 c0                	test   %eax,%eax
    cc6a:	74 94                	je     cc00 <change_protection+0x70>
    cc6c:	0f 1f 40 00          	nopl   0x0(%rax)
    cc70:	b8 01 00 00 00       	mov    $0x1,%eax
    cc75:	5b                   	pop    %rbx
    cc76:	5d                   	pop    %rbp
    cc77:	41 5c                	pop    %r12
    cc79:	41 5d                	pop    %r13
    cc7b:	41 5e                	pop    %r14
    cc7d:	c3                   	ret    
    cc7e:	66 90                	xchg   %ax,%ax
    cc80:	44 8b 43 04          	mov    0x4(%rbx),%r8d
    cc84:	48 8b 43 10          	mov    0x10(%rbx),%rax
    cc88:	44 89 c2             	mov    %r8d,%edx
    cc8b:	48 89 c1             	mov    %rax,%rcx
    cc8e:	48 03 43 28          	add    0x28(%rbx),%rax
    cc92:	c1 ea 02             	shr    $0x2,%edx
    cc95:	48 89 c6             	mov    %rax,%rsi
    cc98:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
    cc9f:	83 e2 01             	and    $0x1,%edx
    cca2:	48 81 c6 ff 0f 00 00 	add    $0xfff,%rsi
    cca9:	49 8d 3c 0c          	lea    (%r12,%rcx,1),%rdi
    ccad:	48 89 d0             	mov    %rdx,%rax
    ccb0:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    ccb7:	48 83 c8 04          	or     $0x4,%rax
    ccbb:	41 83 e0 01          	and    $0x1,%r8d
    ccbf:	48 0f 45 d0          	cmovne %rax,%rdx
    ccc3:	48 29 ce             	sub    %rcx,%rsi
    ccc6:	e8 35 28 00 00       	call   f500 <mm_modify_permissions>
    cccb:	85 c0                	test   %eax,%eax
    cccd:	0f 84 55 ff ff ff    	je     cc28 <change_protection+0x98>
    ccd3:	eb 9b                	jmp    cc70 <change_protection+0xe0>
    ccd5:	0f 1f 00             	nopl   (%rax)
    ccd8:	8b 05 ba ad 01 00    	mov    0x1adba(%rip),%eax        # 27a98 <g_global_data+0x158>
    ccde:	85 c0                	test   %eax,%eax
    cce0:	74 93                	je     cc75 <change_protection+0xe5>
    cce2:	31 d2                	xor    %edx,%edx
    cce4:	48 8d 3d 55 ac 01 00 	lea    0x1ac55(%rip),%rdi        # 27940 <g_global_data>
    cceb:	eb 10                	jmp    ccfd <change_protection+0x16d>
    cced:	0f 1f 00             	nopl   (%rax)
    ccf0:	8b 05 a2 ad 01 00    	mov    0x1ada2(%rip),%eax        # 27a98 <g_global_data+0x158>
    ccf6:	83 c2 01             	add    $0x1,%edx
    ccf9:	39 d0                	cmp    %edx,%eax
    ccfb:	76 63                	jbe    cd60 <change_protection+0x1d0>
    ccfd:	89 d1                	mov    %edx,%ecx
    ccff:	48 8d 41 0b          	lea    0xb(%rcx),%rax
    cd03:	48 c1 e0 05          	shl    $0x5,%rax
    cd07:	48 01 f8             	add    %rdi,%rax
    cd0a:	0f b7 30             	movzwl (%rax),%esi
    cd0d:	66 83 fe 14          	cmp    $0x14,%si
    cd11:	75 dd                	jne    ccf0 <change_protection+0x160>
    cd13:	48 c1 e1 05          	shl    $0x5,%rcx
    cd17:	48 01 f9             	add    %rdi,%rcx
    cd1a:	48 8b 89 78 01 00 00 	mov    0x178(%rcx),%rcx
    cd21:	48 81 f9 07 02 00 00 	cmp    $0x207,%rcx
    cd28:	75 c6                	jne    ccf0 <change_protection+0x160>
    cd2a:	8b 48 04             	mov    0x4(%rax),%ecx
    cd2d:	85 c9                	test   %ecx,%ecx
    cd2f:	74 bf                	je     ccf0 <change_protection+0x160>
    cd31:	8b 70 04             	mov    0x4(%rax),%esi
    cd34:	48 8b 78 08          	mov    0x8(%rax),%rdi
    cd38:	ba 03 00 00 00       	mov    $0x3,%edx
    cd3d:	48 c1 e6 0c          	shl    $0xc,%rsi
    cd41:	4c 01 e7             	add    %r12,%rdi
    cd44:	e8 b7 27 00 00       	call   f500 <mm_modify_permissions>
    cd49:	85 c0                	test   %eax,%eax
    cd4b:	0f 95 c0             	setne  %al
    cd4e:	0f b6 c0             	movzbl %al,%eax
    cd51:	e9 1f ff ff ff       	jmp    cc75 <change_protection+0xe5>
    cd56:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    cd5d:	00 00 00 
    cd60:	5b                   	pop    %rbx
    cd61:	31 c0                	xor    %eax,%eax
    cd63:	5d                   	pop    %rbp
    cd64:	41 5c                	pop    %r12
    cd66:	41 5d                	pop    %r13
    cd68:	41 5e                	pop    %r14
    cd6a:	c3                   	ret    
    cd6b:	b8 01 00 00 00       	mov    $0x1,%eax
    cd70:	c3                   	ret    
    cd71:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    cd78:	00 00 00 
    cd7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000cd80 <init_segment_emas>:
    cd80:	f3 0f 1e fa          	endbr64 
    cd84:	48 85 ff             	test   %rdi,%rdi
    cd87:	0f 84 03 01 00 00    	je     ce90 <init_segment_emas+0x110>
    cd8d:	41 55                	push   %r13
    cd8f:	49 89 fd             	mov    %rdi,%r13
    cd92:	41 54                	push   %r12
    cd94:	55                   	push   %rbp
    cd95:	53                   	push   %rbx
    cd96:	48 83 ec 08          	sub    $0x8,%rsp
    cd9a:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    cda0:	0f 85 da 00 00 00    	jne    ce80 <init_segment_emas+0x100>
    cda6:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    cdab:	0f 85 cf 00 00 00    	jne    ce80 <init_segment_emas+0x100>
    cdb1:	48 89 fb             	mov    %rdi,%rbx
    cdb4:	48 03 5f 20          	add    0x20(%rdi),%rbx
    cdb8:	0f 84 c2 00 00 00    	je     ce80 <init_segment_emas+0x100>
    cdbe:	44 0f b7 47 38       	movzwl 0x38(%rdi),%r8d
    cdc3:	48 89 de             	mov    %rbx,%rsi
    cdc6:	45 31 e4             	xor    %r12d,%r12d
    cdc9:	44 89 c2             	mov    %r8d,%edx
    cdcc:	e8 ff f6 ff ff       	call   c4d0 <has_text_relo>
    cdd1:	89 c5                	mov    %eax,%ebp
    cdd3:	45 85 c0             	test   %r8d,%r8d
    cdd6:	75 15                	jne    cded <init_segment_emas+0x6d>
    cdd8:	e9 8f 00 00 00       	jmp    ce6c <init_segment_emas+0xec>
    cddd:	0f 1f 00             	nopl   (%rax)
    cde0:	41 83 c4 01          	add    $0x1,%r12d
    cde4:	48 83 c3 38          	add    $0x38,%rbx
    cde8:	45 39 e0             	cmp    %r12d,%r8d
    cdeb:	76 7f                	jbe    ce6c <init_segment_emas+0xec>
    cded:	83 3b 01             	cmpl   $0x1,(%rbx)
    cdf0:	75 ee                	jne    cde0 <init_segment_emas+0x60>
    cdf2:	48 8b 43 10          	mov    0x10(%rbx),%rax
    cdf6:	44 8b 43 04          	mov    0x4(%rbx),%r8d
    cdfa:	48 89 c2             	mov    %rax,%rdx
    cdfd:	48 03 43 28          	add    0x28(%rbx),%rax
    ce01:	48 89 c6             	mov    %rax,%rsi
    ce04:	44 89 c0             	mov    %r8d,%eax
    ce07:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    ce0e:	83 e0 02             	and    $0x2,%eax
    ce11:	48 81 c6 ff 0f 00 00 	add    $0xfff,%rsi
    ce18:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    ce1d:	09 e8                	or     %ebp,%eax
    ce1f:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    ce26:	83 f8 01             	cmp    $0x1,%eax
    ce29:	48 19 c9             	sbb    %rcx,%rcx
    ce2c:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    ce30:	48 83 c1 03          	add    $0x3,%rcx
    ce34:	48 89 c8             	mov    %rcx,%rax
    ce37:	48 83 c8 04          	or     $0x4,%rax
    ce3b:	41 83 e0 01          	and    $0x1,%r8d
    ce3f:	48 0f 45 c8          	cmovne %rax,%rcx
    ce43:	48 29 d6             	sub    %rdx,%rsi
    ce46:	45 31 c9             	xor    %r9d,%r9d
    ce49:	45 31 c0             	xor    %r8d,%r8d
    ce4c:	ba 80 02 00 00       	mov    $0x280,%edx
    ce51:	e8 3a 25 00 00       	call   f390 <mm_init_ema>
    ce56:	85 c0                	test   %eax,%eax
    ce58:	75 26                	jne    ce80 <init_segment_emas+0x100>
    ce5a:	45 0f b7 45 38       	movzwl 0x38(%r13),%r8d
    ce5f:	41 83 c4 01          	add    $0x1,%r12d
    ce63:	48 83 c3 38          	add    $0x38,%rbx
    ce67:	45 39 e0             	cmp    %r12d,%r8d
    ce6a:	77 81                	ja     cded <init_segment_emas+0x6d>
    ce6c:	48 83 c4 08          	add    $0x8,%rsp
    ce70:	31 c0                	xor    %eax,%eax
    ce72:	5b                   	pop    %rbx
    ce73:	5d                   	pop    %rbp
    ce74:	41 5c                	pop    %r12
    ce76:	41 5d                	pop    %r13
    ce78:	c3                   	ret    
    ce79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ce80:	48 83 c4 08          	add    $0x8,%rsp
    ce84:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    ce89:	5b                   	pop    %rbx
    ce8a:	5d                   	pop    %rbp
    ce8b:	41 5c                	pop    %r12
    ce8d:	41 5d                	pop    %r13
    ce8f:	c3                   	ret    
    ce90:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    ce95:	c3                   	ret    
    ce96:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    ce9d:	00 00 00 

000000000000cea0 <init_global_object>:
    cea0:	f3 0f 1e fa          	endbr64 
    cea4:	55                   	push   %rbp
    cea5:	53                   	push   %rbx
    cea6:	48 83 ec 28          	sub    $0x28,%rsp
    ceaa:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ceb1:	00 00 
    ceb3:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    ceb8:	31 c0                	xor    %eax,%eax
    ceba:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    cec1:	00 00 
    cec3:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    ceca:	00 00 
    cecc:	e8 27 8a 01 00       	call   258f8 <get_enclave_base>
    ced1:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    ced6:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    cedb:	48 89 c7             	mov    %rax,%rdi
    cede:	48 89 c3             	mov    %rax,%rbx
    cee1:	e8 ca fa ff ff       	call   c9b0 <elf_get_init_array>
    cee6:	85 c0                	test   %eax,%eax
    cee8:	75 31                	jne    cf1b <init_global_object+0x7b>
    ceea:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    ceef:	48 85 c0             	test   %rax,%rax
    cef2:	74 27                	je     cf1b <init_global_object+0x7b>
    cef4:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
    cef9:	48 85 ed             	test   %rbp,%rbp
    cefc:	74 1d                	je     cf1b <init_global_object+0x7b>
    cefe:	48 01 c3             	add    %rax,%rbx
    cf01:	48 83 e5 f8          	and    $0xfffffffffffffff8,%rbp
    cf05:	48 01 dd             	add    %rbx,%rbp
    cf08:	48 39 eb             	cmp    %rbp,%rbx
    cf0b:	73 0e                	jae    cf1b <init_global_object+0x7b>
    cf0d:	0f 1f 00             	nopl   (%rax)
    cf10:	ff 13                	call   *(%rbx)
    cf12:	48 83 c3 08          	add    $0x8,%rbx
    cf16:	48 39 dd             	cmp    %rbx,%rbp
    cf19:	77 f5                	ja     cf10 <init_global_object+0x70>
    cf1b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    cf20:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    cf27:	00 00 
    cf29:	75 07                	jne    cf32 <init_global_object+0x92>
    cf2b:	48 83 c4 28          	add    $0x28,%rsp
    cf2f:	5b                   	pop    %rbx
    cf30:	5d                   	pop    %rbp
    cf31:	c3                   	ret    
    cf32:	e8 09 6c 00 00       	call   13b40 <__stack_chk_fail>
    cf37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    cf3e:	00 00 

000000000000cf40 <uninit_global_object>:
    cf40:	f3 0f 1e fa          	endbr64 
    cf44:	55                   	push   %rbp
    cf45:	53                   	push   %rbx
    cf46:	48 83 ec 28          	sub    $0x28,%rsp
    cf4a:	48 8b 1d d7 52 02 00 	mov    0x252d7(%rip),%rbx        # 32228 <g_exit_function>
    cf51:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    cf58:	00 00 
    cf5a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    cf5f:	31 c0                	xor    %eax,%eax
    cf61:	48 c7 05 bc 52 02 00 	movq   $0x0,0x252bc(%rip)        # 32228 <g_exit_function>
    cf68:	00 00 00 00 
    cf6c:	48 85 db             	test   %rbx,%rbx
    cf6f:	74 2b                	je     cf9c <uninit_global_object+0x5c>
    cf71:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cf78:	48 8b 05 a1 52 02 00 	mov    0x252a1(%rip),%rax        # 32220 <g_exit_function_cookie>
    cf7f:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    cf83:	48 31 c7             	xor    %rax,%rdi
    cf86:	48 33 03             	xor    (%rbx),%rax
    cf89:	ff d0                	call   *%rax
    cf8b:	48 89 df             	mov    %rbx,%rdi
    cf8e:	48 8b 5b 18          	mov    0x18(%rbx),%rbx
    cf92:	e8 09 55 00 00       	call   124a0 <dlfree>
    cf97:	48 85 db             	test   %rbx,%rbx
    cf9a:	75 dc                	jne    cf78 <uninit_global_object+0x38>
    cf9c:	e8 57 89 01 00       	call   258f8 <get_enclave_base>
    cfa1:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    cfa6:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    cfab:	48 89 c7             	mov    %rax,%rdi
    cfae:	48 89 c3             	mov    %rax,%rbx
    cfb1:	e8 ea fa ff ff       	call   caa0 <elf_get_uninit_array>
    cfb6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    cfbb:	48 85 c0             	test   %rax,%rax
    cfbe:	74 2c                	je     cfec <uninit_global_object+0xac>
    cfc0:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    cfc5:	48 85 d2             	test   %rdx,%rdx
    cfc8:	74 22                	je     cfec <uninit_global_object+0xac>
    cfca:	48 01 c3             	add    %rax,%rbx
    cfcd:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    cfd1:	48 8d 6c 13 f8       	lea    -0x8(%rbx,%rdx,1),%rbp
    cfd6:	48 39 eb             	cmp    %rbp,%rbx
    cfd9:	77 11                	ja     cfec <uninit_global_object+0xac>
    cfdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    cfe0:	ff 55 00             	call   *0x0(%rbp)
    cfe3:	48 83 ed 08          	sub    $0x8,%rbp
    cfe7:	48 39 eb             	cmp    %rbp,%rbx
    cfea:	76 f4                	jbe    cfe0 <uninit_global_object+0xa0>
    cfec:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    cff1:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    cff8:	00 00 
    cffa:	75 07                	jne    d003 <uninit_global_object+0xc3>
    cffc:	48 83 c4 28          	add    $0x28,%rsp
    d000:	5b                   	pop    %rbx
    d001:	5d                   	pop    %rbp
    d002:	c3                   	ret    
    d003:	e8 38 6b 00 00       	call   13b40 <__stack_chk_fail>
    d008:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d00f:	00 

000000000000d010 <bit_array_new>:
    d010:	f3 0f 1e fa          	endbr64 
    d014:	41 54                	push   %r12
    d016:	55                   	push   %rbp
    d017:	53                   	push   %rbx
    d018:	48 85 ff             	test   %rdi,%rdi
    d01b:	74 53                	je     d070 <bit_array_new+0x60>
    d01d:	48 8d 47 07          	lea    0x7(%rdi),%rax
    d021:	48 89 fb             	mov    %rdi,%rbx
    d024:	48 89 c2             	mov    %rax,%rdx
    d027:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    d02b:	48 39 fa             	cmp    %rdi,%rdx
    d02e:	72 40                	jb     d070 <bit_array_new+0x60>
    d030:	48 c1 e8 03          	shr    $0x3,%rax
    d034:	bf 18 00 00 00       	mov    $0x18,%edi
    d039:	48 89 c5             	mov    %rax,%rbp
    d03c:	e8 2f 1f 00 00       	call   ef70 <emalloc>
    d041:	49 89 c4             	mov    %rax,%r12
    d044:	48 85 c0             	test   %rax,%rax
    d047:	74 27                	je     d070 <bit_array_new+0x60>
    d049:	48 89 28             	mov    %rbp,(%rax)
    d04c:	48 89 ef             	mov    %rbp,%rdi
    d04f:	48 89 58 08          	mov    %rbx,0x8(%rax)
    d053:	e8 18 1f 00 00       	call   ef70 <emalloc>
    d058:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    d05d:	48 85 c0             	test   %rax,%rax
    d060:	75 11                	jne    d073 <bit_array_new+0x63>
    d062:	4c 89 e7             	mov    %r12,%rdi
    d065:	e8 56 21 00 00       	call   f1c0 <efree>
    d06a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d070:	45 31 e4             	xor    %r12d,%r12d
    d073:	4c 89 e0             	mov    %r12,%rax
    d076:	5b                   	pop    %rbx
    d077:	5d                   	pop    %rbp
    d078:	41 5c                	pop    %r12
    d07a:	c3                   	ret    
    d07b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000d080 <bit_array_new_set>:
    d080:	f3 0f 1e fa          	endbr64 
    d084:	41 54                	push   %r12
    d086:	e8 85 ff ff ff       	call   d010 <bit_array_new>
    d08b:	49 89 c4             	mov    %rax,%r12
    d08e:	48 85 c0             	test   %rax,%rax
    d091:	74 11                	je     d0a4 <bit_array_new_set+0x24>
    d093:	48 8b 78 10          	mov    0x10(%rax),%rdi
    d097:	48 8b 10             	mov    (%rax),%rdx
    d09a:	be ff 00 00 00       	mov    $0xff,%esi
    d09f:	e8 6c 69 00 00       	call   13a10 <memset>
    d0a4:	4c 89 e0             	mov    %r12,%rax
    d0a7:	41 5c                	pop    %r12
    d0a9:	c3                   	ret    
    d0aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000d0b0 <bit_array_new_reset>:
    d0b0:	f3 0f 1e fa          	endbr64 
    d0b4:	41 54                	push   %r12
    d0b6:	e8 55 ff ff ff       	call   d010 <bit_array_new>
    d0bb:	49 89 c4             	mov    %rax,%r12
    d0be:	48 85 c0             	test   %rax,%rax
    d0c1:	74 0e                	je     d0d1 <bit_array_new_reset+0x21>
    d0c3:	48 8b 78 10          	mov    0x10(%rax),%rdi
    d0c7:	48 8b 10             	mov    (%rax),%rdx
    d0ca:	31 f6                	xor    %esi,%esi
    d0cc:	e8 3f 69 00 00       	call   13a10 <memset>
    d0d1:	4c 89 e0             	mov    %r12,%rax
    d0d4:	41 5c                	pop    %r12
    d0d6:	c3                   	ret    
    d0d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    d0de:	00 00 

000000000000d0e0 <bit_array_delete>:
    d0e0:	f3 0f 1e fa          	endbr64 
    d0e4:	55                   	push   %rbp
    d0e5:	48 89 fd             	mov    %rdi,%rbp
    d0e8:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    d0ec:	e8 cf 20 00 00       	call   f1c0 <efree>
    d0f1:	48 89 ef             	mov    %rbp,%rdi
    d0f4:	5d                   	pop    %rbp
    d0f5:	e9 c6 20 00 00       	jmp    f1c0 <efree>
    d0fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000d100 <bit_array_test>:
    d100:	f3 0f 1e fa          	endbr64 
    d104:	48 89 f1             	mov    %rsi,%rcx
    d107:	48 89 f2             	mov    %rsi,%rdx
    d10a:	48 8b 77 10          	mov    0x10(%rdi),%rsi
    d10e:	b8 01 00 00 00       	mov    $0x1,%eax
    d113:	83 e1 07             	and    $0x7,%ecx
    d116:	48 c1 ea 03          	shr    $0x3,%rdx
    d11a:	d3 e0                	shl    %cl,%eax
    d11c:	84 04 16             	test   %al,(%rsi,%rdx,1)
    d11f:	0f 95 c0             	setne  %al
    d122:	c3                   	ret    
    d123:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    d12a:	00 00 00 
    d12d:	0f 1f 00             	nopl   (%rax)

000000000000d130 <bit_array_test_range>:
    d130:	f3 0f 1e fa          	endbr64 
    d134:	48 89 f0             	mov    %rsi,%rax
    d137:	4c 8b 47 10          	mov    0x10(%rdi),%r8
    d13b:	83 e6 07             	and    $0x7,%esi
    d13e:	b9 08 00 00 00       	mov    $0x8,%ecx
    d143:	48 c1 e8 03          	shr    $0x3,%rax
    d147:	48 29 f1             	sub    %rsi,%rcx
    d14a:	45 0f b6 0c 00       	movzbl (%r8,%rax,1),%r9d
    d14f:	48 39 d1             	cmp    %rdx,%rcx
    d152:	72 24                	jb     d178 <bit_array_test_range+0x48>
    d154:	89 d1                	mov    %edx,%ecx
    d156:	b8 01 00 00 00       	mov    $0x1,%eax
    d15b:	d3 e0                	shl    %cl,%eax
    d15d:	89 f1                	mov    %esi,%ecx
    d15f:	83 e8 01             	sub    $0x1,%eax
    d162:	d3 e0                	shl    %cl,%eax
    d164:	41 21 c1             	and    %eax,%r9d
    d167:	41 38 c1             	cmp    %al,%r9b
    d16a:	41 0f 94 c2          	sete   %r10b
    d16e:	44 89 d0             	mov    %r10d,%eax
    d171:	c3                   	ret    
    d172:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d178:	bf 01 00 00 00       	mov    $0x1,%edi
    d17d:	45 31 d2             	xor    %r10d,%r10d
    d180:	d3 e7                	shl    %cl,%edi
    d182:	89 f1                	mov    %esi,%ecx
    d184:	83 ef 01             	sub    $0x1,%edi
    d187:	d3 e7                	shl    %cl,%edi
    d189:	41 21 f9             	and    %edi,%r9d
    d18c:	41 38 f9             	cmp    %dil,%r9b
    d18f:	75 dd                	jne    d16e <bit_array_test_range+0x3e>
    d191:	48 8d 4c 16 f8       	lea    -0x8(%rsi,%rdx,1),%rcx
    d196:	48 83 f9 07          	cmp    $0x7,%rcx
    d19a:	77 0e                	ja     d1aa <bit_array_test_range+0x7a>
    d19c:	eb 22                	jmp    d1c0 <bit_array_test_range+0x90>
    d19e:	66 90                	xchg   %ax,%ax
    d1a0:	48 83 e9 08          	sub    $0x8,%rcx
    d1a4:	48 83 f9 07          	cmp    $0x7,%rcx
    d1a8:	76 16                	jbe    d1c0 <bit_array_test_range+0x90>
    d1aa:	48 83 c0 01          	add    $0x1,%rax
    d1ae:	41 80 3c 00 ff       	cmpb   $0xff,(%r8,%rax,1)
    d1b3:	74 eb                	je     d1a0 <bit_array_test_range+0x70>
    d1b5:	45 31 d2             	xor    %r10d,%r10d
    d1b8:	44 89 d0             	mov    %r10d,%eax
    d1bb:	c3                   	ret    
    d1bc:	0f 1f 40 00          	nopl   0x0(%rax)
    d1c0:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    d1c6:	48 85 c9             	test   %rcx,%rcx
    d1c9:	74 a3                	je     d16e <bit_array_test_range+0x3e>
    d1cb:	ba 01 00 00 00       	mov    $0x1,%edx
    d1d0:	41 0f b6 7c 00 01    	movzbl 0x1(%r8,%rax,1),%edi
    d1d6:	d3 e2                	shl    %cl,%edx
    d1d8:	83 ea 01             	sub    $0x1,%edx
    d1db:	21 d7                	and    %edx,%edi
    d1dd:	40 38 d7             	cmp    %dl,%dil
    d1e0:	41 0f 94 c2          	sete   %r10b
    d1e4:	eb 88                	jmp    d16e <bit_array_test_range+0x3e>
    d1e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    d1ed:	00 00 00 

000000000000d1f0 <bit_array_set>:
    d1f0:	f3 0f 1e fa          	endbr64 
    d1f4:	48 89 f1             	mov    %rsi,%rcx
    d1f7:	48 89 f0             	mov    %rsi,%rax
    d1fa:	ba 01 00 00 00       	mov    $0x1,%edx
    d1ff:	48 c1 e8 03          	shr    $0x3,%rax
    d203:	83 e1 07             	and    $0x7,%ecx
    d206:	48 03 47 10          	add    0x10(%rdi),%rax
    d20a:	d3 e2                	shl    %cl,%edx
    d20c:	08 10                	or     %dl,(%rax)
    d20e:	c3                   	ret    
    d20f:	90                   	nop

000000000000d210 <bit_array_set_all>:
    d210:	f3 0f 1e fa          	endbr64 
    d214:	4c 8b 47 10          	mov    0x10(%rdi),%r8
    d218:	48 8b 17             	mov    (%rdi),%rdx
    d21b:	be ff 00 00 00       	mov    $0xff,%esi
    d220:	4c 89 c7             	mov    %r8,%rdi
    d223:	e9 e8 67 00 00       	jmp    13a10 <memset>
    d228:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d22f:	00 

000000000000d230 <bit_array_reset_range>:
    d230:	f3 0f 1e fa          	endbr64 
    d234:	48 89 f0             	mov    %rsi,%rax
    d237:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
    d23b:	83 e6 07             	and    $0x7,%esi
    d23e:	b9 08 00 00 00       	mov    $0x8,%ecx
    d243:	48 c1 e8 03          	shr    $0x3,%rax
    d247:	48 29 f1             	sub    %rsi,%rcx
    d24a:	49 01 c1             	add    %rax,%r9
    d24d:	45 0f b6 11          	movzbl (%r9),%r10d
    d251:	48 39 d1             	cmp    %rdx,%rcx
    d254:	73 6a                	jae    d2c0 <bit_array_reset_range+0x90>
    d256:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    d25c:	41 d3 e0             	shl    %cl,%r8d
    d25f:	89 f1                	mov    %esi,%ecx
    d261:	41 83 e8 01          	sub    $0x1,%r8d
    d265:	41 d3 e0             	shl    %cl,%r8d
    d268:	48 8d 4c 16 f8       	lea    -0x8(%rsi,%rdx,1),%rcx
    d26d:	41 f7 d0             	not    %r8d
    d270:	45 21 d0             	and    %r10d,%r8d
    d273:	45 88 01             	mov    %r8b,(%r9)
    d276:	48 83 f9 07          	cmp    $0x7,%rcx
    d27a:	76 64                	jbe    d2e0 <bit_array_reset_range+0xb0>
    d27c:	48 8d 71 f8          	lea    -0x8(%rcx),%rsi
    d280:	48 83 c0 01          	add    $0x1,%rax
    d284:	48 c1 ee 03          	shr    $0x3,%rsi
    d288:	48 01 c6             	add    %rax,%rsi
    d28b:	eb 07                	jmp    d294 <bit_array_reset_range+0x64>
    d28d:	0f 1f 00             	nopl   (%rax)
    d290:	48 83 c0 01          	add    $0x1,%rax
    d294:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    d298:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
    d29c:	48 39 f0             	cmp    %rsi,%rax
    d29f:	75 ef                	jne    d290 <bit_array_reset_range+0x60>
    d2a1:	83 e1 07             	and    $0x7,%ecx
    d2a4:	48 85 c9             	test   %rcx,%rcx
    d2a7:	74 0f                	je     d2b8 <bit_array_reset_range+0x88>
    d2a9:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    d2ad:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    d2b2:	d3 e0                	shl    %cl,%eax
    d2b4:	20 44 32 01          	and    %al,0x1(%rdx,%rsi,1)
    d2b8:	c3                   	ret    
    d2b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d2c0:	89 d1                	mov    %edx,%ecx
    d2c2:	b8 01 00 00 00       	mov    $0x1,%eax
    d2c7:	d3 e0                	shl    %cl,%eax
    d2c9:	89 f1                	mov    %esi,%ecx
    d2cb:	83 e8 01             	sub    $0x1,%eax
    d2ce:	d3 e0                	shl    %cl,%eax
    d2d0:	41 89 c0             	mov    %eax,%r8d
    d2d3:	41 f7 d0             	not    %r8d
    d2d6:	45 21 d0             	and    %r10d,%r8d
    d2d9:	45 88 01             	mov    %r8b,(%r9)
    d2dc:	c3                   	ret    
    d2dd:	0f 1f 00             	nopl   (%rax)
    d2e0:	48 89 c6             	mov    %rax,%rsi
    d2e3:	eb bf                	jmp    d2a4 <bit_array_reset_range+0x74>
    d2e5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    d2ec:	00 00 00 
    d2ef:	90                   	nop

000000000000d2f0 <bit_array_reset_all>:
    d2f0:	f3 0f 1e fa          	endbr64 
    d2f4:	4c 8b 47 10          	mov    0x10(%rdi),%r8
    d2f8:	48 8b 17             	mov    (%rdi),%rdx
    d2fb:	31 f6                	xor    %esi,%esi
    d2fd:	4c 89 c7             	mov    %r8,%rdi
    d300:	e9 0b 67 00 00       	jmp    13a10 <memset>
    d305:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    d30c:	00 00 00 
    d30f:	90                   	nop

000000000000d310 <bit_array_split>:
    d310:	f3 0f 1e fa          	endbr64 
    d314:	41 57                	push   %r15
    d316:	41 56                	push   %r14
    d318:	41 55                	push   %r13
    d31a:	49 89 d5             	mov    %rdx,%r13
    d31d:	41 54                	push   %r12
    d31f:	55                   	push   %rbp
    d320:	53                   	push   %rbx
    d321:	48 89 fb             	mov    %rdi,%rbx
    d324:	48 83 ec 38          	sub    $0x38,%rsp
    d328:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    d32d:	48 85 f6             	test   %rsi,%rsi
    d330:	0f 84 a2 01 00 00    	je     d4d8 <bit_array_split+0x1c8>
    d336:	4c 8b 7f 08          	mov    0x8(%rdi),%r15
    d33a:	49 39 f7             	cmp    %rsi,%r15
    d33d:	77 21                	ja     d360 <bit_array_split+0x50>
    d33f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    d344:	49 89 7d 00          	mov    %rdi,0x0(%r13)
    d348:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    d34f:	31 c0                	xor    %eax,%eax
    d351:	48 83 c4 38          	add    $0x38,%rsp
    d355:	5b                   	pop    %rbx
    d356:	5d                   	pop    %rbp
    d357:	41 5c                	pop    %r12
    d359:	41 5d                	pop    %r13
    d35b:	41 5e                	pop    %r14
    d35d:	41 5f                	pop    %r15
    d35f:	c3                   	ret    
    d360:	89 f0                	mov    %esi,%eax
    d362:	48 89 f5             	mov    %rsi,%rbp
    d365:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    d36a:	49 29 f7             	sub    %rsi,%r15
    d36d:	83 e0 07             	and    $0x7,%eax
    d370:	48 c1 ed 03          	shr    $0x3,%rbp
    d374:	88 44 24 17          	mov    %al,0x17(%rsp)
    d378:	48 8d 46 07          	lea    0x7(%rsi),%rax
    d37c:	48 c1 e8 03          	shr    $0x3,%rax
    d380:	48 89 c7             	mov    %rax,%rdi
    d383:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    d388:	e8 e3 1b 00 00       	call   ef70 <emalloc>
    d38d:	49 89 c4             	mov    %rax,%r12
    d390:	48 85 c0             	test   %rax,%rax
    d393:	0f 84 b7 01 00 00    	je     d550 <bit_array_split+0x240>
    d399:	48 85 ed             	test   %rbp,%rbp
    d39c:	0f 84 be 01 00 00    	je     d560 <bit_array_split+0x250>
    d3a2:	31 c0                	xor    %eax,%eax
    d3a4:	0f 1f 40 00          	nopl   0x0(%rax)
    d3a8:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    d3ac:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
    d3b0:	41 88 14 04          	mov    %dl,(%r12,%rax,1)
    d3b4:	48 83 c0 01          	add    $0x1,%rax
    d3b8:	48 39 c5             	cmp    %rax,%rbp
    d3bb:	75 eb                	jne    d3a8 <bit_array_split+0x98>
    d3bd:	48 89 ea             	mov    %rbp,%rdx
    d3c0:	0f b6 4c 24 17       	movzbl 0x17(%rsp),%ecx
    d3c5:	84 c9                	test   %cl,%cl
    d3c7:	0f 85 2b 01 00 00    	jne    d4f8 <bit_array_split+0x1e8>
    d3cd:	4c 89 ff             	mov    %r15,%rdi
    d3d0:	e8 3b fc ff ff       	call   d010 <bit_array_new>
    d3d5:	49 89 c6             	mov    %rax,%r14
    d3d8:	48 85 c0             	test   %rax,%rax
    d3db:	0f 84 86 01 00 00    	je     d567 <bit_array_split+0x257>
    d3e1:	48 89 ea             	mov    %rbp,%rdx
    d3e4:	31 f6                	xor    %esi,%esi
    d3e6:	49 83 ff 07          	cmp    $0x7,%r15
    d3ea:	76 72                	jbe    d45e <bit_array_split+0x14e>
    d3ec:	49 8d 57 f8          	lea    -0x8(%r15),%rdx
    d3f0:	b8 08 00 00 00       	mov    $0x8,%eax
    d3f5:	48 8d 7d 01          	lea    0x1(%rbp),%rdi
    d3f9:	45 31 c9             	xor    %r9d,%r9d
    d3fc:	44 0f b6 5c 24 17    	movzbl 0x17(%rsp),%r11d
    d402:	48 c1 ea 03          	shr    $0x3,%rdx
    d406:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
    d40b:	48 01 fa             	add    %rdi,%rdx
    d40e:	44 29 d8             	sub    %r11d,%eax
    d411:	eb 09                	jmp    d41c <bit_array_split+0x10c>
    d413:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d418:	48 83 c7 01          	add    $0x1,%rdi
    d41c:	4c 8b 43 10          	mov    0x10(%rbx),%r8
    d420:	48 89 e9             	mov    %rbp,%rcx
    d423:	4d 89 ca             	mov    %r9,%r10
    d426:	48 89 fd             	mov    %rdi,%rbp
    d429:	49 83 c1 01          	add    $0x1,%r9
    d42d:	41 0f b6 34 08       	movzbl (%r8,%rcx,1),%esi
    d432:	45 0f b6 04 38       	movzbl (%r8,%rdi,1),%r8d
    d437:	44 89 d9             	mov    %r11d,%ecx
    d43a:	d3 fe                	sar    %cl,%esi
    d43c:	89 c1                	mov    %eax,%ecx
    d43e:	41 d3 e0             	shl    %cl,%r8d
    d441:	49 8b 4e 10          	mov    0x10(%r14),%rcx
    d445:	44 09 c6             	or     %r8d,%esi
    d448:	42 88 34 11          	mov    %sil,(%rcx,%r10,1)
    d44c:	48 39 d7             	cmp    %rdx,%rdi
    d44f:	75 c7                	jne    d418 <bit_array_split+0x108>
    d451:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    d456:	41 83 e7 07          	and    $0x7,%r15d
    d45a:	48 83 c6 01          	add    $0x1,%rsi
    d45e:	44 0f b6 5c 24 17    	movzbl 0x17(%rsp),%r11d
    d464:	b8 08 00 00 00       	mov    $0x8,%eax
    d469:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    d46d:	44 29 d8             	sub    %r11d,%eax
    d470:	48 0f be c0          	movsbq %al,%rax
    d474:	4c 39 f8             	cmp    %r15,%rax
    d477:	0f 82 9b 00 00 00    	jb     d518 <bit_array_split+0x208>
    d47d:	4d 85 ff             	test   %r15,%r15
    d480:	74 17                	je     d499 <bit_array_split+0x189>
    d482:	0f b6 04 17          	movzbl (%rdi,%rdx,1),%eax
    d486:	0f b6 4c 24 17       	movzbl 0x17(%rsp),%ecx
    d48b:	4d 8b 46 10          	mov    0x10(%r14),%r8
    d48f:	d3 f8                	sar    %cl,%eax
    d491:	41 88 04 30          	mov    %al,(%r8,%rsi,1)
    d495:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    d499:	48 85 ff             	test   %rdi,%rdi
    d49c:	74 05                	je     d4a3 <bit_array_split+0x193>
    d49e:	e8 1d 1d 00 00       	call   f1c0 <efree>
    d4a3:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    d4a8:	4c 89 63 10          	mov    %r12,0x10(%rbx)
    d4ac:	48 89 03             	mov    %rax,(%rbx)
    d4af:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    d4b4:	48 89 43 08          	mov    %rax,0x8(%rbx)
    d4b8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    d4bd:	49 89 5d 00          	mov    %rbx,0x0(%r13)
    d4c1:	4c 89 30             	mov    %r14,(%rax)
    d4c4:	48 83 c4 38          	add    $0x38,%rsp
    d4c8:	31 c0                	xor    %eax,%eax
    d4ca:	5b                   	pop    %rbx
    d4cb:	5d                   	pop    %rbp
    d4cc:	41 5c                	pop    %r12
    d4ce:	41 5d                	pop    %r13
    d4d0:	41 5e                	pop    %r14
    d4d2:	41 5f                	pop    %r15
    d4d4:	c3                   	ret    
    d4d5:	0f 1f 00             	nopl   (%rax)
    d4d8:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    d4df:	31 c0                	xor    %eax,%eax
    d4e1:	48 89 39             	mov    %rdi,(%rcx)
    d4e4:	48 83 c4 38          	add    $0x38,%rsp
    d4e8:	5b                   	pop    %rbx
    d4e9:	5d                   	pop    %rbp
    d4ea:	41 5c                	pop    %r12
    d4ec:	41 5d                	pop    %r13
    d4ee:	41 5e                	pop    %r14
    d4f0:	41 5f                	pop    %r15
    d4f2:	c3                   	ret    
    d4f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d4f8:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    d4fc:	b8 01 00 00 00       	mov    $0x1,%eax
    d501:	d3 e0                	shl    %cl,%eax
    d503:	83 e8 01             	sub    $0x1,%eax
    d506:	22 04 16             	and    (%rsi,%rdx,1),%al
    d509:	41 88 04 14          	mov    %al,(%r12,%rdx,1)
    d50d:	e9 bb fe ff ff       	jmp    d3cd <bit_array_split+0xbd>
    d512:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d518:	0f b6 44 17 01       	movzbl 0x1(%rdi,%rdx,1),%eax
    d51d:	45 0f b6 cb          	movzbl %r11b,%r9d
    d521:	b9 08 00 00 00       	mov    $0x8,%ecx
    d526:	0f b6 14 17          	movzbl (%rdi,%rdx,1),%edx
    d52a:	44 29 c9             	sub    %r9d,%ecx
    d52d:	4d 8b 46 10          	mov    0x10(%r14),%r8
    d531:	d3 e0                	shl    %cl,%eax
    d533:	44 89 d9             	mov    %r11d,%ecx
    d536:	d3 fa                	sar    %cl,%edx
    d538:	09 d0                	or     %edx,%eax
    d53a:	41 88 04 30          	mov    %al,(%r8,%rsi,1)
    d53e:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    d542:	e9 52 ff ff ff       	jmp    d499 <bit_array_split+0x189>
    d547:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    d54e:	00 00 
    d550:	b8 0c 00 00 00       	mov    $0xc,%eax
    d555:	e9 f7 fd ff ff       	jmp    d351 <bit_array_split+0x41>
    d55a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d560:	31 d2                	xor    %edx,%edx
    d562:	e9 59 fe ff ff       	jmp    d3c0 <bit_array_split+0xb0>
    d567:	4c 89 e7             	mov    %r12,%rdi
    d56a:	e8 51 1c 00 00       	call   f1c0 <efree>
    d56f:	b8 0c 00 00 00       	mov    $0xc,%eax
    d574:	e9 d8 fd ff ff       	jmp    d351 <bit_array_split+0x41>
    d579:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000d580 <remove_ema>:
    d580:	48 89 f8             	mov    %rdi,%rax
    d583:	48 85 ff             	test   %rdi,%rdi
    d586:	74 1c                	je     d5a4 <remove_ema+0x24>
    d588:	48 8b 57 40          	mov    0x40(%rdi),%rdx
    d58c:	48 39 7a 38          	cmp    %rdi,0x38(%rdx)
    d590:	75 13                	jne    d5a5 <remove_ema+0x25>
    d592:	48 8b 4f 38          	mov    0x38(%rdi),%rcx
    d596:	48 39 79 40          	cmp    %rdi,0x40(%rcx)
    d59a:	75 09                	jne    d5a5 <remove_ema+0x25>
    d59c:	48 89 4a 38          	mov    %rcx,0x38(%rdx)
    d5a0:	48 89 51 40          	mov    %rdx,0x40(%rcx)
    d5a4:	c3                   	ret    
    d5a5:	50                   	push   %rax
    d5a6:	e8 8c 87 01 00       	call   25d37 <abort>
    d5ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000d5b0 <ema_do_uncommit_real>:
    d5b0:	55                   	push   %rbp
    d5b1:	48 89 e5             	mov    %rsp,%rbp
    d5b4:	41 57                	push   %r15
    d5b6:	41 56                	push   %r14
    d5b8:	41 55                	push   %r13
    d5ba:	41 54                	push   %r12
    d5bc:	53                   	push   %rbx
    d5bd:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    d5c1:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    d5c8:	89 4c 24 28          	mov    %ecx,0x28(%rsp)
    d5cc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    d5d3:	00 00 
    d5d5:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    d5dc:	00 
    d5dd:	31 c0                	xor    %eax,%eax
    d5df:	f6 47 10 01          	testb  $0x1,0x10(%rdi)
    d5e3:	0f 85 6f 01 00 00    	jne    d758 <ema_do_uncommit_real+0x1a8>
    d5e9:	8b 47 18             	mov    0x18(%rdi),%eax
    d5ec:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d5f0:	48 89 fb             	mov    %rdi,%rbx
    d5f3:	49 89 f7             	mov    %rsi,%r15
    d5f6:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    d5fd:	00 00 
    d5ff:	49 89 d4             	mov    %rdx,%r12
    d602:	25 00 ff 00 00       	and    $0xff00,%eax
    d607:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    d60c:	89 44 24 24          	mov    %eax,0x24(%rsp)
    d610:	48 c7 44 24 40 10 04 	movq   $0x410,0x40(%rsp)
    d617:	00 00 
    d619:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    d61e:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    d623:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d628:	4d 39 e7             	cmp    %r12,%r15
    d62b:	0f 83 27 01 00 00    	jae    d758 <ema_do_uncommit_real+0x1a8>
    d631:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d638:	4c 89 fe             	mov    %r15,%rsi
    d63b:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    d63f:	48 2b 33             	sub    (%rbx),%rsi
    d642:	48 c1 ee 0c          	shr    $0xc,%rsi
    d646:	e8 b5 fa ff ff       	call   d100 <bit_array_test>
    d64b:	84 c0                	test   %al,%al
    d64d:	75 0c                	jne    d65b <ema_do_uncommit_real+0xab>
    d64f:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    d656:	4d 39 fc             	cmp    %r15,%r12
    d659:	77 dd                	ja     d638 <ema_do_uncommit_real+0x88>
    d65b:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
    d660:	4d 39 fc             	cmp    %r15,%r12
    d663:	0f 84 ef 00 00 00    	je     d758 <ema_do_uncommit_real+0x1a8>
    d669:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    d670:	4d 39 fc             	cmp    %r15,%r12
    d673:	77 17                	ja     d68c <ema_do_uncommit_real+0xdc>
    d675:	e9 02 01 00 00       	jmp    d77c <ema_do_uncommit_real+0x1cc>
    d67a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d680:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    d687:	4d 39 fc             	cmp    %r15,%r12
    d68a:	76 17                	jbe    d6a3 <ema_do_uncommit_real+0xf3>
    d68c:	4c 89 fe             	mov    %r15,%rsi
    d68f:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    d693:	48 2b 33             	sub    (%rbx),%rsi
    d696:	48 c1 ee 0c          	shr    $0xc,%rsi
    d69a:	e8 61 fa ff ff       	call   d100 <bit_array_test>
    d69f:	84 c0                	test   %al,%al
    d6a1:	75 dd                	jne    d680 <ema_do_uncommit_real+0xd0>
    d6a3:	4c 89 f8             	mov    %r15,%rax
    d6a6:	48 2b 44 24 38       	sub    0x38(%rsp),%rax
    d6ab:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    d6b0:	8b 44 24 28          	mov    0x28(%rsp),%eax
    d6b4:	8b 54 24 24          	mov    0x24(%rsp),%edx
    d6b8:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    d6bd:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    d6c2:	89 c1                	mov    %eax,%ecx
    d6c4:	09 c2                	or     %eax,%edx
    d6c6:	80 cd 04             	or     $0x4,%ch
    d6c9:	89 4c 24 2c          	mov    %ecx,0x2c(%rsp)
    d6cd:	e8 0e cb ff ff       	call   a1e0 <sgx_mm_modify_ocall>
    d6d2:	85 c0                	test   %eax,%eax
    d6d4:	75 76                	jne    d74c <ema_do_uncommit_real+0x19c>
    d6d6:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    d6db:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
    d6e0:	49 89 c6             	mov    %rax,%r14
    d6e3:	49 39 c7             	cmp    %rax,%r15
    d6e6:	76 27                	jbe    d70f <ema_do_uncommit_real+0x15f>
    d6e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d6ef:	00 
    d6f0:	4c 89 f6             	mov    %r14,%rsi
    d6f3:	4c 89 ef             	mov    %r13,%rdi
    d6f6:	e8 c4 85 01 00       	call   25cbf <do_eaccept>
    d6fb:	85 c0                	test   %eax,%eax
    d6fd:	0f 85 87 00 00 00    	jne    d78a <ema_do_uncommit_real+0x1da>
    d703:	49 81 c6 00 10 00 00 	add    $0x1000,%r14
    d70a:	4d 39 f7             	cmp    %r14,%r15
    d70d:	77 e1                	ja     d6f0 <ema_do_uncommit_real+0x140>
    d70f:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
    d714:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    d719:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    d71d:	4c 89 f2             	mov    %r14,%rdx
    d720:	4c 89 ee             	mov    %r13,%rsi
    d723:	48 2b 33             	sub    (%rbx),%rsi
    d726:	48 c1 ea 0c          	shr    $0xc,%rdx
    d72a:	48 c1 ee 0c          	shr    $0xc,%rsi
    d72e:	e8 fd fa ff ff       	call   d230 <bit_array_reset_range>
    d733:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
    d737:	4c 89 f6             	mov    %r14,%rsi
    d73a:	4c 89 ef             	mov    %r13,%rdi
    d73d:	89 ca                	mov    %ecx,%edx
    d73f:	e8 9c ca ff ff       	call   a1e0 <sgx_mm_modify_ocall>
    d744:	85 c0                	test   %eax,%eax
    d746:	0f 84 dc fe ff ff    	je     d628 <ema_do_uncommit_real+0x78>
    d74c:	b8 0e 00 00 00       	mov    $0xe,%eax
    d751:	eb 07                	jmp    d75a <ema_do_uncommit_real+0x1aa>
    d753:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d758:	31 c0                	xor    %eax,%eax
    d75a:	48 8b 8c 24 b8 00 00 	mov    0xb8(%rsp),%rcx
    d761:	00 
    d762:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    d769:	00 00 
    d76b:	75 22                	jne    d78f <ema_do_uncommit_real+0x1df>
    d76d:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    d771:	5b                   	pop    %rbx
    d772:	41 5c                	pop    %r12
    d774:	41 5d                	pop    %r13
    d776:	41 5e                	pop    %r14
    d778:	41 5f                	pop    %r15
    d77a:	5d                   	pop    %rbp
    d77b:	c3                   	ret    
    d77c:	48 c7 44 24 30 00 10 	movq   $0x1000,0x30(%rsp)
    d783:	00 00 
    d785:	e9 26 ff ff ff       	jmp    d6b0 <ema_do_uncommit_real+0x100>
    d78a:	e8 a8 85 01 00       	call   25d37 <abort>
    d78f:	e8 ac 63 00 00       	call   13b40 <__stack_chk_fail>
    d794:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    d79b:	00 00 00 
    d79e:	66 90                	xchg   %ax,%ax

000000000000d7a0 <get_ema_alloc_flags>:
    d7a0:	f3 0f 1e fa          	endbr64 
    d7a4:	8b 47 10             	mov    0x10(%rdi),%eax
    d7a7:	c3                   	ret    
    d7a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d7af:	00 

000000000000d7b0 <get_ema_si_flags>:
    d7b0:	f3 0f 1e fa          	endbr64 
    d7b4:	48 8b 47 18          	mov    0x18(%rdi),%rax
    d7b8:	c3                   	ret    
    d7b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000d7c0 <ema_fault_handler>:
    d7c0:	f3 0f 1e fa          	endbr64 
    d7c4:	48 85 f6             	test   %rsi,%rsi
    d7c7:	74 07                	je     d7d0 <ema_fault_handler+0x10>
    d7c9:	48 8b 47 30          	mov    0x30(%rdi),%rax
    d7cd:	48 89 06             	mov    %rax,(%rsi)
    d7d0:	48 8b 47 28          	mov    0x28(%rdi),%rax
    d7d4:	c3                   	ret    
    d7d5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    d7dc:	00 00 00 
    d7df:	90                   	nop

000000000000d7e0 <ema_set_eaccept_full>:
    d7e0:	f3 0f 1e fa          	endbr64 
    d7e4:	53                   	push   %rbx
    d7e5:	48 89 fb             	mov    %rdi,%rbx
    d7e8:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    d7ec:	48 85 ff             	test   %rdi,%rdi
    d7ef:	74 0f                	je     d800 <ema_set_eaccept_full+0x20>
    d7f1:	e8 1a fa ff ff       	call   d210 <bit_array_set_all>
    d7f6:	31 c0                	xor    %eax,%eax
    d7f8:	5b                   	pop    %rbx
    d7f9:	c3                   	ret    
    d7fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d800:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    d804:	48 c1 ef 0c          	shr    $0xc,%rdi
    d808:	e8 73 f8 ff ff       	call   d080 <bit_array_new_set>
    d80d:	48 83 f8 01          	cmp    $0x1,%rax
    d811:	48 89 43 20          	mov    %rax,0x20(%rbx)
    d815:	5b                   	pop    %rbx
    d816:	19 c0                	sbb    %eax,%eax
    d818:	83 e0 0c             	and    $0xc,%eax
    d81b:	c3                   	ret    
    d81c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000d820 <ema_clear_eaccept_full>:
    d820:	f3 0f 1e fa          	endbr64 
    d824:	53                   	push   %rbx
    d825:	48 89 fb             	mov    %rdi,%rbx
    d828:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    d82c:	48 85 ff             	test   %rdi,%rdi
    d82f:	74 0f                	je     d840 <ema_clear_eaccept_full+0x20>
    d831:	e8 ba fa ff ff       	call   d2f0 <bit_array_reset_all>
    d836:	31 c0                	xor    %eax,%eax
    d838:	5b                   	pop    %rbx
    d839:	c3                   	ret    
    d83a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d840:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    d844:	48 c1 ef 0c          	shr    $0xc,%rdi
    d848:	e8 63 f8 ff ff       	call   d0b0 <bit_array_new_reset>
    d84d:	48 83 f8 01          	cmp    $0x1,%rax
    d851:	48 89 43 20          	mov    %rax,0x20(%rbx)
    d855:	5b                   	pop    %rbx
    d856:	19 c0                	sbb    %eax,%eax
    d858:	83 e0 0c             	and    $0xc,%eax
    d85b:	c3                   	ret    
    d85c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000d860 <ema_page_committed>:
    d860:	f3 0f 1e fa          	endbr64 
    d864:	4c 8b 47 20          	mov    0x20(%rdi),%r8
    d868:	4d 85 c0             	test   %r8,%r8
    d86b:	74 13                	je     d880 <ema_page_committed+0x20>
    d86d:	48 2b 37             	sub    (%rdi),%rsi
    d870:	4c 89 c7             	mov    %r8,%rdi
    d873:	48 c1 ee 0c          	shr    $0xc,%rsi
    d877:	e9 84 f8 ff ff       	jmp    d100 <bit_array_test>
    d87c:	0f 1f 40 00          	nopl   0x0(%rax)
    d880:	31 c0                	xor    %eax,%eax
    d882:	c3                   	ret    
    d883:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    d88a:	00 00 00 
    d88d:	0f 1f 00             	nopl   (%rax)

000000000000d890 <search_ema>:
    d890:	f3 0f 1e fa          	endbr64 
    d894:	48 8b 0f             	mov    (%rdi),%rcx
    d897:	48 8b 41 38          	mov    0x38(%rcx),%rax
    d89b:	48 39 c1             	cmp    %rax,%rcx
    d89e:	74 1a                	je     d8ba <search_ema+0x2a>
    d8a0:	48 8b 10             	mov    (%rax),%rdx
    d8a3:	48 39 d6             	cmp    %rdx,%rsi
    d8a6:	72 09                	jb     d8b1 <search_ema+0x21>
    d8a8:	48 03 50 08          	add    0x8(%rax),%rdx
    d8ac:	48 39 d6             	cmp    %rdx,%rsi
    d8af:	72 0b                	jb     d8bc <search_ema+0x2c>
    d8b1:	48 8b 40 38          	mov    0x38(%rax),%rax
    d8b5:	48 39 c1             	cmp    %rax,%rcx
    d8b8:	75 e6                	jne    d8a0 <search_ema+0x10>
    d8ba:	31 c0                	xor    %eax,%eax
    d8bc:	c3                   	ret    
    d8bd:	0f 1f 00             	nopl   (%rax)

000000000000d8c0 <search_ema_range>:
    d8c0:	f3 0f 1e fa          	endbr64 
    d8c4:	4c 8b 1f             	mov    (%rdi),%r11
    d8c7:	49 8b 43 38          	mov    0x38(%r11),%rax
    d8cb:	49 39 c3             	cmp    %rax,%r11
    d8ce:	75 11                	jne    d8e1 <search_ema_range+0x21>
    d8d0:	eb 4e                	jmp    d920 <search_ema_range+0x60>
    d8d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d8d8:	48 8b 40 38          	mov    0x38(%rax),%rax
    d8dc:	49 39 c3             	cmp    %rax,%r11
    d8df:	74 3f                	je     d920 <search_ema_range+0x60>
    d8e1:	4c 8b 08             	mov    (%rax),%r9
    d8e4:	4c 8b 50 08          	mov    0x8(%rax),%r10
    d8e8:	4d 01 ca             	add    %r9,%r10
    d8eb:	4c 39 d6             	cmp    %r10,%rsi
    d8ee:	73 e8                	jae    d8d8 <search_ema_range+0x18>
    d8f0:	4c 39 ca             	cmp    %r9,%rdx
    d8f3:	76 2b                	jbe    d920 <search_ema_range+0x60>
    d8f5:	48 89 01             	mov    %rax,(%rcx)
    d8f8:	48 8b 0f             	mov    (%rdi),%rcx
    d8fb:	48 39 c8             	cmp    %rcx,%rax
    d8fe:	74 11                	je     d911 <search_ema_range+0x51>
    d900:	48 8b 40 38          	mov    0x38(%rax),%rax
    d904:	48 39 c8             	cmp    %rcx,%rax
    d907:	74 08                	je     d911 <search_ema_range+0x51>
    d909:	48 3b 10             	cmp    (%rax),%rdx
    d90c:	77 f2                	ja     d900 <search_ema_range+0x40>
    d90e:	48 89 c1             	mov    %rax,%rcx
    d911:	49 89 08             	mov    %rcx,(%r8)
    d914:	31 c0                	xor    %eax,%eax
    d916:	c3                   	ret    
    d917:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    d91e:	00 00 
    d920:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
    d927:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    d92c:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
    d933:	c3                   	ret    
    d934:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    d93b:	00 00 00 
    d93e:	66 90                	xchg   %ax,%ax

000000000000d940 <ema_split>:
    d940:	f3 0f 1e fa          	endbr64 
    d944:	41 56                	push   %r14
    d946:	41 89 d6             	mov    %edx,%r14d
    d949:	41 55                	push   %r13
    d94b:	49 89 f5             	mov    %rsi,%r13
    d94e:	41 54                	push   %r12
    d950:	49 89 cc             	mov    %rcx,%r12
    d953:	55                   	push   %rbp
    d954:	53                   	push   %rbx
    d955:	48 89 fb             	mov    %rdi,%rbx
    d958:	bf 48 00 00 00       	mov    $0x48,%edi
    d95d:	48 83 ec 30          	sub    $0x30,%rsp
    d961:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    d968:	00 00 
    d96a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    d96f:	31 c0                	xor    %eax,%eax
    d971:	e8 fa 15 00 00       	call   ef70 <emalloc>
    d976:	48 85 c0             	test   %rax,%rax
    d979:	0f 84 09 01 00 00    	je     da88 <ema_split+0x148>
    d97f:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    d986:	00 00 
    d988:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    d98c:	48 89 c5             	mov    %rax,%rbp
    d98f:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    d996:	00 00 
    d998:	48 85 ff             	test   %rdi,%rdi
    d99b:	74 21                	je     d9be <ema_split+0x7e>
    d99d:	4c 89 ee             	mov    %r13,%rsi
    d9a0:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
    d9a5:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    d9aa:	48 2b 33             	sub    (%rbx),%rsi
    d9ad:	48 c1 ee 0c          	shr    $0xc,%rsi
    d9b1:	e8 5a f9 ff ff       	call   d310 <bit_array_split>
    d9b6:	85 c0                	test   %eax,%eax
    d9b8:	0f 85 b2 00 00 00    	jne    da70 <ema_split+0x130>
    d9be:	ba 48 00 00 00       	mov    $0x48,%edx
    d9c3:	48 89 de             	mov    %rbx,%rsi
    d9c6:	48 89 ef             	mov    %rbp,%rdi
    d9c9:	e8 22 5e 00 00       	call   137f0 <memcpy>
    d9ce:	45 84 f6             	test   %r14b,%r14b
    d9d1:	75 7d                	jne    da50 <ema_split+0x110>
    d9d3:	48 8b 43 38          	mov    0x38(%rbx),%rax
    d9d7:	48 89 d9             	mov    %rbx,%rcx
    d9da:	48 8b 50 40          	mov    0x40(%rax),%rdx
    d9de:	48 89 45 38          	mov    %rax,0x38(%rbp)
    d9e2:	48 89 55 40          	mov    %rdx,0x40(%rbp)
    d9e6:	48 89 6a 38          	mov    %rbp,0x38(%rdx)
    d9ea:	48 89 ea             	mov    %rbp,%rdx
    d9ed:	48 89 68 40          	mov    %rbp,0x40(%rax)
    d9f1:	48 8b 03             	mov    (%rbx),%rax
    d9f4:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    d9f8:	4c 89 ef             	mov    %r13,%rdi
    d9fb:	48 89 01             	mov    %rax,(%rcx)
    d9fe:	48 29 c7             	sub    %rax,%rdi
    da01:	48 01 f0             	add    %rsi,%rax
    da04:	4c 29 e8             	sub    %r13,%rax
    da07:	48 83 7b 20 00       	cmpq   $0x0,0x20(%rbx)
    da0c:	48 89 79 08          	mov    %rdi,0x8(%rcx)
    da10:	4c 89 2a             	mov    %r13,(%rdx)
    da13:	48 89 42 08          	mov    %rax,0x8(%rdx)
    da17:	74 12                	je     da2b <ema_split+0xeb>
    da19:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    da1e:	48 89 41 20          	mov    %rax,0x20(%rcx)
    da22:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    da27:	48 89 42 20          	mov    %rax,0x20(%rdx)
    da2b:	49 89 2c 24          	mov    %rbp,(%r12)
    da2f:	31 c0                	xor    %eax,%eax
    da31:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    da36:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    da3d:	00 00 
    da3f:	75 4e                	jne    da8f <ema_split+0x14f>
    da41:	48 83 c4 30          	add    $0x30,%rsp
    da45:	5b                   	pop    %rbx
    da46:	5d                   	pop    %rbp
    da47:	41 5c                	pop    %r12
    da49:	41 5d                	pop    %r13
    da4b:	41 5e                	pop    %r14
    da4d:	c3                   	ret    
    da4e:	66 90                	xchg   %ax,%ax
    da50:	48 8b 43 40          	mov    0x40(%rbx),%rax
    da54:	48 89 da             	mov    %rbx,%rdx
    da57:	48 89 5d 38          	mov    %rbx,0x38(%rbp)
    da5b:	48 89 e9             	mov    %rbp,%rcx
    da5e:	48 89 45 40          	mov    %rax,0x40(%rbp)
    da62:	48 89 68 38          	mov    %rbp,0x38(%rax)
    da66:	48 89 6b 40          	mov    %rbp,0x40(%rbx)
    da6a:	eb 85                	jmp    d9f1 <ema_split+0xb1>
    da6c:	0f 1f 40 00          	nopl   0x0(%rax)
    da70:	48 89 ef             	mov    %rbp,%rdi
    da73:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    da77:	e8 44 17 00 00       	call   f1c0 <efree>
    da7c:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    da80:	eb af                	jmp    da31 <ema_split+0xf1>
    da82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    da88:	b8 0c 00 00 00       	mov    $0xc,%eax
    da8d:	eb a2                	jmp    da31 <ema_split+0xf1>
    da8f:	e8 ac 60 00 00       	call   13b40 <__stack_chk_fail>
    da94:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    da9b:	00 00 00 
    da9e:	66 90                	xchg   %ax,%ax

000000000000daa0 <ema_split_ex>:
    daa0:	f3 0f 1e fa          	endbr64 
    daa4:	41 54                	push   %r12
    daa6:	49 89 cc             	mov    %rcx,%r12
    daa9:	55                   	push   %rbp
    daaa:	48 89 d5             	mov    %rdx,%rbp
    daad:	53                   	push   %rbx
    daae:	48 89 fb             	mov    %rdi,%rbx
    dab1:	48 83 ec 10          	sub    $0x10,%rsp
    dab5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    dabc:	00 00 
    dabe:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    dac3:	31 c0                	xor    %eax,%eax
    dac5:	48 8b 07             	mov    (%rdi),%rax
    dac8:	48 39 f0             	cmp    %rsi,%rax
    dacb:	72 33                	jb     db00 <ema_split_ex+0x60>
    dacd:	48 03 43 08          	add    0x8(%rbx),%rax
    dad1:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    dad8:	00 
    dad9:	48 39 e8             	cmp    %rbp,%rax
    dadc:	77 42                	ja     db20 <ema_split_ex+0x80>
    dade:	49 89 1c 24          	mov    %rbx,(%r12)
    dae2:	31 c0                	xor    %eax,%eax
    dae4:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    dae9:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
    daf0:	00 00 
    daf2:	75 59                	jne    db4d <ema_split_ex+0xad>
    daf4:	48 83 c4 10          	add    $0x10,%rsp
    daf8:	5b                   	pop    %rbx
    daf9:	5d                   	pop    %rbp
    dafa:	41 5c                	pop    %r12
    dafc:	c3                   	ret    
    dafd:	0f 1f 00             	nopl   (%rax)
    db00:	31 d2                	xor    %edx,%edx
    db02:	48 89 e1             	mov    %rsp,%rcx
    db05:	e8 36 fe ff ff       	call   d940 <ema_split>
    db0a:	85 c0                	test   %eax,%eax
    db0c:	75 d6                	jne    dae4 <ema_split_ex+0x44>
    db0e:	48 8b 14 24          	mov    (%rsp),%rdx
    db12:	48 85 d2             	test   %rdx,%rdx
    db15:	74 31                	je     db48 <ema_split_ex+0xa8>
    db17:	48 8b 02             	mov    (%rdx),%rax
    db1a:	48 89 d3             	mov    %rdx,%rbx
    db1d:	eb ae                	jmp    dacd <ema_split_ex+0x2d>
    db1f:	90                   	nop
    db20:	48 89 e1             	mov    %rsp,%rcx
    db23:	ba 01 00 00 00       	mov    $0x1,%edx
    db28:	48 89 ee             	mov    %rbp,%rsi
    db2b:	48 89 df             	mov    %rbx,%rdi
    db2e:	e8 0d fe ff ff       	call   d940 <ema_split>
    db33:	85 c0                	test   %eax,%eax
    db35:	75 ad                	jne    dae4 <ema_split_ex+0x44>
    db37:	48 8b 04 24          	mov    (%rsp),%rax
    db3b:	48 85 c0             	test   %rax,%rax
    db3e:	48 0f 45 d8          	cmovne %rax,%rbx
    db42:	eb 9a                	jmp    dade <ema_split_ex+0x3e>
    db44:	0f 1f 40 00          	nopl   0x0(%rax)
    db48:	48 8b 03             	mov    (%rbx),%rax
    db4b:	eb 80                	jmp    dacd <ema_split_ex+0x2d>
    db4d:	e8 ee 5f 00 00       	call   13b40 <__stack_chk_fail>
    db52:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    db59:	00 00 00 
    db5c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000db60 <find_free_region>:
    db60:	f3 0f 1e fa          	endbr64 
    db64:	41 57                	push   %r15
    db66:	41 56                	push   %r14
    db68:	49 89 fe             	mov    %rdi,%r14
    db6b:	41 55                	push   %r13
    db6d:	49 89 d5             	mov    %rdx,%r13
    db70:	41 54                	push   %r12
    db72:	49 f7 dd             	neg    %r13
    db75:	55                   	push   %rbp
    db76:	48 89 f5             	mov    %rsi,%rbp
    db79:	53                   	push   %rbx
    db7a:	48 83 ec 28          	sub    $0x28,%rsp
    db7e:	4c 8b 27             	mov    (%rdi),%r12
    db81:	4d 8b 7c 24 38       	mov    0x38(%r12),%r15
    db86:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
    db8d:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
    db94:	4d 39 fc             	cmp    %r15,%r12
    db97:	0f 84 6b 01 00 00    	je     dd08 <find_free_region+0x1a8>
    db9d:	49 8b 7f 38          	mov    0x38(%r15),%rdi
    dba1:	4d 8b 1f             	mov    (%r15),%r11
    dba4:	48 83 ea 01          	sub    $0x1,%rdx
    dba8:	49 39 fc             	cmp    %rdi,%r12
    dbab:	0f 84 88 00 00 00    	je     dc39 <find_free_region+0xd9>
    dbb1:	4c 8b 0d c8 4e 03 00 	mov    0x34ec8(%rip),%r9        # 42a80 <mm_user_end>
    dbb8:	4c 8b 15 c9 4e 03 00 	mov    0x34ec9(%rip),%r10        # 42a88 <mm_user_base>
    dbbf:	4c 89 f8             	mov    %r15,%rax
    dbc2:	48 8d 35 9f 44 02 00 	lea    0x2449f(%rip),%rsi        # 32068 <g_rts_ema_root>
    dbc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    dbd0:	48 8b 58 08          	mov    0x8(%rax),%rbx
    dbd4:	48 01 d3             	add    %rdx,%rbx
    dbd7:	48 89 d8             	mov    %rbx,%rax
    dbda:	4c 01 d8             	add    %r11,%rax
    dbdd:	4c 8b 1f             	mov    (%rdi),%r11
    dbe0:	4c 21 e8             	and    %r13,%rax
    dbe3:	49 39 c3             	cmp    %rax,%r11
    dbe6:	72 40                	jb     dc28 <find_free_region+0xc8>
    dbe8:	4c 89 db             	mov    %r11,%rbx
    dbeb:	48 29 c3             	sub    %rax,%rbx
    dbee:	48 39 dd             	cmp    %rbx,%rbp
    dbf1:	77 35                	ja     dc28 <find_free_region+0xc8>
    dbf3:	49 39 f6             	cmp    %rsi,%r14
    dbf6:	75 0d                	jne    dc05 <find_free_region+0xa5>
    dbf8:	48 89 eb             	mov    %rbp,%rbx
    dbfb:	48 01 c3             	add    %rax,%rbx
    dbfe:	72 28                	jb     dc28 <find_free_region+0xc8>
    dc00:	4c 39 c8             	cmp    %r9,%rax
    dc03:	72 1b                	jb     dc20 <find_free_region+0xc0>
    dc05:	49 89 38             	mov    %rdi,(%r8)
    dc08:	48 89 01             	mov    %rax,(%rcx)
    dc0b:	b8 01 00 00 00       	mov    $0x1,%eax
    dc10:	48 83 c4 28          	add    $0x28,%rsp
    dc14:	5b                   	pop    %rbx
    dc15:	5d                   	pop    %rbp
    dc16:	41 5c                	pop    %r12
    dc18:	41 5d                	pop    %r13
    dc1a:	41 5e                	pop    %r14
    dc1c:	41 5f                	pop    %r15
    dc1e:	c3                   	ret    
    dc1f:	90                   	nop
    dc20:	4c 39 d3             	cmp    %r10,%rbx
    dc23:	76 e0                	jbe    dc05 <find_free_region+0xa5>
    dc25:	0f 1f 00             	nopl   (%rax)
    dc28:	48 8b 5f 38          	mov    0x38(%rdi),%rbx
    dc2c:	48 89 f8             	mov    %rdi,%rax
    dc2f:	49 39 dc             	cmp    %rbx,%r12
    dc32:	74 0c                	je     dc40 <find_free_region+0xe0>
    dc34:	48 89 df             	mov    %rbx,%rdi
    dc37:	eb 97                	jmp    dbd0 <find_free_region+0x70>
    dc39:	48 89 fb             	mov    %rdi,%rbx
    dc3c:	4c 89 ff             	mov    %r15,%rdi
    dc3f:	90                   	nop
    dc40:	4e 8d 24 1a          	lea    (%rdx,%r11,1),%r12
    dc44:	4c 03 67 08          	add    0x8(%rdi),%r12
    dc48:	48 89 ee             	mov    %rbp,%rsi
    dc4b:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    dc50:	4d 21 ec             	and    %r13,%r12
    dc53:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    dc58:	4c 89 e7             	mov    %r12,%rdi
    dc5b:	e8 b0 c6 ff ff       	call   a310 <sgx_mm_is_within_enclave>
    dc60:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    dc65:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    dc6a:	84 c0                	test   %al,%al
    dc6c:	74 52                	je     dcc0 <find_free_region+0x160>
    dc6e:	48 89 ef             	mov    %rbp,%rdi
    dc71:	31 f6                	xor    %esi,%esi
    dc73:	48 8d 15 ee 43 02 00 	lea    0x243ee(%rip),%rdx        # 32068 <g_rts_ema_root>
    dc7a:	4c 01 e7             	add    %r12,%rdi
    dc7d:	40 0f 92 c6          	setb   %sil
    dc81:	49 39 d6             	cmp    %rdx,%r14
    dc84:	0f 84 be 00 00 00    	je     dd48 <find_free_region+0x1e8>
    dc8a:	48 85 f6             	test   %rsi,%rsi
    dc8d:	75 16                	jne    dca5 <find_free_region+0x145>
    dc8f:	4c 3b 25 f2 4d 03 00 	cmp    0x34df2(%rip),%r12        # 42a88 <mm_user_base>
    dc96:	72 0d                	jb     dca5 <find_free_region+0x145>
    dc98:	48 39 3d e1 4d 03 00 	cmp    %rdi,0x34de1(%rip)        # 42a80 <mm_user_end>
    dc9f:	0f 83 ba 00 00 00    	jae    dd5f <find_free_region+0x1ff>
    dca5:	49 8b 07             	mov    (%r15),%rax
    dca8:	48 39 c5             	cmp    %rax,%rbp
    dcab:	0f 87 86 00 00 00    	ja     dd37 <find_free_region+0x1d7>
    dcb1:	48 29 e8             	sub    %rbp,%rax
    dcb4:	49 21 c5             	and    %rax,%r13
    dcb7:	eb 25                	jmp    dcde <find_free_region+0x17e>
    dcb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    dcc0:	49 8b 07             	mov    (%r15),%rax
    dcc3:	48 39 e8             	cmp    %rbp,%rax
    dcc6:	72 6f                	jb     dd37 <find_free_region+0x1d7>
    dcc8:	48 29 e8             	sub    %rbp,%rax
    dccb:	49 21 c5             	and    %rax,%r13
    dcce:	48 8d 05 93 43 02 00 	lea    0x24393(%rip),%rax        # 32068 <g_rts_ema_root>
    dcd5:	49 39 c6             	cmp    %rax,%r14
    dcd8:	0f 84 ae 00 00 00    	je     dd8c <find_free_region+0x22c>
    dcde:	4c 01 ed             	add    %r13,%rbp
    dce1:	72 54                	jb     dd37 <find_free_region+0x1d7>
    dce3:	4c 39 2d 9e 4d 03 00 	cmp    %r13,0x34d9e(%rip)        # 42a88 <mm_user_base>
    dcea:	77 4b                	ja     dd37 <find_free_region+0x1d7>
    dcec:	48 3b 2d 8d 4d 03 00 	cmp    0x34d8d(%rip),%rbp        # 42a80 <mm_user_end>
    dcf3:	77 42                	ja     dd37 <find_free_region+0x1d7>
    dcf5:	4c 89 29             	mov    %r13,(%rcx)
    dcf8:	b8 01 00 00 00       	mov    $0x1,%eax
    dcfd:	4d 89 38             	mov    %r15,(%r8)
    dd00:	e9 0b ff ff ff       	jmp    dc10 <find_free_region+0xb0>
    dd05:	0f 1f 00             	nopl   (%rax)
    dd08:	48 8d 05 59 43 02 00 	lea    0x24359(%rip),%rax        # 32068 <g_rts_ema_root>
    dd0f:	48 8b 3d 72 4d 03 00 	mov    0x34d72(%rip),%rdi        # 42a88 <mm_user_base>
    dd16:	49 39 c6             	cmp    %rax,%r14
    dd19:	0f 84 b1 00 00 00    	je     ddd0 <find_free_region+0x270>
    dd1f:	48 8d 44 17 ff       	lea    -0x1(%rdi,%rdx,1),%rax
    dd24:	49 21 c5             	and    %rax,%r13
    dd27:	4c 01 ed             	add    %r13,%rbp
    dd2a:	0f 93 c2             	setae  %dl
    dd2d:	49 39 fd             	cmp    %rdi,%r13
    dd30:	0f 93 c0             	setae  %al
    dd33:	20 d0                	and    %dl,%al
    dd35:	75 33                	jne    dd6a <find_free_region+0x20a>
    dd37:	31 c0                	xor    %eax,%eax
    dd39:	48 83 c4 28          	add    $0x28,%rsp
    dd3d:	5b                   	pop    %rbx
    dd3e:	5d                   	pop    %rbp
    dd3f:	41 5c                	pop    %r12
    dd41:	41 5d                	pop    %r13
    dd43:	41 5e                	pop    %r14
    dd45:	41 5f                	pop    %r15
    dd47:	c3                   	ret    
    dd48:	48 85 f6             	test   %rsi,%rsi
    dd4b:	75 31                	jne    dd7e <find_free_region+0x21e>
    dd4d:	4c 3b 25 2c 4d 03 00 	cmp    0x34d2c(%rip),%r12        # 42a80 <mm_user_end>
    dd54:	73 09                	jae    dd5f <find_free_region+0x1ff>
    dd56:	48 39 3d 2b 4d 03 00 	cmp    %rdi,0x34d2b(%rip)        # 42a88 <mm_user_base>
    dd5d:	72 1f                	jb     dd7e <find_free_region+0x21e>
    dd5f:	49 89 18             	mov    %rbx,(%r8)
    dd62:	4c 89 21             	mov    %r12,(%rcx)
    dd65:	e9 a6 fe ff ff       	jmp    dc10 <find_free_region+0xb0>
    dd6a:	48 39 2d 0f 4d 03 00 	cmp    %rbp,0x34d0f(%rip)        # 42a80 <mm_user_end>
    dd71:	72 c4                	jb     dd37 <find_free_region+0x1d7>
    dd73:	4c 89 29             	mov    %r13,(%rcx)
    dd76:	4d 89 20             	mov    %r12,(%r8)
    dd79:	e9 92 fe ff ff       	jmp    dc10 <find_free_region+0xb0>
    dd7e:	49 8b 07             	mov    (%r15),%rax
    dd81:	48 39 c5             	cmp    %rax,%rbp
    dd84:	77 b1                	ja     dd37 <find_free_region+0x1d7>
    dd86:	48 29 e8             	sub    %rbp,%rax
    dd89:	49 21 c5             	and    %rax,%r13
    dd8c:	48 89 ee             	mov    %rbp,%rsi
    dd8f:	4c 89 ef             	mov    %r13,%rdi
    dd92:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    dd97:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    dd9c:	e8 6f c5 ff ff       	call   a310 <sgx_mm_is_within_enclave>
    dda1:	84 c0                	test   %al,%al
    dda3:	74 92                	je     dd37 <find_free_region+0x1d7>
    dda5:	4c 01 ed             	add    %r13,%rbp
    dda8:	72 8d                	jb     dd37 <find_free_region+0x1d7>
    ddaa:	4c 39 2d cf 4c 03 00 	cmp    %r13,0x34ccf(%rip)        # 42a80 <mm_user_end>
    ddb1:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    ddb6:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    ddbb:	0f 87 9b 00 00 00    	ja     de5c <find_free_region+0x2fc>
    ddc1:	4c 89 29             	mov    %r13,(%rcx)
    ddc4:	4d 89 38             	mov    %r15,(%r8)
    ddc7:	e9 44 fe ff ff       	jmp    dc10 <find_free_region+0xb0>
    ddcc:	0f 1f 40 00          	nopl   0x0(%rax)
    ddd0:	48 39 fe             	cmp    %rdi,%rsi
    ddd3:	76 52                	jbe    de27 <find_free_region+0x2c7>
    ddd5:	48 8b 05 a4 4c 03 00 	mov    0x34ca4(%rip),%rax        # 42a80 <mm_user_end>
    dddc:	48 8d 5c 02 ff       	lea    -0x1(%rdx,%rax,1),%rbx
    dde1:	48 89 e8             	mov    %rbp,%rax
    dde4:	4c 21 eb             	and    %r13,%rbx
    dde7:	48 01 d8             	add    %rbx,%rax
    ddea:	0f 82 47 ff ff ff    	jb     dd37 <find_free_region+0x1d7>
    ddf0:	48 89 ee             	mov    %rbp,%rsi
    ddf3:	48 89 df             	mov    %rbx,%rdi
    ddf6:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    ddfb:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    de00:	e8 0b c5 ff ff       	call   a310 <sgx_mm_is_within_enclave>
    de05:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    de0a:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    de0f:	84 c0                	test   %al,%al
    de11:	0f 84 20 ff ff ff    	je     dd37 <find_free_region+0x1d7>
    de17:	48 89 19             	mov    %rbx,(%rcx)
    de1a:	b8 01 00 00 00       	mov    $0x1,%eax
    de1f:	4d 89 20             	mov    %r12,(%r8)
    de22:	e9 e9 fd ff ff       	jmp    dc10 <find_free_region+0xb0>
    de27:	48 29 f7             	sub    %rsi,%rdi
    de2a:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
    de2f:	4c 21 ef             	and    %r13,%rdi
    de32:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    de37:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    de3c:	48 89 fb             	mov    %rdi,%rbx
    de3f:	e8 cc c4 ff ff       	call   a310 <sgx_mm_is_within_enclave>
    de44:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    de49:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    de4e:	84 c0                	test   %al,%al
    de50:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
    de55:	75 c0                	jne    de17 <find_free_region+0x2b7>
    de57:	e9 79 ff ff ff       	jmp    ddd5 <find_free_region+0x275>
    de5c:	48 3b 2d 25 4c 03 00 	cmp    0x34c25(%rip),%rbp        # 42a88 <mm_user_base>
    de63:	0f 86 58 ff ff ff    	jbe    ddc1 <find_free_region+0x261>
    de69:	31 c0                	xor    %eax,%eax
    de6b:	e9 c9 fe ff ff       	jmp    dd39 <find_free_region+0x1d9>

000000000000de70 <find_free_region_at>:
    de70:	f3 0f 1e fa          	endbr64 
    de74:	41 55                	push   %r13
    de76:	49 89 fd             	mov    %rdi,%r13
    de79:	41 54                	push   %r12
    de7b:	49 89 d4             	mov    %rdx,%r12
    de7e:	55                   	push   %rbp
    de7f:	48 89 cd             	mov    %rcx,%rbp
    de82:	53                   	push   %rbx
    de83:	48 89 f3             	mov    %rsi,%rbx
    de86:	48 89 d6             	mov    %rdx,%rsi
    de89:	48 89 df             	mov    %rbx,%rdi
    de8c:	48 83 ec 08          	sub    $0x8,%rsp
    de90:	e8 7b c4 ff ff       	call   a310 <sgx_mm_is_within_enclave>
    de95:	84 c0                	test   %al,%al
    de97:	0f 84 8a 00 00 00    	je     df27 <find_free_region_at+0xb7>
    de9d:	4c 89 e2             	mov    %r12,%rdx
    dea0:	31 f6                	xor    %esi,%esi
    dea2:	48 8d 0d bf 41 02 00 	lea    0x241bf(%rip),%rcx        # 32068 <g_rts_ema_root>
    dea9:	48 01 da             	add    %rbx,%rdx
    deac:	40 0f 92 c6          	setb   %sil
    deb0:	49 39 cd             	cmp    %rcx,%r13
    deb3:	74 5b                	je     df10 <find_free_region_at+0xa0>
    deb5:	48 85 f6             	test   %rsi,%rsi
    deb8:	75 6d                	jne    df27 <find_free_region_at+0xb7>
    deba:	48 3b 1d c7 4b 03 00 	cmp    0x34bc7(%rip),%rbx        # 42a88 <mm_user_base>
    dec1:	72 64                	jb     df27 <find_free_region_at+0xb7>
    dec3:	48 3b 15 b6 4b 03 00 	cmp    0x34bb6(%rip),%rdx        # 42a80 <mm_user_end>
    deca:	77 5b                	ja     df27 <find_free_region_at+0xb7>
    decc:	49 8b 7d 00          	mov    0x0(%r13),%rdi
    ded0:	48 8b 4f 38          	mov    0x38(%rdi),%rcx
    ded4:	48 39 cf             	cmp    %rcx,%rdi
    ded7:	75 19                	jne    def2 <find_free_region_at+0x82>
    ded9:	eb 1f                	jmp    defa <find_free_region_at+0x8a>
    dedb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    dee0:	48 03 71 08          	add    0x8(%rcx),%rsi
    dee4:	48 39 de             	cmp    %rbx,%rsi
    dee7:	77 3e                	ja     df27 <find_free_region_at+0xb7>
    dee9:	48 8b 49 38          	mov    0x38(%rcx),%rcx
    deed:	48 39 cf             	cmp    %rcx,%rdi
    def0:	74 08                	je     defa <find_free_region_at+0x8a>
    def2:	48 8b 31             	mov    (%rcx),%rsi
    def5:	48 39 d6             	cmp    %rdx,%rsi
    def8:	72 e6                	jb     dee0 <find_free_region_at+0x70>
    defa:	48 89 4d 00          	mov    %rcx,0x0(%rbp)
    defe:	48 83 c4 08          	add    $0x8,%rsp
    df02:	5b                   	pop    %rbx
    df03:	5d                   	pop    %rbp
    df04:	41 5c                	pop    %r12
    df06:	41 5d                	pop    %r13
    df08:	c3                   	ret    
    df09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    df10:	48 85 f6             	test   %rsi,%rsi
    df13:	75 12                	jne    df27 <find_free_region_at+0xb7>
    df15:	48 3b 1d 64 4b 03 00 	cmp    0x34b64(%rip),%rbx        # 42a80 <mm_user_end>
    df1c:	73 ae                	jae    decc <find_free_region_at+0x5c>
    df1e:	48 3b 15 63 4b 03 00 	cmp    0x34b63(%rip),%rdx        # 42a88 <mm_user_base>
    df25:	76 a5                	jbe    decc <find_free_region_at+0x5c>
    df27:	48 c7 45 00 00 00 00 	movq   $0x0,0x0(%rbp)
    df2e:	00 
    df2f:	48 83 c4 08          	add    $0x8,%rsp
    df33:	31 c0                	xor    %eax,%eax
    df35:	5b                   	pop    %rbx
    df36:	5d                   	pop    %rbp
    df37:	41 5c                	pop    %r12
    df39:	41 5d                	pop    %r13
    df3b:	c3                   	ret    
    df3c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000df40 <ema_new>:
    df40:	f3 0f 1e fa          	endbr64 
    df44:	41 54                	push   %r12
    df46:	55                   	push   %rbp
    df47:	48 83 ec 58          	sub    $0x58,%rsp
    df4b:	64 4c 8b 14 25 28 00 	mov    %fs:0x28,%r10
    df52:	00 00 
    df54:	4c 89 54 24 48       	mov    %r10,0x48(%rsp)
    df59:	45 31 d2             	xor    %r10d,%r10d
    df5c:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    df61:	89 54 24 10          	mov    %edx,0x10(%rsp)
    df65:	48 89 e5             	mov    %rsp,%rbp
    df68:	48 89 3c 24          	mov    %rdi,(%rsp)
    df6c:	bf 48 00 00 00       	mov    $0x48,%edi
    df71:	48 8b 50 40          	mov    0x40(%rax),%rdx
    df75:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    df7a:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    df7f:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
    df84:	48 89 6a 38          	mov    %rbp,0x38(%rdx)
    df88:	48 89 68 40          	mov    %rbp,0x40(%rax)
    df8c:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    df91:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    df98:	00 00 
    df9a:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
    df9f:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
    dfa4:	e8 c7 0f 00 00       	call   ef70 <emalloc>
    dfa9:	49 89 c4             	mov    %rax,%r12
    dfac:	48 85 c0             	test   %rax,%rax
    dfaf:	74 6f                	je     e020 <ema_new+0xe0>
    dfb1:	66 0f 6f 04 24       	movdqa (%rsp),%xmm0
    dfb6:	0f 11 00             	movups %xmm0,(%rax)
    dfb9:	66 0f 6f 4c 24 10    	movdqa 0x10(%rsp),%xmm1
    dfbf:	0f 11 48 10          	movups %xmm1,0x10(%rax)
    dfc3:	66 0f 6f 54 24 20    	movdqa 0x20(%rsp),%xmm2
    dfc9:	0f 11 50 20          	movups %xmm2,0x20(%rax)
    dfcd:	66 0f 6f 5c 24 30    	movdqa 0x30(%rsp),%xmm3
    dfd3:	0f 11 58 30          	movups %xmm3,0x30(%rax)
    dfd7:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    dfdc:	49 89 44 24 40       	mov    %rax,0x40(%r12)
    dfe1:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    dfe6:	4c 89 60 38          	mov    %r12,0x38(%rax)
    dfea:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    dfef:	4c 89 60 40          	mov    %r12,0x40(%rax)
    dff3:	49 89 44 24 38       	mov    %rax,0x38(%r12)
    dff8:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
    dffd:	49 89 44 24 40       	mov    %rax,0x40(%r12)
    e002:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    e007:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    e00e:	00 00 
    e010:	75 18                	jne    e02a <ema_new+0xea>
    e012:	48 83 c4 58          	add    $0x58,%rsp
    e016:	4c 89 e0             	mov    %r12,%rax
    e019:	5d                   	pop    %rbp
    e01a:	41 5c                	pop    %r12
    e01c:	c3                   	ret    
    e01d:	0f 1f 00             	nopl   (%rax)
    e020:	48 89 ef             	mov    %rbp,%rdi
    e023:	e8 58 f5 ff ff       	call   d580 <remove_ema>
    e028:	eb d8                	jmp    e002 <ema_new+0xc2>
    e02a:	e8 11 5b 00 00       	call   13b40 <__stack_chk_fail>
    e02f:	90                   	nop

000000000000e030 <ema_destroy>:
    e030:	f3 0f 1e fa          	endbr64 
    e034:	55                   	push   %rbp
    e035:	48 89 fd             	mov    %rdi,%rbp
    e038:	e8 43 f5 ff ff       	call   d580 <remove_ema>
    e03d:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
    e041:	48 85 ff             	test   %rdi,%rdi
    e044:	74 05                	je     e04b <ema_destroy+0x1b>
    e046:	e8 95 f0 ff ff       	call   d0e0 <bit_array_delete>
    e04b:	48 89 ef             	mov    %rbp,%rdi
    e04e:	5d                   	pop    %rbp
    e04f:	e9 6c 11 00 00       	jmp    f1c0 <efree>
    e054:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    e05b:	00 00 00 
    e05e:	66 90                	xchg   %ax,%ax

000000000000e060 <do_commit>:
    e060:	f3 0f 1e fa          	endbr64 
    e064:	55                   	push   %rbp
    e065:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e069:	48 83 ca 08          	or     $0x8,%rdx
    e06d:	48 89 e5             	mov    %rsp,%rbp
    e070:	41 55                	push   %r13
    e072:	41 54                	push   %r12
    e074:	4c 8d 24 37          	lea    (%rdi,%rsi,1),%r12
    e078:	53                   	push   %rbx
    e079:	48 89 fb             	mov    %rdi,%rbx
    e07c:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    e080:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    e084:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e08b:	00 00 
    e08d:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    e092:	31 c0                	xor    %eax,%eax
    e094:	48 89 14 24          	mov    %rdx,(%rsp)
    e098:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    e09f:	00 00 
    e0a1:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
    e0a6:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    e0ab:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
    e0b0:	84 c9                	test   %cl,%cl
    e0b2:	74 4c                	je     e100 <do_commit+0xa0>
    e0b4:	49 89 e5             	mov    %rsp,%r13
    e0b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    e0be:	00 00 
    e0c0:	49 81 ec 00 10 00 00 	sub    $0x1000,%r12
    e0c7:	4c 89 ef             	mov    %r13,%rdi
    e0ca:	4c 89 e6             	mov    %r12,%rsi
    e0cd:	e8 ed 7b 01 00       	call   25cbf <do_eaccept>
    e0d2:	85 c0                	test   %eax,%eax
    e0d4:	75 57                	jne    e12d <do_commit+0xcd>
    e0d6:	4c 39 e3             	cmp    %r12,%rbx
    e0d9:	72 e5                	jb     e0c0 <do_commit+0x60>
    e0db:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    e0e0:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    e0e7:	00 00 
    e0e9:	75 47                	jne    e132 <do_commit+0xd2>
    e0eb:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
    e0ef:	31 c0                	xor    %eax,%eax
    e0f1:	5b                   	pop    %rbx
    e0f2:	41 5c                	pop    %r12
    e0f4:	41 5d                	pop    %r13
    e0f6:	5d                   	pop    %rbp
    e0f7:	c3                   	ret    
    e0f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e0ff:	00 
    e100:	4c 39 e7             	cmp    %r12,%rdi
    e103:	73 d6                	jae    e0db <do_commit+0x7b>
    e105:	49 89 e5             	mov    %rsp,%r13
    e108:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e10f:	00 
    e110:	48 89 de             	mov    %rbx,%rsi
    e113:	4c 89 ef             	mov    %r13,%rdi
    e116:	e8 a4 7b 01 00       	call   25cbf <do_eaccept>
    e11b:	85 c0                	test   %eax,%eax
    e11d:	75 0e                	jne    e12d <do_commit+0xcd>
    e11f:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    e126:	4c 39 e3             	cmp    %r12,%rbx
    e129:	72 e5                	jb     e110 <do_commit+0xb0>
    e12b:	eb ae                	jmp    e0db <do_commit+0x7b>
    e12d:	e8 05 7c 01 00       	call   25d37 <abort>
    e132:	e8 09 5a 00 00       	call   13b40 <__stack_chk_fail>
    e137:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    e13e:	00 00 

000000000000e140 <ema_do_commit>:
    e140:	f3 0f 1e fa          	endbr64 
    e144:	55                   	push   %rbp
    e145:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e149:	48 89 e5             	mov    %rsp,%rbp
    e14c:	41 57                	push   %r15
    e14e:	41 56                	push   %r14
    e150:	41 55                	push   %r13
    e152:	41 54                	push   %r12
    e154:	53                   	push   %rbx
    e155:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    e159:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    e15d:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
    e161:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e168:	00 00 
    e16a:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    e16f:	31 c0                	xor    %eax,%eax
    e171:	48 8b 07             	mov    (%rdi),%rax
    e174:	48 c7 04 24 0b 02 00 	movq   $0x20b,(%rsp)
    e17b:	00 
    e17c:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    e183:	00 00 
    e185:	48 39 f0             	cmp    %rsi,%rax
    e188:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
    e18d:	48 0f 43 f0          	cmovae %rax,%rsi
    e191:	49 01 c5             	add    %rax,%r13
    e194:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    e199:	49 39 d5             	cmp    %rdx,%r13
    e19c:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
    e1a1:	4c 0f 47 ea          	cmova  %rdx,%r13
    e1a5:	4c 39 ee             	cmp    %r13,%rsi
    e1a8:	73 5e                	jae    e208 <ema_do_commit+0xc8>
    e1aa:	49 89 ff             	mov    %rdi,%r15
    e1ad:	48 89 f3             	mov    %rsi,%rbx
    e1b0:	49 89 e6             	mov    %rsp,%r14
    e1b3:	eb 12                	jmp    e1c7 <ema_do_commit+0x87>
    e1b5:	0f 1f 00             	nopl   (%rax)
    e1b8:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    e1bf:	49 39 dd             	cmp    %rbx,%r13
    e1c2:	76 44                	jbe    e208 <ema_do_commit+0xc8>
    e1c4:	49 8b 07             	mov    (%r15),%rax
    e1c7:	49 89 dc             	mov    %rbx,%r12
    e1ca:	49 8b 7f 20          	mov    0x20(%r15),%rdi
    e1ce:	49 29 c4             	sub    %rax,%r12
    e1d1:	49 c1 ec 0c          	shr    $0xc,%r12
    e1d5:	4c 89 e6             	mov    %r12,%rsi
    e1d8:	e8 23 ef ff ff       	call   d100 <bit_array_test>
    e1dd:	84 c0                	test   %al,%al
    e1df:	75 d7                	jne    e1b8 <ema_do_commit+0x78>
    e1e1:	48 89 de             	mov    %rbx,%rsi
    e1e4:	4c 89 f7             	mov    %r14,%rdi
    e1e7:	e8 d3 7a 01 00       	call   25cbf <do_eaccept>
    e1ec:	85 c0                	test   %eax,%eax
    e1ee:	75 1a                	jne    e20a <ema_do_commit+0xca>
    e1f0:	49 8b 7f 20          	mov    0x20(%r15),%rdi
    e1f4:	4c 89 e6             	mov    %r12,%rsi
    e1f7:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    e1fe:	e8 ed ef ff ff       	call   d1f0 <bit_array_set>
    e203:	49 39 dd             	cmp    %rbx,%r13
    e206:	77 bc                	ja     e1c4 <ema_do_commit+0x84>
    e208:	31 c0                	xor    %eax,%eax
    e20a:	48 8b 4c 24 78       	mov    0x78(%rsp),%rcx
    e20f:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    e216:	00 00 
    e218:	75 0f                	jne    e229 <ema_do_commit+0xe9>
    e21a:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    e21e:	5b                   	pop    %rbx
    e21f:	41 5c                	pop    %r12
    e221:	41 5d                	pop    %r13
    e223:	41 5e                	pop    %r14
    e225:	41 5f                	pop    %r15
    e227:	5d                   	pop    %rbp
    e228:	c3                   	ret    
    e229:	e8 12 59 00 00       	call   13b40 <__stack_chk_fail>
    e22e:	66 90                	xchg   %ax,%ax

000000000000e230 <ema_do_commit_loop>:
    e230:	f3 0f 1e fa          	endbr64 
    e234:	41 55                	push   %r13
    e236:	49 89 f5             	mov    %rsi,%r13
    e239:	41 54                	push   %r12
    e23b:	55                   	push   %rbp
    e23c:	48 89 d5             	mov    %rdx,%rbp
    e23f:	53                   	push   %rbx
    e240:	48 89 cb             	mov    %rcx,%rbx
    e243:	48 83 ec 08          	sub    $0x8,%rsp
    e247:	48 8b 0f             	mov    (%rdi),%rcx
    e24a:	48 89 ca             	mov    %rcx,%rdx
    e24d:	48 39 f7             	cmp    %rsi,%rdi
    e250:	74 56                	je     e2a8 <ema_do_commit_loop+0x78>
    e252:	48 89 f8             	mov    %rdi,%rax
    e255:	eb 27                	jmp    e27e <ema_do_commit_loop+0x4e>
    e257:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    e25e:	00 00 
    e260:	f6 40 10 01          	testb  $0x1,0x10(%rax)
    e264:	75 2b                	jne    e291 <ema_do_commit_loop+0x61>
    e266:	48 03 48 08          	add    0x8(%rax),%rcx
    e26a:	48 8b 40 38          	mov    0x38(%rax),%rax
    e26e:	48 89 ca             	mov    %rcx,%rdx
    e271:	49 39 c5             	cmp    %rax,%r13
    e274:	74 32                	je     e2a8 <ema_do_commit_loop+0x78>
    e276:	48 8b 08             	mov    (%rax),%rcx
    e279:	48 39 d1             	cmp    %rdx,%rcx
    e27c:	75 72                	jne    e2f0 <ema_do_commit_loop+0xc0>
    e27e:	48 8b 50 18          	mov    0x18(%rax),%rdx
    e282:	81 e2 02 02 00 00    	and    $0x202,%edx
    e288:	48 81 fa 02 02 00 00 	cmp    $0x202,%rdx
    e28f:	74 cf                	je     e260 <ema_do_commit_loop+0x30>
    e291:	b8 0d 00 00 00       	mov    $0xd,%eax
    e296:	48 83 c4 08          	add    $0x8,%rsp
    e29a:	5b                   	pop    %rbx
    e29b:	5d                   	pop    %rbp
    e29c:	41 5c                	pop    %r12
    e29e:	41 5d                	pop    %r13
    e2a0:	c3                   	ret    
    e2a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e2a8:	b8 16 00 00 00       	mov    $0x16,%eax
    e2ad:	48 39 d3             	cmp    %rdx,%rbx
    e2b0:	77 e4                	ja     e296 <ema_do_commit_loop+0x66>
    e2b2:	4c 39 ef             	cmp    %r13,%rdi
    e2b5:	74 24                	je     e2db <ema_do_commit_loop+0xab>
    e2b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    e2be:	00 00 
    e2c0:	48 89 da             	mov    %rbx,%rdx
    e2c3:	48 89 ee             	mov    %rbp,%rsi
    e2c6:	4c 8b 67 38          	mov    0x38(%rdi),%r12
    e2ca:	e8 71 fe ff ff       	call   e140 <ema_do_commit>
    e2cf:	85 c0                	test   %eax,%eax
    e2d1:	75 c3                	jne    e296 <ema_do_commit_loop+0x66>
    e2d3:	4c 89 e7             	mov    %r12,%rdi
    e2d6:	4c 39 ef             	cmp    %r13,%rdi
    e2d9:	75 e5                	jne    e2c0 <ema_do_commit_loop+0x90>
    e2db:	48 83 c4 08          	add    $0x8,%rsp
    e2df:	31 c0                	xor    %eax,%eax
    e2e1:	5b                   	pop    %rbx
    e2e2:	5d                   	pop    %rbp
    e2e3:	41 5c                	pop    %r12
    e2e5:	41 5d                	pop    %r13
    e2e7:	c3                   	ret    
    e2e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e2ef:	00 
    e2f0:	48 83 c4 08          	add    $0x8,%rsp
    e2f4:	b8 16 00 00 00       	mov    $0x16,%eax
    e2f9:	5b                   	pop    %rbx
    e2fa:	5d                   	pop    %rbp
    e2fb:	41 5c                	pop    %r12
    e2fd:	41 5d                	pop    %r13
    e2ff:	c3                   	ret    

000000000000e300 <ema_change_to_tcs>:
    e300:	f3 0f 1e fa          	endbr64 
    e304:	55                   	push   %rbp
    e305:	48 89 e5             	mov    %rsp,%rbp
    e308:	41 55                	push   %r13
    e30a:	41 54                	push   %r12
    e30c:	49 89 fc             	mov    %rdi,%r12
    e30f:	53                   	push   %rbx
    e310:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    e314:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    e31b:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    e31f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e326:	00 00 
    e328:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    e32f:	00 
    e330:	31 c0                	xor    %eax,%eax
    e332:	48 85 ff             	test   %rdi,%rdi
    e335:	74 41                	je     e378 <ema_change_to_tcs+0x78>
    e337:	49 89 f5             	mov    %rsi,%r13
    e33a:	49 2b 34 24          	sub    (%r12),%rsi
    e33e:	49 8b 5c 24 18       	mov    0x18(%r12),%rbx
    e343:	48 c1 ee 0c          	shr    $0xc,%rsi
    e347:	e8 b4 ed ff ff       	call   d100 <bit_array_test>
    e34c:	84 c0                	test   %al,%al
    e34e:	74 28                	je     e378 <ema_change_to_tcs+0x78>
    e350:	89 d8                	mov    %ebx,%eax
    e352:	25 00 ff 00 00       	and    $0xff00,%eax
    e357:	3d 00 01 00 00       	cmp    $0x100,%eax
    e35c:	0f 84 de 00 00 00    	je     e440 <ema_change_to_tcs+0x140>
    e362:	83 e3 07             	and    $0x7,%ebx
    e365:	83 fb 03             	cmp    $0x3,%ebx
    e368:	75 0e                	jne    e378 <ema_change_to_tcs+0x78>
    e36a:	3d 00 02 00 00       	cmp    $0x200,%eax
    e36f:	74 2f                	je     e3a0 <ema_change_to_tcs+0xa0>
    e371:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e378:	b8 0d 00 00 00       	mov    $0xd,%eax
    e37d:	48 8b 8c 24 b8 00 00 	mov    0xb8(%rsp),%rcx
    e384:	00 
    e385:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    e38c:	00 00 
    e38e:	0f 85 c6 00 00 00    	jne    e45a <ema_change_to_tcs+0x15a>
    e394:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
    e398:	5b                   	pop    %rbx
    e399:	41 5c                	pop    %r12
    e39b:	41 5d                	pop    %r13
    e39d:	5d                   	pop    %rbp
    e39e:	c3                   	ret    
    e39f:	90                   	nop
    e3a0:	b9 03 01 00 00       	mov    $0x103,%ecx
    e3a5:	ba 03 02 00 00       	mov    $0x203,%edx
    e3aa:	be 00 10 00 00       	mov    $0x1000,%esi
    e3af:	4c 89 ef             	mov    %r13,%rdi
    e3b2:	e8 29 be ff ff       	call   a1e0 <sgx_mm_modify_ocall>
    e3b7:	85 c0                	test   %eax,%eax
    e3b9:	0f 85 91 00 00 00    	jne    e450 <ema_change_to_tcs+0x150>
    e3bf:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e3c3:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    e3c8:	4c 89 ee             	mov    %r13,%rsi
    e3cb:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    e3d2:	00 00 
    e3d4:	48 c7 44 24 40 10 01 	movq   $0x110,0x40(%rsp)
    e3db:	00 00 
    e3dd:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    e3e2:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    e3e7:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    e3ec:	e8 ce 78 01 00       	call   25cbf <do_eaccept>
    e3f1:	85 c0                	test   %eax,%eax
    e3f3:	75 6a                	jne    e45f <ema_change_to_tcs+0x15f>
    e3f5:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    e3fa:	49 8d 95 00 10 00 00 	lea    0x1000(%r13),%rdx
    e401:	4c 89 ee             	mov    %r13,%rsi
    e404:	4c 89 e7             	mov    %r12,%rdi
    e407:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    e40e:	00 00 
    e410:	e8 8b f6 ff ff       	call   daa0 <ema_split_ex>
    e415:	85 c0                	test   %eax,%eax
    e417:	0f 85 60 ff ff ff    	jne    e37d <ema_change_to_tcs+0x7d>
    e41d:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    e422:	48 8b 51 18          	mov    0x18(%rcx),%rdx
    e426:	48 81 e2 f8 00 ff ff 	and    $0xffffffffffff00f8,%rdx
    e42d:	80 ce 01             	or     $0x1,%dh
    e430:	48 89 51 18          	mov    %rdx,0x18(%rcx)
    e434:	e9 44 ff ff ff       	jmp    e37d <ema_change_to_tcs+0x7d>
    e439:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e440:	31 c0                	xor    %eax,%eax
    e442:	e9 36 ff ff ff       	jmp    e37d <ema_change_to_tcs+0x7d>
    e447:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    e44e:	00 00 
    e450:	b8 0e 00 00 00       	mov    $0xe,%eax
    e455:	e9 23 ff ff ff       	jmp    e37d <ema_change_to_tcs+0x7d>
    e45a:	e8 e1 56 00 00       	call   13b40 <__stack_chk_fail>
    e45f:	e8 d3 78 01 00       	call   25d37 <abort>
    e464:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    e46b:	00 00 00 
    e46e:	66 90                	xchg   %ax,%ax

000000000000e470 <ema_modify_permissions>:
    e470:	f3 0f 1e fa          	endbr64 
    e474:	55                   	push   %rbp
    e475:	48 89 e5             	mov    %rsp,%rbp
    e478:	41 57                	push   %r15
    e47a:	41 56                	push   %r14
    e47c:	41 55                	push   %r13
    e47e:	41 54                	push   %r12
    e480:	49 89 d4             	mov    %rdx,%r12
    e483:	53                   	push   %rbx
    e484:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    e488:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    e48f:	48 8b 57 18          	mov    0x18(%rdi),%rdx
    e493:	89 4c 24 24          	mov    %ecx,0x24(%rsp)
    e497:	89 d3                	mov    %edx,%ebx
    e499:	83 e3 07             	and    $0x7,%ebx
    e49c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e4a3:	00 00 
    e4a5:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    e4ac:	00 
    e4ad:	31 c0                	xor    %eax,%eax
    e4af:	39 cb                	cmp    %ecx,%ebx
    e4b1:	0f 84 04 01 00 00    	je     e5bb <ema_modify_permissions+0x14b>
    e4b7:	48 8b 07             	mov    (%rdi),%rax
    e4ba:	89 d1                	mov    %edx,%ecx
    e4bc:	49 89 f6             	mov    %rsi,%r14
    e4bf:	44 8b 7c 24 24       	mov    0x24(%rsp),%r15d
    e4c4:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    e4ca:	49 89 fd             	mov    %rdi,%r13
    e4cd:	48 39 f0             	cmp    %rsi,%rax
    e4d0:	89 4c 24 0c          	mov    %ecx,0xc(%rsp)
    e4d4:	4c 0f 43 f0          	cmovae %rax,%r14
    e4d8:	48 03 47 08          	add    0x8(%rdi),%rax
    e4dc:	4c 39 e0             	cmp    %r12,%rax
    e4df:	4c 0f 46 e0          	cmovbe %rax,%r12
    e4e3:	4c 89 f7             	mov    %r14,%rdi
    e4e6:	44 09 f9             	or     %r15d,%ecx
    e4e9:	81 e2 07 ff 00 00    	and    $0xff07,%edx
    e4ef:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
    e4f4:	4c 89 e6             	mov    %r12,%rsi
    e4f7:	4c 29 f6             	sub    %r14,%rsi
    e4fa:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    e4ff:	e8 dc bc ff ff       	call   a1e0 <sgx_mm_modify_ocall>
    e504:	85 c0                	test   %eax,%eax
    e506:	0f 85 fc 00 00 00    	jne    e608 <ema_modify_permissions+0x198>
    e50c:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    e513:	00 00 
    e515:	44 89 f8             	mov    %r15d,%eax
    e518:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e51c:	0d 20 02 00 00       	or     $0x220,%eax
    e521:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    e526:	48 98                	cltq   
    e528:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    e52d:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    e532:	44 89 f8             	mov    %r15d,%eax
    e535:	41 83 e7 06          	and    $0x6,%r15d
    e539:	09 d8                	or     %ebx,%eax
    e53b:	44 89 7c 24 28       	mov    %r15d,0x28(%rsp)
    e540:	4c 8d 7c 24 40       	lea    0x40(%rsp),%r15
    e545:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
    e549:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    e54e:	4d 39 e6             	cmp    %r12,%r14
    e551:	73 38                	jae    e58b <ema_modify_permissions+0x11b>
    e553:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e558:	3b 5c 24 2c          	cmp    0x2c(%rsp),%ebx
    e55c:	74 0b                	je     e569 <ema_modify_permissions+0xf9>
    e55e:	4c 89 f6             	mov    %r14,%rsi
    e561:	4c 89 ff             	mov    %r15,%rdi
    e564:	e8 92 77 01 00       	call   25cfb <do_emodpe>
    e569:	83 7c 24 28 06       	cmpl   $0x6,0x28(%rsp)
    e56e:	74 0f                	je     e57f <ema_modify_permissions+0x10f>
    e570:	4c 89 f6             	mov    %r14,%rsi
    e573:	4c 89 ff             	mov    %r15,%rdi
    e576:	e8 44 77 01 00       	call   25cbf <do_eaccept>
    e57b:	85 c0                	test   %eax,%eax
    e57d:	75 3e                	jne    e5bd <ema_modify_permissions+0x14d>
    e57f:	49 81 c6 00 10 00 00 	add    $0x1000,%r14
    e586:	4d 39 f4             	cmp    %r14,%r12
    e589:	77 cd                	ja     e558 <ema_modify_permissions+0xe8>
    e58b:	49 8b 45 00          	mov    0x0(%r13),%rax
    e58f:	48 3b 44 24 18       	cmp    0x18(%rsp),%rax
    e594:	72 7a                	jb     e610 <ema_modify_permissions+0x1a0>
    e596:	49 03 45 08          	add    0x8(%r13),%rax
    e59a:	4c 39 e0             	cmp    %r12,%rax
    e59d:	0f 87 9d 00 00 00    	ja     e640 <ema_modify_permissions+0x1d0>
    e5a3:	49 8b 45 18          	mov    0x18(%r13),%rax
    e5a7:	48 63 54 24 24       	movslq 0x24(%rsp),%rdx
    e5ac:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    e5b0:	48 09 d0             	or     %rdx,%rax
    e5b3:	49 89 45 18          	mov    %rax,0x18(%r13)
    e5b7:	85 d2                	test   %edx,%edx
    e5b9:	74 2d                	je     e5e8 <ema_modify_permissions+0x178>
    e5bb:	31 c0                	xor    %eax,%eax
    e5bd:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    e5c4:	00 
    e5c5:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
    e5cc:	00 00 
    e5ce:	0f 85 9c 00 00 00    	jne    e670 <ema_modify_permissions+0x200>
    e5d4:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    e5d8:	5b                   	pop    %rbx
    e5d9:	41 5c                	pop    %r12
    e5db:	41 5d                	pop    %r13
    e5dd:	41 5e                	pop    %r14
    e5df:	41 5f                	pop    %r15
    e5e1:	5d                   	pop    %rbp
    e5e2:	c3                   	ret    
    e5e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e5e8:	8b 54 24 0c          	mov    0xc(%rsp),%edx
    e5ec:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    e5f1:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    e5f6:	89 d1                	mov    %edx,%ecx
    e5f8:	e8 e3 bb ff ff       	call   a1e0 <sgx_mm_modify_ocall>
    e5fd:	85 c0                	test   %eax,%eax
    e5ff:	74 ba                	je     e5bb <ema_modify_permissions+0x14b>
    e601:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e608:	b8 0e 00 00 00       	mov    $0xe,%eax
    e60d:	eb ae                	jmp    e5bd <ema_modify_permissions+0x14d>
    e60f:	90                   	nop
    e610:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    e615:	31 d2                	xor    %edx,%edx
    e617:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    e61c:	4c 89 ef             	mov    %r13,%rdi
    e61f:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    e626:	00 00 
    e628:	e8 13 f3 ff ff       	call   d940 <ema_split>
    e62d:	85 c0                	test   %eax,%eax
    e62f:	75 8c                	jne    e5bd <ema_modify_permissions+0x14d>
    e631:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    e636:	49 8b 45 00          	mov    0x0(%r13),%rax
    e63a:	e9 57 ff ff ff       	jmp    e596 <ema_modify_permissions+0x126>
    e63f:	90                   	nop
    e640:	4c 89 ef             	mov    %r13,%rdi
    e643:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    e648:	ba 01 00 00 00       	mov    $0x1,%edx
    e64d:	4c 89 e6             	mov    %r12,%rsi
    e650:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    e657:	00 00 
    e659:	e8 e2 f2 ff ff       	call   d940 <ema_split>
    e65e:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    e663:	85 c0                	test   %eax,%eax
    e665:	0f 84 38 ff ff ff    	je     e5a3 <ema_modify_permissions+0x133>
    e66b:	e9 4d ff ff ff       	jmp    e5bd <ema_modify_permissions+0x14d>
    e670:	e8 cb 54 00 00       	call   13b40 <__stack_chk_fail>
    e675:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    e67c:	00 00 00 
    e67f:	90                   	nop

000000000000e680 <ema_do_uncommit>:
    e680:	f3 0f 1e fa          	endbr64 
    e684:	41 56                	push   %r14
    e686:	49 89 f6             	mov    %rsi,%r14
    e689:	41 55                	push   %r13
    e68b:	41 54                	push   %r12
    e68d:	48 83 ec 10          	sub    $0x10,%rsp
    e691:	48 8b 07             	mov    (%rdi),%rax
    e694:	44 8b 6f 18          	mov    0x18(%rdi),%r13d
    e698:	48 39 f0             	cmp    %rsi,%rax
    e69b:	4c 0f 43 f0          	cmovae %rax,%r14
    e69f:	48 03 47 08          	add    0x8(%rdi),%rax
    e6a3:	48 39 d0             	cmp    %rdx,%rax
    e6a6:	48 0f 47 c2          	cmova  %rdx,%rax
    e6aa:	49 89 c4             	mov    %rax,%r12
    e6ad:	41 83 e5 07          	and    $0x7,%r13d
    e6b1:	74 1d                	je     e6d0 <ema_do_uncommit+0x50>
    e6b3:	48 83 c4 10          	add    $0x10,%rsp
    e6b7:	44 89 e9             	mov    %r13d,%ecx
    e6ba:	4c 89 e2             	mov    %r12,%rdx
    e6bd:	4c 89 f6             	mov    %r14,%rsi
    e6c0:	41 5c                	pop    %r12
    e6c2:	41 5d                	pop    %r13
    e6c4:	41 5e                	pop    %r14
    e6c6:	e9 e5 ee ff ff       	jmp    d5b0 <ema_do_uncommit_real>
    e6cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e6d0:	b9 01 00 00 00       	mov    $0x1,%ecx
    e6d5:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    e6da:	e8 91 fd ff ff       	call   e470 <ema_modify_permissions>
    e6df:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    e6e4:	eb cd                	jmp    e6b3 <ema_do_uncommit+0x33>
    e6e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    e6ed:	00 00 00 

000000000000e6f0 <ema_do_uncommit_loop>:
    e6f0:	f3 0f 1e fa          	endbr64 
    e6f4:	41 55                	push   %r13
    e6f6:	48 89 f8             	mov    %rdi,%rax
    e6f9:	49 89 d5             	mov    %rdx,%r13
    e6fc:	41 54                	push   %r12
    e6fe:	55                   	push   %rbp
    e6ff:	48 89 cd             	mov    %rcx,%rbp
    e702:	53                   	push   %rbx
    e703:	48 89 f3             	mov    %rsi,%rbx
    e706:	48 83 ec 08          	sub    $0x8,%rsp
    e70a:	48 8b 17             	mov    (%rdi),%rdx
    e70d:	48 39 f7             	cmp    %rsi,%rdi
    e710:	74 34                	je     e746 <ema_do_uncommit_loop+0x56>
    e712:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    e718:	f6 40 10 01          	testb  $0x1,0x10(%rax)
    e71c:	75 72                	jne    e790 <ema_do_uncommit_loop+0xa0>
    e71e:	48 8b 70 08          	mov    0x8(%rax),%rsi
    e722:	48 8b 40 38          	mov    0x38(%rax),%rax
    e726:	48 01 d6             	add    %rdx,%rsi
    e729:	48 39 c3             	cmp    %rax,%rbx
    e72c:	74 22                	je     e750 <ema_do_uncommit_loop+0x60>
    e72e:	48 8b 10             	mov    (%rax),%rdx
    e731:	48 39 f2             	cmp    %rsi,%rdx
    e734:	74 e2                	je     e718 <ema_do_uncommit_loop+0x28>
    e736:	b8 16 00 00 00       	mov    $0x16,%eax
    e73b:	48 83 c4 08          	add    $0x8,%rsp
    e73f:	5b                   	pop    %rbx
    e740:	5d                   	pop    %rbp
    e741:	41 5c                	pop    %r12
    e743:	41 5d                	pop    %r13
    e745:	c3                   	ret    
    e746:	48 89 d6             	mov    %rdx,%rsi
    e749:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e750:	b8 16 00 00 00       	mov    $0x16,%eax
    e755:	48 39 ee             	cmp    %rbp,%rsi
    e758:	73 1c                	jae    e776 <ema_do_uncommit_loop+0x86>
    e75a:	eb df                	jmp    e73b <ema_do_uncommit_loop+0x4b>
    e75c:	0f 1f 40 00          	nopl   0x0(%rax)
    e760:	48 89 ea             	mov    %rbp,%rdx
    e763:	4c 89 ee             	mov    %r13,%rsi
    e766:	4c 8b 67 38          	mov    0x38(%rdi),%r12
    e76a:	e8 11 ff ff ff       	call   e680 <ema_do_uncommit>
    e76f:	85 c0                	test   %eax,%eax
    e771:	75 c8                	jne    e73b <ema_do_uncommit_loop+0x4b>
    e773:	4c 89 e7             	mov    %r12,%rdi
    e776:	48 39 df             	cmp    %rbx,%rdi
    e779:	75 e5                	jne    e760 <ema_do_uncommit_loop+0x70>
    e77b:	48 83 c4 08          	add    $0x8,%rsp
    e77f:	31 c0                	xor    %eax,%eax
    e781:	5b                   	pop    %rbx
    e782:	5d                   	pop    %rbp
    e783:	41 5c                	pop    %r12
    e785:	41 5d                	pop    %r13
    e787:	c3                   	ret    
    e788:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e78f:	00 
    e790:	48 83 c4 08          	add    $0x8,%rsp
    e794:	b8 0d 00 00 00       	mov    $0xd,%eax
    e799:	5b                   	pop    %rbx
    e79a:	5d                   	pop    %rbp
    e79b:	41 5c                	pop    %r12
    e79d:	41 5d                	pop    %r13
    e79f:	c3                   	ret    

000000000000e7a0 <ema_do_dealloc>:
    e7a0:	f3 0f 1e fa          	endbr64 
    e7a4:	41 55                	push   %r13
    e7a6:	49 89 f5             	mov    %rsi,%r13
    e7a9:	41 54                	push   %r12
    e7ab:	55                   	push   %rbp
    e7ac:	48 89 fd             	mov    %rdi,%rbp
    e7af:	48 83 ec 10          	sub    $0x10,%rsp
    e7b3:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
    e7b7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e7be:	00 00 
    e7c0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    e7c5:	31 c0                	xor    %eax,%eax
    e7c7:	48 8b 07             	mov    (%rdi),%rax
    e7ca:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    e7d1:	00 
    e7d2:	48 39 f0             	cmp    %rsi,%rax
    e7d5:	4c 0f 43 e8          	cmovae %rax,%r13
    e7d9:	48 01 c1             	add    %rax,%rcx
    e7dc:	48 39 d1             	cmp    %rdx,%rcx
    e7df:	48 0f 47 ca          	cmova  %rdx,%rcx
    e7e3:	49 89 cc             	mov    %rcx,%r12
    e7e6:	48 8b 4f 18          	mov    0x18(%rdi),%rcx
    e7ea:	f6 47 10 01          	testb  $0x1,0x10(%rdi)
    e7ee:	75 1d                	jne    e80d <ema_do_dealloc+0x6d>
    e7f0:	83 e1 07             	and    $0x7,%ecx
    e7f3:	74 73                	je     e868 <ema_do_dealloc+0xc8>
    e7f5:	31 c9                	xor    %ecx,%ecx
    e7f7:	4c 89 e2             	mov    %r12,%rdx
    e7fa:	4c 89 ee             	mov    %r13,%rsi
    e7fd:	48 89 ef             	mov    %rbp,%rdi
    e800:	e8 ab ed ff ff       	call   d5b0 <ema_do_uncommit_real>
    e805:	85 c0                	test   %eax,%eax
    e807:	75 3f                	jne    e848 <ema_do_dealloc+0xa8>
    e809:	48 8b 45 00          	mov    0x0(%rbp),%rax
    e80d:	49 39 c5             	cmp    %rax,%r13
    e810:	77 66                	ja     e878 <ema_do_dealloc+0xd8>
    e812:	48 03 45 08          	add    0x8(%rbp),%rax
    e816:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    e81d:	00 
    e81e:	4c 39 e0             	cmp    %r12,%rax
    e821:	76 1b                	jbe    e83e <ema_do_dealloc+0x9e>
    e823:	48 89 e1             	mov    %rsp,%rcx
    e826:	ba 01 00 00 00       	mov    $0x1,%edx
    e82b:	4c 89 e6             	mov    %r12,%rsi
    e82e:	48 89 ef             	mov    %rbp,%rdi
    e831:	e8 0a f1 ff ff       	call   d940 <ema_split>
    e836:	85 c0                	test   %eax,%eax
    e838:	75 0e                	jne    e848 <ema_do_dealloc+0xa8>
    e83a:	48 8b 2c 24          	mov    (%rsp),%rbp
    e83e:	48 89 ef             	mov    %rbp,%rdi
    e841:	e8 ea f7 ff ff       	call   e030 <ema_destroy>
    e846:	31 c0                	xor    %eax,%eax
    e848:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    e84d:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
    e854:	00 00 
    e856:	75 41                	jne    e899 <ema_do_dealloc+0xf9>
    e858:	48 83 c4 10          	add    $0x10,%rsp
    e85c:	5d                   	pop    %rbp
    e85d:	41 5c                	pop    %r12
    e85f:	41 5d                	pop    %r13
    e861:	c3                   	ret    
    e862:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    e868:	b9 01 00 00 00       	mov    $0x1,%ecx
    e86d:	e8 fe fb ff ff       	call   e470 <ema_modify_permissions>
    e872:	eb 81                	jmp    e7f5 <ema_do_dealloc+0x55>
    e874:	0f 1f 40 00          	nopl   0x0(%rax)
    e878:	31 d2                	xor    %edx,%edx
    e87a:	48 89 e1             	mov    %rsp,%rcx
    e87d:	4c 89 ee             	mov    %r13,%rsi
    e880:	48 89 ef             	mov    %rbp,%rdi
    e883:	e8 b8 f0 ff ff       	call   d940 <ema_split>
    e888:	85 c0                	test   %eax,%eax
    e88a:	75 bc                	jne    e848 <ema_do_dealloc+0xa8>
    e88c:	48 8b 2c 24          	mov    (%rsp),%rbp
    e890:	48 8b 45 00          	mov    0x0(%rbp),%rax
    e894:	e9 79 ff ff ff       	jmp    e812 <ema_do_dealloc+0x72>
    e899:	e8 a2 52 00 00       	call   13b40 <__stack_chk_fail>
    e89e:	66 90                	xchg   %ax,%ax

000000000000e8a0 <ema_do_dealloc_loop>:
    e8a0:	f3 0f 1e fa          	endbr64 
    e8a4:	41 55                	push   %r13
    e8a6:	49 89 d5             	mov    %rdx,%r13
    e8a9:	41 54                	push   %r12
    e8ab:	49 89 cc             	mov    %rcx,%r12
    e8ae:	55                   	push   %rbp
    e8af:	48 89 f5             	mov    %rsi,%rbp
    e8b2:	53                   	push   %rbx
    e8b3:	48 83 ec 08          	sub    $0x8,%rsp
    e8b7:	eb 1d                	jmp    e8d6 <ema_do_dealloc_loop+0x36>
    e8b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e8c0:	4c 89 e2             	mov    %r12,%rdx
    e8c3:	4c 89 ee             	mov    %r13,%rsi
    e8c6:	48 8b 5f 38          	mov    0x38(%rdi),%rbx
    e8ca:	e8 d1 fe ff ff       	call   e7a0 <ema_do_dealloc>
    e8cf:	85 c0                	test   %eax,%eax
    e8d1:	75 0a                	jne    e8dd <ema_do_dealloc_loop+0x3d>
    e8d3:	48 89 df             	mov    %rbx,%rdi
    e8d6:	48 39 ef             	cmp    %rbp,%rdi
    e8d9:	75 e5                	jne    e8c0 <ema_do_dealloc_loop+0x20>
    e8db:	31 c0                	xor    %eax,%eax
    e8dd:	48 83 c4 08          	add    $0x8,%rsp
    e8e1:	5b                   	pop    %rbx
    e8e2:	5d                   	pop    %rbp
    e8e3:	41 5c                	pop    %r12
    e8e5:	41 5d                	pop    %r13
    e8e7:	c3                   	ret    
    e8e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e8ef:	00 

000000000000e8f0 <ema_modify_permissions_loop>:
    e8f0:	f3 0f 1e fa          	endbr64 
    e8f4:	41 57                	push   %r15
    e8f6:	41 56                	push   %r14
    e8f8:	41 55                	push   %r13
    e8fa:	41 54                	push   %r12
    e8fc:	55                   	push   %rbp
    e8fd:	53                   	push   %rbx
    e8fe:	48 89 cb             	mov    %rcx,%rbx
    e901:	48 83 ec 08          	sub    $0x8,%rsp
    e905:	48 8b 0f             	mov    (%rdi),%rcx
    e908:	48 39 f7             	cmp    %rsi,%rdi
    e90b:	0f 84 dc 00 00 00    	je     e9ed <ema_modify_permissions_loop+0xfd>
    e911:	49 89 fe             	mov    %rdi,%r14
    e914:	49 89 f4             	mov    %rsi,%r12
    e917:	48 89 d5             	mov    %rdx,%rbp
    e91a:	45 89 c5             	mov    %r8d,%r13d
    e91d:	49 89 ff             	mov    %rdi,%r15
    e920:	41 f6 47 19 02       	testb  $0x2,0x19(%r15)
    e925:	74 79                	je     e9a0 <ema_modify_permissions_loop+0xb0>
    e927:	41 f6 47 10 01       	testb  $0x1,0x10(%r15)
    e92c:	75 72                	jne    e9a0 <ema_modify_permissions_loop+0xb0>
    e92e:	48 39 cd             	cmp    %rcx,%rbp
    e931:	48 89 ce             	mov    %rcx,%rsi
    e934:	49 8b 47 08          	mov    0x8(%r15),%rax
    e938:	49 8b 7f 20          	mov    0x20(%r15),%rdi
    e93c:	48 0f 43 f5          	cmovae %rbp,%rsi
    e940:	48 01 c8             	add    %rcx,%rax
    e943:	48 29 ce             	sub    %rcx,%rsi
    e946:	48 c1 ee 0c          	shr    $0xc,%rsi
    e94a:	48 39 d8             	cmp    %rbx,%rax
    e94d:	48 0f 47 c3          	cmova  %rbx,%rax
    e951:	48 89 c2             	mov    %rax,%rdx
    e954:	48 29 ca             	sub    %rcx,%rdx
    e957:	48 c1 ea 0c          	shr    $0xc,%rdx
    e95b:	48 85 ff             	test   %rdi,%rdi
    e95e:	74 24                	je     e984 <ema_modify_permissions_loop+0x94>
    e960:	48 29 f2             	sub    %rsi,%rdx
    e963:	e8 c8 e7 ff ff       	call   d130 <bit_array_test_range>
    e968:	84 c0                	test   %al,%al
    e96a:	74 18                	je     e984 <ema_modify_permissions_loop+0x94>
    e96c:	49 8b 47 08          	mov    0x8(%r15),%rax
    e970:	49 03 07             	add    (%r15),%rax
    e973:	4d 8b 7f 38          	mov    0x38(%r15),%r15
    e977:	4d 39 fc             	cmp    %r15,%r12
    e97a:	74 3c                	je     e9b8 <ema_modify_permissions_loop+0xc8>
    e97c:	49 8b 0f             	mov    (%r15),%rcx
    e97f:	48 39 c1             	cmp    %rax,%rcx
    e982:	74 9c                	je     e920 <ema_modify_permissions_loop+0x30>
    e984:	b8 16 00 00 00       	mov    $0x16,%eax
    e989:	48 83 c4 08          	add    $0x8,%rsp
    e98d:	5b                   	pop    %rbx
    e98e:	5d                   	pop    %rbp
    e98f:	41 5c                	pop    %r12
    e991:	41 5d                	pop    %r13
    e993:	41 5e                	pop    %r14
    e995:	41 5f                	pop    %r15
    e997:	c3                   	ret    
    e998:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e99f:	00 
    e9a0:	48 83 c4 08          	add    $0x8,%rsp
    e9a4:	b8 0d 00 00 00       	mov    $0xd,%eax
    e9a9:	5b                   	pop    %rbx
    e9aa:	5d                   	pop    %rbp
    e9ab:	41 5c                	pop    %r12
    e9ad:	41 5d                	pop    %r13
    e9af:	41 5e                	pop    %r14
    e9b1:	41 5f                	pop    %r15
    e9b3:	c3                   	ret    
    e9b4:	0f 1f 40 00          	nopl   0x0(%rax)
    e9b8:	48 39 c3             	cmp    %rax,%rbx
    e9bb:	77 c7                	ja     e984 <ema_modify_permissions_loop+0x94>
    e9bd:	0f 1f 00             	nopl   (%rax)
    e9c0:	4c 89 f7             	mov    %r14,%rdi
    e9c3:	44 89 e9             	mov    %r13d,%ecx
    e9c6:	48 89 da             	mov    %rbx,%rdx
    e9c9:	48 89 ee             	mov    %rbp,%rsi
    e9cc:	4d 8b 76 38          	mov    0x38(%r14),%r14
    e9d0:	e8 9b fa ff ff       	call   e470 <ema_modify_permissions>
    e9d5:	85 c0                	test   %eax,%eax
    e9d7:	75 b0                	jne    e989 <ema_modify_permissions_loop+0x99>
    e9d9:	4d 39 f4             	cmp    %r14,%r12
    e9dc:	75 e2                	jne    e9c0 <ema_modify_permissions_loop+0xd0>
    e9de:	48 83 c4 08          	add    $0x8,%rsp
    e9e2:	5b                   	pop    %rbx
    e9e3:	5d                   	pop    %rbp
    e9e4:	41 5c                	pop    %r12
    e9e6:	41 5d                	pop    %r13
    e9e8:	41 5e                	pop    %r14
    e9ea:	41 5f                	pop    %r15
    e9ec:	c3                   	ret    
    e9ed:	48 39 cb             	cmp    %rcx,%rbx
    e9f0:	77 92                	ja     e984 <ema_modify_permissions_loop+0x94>
    e9f2:	31 c0                	xor    %eax,%eax
    e9f4:	eb 93                	jmp    e989 <ema_modify_permissions_loop+0x99>
    e9f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    e9fd:	00 00 00 

000000000000ea00 <ema_realloc_from_reserve_range>:
    ea00:	f3 0f 1e fa          	endbr64 
    ea04:	41 57                	push   %r15
    ea06:	41 56                	push   %r14
    ea08:	4d 89 ce             	mov    %r9,%r14
    ea0b:	41 55                	push   %r13
    ea0d:	45 89 c5             	mov    %r8d,%r13d
    ea10:	41 54                	push   %r12
    ea12:	49 89 d4             	mov    %rdx,%r12
    ea15:	55                   	push   %rbp
    ea16:	48 89 cd             	mov    %rcx,%rbp
    ea19:	53                   	push   %rbx
    ea1a:	48 89 fb             	mov    %rdi,%rbx
    ea1d:	48 83 ec 28          	sub    $0x28,%rsp
    ea21:	4c 8b 3f             	mov    (%rdi),%r15
    ea24:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    ea29:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    ea2e:	48 39 f7             	cmp    %rsi,%rdi
    ea31:	75 27                	jne    ea5a <ema_realloc_from_reserve_range+0x5a>
    ea33:	e9 22 01 00 00       	jmp    eb5a <ema_realloc_from_reserve_range+0x15a>
    ea38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ea3f:	00 
    ea40:	4c 39 3b             	cmp    %r15,(%rbx)
    ea43:	75 21                	jne    ea66 <ema_realloc_from_reserve_range+0x66>
    ea45:	f6 43 10 01          	testb  $0x1,0x10(%rbx)
    ea49:	74 1b                	je     ea66 <ema_realloc_from_reserve_range+0x66>
    ea4b:	4c 03 7b 08          	add    0x8(%rbx),%r15
    ea4f:	48 8b 5b 38          	mov    0x38(%rbx),%rbx
    ea53:	48 39 5c 24 10       	cmp    %rbx,0x10(%rsp)
    ea58:	74 26                	je     ea80 <ema_realloc_from_reserve_range+0x80>
    ea5a:	48 89 df             	mov    %rbx,%rdi
    ea5d:	e8 0e 07 00 00       	call   f170 <can_erealloc>
    ea62:	85 c0                	test   %eax,%eax
    ea64:	75 da                	jne    ea40 <ema_realloc_from_reserve_range+0x40>
    ea66:	48 83 c4 28          	add    $0x28,%rsp
    ea6a:	31 c0                	xor    %eax,%eax
    ea6c:	5b                   	pop    %rbx
    ea6d:	5d                   	pop    %rbp
    ea6e:	41 5c                	pop    %r12
    ea70:	41 5d                	pop    %r13
    ea72:	41 5e                	pop    %r14
    ea74:	41 5f                	pop    %r15
    ea76:	c3                   	ret    
    ea77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ea7e:	00 00 
    ea80:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    ea85:	4c 8b 3f             	mov    (%rdi),%r15
    ea88:	48 8b 5b 40          	mov    0x40(%rbx),%rbx
    ea8c:	4d 39 fc             	cmp    %r15,%r12
    ea8f:	77 76                	ja     eb07 <ema_realloc_from_reserve_range+0x107>
    ea91:	48 8b 43 08          	mov    0x8(%rbx),%rax
    ea95:	48 03 03             	add    (%rbx),%rax
    ea98:	48 39 e8             	cmp    %rbp,%rax
    ea9b:	0f 87 95 00 00 00    	ja     eb36 <ema_realloc_from_reserve_range+0x136>
    eaa1:	48 8b 43 38          	mov    0x38(%rbx),%rax
    eaa5:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    eaaa:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    eaaf:	48 39 c3             	cmp    %rax,%rbx
    eab2:	0f 84 aa 00 00 00    	je     eb62 <ema_realloc_from_reserve_range+0x162>
    eab8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    eabf:	00 
    eac0:	48 89 df             	mov    %rbx,%rdi
    eac3:	48 8b 5b 38          	mov    0x38(%rbx),%rbx
    eac7:	e8 64 f5 ff ff       	call   e030 <ema_destroy>
    eacc:	48 39 5c 24 10       	cmp    %rbx,0x10(%rsp)
    ead1:	75 ed                	jne    eac0 <ema_realloc_from_reserve_range+0xc0>
    ead3:	48 83 ec 08          	sub    $0x8,%rsp
    ead7:	48 89 ee             	mov    %rbp,%rsi
    eada:	4c 89 f1             	mov    %r14,%rcx
    eadd:	44 89 ea             	mov    %r13d,%edx
    eae0:	53                   	push   %rbx
    eae1:	4c 8b 4c 24 78       	mov    0x78(%rsp),%r9
    eae6:	4c 29 e6             	sub    %r12,%rsi
    eae9:	4c 89 e7             	mov    %r12,%rdi
    eaec:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
    eaf1:	e8 4a f4 ff ff       	call   df40 <ema_new>
    eaf6:	5a                   	pop    %rdx
    eaf7:	59                   	pop    %rcx
    eaf8:	48 83 c4 28          	add    $0x28,%rsp
    eafc:	5b                   	pop    %rbx
    eafd:	5d                   	pop    %rbp
    eafe:	41 5c                	pop    %r12
    eb00:	41 5d                	pop    %r13
    eb02:	41 5e                	pop    %r14
    eb04:	41 5f                	pop    %r15
    eb06:	c3                   	ret    
    eb07:	31 d2                	xor    %edx,%edx
    eb09:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
    eb0e:	4c 89 e6             	mov    %r12,%rsi
    eb11:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    eb16:	e8 25 ee ff ff       	call   d940 <ema_split>
    eb1b:	85 c0                	test   %eax,%eax
    eb1d:	0f 85 43 ff ff ff    	jne    ea66 <ema_realloc_from_reserve_range+0x66>
    eb23:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    eb28:	48 39 fb             	cmp    %rdi,%rbx
    eb2b:	48 0f 44 5c 24 18    	cmove  0x18(%rsp),%rbx
    eb31:	e9 5b ff ff ff       	jmp    ea91 <ema_realloc_from_reserve_range+0x91>
    eb36:	31 d2                	xor    %edx,%edx
    eb38:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    eb3d:	48 89 ee             	mov    %rbp,%rsi
    eb40:	48 89 df             	mov    %rbx,%rdi
    eb43:	e8 f8 ed ff ff       	call   d940 <ema_split>
    eb48:	85 c0                	test   %eax,%eax
    eb4a:	0f 85 16 ff ff ff    	jne    ea66 <ema_realloc_from_reserve_range+0x66>
    eb50:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    eb55:	e9 50 ff ff ff       	jmp    eaaa <ema_realloc_from_reserve_range+0xaa>
    eb5a:	48 89 f7             	mov    %rsi,%rdi
    eb5d:	e9 26 ff ff ff       	jmp    ea88 <ema_realloc_from_reserve_range+0x88>
    eb62:	48 89 c3             	mov    %rax,%rbx
    eb65:	e9 69 ff ff ff       	jmp    ead3 <ema_realloc_from_reserve_range+0xd3>
    eb6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000eb70 <ema_do_alloc>:
    eb70:	f3 0f 1e fa          	endbr64 
    eb74:	41 55                	push   %r13
    eb76:	31 c0                	xor    %eax,%eax
    eb78:	41 54                	push   %r12
    eb7a:	55                   	push   %rbp
    eb7b:	53                   	push   %rbx
    eb7c:	48 83 ec 08          	sub    $0x8,%rsp
    eb80:	8b 5f 10             	mov    0x10(%rdi),%ebx
    eb83:	f6 c3 01             	test   $0x1,%bl
    eb86:	74 10                	je     eb98 <ema_do_alloc+0x28>
    eb88:	48 83 c4 08          	add    $0x8,%rsp
    eb8c:	5b                   	pop    %rbx
    eb8d:	5d                   	pop    %rbp
    eb8e:	41 5c                	pop    %r12
    eb90:	41 5d                	pop    %r13
    eb92:	c3                   	ret    
    eb93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    eb98:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
    eb9c:	8b 57 18             	mov    0x18(%rdi),%edx
    eb9f:	48 89 fd             	mov    %rdi,%rbp
    eba2:	89 d9                	mov    %ebx,%ecx
    eba4:	4c 8b 27             	mov    (%rdi),%r12
    eba7:	81 e2 00 ff 00 00    	and    $0xff00,%edx
    ebad:	4c 89 ee             	mov    %r13,%rsi
    ebb0:	4c 89 e7             	mov    %r12,%rdi
    ebb3:	e8 98 b5 ff ff       	call   a150 <sgx_mm_alloc_ocall>
    ebb8:	85 c0                	test   %eax,%eax
    ebba:	75 54                	jne    ec10 <ema_do_alloc+0xa0>
    ebbc:	f6 c3 02             	test   $0x2,%bl
    ebbf:	75 17                	jne    ebd8 <ema_do_alloc+0x68>
    ebc1:	48 83 c4 08          	add    $0x8,%rsp
    ebc5:	48 89 ef             	mov    %rbp,%rdi
    ebc8:	5b                   	pop    %rbx
    ebc9:	5d                   	pop    %rbp
    ebca:	41 5c                	pop    %r12
    ebcc:	41 5d                	pop    %r13
    ebce:	e9 4d ec ff ff       	jmp    d820 <ema_clear_eaccept_full>
    ebd3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ebd8:	89 d9                	mov    %ebx,%ecx
    ebda:	48 8b 55 18          	mov    0x18(%rbp),%rdx
    ebde:	4c 89 ee             	mov    %r13,%rsi
    ebe1:	4c 89 e7             	mov    %r12,%rdi
    ebe4:	c1 e9 04             	shr    $0x4,%ecx
    ebe7:	83 f1 01             	xor    $0x1,%ecx
    ebea:	83 e1 01             	and    $0x1,%ecx
    ebed:	e8 6e f4 ff ff       	call   e060 <do_commit>
    ebf2:	85 c0                	test   %eax,%eax
    ebf4:	75 92                	jne    eb88 <ema_do_alloc+0x18>
    ebf6:	48 83 c4 08          	add    $0x8,%rsp
    ebfa:	48 89 ef             	mov    %rbp,%rdi
    ebfd:	5b                   	pop    %rbx
    ebfe:	5d                   	pop    %rbp
    ebff:	41 5c                	pop    %r12
    ec01:	41 5d                	pop    %r13
    ec03:	e9 d8 eb ff ff       	jmp    d7e0 <ema_set_eaccept_full>
    ec08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ec0f:	00 
    ec10:	48 83 c4 08          	add    $0x8,%rsp
    ec14:	b8 0e 00 00 00       	mov    $0xe,%eax
    ec19:	5b                   	pop    %rbx
    ec1a:	5d                   	pop    %rbp
    ec1b:	41 5c                	pop    %r12
    ec1d:	41 5d                	pop    %r13
    ec1f:	c3                   	ret    

000000000000ec20 <neighbor_right>:
    ec20:	4c 8b 05 a9 34 02 00 	mov    0x234a9(%rip),%r8        # 320d0 <size_mask>
    ec27:	4c 89 c0             	mov    %r8,%rax
    ec2a:	48 23 07             	and    (%rdi),%rax
    ec2d:	48 8d 34 07          	lea    (%rdi,%rax,1),%rsi
    ec31:	74 5f                	je     ec92 <neighbor_right+0x72>
    ec33:	48 8b 0d fe 35 02 00 	mov    0x235fe(%rip),%rcx        # 32238 <reserve_list>
    ec3a:	48 85 c9             	test   %rcx,%rcx
    ec3d:	74 53                	je     ec92 <neighbor_right+0x72>
    ec3f:	48 89 c8             	mov    %rcx,%rax
    ec42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ec48:	48 8b 10             	mov    (%rax),%rdx
    ec4b:	48 39 fa             	cmp    %rdi,%rdx
    ec4e:	77 09                	ja     ec59 <neighbor_right+0x39>
    ec50:	48 03 50 10          	add    0x10(%rax),%rdx
    ec54:	48 39 f2             	cmp    %rsi,%rdx
    ec57:	73 0f                	jae    ec68 <neighbor_right+0x48>
    ec59:	48 8b 40 18          	mov    0x18(%rax),%rax
    ec5d:	48 85 c0             	test   %rax,%rax
    ec60:	75 e6                	jne    ec48 <neighbor_right+0x28>
    ec62:	c3                   	ret    
    ec63:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ec68:	74 28                	je     ec92 <neighbor_right+0x72>
    ec6a:	4c 23 06             	and    (%rsi),%r8
    ec6d:	74 23                	je     ec92 <neighbor_right+0x72>
    ec6f:	4a 8d 3c 06          	lea    (%rsi,%r8,1),%rdi
    ec73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ec78:	48 8b 11             	mov    (%rcx),%rdx
    ec7b:	48 39 d6             	cmp    %rdx,%rsi
    ec7e:	72 09                	jb     ec89 <neighbor_right+0x69>
    ec80:	48 03 51 10          	add    0x10(%rcx),%rdx
    ec84:	48 39 d7             	cmp    %rdx,%rdi
    ec87:	76 0f                	jbe    ec98 <neighbor_right+0x78>
    ec89:	48 8b 49 18          	mov    0x18(%rcx),%rcx
    ec8d:	48 85 c9             	test   %rcx,%rcx
    ec90:	75 e6                	jne    ec78 <neighbor_right+0x58>
    ec92:	31 c0                	xor    %eax,%eax
    ec94:	c3                   	ret    
    ec95:	0f 1f 00             	nopl   (%rax)
    ec98:	48 39 c1             	cmp    %rax,%rcx
    ec9b:	75 f5                	jne    ec92 <neighbor_right+0x72>
    ec9d:	48 89 f0             	mov    %rsi,%rax
    eca0:	c3                   	ret    
    eca1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    eca8:	00 00 00 
    ecab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ecb0 <put_free_block>:
    ecb0:	48 8b 05 19 34 02 00 	mov    0x23419(%rip),%rax        # 320d0 <size_mask>
    ecb7:	48 8b 17             	mov    (%rdi),%rdx
    ecba:	48 21 c2             	and    %rax,%rdx
    ecbd:	48 81 fa 08 08 00 00 	cmp    $0x808,%rdx
    ecc4:	76 2a                	jbe    ecf0 <put_free_block+0x40>
    ecc6:	48 8b 15 73 35 02 00 	mov    0x23573(%rip),%rdx        # 32240 <large_block_list>
    eccd:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    ecd1:	48 85 d2             	test   %rdx,%rdx
    ecd4:	74 0d                	je     ece3 <put_free_block+0x33>
    ecd6:	48 23 02             	and    (%rdx),%rax
    ecd9:	48 83 f8 10          	cmp    $0x10,%rax
    ecdd:	76 04                	jbe    ece3 <put_free_block+0x33>
    ecdf:	48 89 7a 10          	mov    %rdi,0x10(%rdx)
    ece3:	48 89 3d 56 35 02 00 	mov    %rdi,0x23556(%rip)        # 32240 <large_block_list>
    ecea:	c3                   	ret    
    eceb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ecf0:	48 8d 4a f0          	lea    -0x10(%rdx),%rcx
    ecf4:	48 8d 35 65 35 02 00 	lea    0x23565(%rip),%rsi        # 32260 <exact_block_list>
    ecfb:	48 c1 e9 03          	shr    $0x3,%rcx
    ecff:	48 83 fa 0f          	cmp    $0xf,%rdx
    ed03:	ba 00 00 00 00       	mov    $0x0,%edx
    ed08:	48 0f 47 d1          	cmova  %rcx,%rdx
    ed0c:	48 8b 0c d6          	mov    (%rsi,%rdx,8),%rcx
    ed10:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    ed14:	48 85 c9             	test   %rcx,%rcx
    ed17:	74 0d                	je     ed26 <put_free_block+0x76>
    ed19:	48 23 01             	and    (%rcx),%rax
    ed1c:	48 83 f8 10          	cmp    $0x10,%rax
    ed20:	76 04                	jbe    ed26 <put_free_block+0x76>
    ed22:	48 89 79 10          	mov    %rdi,0x10(%rcx)
    ed26:	48 89 3c d6          	mov    %rdi,(%rsi,%rdx,8)
    ed2a:	c3                   	ret    
    ed2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ed30 <add_reserve>:
    ed30:	41 54                	push   %r12
    ed32:	45 31 e4             	xor    %r12d,%r12d
    ed35:	55                   	push   %rbp
    ed36:	53                   	push   %rbx
    ed37:	48 83 ec 10          	sub    $0x10,%rsp
    ed3b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ed42:	00 00 
    ed44:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    ed49:	31 c0                	xor    %eax,%eax
    ed4b:	80 3d de 34 02 00 00 	cmpb   $0x0,0x234de(%rip)        # 32230 <adding_reserve>
    ed52:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    ed59:	00 
    ed5a:	74 24                	je     ed80 <add_reserve+0x50>
    ed5c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    ed61:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    ed68:	00 00 
    ed6a:	0f 85 f5 00 00 00    	jne    ee65 <add_reserve+0x135>
    ed70:	48 83 c4 10          	add    $0x10,%rsp
    ed74:	44 89 e0             	mov    %r12d,%eax
    ed77:	5b                   	pop    %rbx
    ed78:	5d                   	pop    %rbp
    ed79:	41 5c                	pop    %r12
    ed7b:	c3                   	ret    
    ed7c:	0f 1f 40 00          	nopl   0x0(%rax)
    ed80:	48 39 3d 41 33 02 00 	cmp    %rdi,0x23341(%rip)        # 320c8 <reserve_size_increment>
    ed87:	48 89 fe             	mov    %rdi,%rsi
    ed8a:	48 89 e3             	mov    %rsp,%rbx
    ed8d:	48 89 fd             	mov    %rdi,%rbp
    ed90:	48 0f 43 35 30 33 02 	cmovae 0x23330(%rip),%rsi        # 320c8 <reserve_size_increment>
    ed97:	00 
    ed98:	49 89 d9             	mov    %rbx,%r9
    ed9b:	45 31 c0             	xor    %r8d,%r8d
    ed9e:	31 c9                	xor    %ecx,%ecx
    eda0:	ba 01 00 00 00       	mov    $0x1,%edx
    eda5:	31 ff                	xor    %edi,%edi
    eda7:	c6 05 82 34 02 00 01 	movb   $0x1,0x23482(%rip)        # 32230 <adding_reserve>
    edae:	48 89 35 13 33 02 00 	mov    %rsi,0x23313(%rip)        # 320c8 <reserve_size_increment>
    edb5:	48 81 c6 00 00 01 00 	add    $0x10000,%rsi
    edbc:	e8 9f 0c 00 00       	call   fa60 <sgx_mm_alloc>
    edc1:	41 89 c4             	mov    %eax,%r12d
    edc4:	85 c0                	test   %eax,%eax
    edc6:	75 2b                	jne    edf3 <add_reserve+0xc3>
    edc8:	48 8b 04 24          	mov    (%rsp),%rax
    edcc:	48 8b 35 f5 32 02 00 	mov    0x232f5(%rip),%rsi        # 320c8 <reserve_size_increment>
    edd3:	49 89 d9             	mov    %rbx,%r9
    edd6:	31 c9                	xor    %ecx,%ecx
    edd8:	45 31 c0             	xor    %r8d,%r8d
    eddb:	ba 44 00 00 00       	mov    $0x44,%edx
    ede0:	48 8d b8 00 80 00 00 	lea    0x8000(%rax),%rdi
    ede7:	e8 74 0c 00 00       	call   fa60 <sgx_mm_alloc>
    edec:	41 89 c4             	mov    %eax,%r12d
    edef:	85 c0                	test   %eax,%eax
    edf1:	74 0d                	je     ee00 <add_reserve+0xd0>
    edf3:	c6 05 36 34 02 00 00 	movb   $0x0,0x23436(%rip)        # 32230 <adding_reserve>
    edfa:	e9 5d ff ff ff       	jmp    ed5c <add_reserve+0x2c>
    edff:	90                   	nop
    ee00:	48 8b 3c 24          	mov    (%rsp),%rdi
    ee04:	48 89 ee             	mov    %rbp,%rsi
    ee07:	e8 44 0d 00 00       	call   fb50 <sgx_mm_commit>
    ee0c:	48 8b 14 24          	mov    (%rsp),%rdx
    ee10:	48 8b 05 b1 32 02 00 	mov    0x232b1(%rip),%rax        # 320c8 <reserve_size_increment>
    ee17:	c6 05 12 34 02 00 00 	movb   $0x0,0x23412(%rip)        # 32230 <adding_reserve>
    ee1e:	48 8d 4a 20          	lea    0x20(%rdx),%rcx
    ee22:	48 c7 42 10 00 00 00 	movq   $0x0,0x10(%rdx)
    ee29:	00 
    ee2a:	48 89 0a             	mov    %rcx,(%rdx)
    ee2d:	48 8d 48 e0          	lea    -0x20(%rax),%rcx
    ee31:	48 01 c0             	add    %rax,%rax
    ee34:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    ee38:	48 8b 0d f9 33 02 00 	mov    0x233f9(%rip),%rcx        # 32238 <reserve_list>
    ee3f:	48 3d 00 00 00 10    	cmp    $0x10000000,%rax
    ee45:	48 89 15 ec 33 02 00 	mov    %rdx,0x233ec(%rip)        # 32238 <reserve_list>
    ee4c:	48 89 4a 18          	mov    %rcx,0x18(%rdx)
    ee50:	ba 00 00 00 10       	mov    $0x10000000,%edx
    ee55:	48 0f 47 c2          	cmova  %rdx,%rax
    ee59:	48 89 05 68 32 02 00 	mov    %rax,0x23268(%rip)        # 320c8 <reserve_size_increment>
    ee60:	e9 f7 fe ff ff       	jmp    ed5c <add_reserve+0x2c>
    ee65:	e8 d6 4c 00 00       	call   13b40 <__stack_chk_fail>
    ee6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000ee70 <remove_from_list>:
    ee70:	48 8b 06             	mov    (%rsi),%rax
    ee73:	48 8b 17             	mov    (%rdi),%rdx
    ee76:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
    ee7a:	48 23 15 4f 32 02 00 	and    0x2324f(%rip),%rdx        # 320d0 <size_mask>
    ee81:	48 39 f8             	cmp    %rdi,%rax
    ee84:	74 3a                	je     eec0 <remove_from_list+0x50>
    ee86:	48 83 fa 10          	cmp    $0x10,%rdx
    ee8a:	76 1c                	jbe    eea8 <remove_from_list+0x38>
    ee8c:	48 8b 47 10          	mov    0x10(%rdi),%rax
    ee90:	48 85 c0             	test   %rax,%rax
    ee93:	74 04                	je     ee99 <remove_from_list+0x29>
    ee95:	48 89 48 08          	mov    %rcx,0x8(%rax)
    ee99:	48 85 c9             	test   %rcx,%rcx
    ee9c:	74 1a                	je     eeb8 <remove_from_list+0x48>
    ee9e:	48 89 41 10          	mov    %rax,0x10(%rcx)
    eea2:	c3                   	ret    
    eea3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    eea8:	48 89 c2             	mov    %rax,%rdx
    eeab:	48 8b 40 08          	mov    0x8(%rax),%rax
    eeaf:	48 39 f8             	cmp    %rdi,%rax
    eeb2:	75 f4                	jne    eea8 <remove_from_list+0x38>
    eeb4:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    eeb8:	c3                   	ret    
    eeb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    eec0:	48 89 0e             	mov    %rcx,(%rsi)
    eec3:	48 83 fa 10          	cmp    $0x10,%rdx
    eec7:	76 ef                	jbe    eeb8 <remove_from_list+0x48>
    eec9:	48 85 c9             	test   %rcx,%rcx
    eecc:	74 ea                	je     eeb8 <remove_from_list+0x48>
    eece:	48 c7 41 10 00 00 00 	movq   $0x0,0x10(%rcx)
    eed5:	00 
    eed6:	c3                   	ret    
    eed7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    eede:	00 00 

000000000000eee0 <get_large_block_end_at>:
    eee0:	4c 8b 05 59 33 02 00 	mov    0x23359(%rip),%r8        # 32240 <large_block_list>
    eee7:	4d 85 c0             	test   %r8,%r8
    eeea:	74 18                	je     ef04 <get_large_block_end_at+0x24>
    eeec:	0f 1f 40 00          	nopl   0x0(%rax)
    eef0:	49 8b 00             	mov    (%r8),%rax
    eef3:	4c 01 c0             	add    %r8,%rax
    eef6:	48 39 f8             	cmp    %rdi,%rax
    eef9:	74 15                	je     ef10 <get_large_block_end_at+0x30>
    eefb:	4d 8b 40 08          	mov    0x8(%r8),%r8
    eeff:	4d 85 c0             	test   %r8,%r8
    ef02:	75 ec                	jne    eef0 <get_large_block_end_at+0x10>
    ef04:	4c 89 c0             	mov    %r8,%rax
    ef07:	c3                   	ret    
    ef08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ef0f:	00 
    ef10:	48 8d 35 29 33 02 00 	lea    0x23329(%rip),%rsi        # 32240 <large_block_list>
    ef17:	4c 89 c7             	mov    %r8,%rdi
    ef1a:	e8 51 ff ff ff       	call   ee70 <remove_from_list>
    ef1f:	4c 89 c0             	mov    %r8,%rax
    ef22:	c3                   	ret    
    ef23:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    ef2a:	00 00 00 
    ef2d:	0f 1f 00             	nopl   (%rax)

000000000000ef30 <emalloc_init_with_reserved_mem>:
    ef30:	f3 0f 1e fa          	endbr64 
    ef34:	48 83 ec 08          	sub    $0x8,%rsp
    ef38:	e8 f3 fd ff ff       	call   ed30 <add_reserve>
    ef3d:	85 c0                	test   %eax,%eax
    ef3f:	75 17                	jne    ef58 <emalloc_init_with_reserved_mem+0x28>
    ef41:	48 c7 05 7c 31 02 00 	movq   $0x10000,0x2317c(%rip)        # 320c8 <reserve_size_increment>
    ef48:	00 00 01 00 
    ef4c:	48 83 c4 08          	add    $0x8,%rsp
    ef50:	c3                   	ret    
    ef51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ef58:	b8 0c 00 00 00       	mov    $0xc,%eax
    ef5d:	48 83 c4 08          	add    $0x8,%rsp
    ef61:	c3                   	ret    
    ef62:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    ef69:	00 00 00 
    ef6c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000ef70 <emalloc>:
    ef70:	f3 0f 1e fa          	endbr64 
    ef74:	48 8b 05 5d 31 02 00 	mov    0x2315d(%rip),%rax        # 320d8 <header_size>
    ef7b:	53                   	push   %rbx
    ef7c:	bb 10 00 00 00       	mov    $0x10,%ebx
    ef81:	48 8d 44 38 07       	lea    0x7(%rax,%rdi,1),%rax
    ef86:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    ef8a:	48 83 f8 10          	cmp    $0x10,%rax
    ef8e:	48 0f 43 d8          	cmovae %rax,%rbx
    ef92:	80 3d 97 32 02 00 00 	cmpb   $0x0,0x23297(%rip)        # 32230 <adding_reserve>
    ef99:	74 3d                	je     efd8 <emalloc+0x68>
    ef9b:	48 8b 05 be 3a 02 00 	mov    0x23abe(%rip),%rax        # 32a60 <meta_used>
    efa2:	48 8d 14 18          	lea    (%rax,%rbx,1),%rdx
    efa6:	48 81 fa 00 00 01 00 	cmp    $0x10000,%rdx
    efad:	0f 87 43 01 00 00    	ja     f0f6 <emalloc+0x186>
    efb3:	4c 8d 05 c6 3a 02 00 	lea    0x23ac6(%rip),%r8        # 32a80 <meta_reserve>
    efba:	48 83 cb 01          	or     $0x1,%rbx
    efbe:	48 89 15 9b 3a 02 00 	mov    %rdx,0x23a9b(%rip)        # 32a60 <meta_used>
    efc5:	4c 01 c0             	add    %r8,%rax
    efc8:	48 89 18             	mov    %rbx,(%rax)
    efcb:	48 83 c0 08          	add    $0x8,%rax
    efcf:	5b                   	pop    %rbx
    efd0:	c3                   	ret    
    efd1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    efd8:	48 3d 08 08 00 00    	cmp    $0x808,%rax
    efde:	0f 86 3c 01 00 00    	jbe    f120 <emalloc+0x1b0>
    efe4:	48 8b 05 55 32 02 00 	mov    0x23255(%rip),%rax        # 32240 <large_block_list>
    efeb:	48 85 c0             	test   %rax,%rax
    efee:	74 70                	je     f060 <emalloc+0xf0>
    eff0:	45 31 c0             	xor    %r8d,%r8d
    eff3:	eb 13                	jmp    f008 <emalloc+0x98>
    eff5:	0f 1f 00             	nopl   (%rax)
    eff8:	49 3b 10             	cmp    (%r8),%rdx
    effb:	4c 0f 42 c0          	cmovb  %rax,%r8
    efff:	48 8b 40 08          	mov    0x8(%rax),%rax
    f003:	48 85 c0             	test   %rax,%rax
    f006:	74 20                	je     f028 <emalloc+0xb8>
    f008:	48 8b 10             	mov    (%rax),%rdx
    f00b:	48 39 d3             	cmp    %rdx,%rbx
    f00e:	77 ef                	ja     efff <emalloc+0x8f>
    f010:	4d 85 c0             	test   %r8,%r8
    f013:	75 e3                	jne    eff8 <emalloc+0x88>
    f015:	49 89 c0             	mov    %rax,%r8
    f018:	48 8b 40 08          	mov    0x8(%rax),%rax
    f01c:	48 85 c0             	test   %rax,%rax
    f01f:	75 e7                	jne    f008 <emalloc+0x98>
    f021:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f028:	4d 85 c0             	test   %r8,%r8
    f02b:	74 33                	je     f060 <emalloc+0xf0>
    f02d:	48 8d 35 0c 32 02 00 	lea    0x2320c(%rip),%rsi        # 32240 <large_block_list>
    f034:	4c 89 c7             	mov    %r8,%rdi
    f037:	e8 34 fe ff ff       	call   ee70 <remove_from_list>
    f03c:	48 8d 53 10          	lea    0x10(%rbx),%rdx
    f040:	49 8b 00             	mov    (%r8),%rax
    f043:	48 39 d0             	cmp    %rdx,%rax
    f046:	0f 83 b4 00 00 00    	jae    f100 <emalloc+0x190>
    f04c:	48 83 cb 01          	or     $0x1,%rbx
    f050:	49 8d 40 08          	lea    0x8(%r8),%rax
    f054:	49 89 18             	mov    %rbx,(%r8)
    f057:	5b                   	pop    %rbx
    f058:	c3                   	ret    
    f059:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f060:	48 8b 15 d1 31 02 00 	mov    0x231d1(%rip),%rdx        # 32238 <reserve_list>
    f067:	48 85 d2             	test   %rdx,%rdx
    f06a:	75 0d                	jne    f079 <emalloc+0x109>
    f06c:	eb 3a                	jmp    f0a8 <emalloc+0x138>
    f06e:	66 90                	xchg   %ax,%ax
    f070:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    f074:	48 85 d2             	test   %rdx,%rdx
    f077:	74 2f                	je     f0a8 <emalloc+0x138>
    f079:	48 8b 42 10          	mov    0x10(%rdx),%rax
    f07d:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    f081:	48 29 c1             	sub    %rax,%rcx
    f084:	48 39 d9             	cmp    %rbx,%rcx
    f087:	72 e7                	jb     f070 <emalloc+0x100>
    f089:	48 8d 0c 18          	lea    (%rax,%rbx,1),%rcx
    f08d:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    f091:	48 03 02             	add    (%rdx),%rax
    f094:	74 12                	je     f0a8 <emalloc+0x138>
    f096:	48 83 cb 01          	or     $0x1,%rbx
    f09a:	48 83 c0 08          	add    $0x8,%rax
    f09e:	48 89 58 f8          	mov    %rbx,-0x8(%rax)
    f0a2:	5b                   	pop    %rbx
    f0a3:	c3                   	ret    
    f0a4:	0f 1f 40 00          	nopl   0x0(%rax)
    f0a8:	48 8d bb 1f 00 01 00 	lea    0x1001f(%rbx),%rdi
    f0af:	66 31 ff             	xor    %di,%di
    f0b2:	e8 79 fc ff ff       	call   ed30 <add_reserve>
    f0b7:	85 c0                	test   %eax,%eax
    f0b9:	75 3b                	jne    f0f6 <emalloc+0x186>
    f0bb:	48 8b 15 76 31 02 00 	mov    0x23176(%rip),%rdx        # 32238 <reserve_list>
    f0c2:	48 85 d2             	test   %rdx,%rdx
    f0c5:	75 12                	jne    f0d9 <emalloc+0x169>
    f0c7:	eb 2d                	jmp    f0f6 <emalloc+0x186>
    f0c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f0d0:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    f0d4:	48 85 d2             	test   %rdx,%rdx
    f0d7:	74 1d                	je     f0f6 <emalloc+0x186>
    f0d9:	48 8b 42 10          	mov    0x10(%rdx),%rax
    f0dd:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    f0e1:	48 29 c1             	sub    %rax,%rcx
    f0e4:	48 39 d9             	cmp    %rbx,%rcx
    f0e7:	72 e7                	jb     f0d0 <emalloc+0x160>
    f0e9:	48 8d 0c 18          	lea    (%rax,%rbx,1),%rcx
    f0ed:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    f0f1:	48 03 02             	add    (%rdx),%rax
    f0f4:	75 a0                	jne    f096 <emalloc+0x126>
    f0f6:	31 c0                	xor    %eax,%eax
    f0f8:	5b                   	pop    %rbx
    f0f9:	c3                   	ret    
    f0fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f100:	49 8d 3c 18          	lea    (%r8,%rbx,1),%rdi
    f104:	48 29 d8             	sub    %rbx,%rax
    f107:	49 89 18             	mov    %rbx,(%r8)
    f10a:	48 89 07             	mov    %rax,(%rdi)
    f10d:	e8 9e fb ff ff       	call   ecb0 <put_free_block>
    f112:	e9 35 ff ff ff       	jmp    f04c <emalloc+0xdc>
    f117:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f11e:	00 00 
    f120:	48 8d 43 f0          	lea    -0x10(%rbx),%rax
    f124:	48 8d 0d 35 31 02 00 	lea    0x23135(%rip),%rcx        # 32260 <exact_block_list>
    f12b:	48 c1 e8 03          	shr    $0x3,%rax
    f12f:	4c 8b 04 c1          	mov    (%rcx,%rax,8),%r8
    f133:	4d 85 c0             	test   %r8,%r8
    f136:	0f 84 24 ff ff ff    	je     f060 <emalloc+0xf0>
    f13c:	49 8b 50 08          	mov    0x8(%r8),%rdx
    f140:	48 89 14 c1          	mov    %rdx,(%rcx,%rax,8)
    f144:	48 85 d2             	test   %rdx,%rdx
    f147:	0f 84 ff fe ff ff    	je     f04c <emalloc+0xdc>
    f14d:	48 85 c0             	test   %rax,%rax
    f150:	0f 84 f6 fe ff ff    	je     f04c <emalloc+0xdc>
    f156:	48 c7 42 10 00 00 00 	movq   $0x0,0x10(%rdx)
    f15d:	00 
    f15e:	e9 e9 fe ff ff       	jmp    f04c <emalloc+0xdc>
    f163:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f16a:	00 00 00 
    f16d:	0f 1f 00             	nopl   (%rax)

000000000000f170 <can_erealloc>:
    f170:	f3 0f 1e fa          	endbr64 
    f174:	48 2b 3d 5d 2f 02 00 	sub    0x22f5d(%rip),%rdi        # 320d8 <header_size>
    f17b:	80 3d ae 30 02 00 00 	cmpb   $0x0,0x230ae(%rip)        # 32230 <adding_reserve>
    f182:	b8 01 00 00 00       	mov    $0x1,%eax
    f187:	48 8b 0f             	mov    (%rdi),%rcx
    f18a:	48 8b 15 3f 2f 02 00 	mov    0x22f3f(%rip),%rdx        # 320d0 <size_mask>
    f191:	75 22                	jne    f1b5 <can_erealloc+0x45>
    f193:	48 8d 35 e6 38 03 00 	lea    0x338e6(%rip),%rsi        # 42a80 <mm_user_end>
    f19a:	48 39 f7             	cmp    %rsi,%rdi
    f19d:	73 16                	jae    f1b5 <can_erealloc+0x45>
    f19f:	48 21 ca             	and    %rcx,%rdx
    f1a2:	48 8d 86 00 00 ff ff 	lea    -0x10000(%rsi),%rax
    f1a9:	48 01 d7             	add    %rdx,%rdi
    f1ac:	48 39 c7             	cmp    %rax,%rdi
    f1af:	0f 96 c0             	setbe  %al
    f1b2:	0f b6 c0             	movzbl %al,%eax
    f1b5:	c3                   	ret    
    f1b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f1bd:	00 00 00 

000000000000f1c0 <efree>:
    f1c0:	f3 0f 1e fa          	endbr64 
    f1c4:	48 2b 3d 0d 2f 02 00 	sub    0x22f0d(%rip),%rdi        # 320d8 <header_size>
    f1cb:	41 56                	push   %r14
    f1cd:	48 8d 05 ac 38 03 00 	lea    0x338ac(%rip),%rax        # 42a80 <mm_user_end>
    f1d4:	41 55                	push   %r13
    f1d6:	49 89 fa             	mov    %rdi,%r10
    f1d9:	41 54                	push   %r12
    f1db:	4c 8b 25 ee 2e 02 00 	mov    0x22eee(%rip),%r12        # 320d0 <size_mask>
    f1e2:	55                   	push   %rbp
    f1e3:	53                   	push   %rbx
    f1e4:	4c 8b 1f             	mov    (%rdi),%r11
    f1e7:	4d 21 e3             	and    %r12,%r11
    f1ea:	48 39 c7             	cmp    %rax,%rdi
    f1ed:	73 13                	jae    f202 <efree+0x42>
    f1ef:	49 8d 14 3b          	lea    (%r11,%rdi,1),%rdx
    f1f3:	48 2d 00 00 01 00    	sub    $0x10000,%rax
    f1f9:	48 39 c2             	cmp    %rax,%rdx
    f1fc:	0f 87 26 01 00 00    	ja     f328 <efree+0x168>
    f202:	4d 85 db             	test   %r11,%r11
    f205:	74 3b                	je     f242 <efree+0x82>
    f207:	4c 8b 0d 2a 30 02 00 	mov    0x2302a(%rip),%r9        # 32238 <reserve_list>
    f20e:	4d 85 c9             	test   %r9,%r9
    f211:	74 2f                	je     f242 <efree+0x82>
    f213:	4b 8d 14 13          	lea    (%r11,%r10,1),%rdx
    f217:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f21e:	00 00 
    f220:	49 8b 29             	mov    (%r9),%rbp
    f223:	49 39 ea             	cmp    %rbp,%r10
    f226:	72 11                	jb     f239 <efree+0x79>
    f228:	4d 8b 69 10          	mov    0x10(%r9),%r13
    f22c:	49 89 d6             	mov    %rdx,%r14
    f22f:	4a 8d 44 2d 00       	lea    0x0(%rbp,%r13,1),%rax
    f234:	48 39 c2             	cmp    %rax,%rdx
    f237:	76 17                	jbe    f250 <efree+0x90>
    f239:	4d 8b 49 18          	mov    0x18(%r9),%r9
    f23d:	4d 85 c9             	test   %r9,%r9
    f240:	75 de                	jne    f220 <efree+0x60>
    f242:	e8 f0 6a 01 00       	call   25d37 <abort>
    f247:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f24e:	00 00 
    f250:	4d 89 1a             	mov    %r11,(%r10)
    f253:	49 c7 42 08 00 00 00 	movq   $0x0,0x8(%r10)
    f25a:	00 
    f25b:	49 83 fb 10          	cmp    $0x10,%r11
    f25f:	0f 87 b3 00 00 00    	ja     f318 <efree+0x158>
    f265:	4c 89 d7             	mov    %r10,%rdi
    f268:	48 8d 1d f1 2f 02 00 	lea    0x22ff1(%rip),%rbx        # 32260 <exact_block_list>
    f26f:	e8 ac f9 ff ff       	call   ec20 <neighbor_right>
    f274:	48 89 c7             	mov    %rax,%rdi
    f277:	48 85 c0             	test   %rax,%rax
    f27a:	75 45                	jne    f2c1 <efree+0x101>
    f27c:	eb 7e                	jmp    f2fc <efree+0x13c>
    f27e:	66 90                	xchg   %ax,%ax
    f280:	49 89 d8             	mov    %rbx,%r8
    f283:	48 83 fe 0f          	cmp    $0xf,%rsi
    f287:	76 0c                	jbe    f295 <efree+0xd5>
    f289:	48 83 ee 10          	sub    $0x10,%rsi
    f28d:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    f291:	4c 8d 04 1e          	lea    (%rsi,%rbx,1),%r8
    f295:	4c 89 c6             	mov    %r8,%rsi
    f298:	e8 d3 fb ff ff       	call   ee70 <remove_from_list>
    f29d:	4c 8b 1f             	mov    (%rdi),%r11
    f2a0:	4c 8b 25 29 2e 02 00 	mov    0x22e29(%rip),%r12        # 320d0 <size_mask>
    f2a7:	4d 21 e3             	and    %r12,%r11
    f2aa:	4d 03 1a             	add    (%r10),%r11
    f2ad:	4d 89 1a             	mov    %r11,(%r10)
    f2b0:	e8 6b f9 ff ff       	call   ec20 <neighbor_right>
    f2b5:	48 89 c7             	mov    %rax,%rdi
    f2b8:	48 85 c0             	test   %rax,%rax
    f2bb:	0f 84 7f 00 00 00    	je     f340 <efree+0x180>
    f2c1:	48 8b 37             	mov    (%rdi),%rsi
    f2c4:	40 f6 c6 01          	test   $0x1,%sil
    f2c8:	75 1e                	jne    f2e8 <efree+0x128>
    f2ca:	4c 21 e6             	and    %r12,%rsi
    f2cd:	48 81 fe 08 08 00 00 	cmp    $0x808,%rsi
    f2d4:	76 aa                	jbe    f280 <efree+0xc0>
    f2d6:	48 8d 35 63 2f 02 00 	lea    0x22f63(%rip),%rsi        # 32240 <large_block_list>
    f2dd:	e8 8e fb ff ff       	call   ee70 <remove_from_list>
    f2e2:	eb b9                	jmp    f29d <efree+0xdd>
    f2e4:	0f 1f 40 00          	nopl   0x0(%rax)
    f2e8:	4d 8b 1a             	mov    (%r10),%r11
    f2eb:	4c 89 e6             	mov    %r12,%rsi
    f2ee:	49 8b 29             	mov    (%r9),%rbp
    f2f1:	4d 8b 69 10          	mov    0x10(%r9),%r13
    f2f5:	4c 21 de             	and    %r11,%rsi
    f2f8:	4e 8d 34 16          	lea    (%rsi,%r10,1),%r14
    f2fc:	49 29 ee             	sub    %rbp,%r14
    f2ff:	4d 39 ee             	cmp    %r13,%r14
    f302:	74 55                	je     f359 <efree+0x199>
    f304:	5b                   	pop    %rbx
    f305:	4c 89 d7             	mov    %r10,%rdi
    f308:	5d                   	pop    %rbp
    f309:	41 5c                	pop    %r12
    f30b:	41 5d                	pop    %r13
    f30d:	41 5e                	pop    %r14
    f30f:	e9 9c f9 ff ff       	jmp    ecb0 <put_free_block>
    f314:	0f 1f 40 00          	nopl   0x0(%rax)
    f318:	49 c7 42 10 00 00 00 	movq   $0x0,0x10(%r10)
    f31f:	00 
    f320:	e9 40 ff ff ff       	jmp    f265 <efree+0xa5>
    f325:	0f 1f 00             	nopl   (%rax)
    f328:	80 3d 01 2f 02 00 00 	cmpb   $0x0,0x22f01(%rip)        # 32230 <adding_reserve>
    f32f:	0f 84 0d ff ff ff    	je     f242 <efree+0x82>
    f335:	5b                   	pop    %rbx
    f336:	5d                   	pop    %rbp
    f337:	41 5c                	pop    %r12
    f339:	41 5d                	pop    %r13
    f33b:	41 5e                	pop    %r14
    f33d:	c3                   	ret    
    f33e:	66 90                	xchg   %ax,%ax
    f340:	4c 89 e6             	mov    %r12,%rsi
    f343:	49 8b 29             	mov    (%r9),%rbp
    f346:	4d 8b 69 10          	mov    0x10(%r9),%r13
    f34a:	4c 21 de             	and    %r11,%rsi
    f34d:	4e 8d 34 16          	lea    (%rsi,%r10,1),%r14
    f351:	49 29 ee             	sub    %rbp,%r14
    f354:	4d 39 ee             	cmp    %r13,%r14
    f357:	75 ab                	jne    f304 <efree+0x144>
    f359:	4d 29 dd             	sub    %r11,%r13
    f35c:	4d 89 69 10          	mov    %r13,0x10(%r9)
    f360:	4c 01 ed             	add    %r13,%rbp
    f363:	48 89 ef             	mov    %rbp,%rdi
    f366:	e8 75 fb ff ff       	call   eee0 <get_large_block_end_at>
    f36b:	48 85 c0             	test   %rax,%rax
    f36e:	74 10                	je     f380 <efree+0x1c0>
    f370:	48 2b 28             	sub    (%rax),%rbp
    f373:	48 89 ef             	mov    %rbp,%rdi
    f376:	e8 65 fb ff ff       	call   eee0 <get_large_block_end_at>
    f37b:	48 85 c0             	test   %rax,%rax
    f37e:	75 f0                	jne    f370 <efree+0x1b0>
    f380:	49 2b 29             	sub    (%r9),%rbp
    f383:	49 89 69 10          	mov    %rbp,0x10(%r9)
    f387:	5b                   	pop    %rbx
    f388:	5d                   	pop    %rbp
    f389:	41 5c                	pop    %r12
    f38b:	41 5d                	pop    %r13
    f38d:	41 5e                	pop    %r14
    f38f:	c3                   	ret    

000000000000f390 <mm_init_ema>:
    f390:	f3 0f 1e fa          	endbr64 
    f394:	41 57                	push   %r15
    f396:	4d 89 cf             	mov    %r9,%r15
    f399:	41 56                	push   %r14
    f39b:	4d 89 c6             	mov    %r8,%r14
    f39e:	41 55                	push   %r13
    f3a0:	41 89 cd             	mov    %ecx,%r13d
    f3a3:	41 54                	push   %r12
    f3a5:	49 89 f4             	mov    %rsi,%r12
    f3a8:	55                   	push   %rbp
    f3a9:	48 89 fd             	mov    %rdi,%rbp
    f3ac:	53                   	push   %rbx
    f3ad:	89 d3                	mov    %edx,%ebx
    f3af:	48 83 ec 28          	sub    $0x28,%rsp
    f3b3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    f3ba:	00 00 
    f3bc:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    f3c1:	31 c0                	xor    %eax,%eax
    f3c3:	e8 48 af ff ff       	call   a310 <sgx_mm_is_within_enclave>
    f3c8:	41 ba 0d 00 00 00    	mov    $0xd,%r10d
    f3ce:	84 c0                	test   %al,%al
    f3d0:	0f 84 90 00 00 00    	je     f466 <mm_init_ema+0xd6>
    f3d6:	f7 c3 7e f8 ff ff    	test   $0xfffff87e,%ebx
    f3dc:	0f 85 7e 00 00 00    	jne    f460 <mm_init_ema+0xd0>
    f3e2:	45 89 ea             	mov    %r13d,%r10d
    f3e5:	41 83 e2 f8          	and    $0xfffffff8,%r10d
    f3e9:	44 89 54 24 0c       	mov    %r10d,0xc(%rsp)
    f3ee:	75 70                	jne    f460 <mm_init_ema+0xd0>
    f3f0:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    f3f5:	4c 89 e2             	mov    %r12,%rdx
    f3f8:	48 89 ee             	mov    %rbp,%rsi
    f3fb:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    f402:	00 00 
    f404:	48 8d 3d 5d 2c 02 00 	lea    0x22c5d(%rip),%rdi        # 32068 <g_rts_ema_root>
    f40b:	e8 60 ea ff ff       	call   de70 <find_free_region_at>
    f410:	84 c0                	test   %al,%al
    f412:	74 4c                	je     f460 <mm_init_ema+0xd0>
    f414:	48 83 ec 08          	sub    $0x8,%rsp
    f418:	89 d9                	mov    %ebx,%ecx
    f41a:	0f b6 d3             	movzbl %bl,%edx
    f41d:	48 89 ef             	mov    %rbp,%rdi
    f420:	ff 74 24 18          	push   0x18(%rsp)
    f424:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    f42a:	4d 89 f9             	mov    %r15,%r9
    f42d:	4d 89 f0             	mov    %r14,%r8
    f430:	41 09 cd             	or     %ecx,%r13d
    f433:	4c 89 e6             	mov    %r12,%rsi
    f436:	49 63 cd             	movslq %r13d,%rcx
    f439:	e8 02 eb ff ff       	call   df40 <ema_new>
    f43e:	48 89 c7             	mov    %rax,%rdi
    f441:	58                   	pop    %rax
    f442:	5a                   	pop    %rdx
    f443:	48 85 ff             	test   %rdi,%rdi
    f446:	74 48                	je     f490 <mm_init_ema+0x100>
    f448:	83 e3 01             	and    $0x1,%ebx
    f44b:	44 8b 54 24 0c       	mov    0xc(%rsp),%r10d
    f450:	75 14                	jne    f466 <mm_init_ema+0xd6>
    f452:	e8 89 e3 ff ff       	call   d7e0 <ema_set_eaccept_full>
    f457:	41 89 c2             	mov    %eax,%r10d
    f45a:	eb 0a                	jmp    f466 <mm_init_ema+0xd6>
    f45c:	0f 1f 40 00          	nopl   0x0(%rax)
    f460:	41 ba 16 00 00 00    	mov    $0x16,%r10d
    f466:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    f46b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    f472:	00 00 
    f474:	75 22                	jne    f498 <mm_init_ema+0x108>
    f476:	48 83 c4 28          	add    $0x28,%rsp
    f47a:	44 89 d0             	mov    %r10d,%eax
    f47d:	5b                   	pop    %rbx
    f47e:	5d                   	pop    %rbp
    f47f:	41 5c                	pop    %r12
    f481:	41 5d                	pop    %r13
    f483:	41 5e                	pop    %r14
    f485:	41 5f                	pop    %r15
    f487:	c3                   	ret    
    f488:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f48f:	00 
    f490:	41 ba 0c 00 00 00    	mov    $0xc,%r10d
    f496:	eb ce                	jmp    f466 <mm_init_ema+0xd6>
    f498:	e8 a3 46 00 00       	call   13b40 <__stack_chk_fail>
    f49d:	0f 1f 00             	nopl   (%rax)

000000000000f4a0 <mm_alloc>:
    f4a0:	f3 0f 1e fa          	endbr64 
    f4a4:	48 83 ec 10          	sub    $0x10,%rsp
    f4a8:	48 8d 05 b9 2b 02 00 	lea    0x22bb9(%rip),%rax        # 32068 <g_rts_ema_root>
    f4af:	50                   	push   %rax
    f4b0:	e8 db 02 00 00       	call   f790 <mm_alloc_internal>
    f4b5:	48 83 c4 18          	add    $0x18,%rsp
    f4b9:	c3                   	ret    
    f4ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000f4c0 <mm_commit>:
    f4c0:	f3 0f 1e fa          	endbr64 
    f4c4:	48 8d 15 9d 2b 02 00 	lea    0x22b9d(%rip),%rdx        # 32068 <g_rts_ema_root>
    f4cb:	e9 c0 05 00 00       	jmp    fa90 <mm_commit_internal>

000000000000f4d0 <mm_uncommit>:
    f4d0:	f3 0f 1e fa          	endbr64 
    f4d4:	48 8d 15 8d 2b 02 00 	lea    0x22b8d(%rip),%rdx        # 32068 <g_rts_ema_root>
    f4db:	e9 80 06 00 00       	jmp    fb60 <mm_uncommit_internal>

000000000000f4e0 <mm_dealloc>:
    f4e0:	f3 0f 1e fa          	endbr64 
    f4e4:	48 8d 15 7d 2b 02 00 	lea    0x22b7d(%rip),%rdx        # 32068 <g_rts_ema_root>
    f4eb:	e9 30 07 00 00       	jmp    fc20 <mm_dealloc_internal>

000000000000f4f0 <mm_modify_type>:
    f4f0:	f3 0f 1e fa          	endbr64 
    f4f4:	48 8d 0d 6d 2b 02 00 	lea    0x22b6d(%rip),%rcx        # 32068 <g_rts_ema_root>
    f4fb:	e9 e0 07 00 00       	jmp    fce0 <mm_modify_type_internal>

000000000000f500 <mm_modify_permissions>:
    f500:	f3 0f 1e fa          	endbr64 
    f504:	48 8d 0d 5d 2b 02 00 	lea    0x22b5d(%rip),%rcx        # 32068 <g_rts_ema_root>
    f50b:	e9 10 08 00 00       	jmp    fd20 <mm_modify_permissions_internal>

000000000000f510 <sgx_mm_enclave_pfhandler>:
    f510:	f3 0f 1e fa          	endbr64 
    f514:	41 56                	push   %r14
    f516:	41 55                	push   %r13
    f518:	49 89 fd             	mov    %rdi,%r13
    f51b:	41 54                	push   %r12
    f51d:	45 31 e4             	xor    %r12d,%r12d
    f520:	55                   	push   %rbp
    f521:	53                   	push   %rbx
    f522:	48 83 ec 10          	sub    $0x10,%rsp
    f526:	4c 8b 37             	mov    (%rdi),%r14
    f529:	48 8b 3d 60 35 03 00 	mov    0x33560(%rip),%rdi        # 42a90 <mm_lock>
    f530:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    f537:	00 00 
    f539:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    f53e:	31 c0                	xor    %eax,%eax
    f540:	e8 9b ad ff ff       	call   a2e0 <sgx_mm_mutex_lock>
    f545:	85 c0                	test   %eax,%eax
    f547:	74 27                	je     f570 <sgx_mm_enclave_pfhandler+0x60>
    f549:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    f54e:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    f555:	00 00 
    f557:	0f 85 57 01 00 00    	jne    f6b4 <sgx_mm_enclave_pfhandler+0x1a4>
    f55d:	48 83 c4 10          	add    $0x10,%rsp
    f561:	44 89 e0             	mov    %r12d,%eax
    f564:	5b                   	pop    %rbx
    f565:	5d                   	pop    %rbp
    f566:	41 5c                	pop    %r12
    f568:	41 5d                	pop    %r13
    f56a:	41 5e                	pop    %r14
    f56c:	c3                   	ret    
    f56d:	0f 1f 00             	nopl   (%rax)
    f570:	49 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%r14
    f577:	48 8d 3d 82 2a 02 00 	lea    0x22a82(%rip),%rdi        # 32000 <g_user_ema_root>
    f57e:	41 89 c4             	mov    %eax,%r12d
    f581:	4c 89 f6             	mov    %r14,%rsi
    f584:	e8 07 e3 ff ff       	call   d890 <search_ema>
    f589:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    f590:	00 
    f591:	48 89 c5             	mov    %rax,%rbp
    f594:	48 85 c0             	test   %rax,%rax
    f597:	0f 84 bb 00 00 00    	je     f658 <sgx_mm_enclave_pfhandler+0x148>
    f59d:	48 89 e6             	mov    %rsp,%rsi
    f5a0:	48 89 ef             	mov    %rbp,%rdi
    f5a3:	e8 18 e2 ff ff       	call   d7c0 <ema_fault_handler>
    f5a8:	48 89 c3             	mov    %rax,%rbx
    f5ab:	48 85 c0             	test   %rax,%rax
    f5ae:	74 20                	je     f5d0 <sgx_mm_enclave_pfhandler+0xc0>
    f5b0:	48 8b 3d d9 34 03 00 	mov    0x334d9(%rip),%rdi        # 42a90 <mm_lock>
    f5b7:	e8 44 ad ff ff       	call   a300 <sgx_mm_mutex_unlock>
    f5bc:	48 8b 34 24          	mov    (%rsp),%rsi
    f5c0:	4c 89 ef             	mov    %r13,%rdi
    f5c3:	ff d3                	call   *%rbx
    f5c5:	41 89 c4             	mov    %eax,%r12d
    f5c8:	e9 7c ff ff ff       	jmp    f549 <sgx_mm_enclave_pfhandler+0x39>
    f5cd:	0f 1f 00             	nopl   (%rax)
    f5d0:	4c 89 f6             	mov    %r14,%rsi
    f5d3:	48 89 ef             	mov    %rbp,%rdi
    f5d6:	e8 85 e2 ff ff       	call   d860 <ema_page_committed>
    f5db:	84 c0                	test   %al,%al
    f5dd:	74 31                	je     f610 <sgx_mm_enclave_pfhandler+0x100>
    f5df:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    f5e4:	0f 84 8e 00 00 00    	je     f678 <sgx_mm_enclave_pfhandler+0x168>
    f5ea:	48 89 ef             	mov    %rbp,%rdi
    f5ed:	e8 be e1 ff ff       	call   d7b0 <get_ema_si_flags>
    f5f2:	48 d1 e8             	shr    %rax
    f5f5:	49 89 c4             	mov    %rax,%r12
    f5f8:	41 83 e4 01          	and    $0x1,%r12d
    f5fc:	41 f7 dc             	neg    %r12d
    f5ff:	48 8b 3d 8a 34 03 00 	mov    0x3348a(%rip),%rdi        # 42a90 <mm_lock>
    f606:	e8 f5 ac ff ff       	call   a300 <sgx_mm_mutex_unlock>
    f60b:	e9 39 ff ff ff       	jmp    f549 <sgx_mm_enclave_pfhandler+0x39>
    f610:	48 89 ef             	mov    %rbp,%rdi
    f613:	e8 88 e1 ff ff       	call   d7a0 <get_ema_alloc_flags>
    f618:	a8 04                	test   $0x4,%al
    f61a:	0f 84 99 00 00 00    	je     f6b9 <sgx_mm_enclave_pfhandler+0x1a9>
    f620:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    f625:	74 71                	je     f698 <sgx_mm_enclave_pfhandler+0x188>
    f627:	48 89 ef             	mov    %rbp,%rdi
    f62a:	e8 81 e1 ff ff       	call   d7b0 <get_ema_si_flags>
    f62f:	a8 02                	test   $0x2,%al
    f631:	74 cc                	je     f5ff <sgx_mm_enclave_pfhandler+0xef>
    f633:	49 8d 96 00 10 00 00 	lea    0x1000(%r14),%rdx
    f63a:	4c 89 f6             	mov    %r14,%rsi
    f63d:	48 89 ef             	mov    %rbp,%rdi
    f640:	e8 fb ea ff ff       	call   e140 <ema_do_commit>
    f645:	85 c0                	test   %eax,%eax
    f647:	75 70                	jne    f6b9 <sgx_mm_enclave_pfhandler+0x1a9>
    f649:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
    f64f:	eb ae                	jmp    f5ff <sgx_mm_enclave_pfhandler+0xef>
    f651:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f658:	4c 89 f6             	mov    %r14,%rsi
    f65b:	48 8d 3d 06 2a 02 00 	lea    0x22a06(%rip),%rdi        # 32068 <g_rts_ema_root>
    f662:	e8 29 e2 ff ff       	call   d890 <search_ema>
    f667:	48 89 c5             	mov    %rax,%rbp
    f66a:	48 85 c0             	test   %rax,%rax
    f66d:	0f 85 2a ff ff ff    	jne    f59d <sgx_mm_enclave_pfhandler+0x8d>
    f673:	eb 8a                	jmp    f5ff <sgx_mm_enclave_pfhandler+0xef>
    f675:	0f 1f 00             	nopl   (%rax)
    f678:	48 89 ef             	mov    %rbp,%rdi
    f67b:	e8 30 e1 ff ff       	call   d7b0 <get_ema_si_flags>
    f680:	a8 01                	test   $0x1,%al
    f682:	0f 84 77 ff ff ff    	je     f5ff <sgx_mm_enclave_pfhandler+0xef>
    f688:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    f68d:	74 ba                	je     f649 <sgx_mm_enclave_pfhandler+0x139>
    f68f:	e9 56 ff ff ff       	jmp    f5ea <sgx_mm_enclave_pfhandler+0xda>
    f694:	0f 1f 40 00          	nopl   0x0(%rax)
    f698:	48 89 ef             	mov    %rbp,%rdi
    f69b:	e8 10 e1 ff ff       	call   d7b0 <get_ema_si_flags>
    f6a0:	a8 01                	test   $0x1,%al
    f6a2:	0f 84 57 ff ff ff    	je     f5ff <sgx_mm_enclave_pfhandler+0xef>
    f6a8:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    f6ad:	74 84                	je     f633 <sgx_mm_enclave_pfhandler+0x123>
    f6af:	e9 73 ff ff ff       	jmp    f627 <sgx_mm_enclave_pfhandler+0x117>
    f6b4:	e8 87 44 00 00       	call   13b40 <__stack_chk_fail>
    f6b9:	48 8b 3d d0 33 03 00 	mov    0x333d0(%rip),%rdi        # 42a90 <mm_lock>
    f6c0:	e8 3b ac ff ff       	call   a300 <sgx_mm_mutex_unlock>
    f6c5:	e8 6d 66 01 00       	call   25d37 <abort>
    f6ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000f6d0 <mm_modify_type_internal.part.0>:
    f6d0:	41 55                	push   %r13
    f6d2:	41 54                	push   %r12
    f6d4:	41 bc 16 00 00 00    	mov    $0x16,%r12d
    f6da:	55                   	push   %rbp
    f6db:	48 83 ec 20          	sub    $0x20,%rsp
    f6df:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    f6e6:	00 00 
    f6e8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    f6ed:	31 c0                	xor    %eax,%eax
    f6ef:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    f6f6:	00 00 
    f6f8:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    f6ff:	00 00 
    f701:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi
    f707:	75 5e                	jne    f767 <mm_modify_type_internal.part.0+0x97>
    f709:	48 89 fd             	mov    %rdi,%rbp
    f70c:	48 8b 3d 7d 33 03 00 	mov    0x3337d(%rip),%rdi        # 42a90 <mm_lock>
    f713:	49 89 f5             	mov    %rsi,%r13
    f716:	41 bc 0e 00 00 00    	mov    $0xe,%r12d
    f71c:	e8 bf ab ff ff       	call   a2e0 <sgx_mm_mutex_lock>
    f721:	85 c0                	test   %eax,%eax
    f723:	75 42                	jne    f767 <mm_modify_type_internal.part.0+0x97>
    f725:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    f72a:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    f72f:	48 89 ee             	mov    %rbp,%rsi
    f732:	4c 89 ef             	mov    %r13,%rdi
    f735:	48 8d 95 00 10 00 00 	lea    0x1000(%rbp),%rdx
    f73c:	41 bc 16 00 00 00    	mov    $0x16,%r12d
    f742:	e8 79 e1 ff ff       	call   d8c0 <search_ema_range>
    f747:	85 c0                	test   %eax,%eax
    f749:	78 10                	js     f75b <mm_modify_type_internal.part.0+0x8b>
    f74b:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    f750:	48 89 ee             	mov    %rbp,%rsi
    f753:	e8 a8 eb ff ff       	call   e300 <ema_change_to_tcs>
    f758:	41 89 c4             	mov    %eax,%r12d
    f75b:	48 8b 3d 2e 33 03 00 	mov    0x3332e(%rip),%rdi        # 42a90 <mm_lock>
    f762:	e8 99 ab ff ff       	call   a300 <sgx_mm_mutex_unlock>
    f767:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    f76c:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    f773:	00 00 
    f775:	75 0d                	jne    f784 <mm_modify_type_internal.part.0+0xb4>
    f777:	48 83 c4 20          	add    $0x20,%rsp
    f77b:	44 89 e0             	mov    %r12d,%eax
    f77e:	5d                   	pop    %rbp
    f77f:	41 5c                	pop    %r12
    f781:	41 5d                	pop    %r13
    f783:	c3                   	ret    
    f784:	e8 b7 43 00 00       	call   13b40 <__stack_chk_fail>
    f789:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000f790 <mm_alloc_internal>:
    f790:	f3 0f 1e fa          	endbr64 
    f794:	41 57                	push   %r15
    f796:	41 56                	push   %r14
    f798:	41 55                	push   %r13
    f79a:	41 54                	push   %r12
    f79c:	55                   	push   %rbp
    f79d:	53                   	push   %rbx
    f79e:	48 83 ec 68          	sub    $0x68,%rsp
    f7a2:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    f7a7:	4c 8b bc 24 a0 00 00 	mov    0xa0(%rsp),%r15
    f7ae:	00 
    f7af:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    f7b6:	00 00 
    f7b8:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    f7bd:	31 c0                	xor    %eax,%eax
    f7bf:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    f7c6:	00 00 
    f7c8:	f6 c2 07             	test   $0x7,%dl
    f7cb:	74 53                	je     f820 <mm_alloc_internal+0x90>
    f7cd:	89 d3                	mov    %edx,%ebx
    f7cf:	81 e2 00 ff 00 00    	and    $0xff00,%edx
    f7d5:	f6 c7 f8             	test   $0xf8,%bh
    f7d8:	75 46                	jne    f820 <mm_alloc_internal+0x90>
    f7da:	48 85 d2             	test   %rdx,%rdx
    f7dd:	b8 00 02 00 00       	mov    $0x200,%eax
    f7e2:	49 89 f5             	mov    %rsi,%r13
    f7e5:	48 0f 44 d0          	cmove  %rax,%rdx
    f7e9:	f7 c6 ff 0f 00 00    	test   $0xfff,%esi
    f7ef:	75 2f                	jne    f820 <mm_alloc_internal+0x90>
    f7f1:	48 89 cd             	mov    %rcx,%rbp
    f7f4:	89 d9                	mov    %ebx,%ecx
    f7f6:	4d 89 c4             	mov    %r8,%r12
    f7f9:	c1 e9 18             	shr    $0x18,%ecx
    f7fc:	74 52                	je     f850 <mm_alloc_internal+0xc0>
    f7fe:	83 f9 0b             	cmp    $0xb,%ecx
    f801:	76 1d                	jbe    f820 <mm_alloc_internal+0x90>
    f803:	b8 01 00 00 00       	mov    $0x1,%eax
    f808:	49 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%r14
    f80f:	48 d3 e0             	shl    %cl,%rax
    f812:	49 d3 e6             	shl    %cl,%r14
    f815:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    f81a:	49 f7 d6             	not    %r14
    f81d:	eb 40                	jmp    f85f <mm_alloc_internal+0xcf>
    f81f:	90                   	nop
    f820:	41 b9 16 00 00 00    	mov    $0x16,%r9d
    f826:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    f82b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    f832:	00 00 
    f834:	0f 85 1c 02 00 00    	jne    fa56 <mm_alloc_internal+0x2c6>
    f83a:	48 83 c4 68          	add    $0x68,%rsp
    f83e:	44 89 c8             	mov    %r9d,%eax
    f841:	5b                   	pop    %rbx
    f842:	5d                   	pop    %rbp
    f843:	41 5c                	pop    %r12
    f845:	41 5d                	pop    %r13
    f847:	41 5e                	pop    %r14
    f849:	41 5f                	pop    %r15
    f84b:	c3                   	ret    
    f84c:	0f 1f 40 00          	nopl   0x0(%rax)
    f850:	48 c7 44 24 10 00 10 	movq   $0x1000,0x10(%rsp)
    f857:	00 00 
    f859:	41 be ff 0f 00 00    	mov    $0xfff,%r14d
    f85f:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
    f864:	49 21 fe             	and    %rdi,%r14
    f867:	75 b7                	jne    f820 <mm_alloc_internal+0x90>
    f869:	48 85 ff             	test   %rdi,%rdi
    f86c:	74 1c                	je     f88a <mm_alloc_internal+0xfa>
    f86e:	4c 89 ee             	mov    %r13,%rsi
    f871:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    f876:	e8 95 aa ff ff       	call   a310 <sgx_mm_is_within_enclave>
    f87b:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    f880:	41 b9 0d 00 00 00    	mov    $0xd,%r9d
    f886:	84 c0                	test   %al,%al
    f888:	74 9c                	je     f826 <mm_alloc_internal+0x96>
    f88a:	48 8b 3d ff 31 03 00 	mov    0x331ff(%rip),%rdi        # 42a90 <mm_lock>
    f891:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    f896:	e8 45 aa ff ff       	call   a2e0 <sgx_mm_mutex_lock>
    f89b:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    f8a0:	41 b9 0e 00 00 00    	mov    $0xe,%r9d
    f8a6:	85 c0                	test   %eax,%eax
    f8a8:	0f 85 78 ff ff ff    	jne    f826 <mm_alloc_internal+0x96>
    f8ae:	4c 8b 54 24 38       	mov    0x38(%rsp),%r10
    f8b3:	48 83 ca 03          	or     $0x3,%rdx
    f8b7:	0f b6 c3             	movzbl %bl,%eax
    f8ba:	f6 c3 01             	test   $0x1,%bl
    f8bd:	89 44 24 18          	mov    %eax,0x18(%rsp)
    f8c1:	4c 0f 44 f2          	cmove  %rdx,%r14
    f8c5:	4d 85 d2             	test   %r10,%r10
    f8c8:	75 46                	jne    f910 <mm_alloc_internal+0x180>
    f8ca:	48 8d 5c 24 40       	lea    0x40(%rsp),%rbx
    f8cf:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    f8d4:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    f8d9:	49 89 d8             	mov    %rbx,%r8
    f8dc:	4c 89 ee             	mov    %r13,%rsi
    f8df:	4c 89 ff             	mov    %r15,%rdi
    f8e2:	e8 79 e2 ff ff       	call   db60 <find_free_region>
    f8e7:	84 c0                	test   %al,%al
    f8e9:	0f 85 01 01 00 00    	jne    f9f0 <mm_alloc_internal+0x260>
    f8ef:	41 b9 0c 00 00 00    	mov    $0xc,%r9d
    f8f5:	48 8b 3d 94 31 03 00 	mov    0x33194(%rip),%rdi        # 42a90 <mm_lock>
    f8fc:	44 89 4c 24 08       	mov    %r9d,0x8(%rsp)
    f901:	e8 fa a9 ff ff       	call   a300 <sgx_mm_mutex_unlock>
    f906:	44 8b 4c 24 08       	mov    0x8(%rsp),%r9d
    f90b:	e9 16 ff ff ff       	jmp    f826 <mm_alloc_internal+0x96>
    f910:	83 e3 40             	and    $0x40,%ebx
    f913:	48 8d 4c 24 48       	lea    0x48(%rsp),%rcx
    f918:	4c 8d 44 24 50       	lea    0x50(%rsp),%r8
    f91d:	4c 89 d6             	mov    %r10,%rsi
    f920:	89 5c 24 24          	mov    %ebx,0x24(%rsp)
    f924:	4b 8d 1c 2a          	lea    (%r10,%r13,1),%rbx
    f928:	4c 89 ff             	mov    %r15,%rdi
    f92b:	48 89 da             	mov    %rbx,%rdx
    f92e:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
    f933:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
    f93a:	00 00 
    f93c:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
    f943:	00 00 
    f945:	e8 76 df ff ff       	call   d8c0 <search_ema_range>
    f94a:	85 c0                	test   %eax,%eax
    f94c:	75 62                	jne    f9b0 <mm_alloc_internal+0x220>
    f94e:	41 54                	push   %r12
    f950:	48 89 d9             	mov    %rbx,%rcx
    f953:	4d 89 f1             	mov    %r14,%r9
    f956:	55                   	push   %rbp
    f957:	4c 8b 54 24 38       	mov    0x38(%rsp),%r10
    f95c:	44 8b 44 24 28       	mov    0x28(%rsp),%r8d
    f961:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
    f966:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
    f96b:	4c 89 d2             	mov    %r10,%rdx
    f96e:	e8 8d f0 ff ff       	call   ea00 <ema_realloc_from_reserve_range>
    f973:	5f                   	pop    %rdi
    f974:	41 58                	pop    %r8
    f976:	48 89 c3             	mov    %rax,%rbx
    f979:	48 85 c0             	test   %rax,%rax
    f97c:	0f 84 a6 00 00 00    	je     fa28 <mm_alloc_internal+0x298>
    f982:	48 89 df             	mov    %rbx,%rdi
    f985:	e8 e6 f1 ff ff       	call   eb70 <ema_do_alloc>
    f98a:	41 89 c1             	mov    %eax,%r9d
    f98d:	85 c0                	test   %eax,%eax
    f98f:	0f 85 ab 00 00 00    	jne    fa40 <mm_alloc_internal+0x2b0>
    f995:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    f99a:	48 85 f6             	test   %rsi,%rsi
    f99d:	0f 84 52 ff ff ff    	je     f8f5 <mm_alloc_internal+0x165>
    f9a3:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    f9a8:	48 89 06             	mov    %rax,(%rsi)
    f9ab:	e9 45 ff ff ff       	jmp    f8f5 <mm_alloc_internal+0x165>
    f9b0:	48 8d 5c 24 40       	lea    0x40(%rsp),%rbx
    f9b5:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    f9ba:	4c 89 ea             	mov    %r13,%rdx
    f9bd:	4c 89 ff             	mov    %r15,%rdi
    f9c0:	48 89 d9             	mov    %rbx,%rcx
    f9c3:	e8 a8 e4 ff ff       	call   de70 <find_free_region_at>
    f9c8:	3c 01                	cmp    $0x1,%al
    f9ca:	74 24                	je     f9f0 <mm_alloc_internal+0x260>
    f9cc:	8b 4c 24 24          	mov    0x24(%rsp),%ecx
    f9d0:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    f9d6:	85 c9                	test   %ecx,%ecx
    f9d8:	0f 85 17 ff ff ff    	jne    f8f5 <mm_alloc_internal+0x165>
    f9de:	84 c0                	test   %al,%al
    f9e0:	0f 84 e9 fe ff ff    	je     f8cf <mm_alloc_internal+0x13f>
    f9e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f9ed:	00 00 00 
    f9f0:	48 83 ec 08          	sub    $0x8,%rsp
    f9f4:	4d 89 e1             	mov    %r12,%r9
    f9f7:	49 89 e8             	mov    %rbp,%r8
    f9fa:	4c 89 f1             	mov    %r14,%rcx
    f9fd:	ff 74 24 48          	push   0x48(%rsp)
    fa01:	8b 54 24 28          	mov    0x28(%rsp),%edx
    fa05:	4c 89 ee             	mov    %r13,%rsi
    fa08:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
    fa0d:	e8 2e e5 ff ff       	call   df40 <ema_new>
    fa12:	48 89 c3             	mov    %rax,%rbx
    fa15:	58                   	pop    %rax
    fa16:	5a                   	pop    %rdx
    fa17:	48 85 db             	test   %rbx,%rbx
    fa1a:	0f 85 62 ff ff ff    	jne    f982 <mm_alloc_internal+0x1f2>
    fa20:	e9 ca fe ff ff       	jmp    f8ef <mm_alloc_internal+0x15f>
    fa25:	0f 1f 00             	nopl   (%rax)
    fa28:	8b 74 24 24          	mov    0x24(%rsp),%esi
    fa2c:	41 b9 11 00 00 00    	mov    $0x11,%r9d
    fa32:	85 f6                	test   %esi,%esi
    fa34:	0f 84 90 fe ff ff    	je     f8ca <mm_alloc_internal+0x13a>
    fa3a:	e9 b6 fe ff ff       	jmp    f8f5 <mm_alloc_internal+0x165>
    fa3f:	90                   	nop
    fa40:	48 89 df             	mov    %rbx,%rdi
    fa43:	89 44 24 08          	mov    %eax,0x8(%rsp)
    fa47:	e8 e4 e5 ff ff       	call   e030 <ema_destroy>
    fa4c:	44 8b 4c 24 08       	mov    0x8(%rsp),%r9d
    fa51:	e9 9f fe ff ff       	jmp    f8f5 <mm_alloc_internal+0x165>
    fa56:	e8 e5 40 00 00       	call   13b40 <__stack_chk_fail>
    fa5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fa60 <sgx_mm_alloc>:
    fa60:	f3 0f 1e fa          	endbr64 
    fa64:	f6 c2 80             	test   $0x80,%dl
    fa67:	75 17                	jne    fa80 <sgx_mm_alloc+0x20>
    fa69:	48 83 ec 10          	sub    $0x10,%rsp
    fa6d:	48 8d 05 8c 25 02 00 	lea    0x2258c(%rip),%rax        # 32000 <g_user_ema_root>
    fa74:	50                   	push   %rax
    fa75:	e8 16 fd ff ff       	call   f790 <mm_alloc_internal>
    fa7a:	48 83 c4 18          	add    $0x18,%rsp
    fa7e:	c3                   	ret    
    fa7f:	90                   	nop
    fa80:	b8 16 00 00 00       	mov    $0x16,%eax
    fa85:	c3                   	ret    
    fa86:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    fa8d:	00 00 00 

000000000000fa90 <mm_commit_internal>:
    fa90:	f3 0f 1e fa          	endbr64 
    fa94:	41 56                	push   %r14
    fa96:	41 be 0e 00 00 00    	mov    $0xe,%r14d
    fa9c:	41 55                	push   %r13
    fa9e:	49 89 fd             	mov    %rdi,%r13
    faa1:	41 54                	push   %r12
    faa3:	49 89 f4             	mov    %rsi,%r12
    faa6:	55                   	push   %rbp
    faa7:	48 89 d5             	mov    %rdx,%rbp
    faaa:	48 83 ec 28          	sub    $0x28,%rsp
    faae:	48 8b 3d db 2f 03 00 	mov    0x32fdb(%rip),%rdi        # 42a90 <mm_lock>
    fab5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    fabc:	00 00 
    fabe:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    fac3:	31 c0                	xor    %eax,%eax
    fac5:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    facc:	00 00 
    face:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    fad5:	00 00 
    fad7:	e8 04 a8 ff ff       	call   a2e0 <sgx_mm_mutex_lock>
    fadc:	85 c0                	test   %eax,%eax
    fade:	75 49                	jne    fb29 <mm_commit_internal+0x99>
    fae0:	4d 01 ec             	add    %r13,%r12
    fae3:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    fae8:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    faed:	4c 89 ee             	mov    %r13,%rsi
    faf0:	4c 89 e2             	mov    %r12,%rdx
    faf3:	48 89 ef             	mov    %rbp,%rdi
    faf6:	41 be 16 00 00 00    	mov    $0x16,%r14d
    fafc:	e8 bf dd ff ff       	call   d8c0 <search_ema_range>
    fb01:	85 c0                	test   %eax,%eax
    fb03:	78 18                	js     fb1d <mm_commit_internal+0x8d>
    fb05:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    fb0a:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    fb0f:	4c 89 e1             	mov    %r12,%rcx
    fb12:	4c 89 ea             	mov    %r13,%rdx
    fb15:	e8 16 e7 ff ff       	call   e230 <ema_do_commit_loop>
    fb1a:	41 89 c6             	mov    %eax,%r14d
    fb1d:	48 8b 3d 6c 2f 03 00 	mov    0x32f6c(%rip),%rdi        # 42a90 <mm_lock>
    fb24:	e8 d7 a7 ff ff       	call   a300 <sgx_mm_mutex_unlock>
    fb29:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    fb2e:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    fb35:	00 00 
    fb37:	75 0f                	jne    fb48 <mm_commit_internal+0xb8>
    fb39:	48 83 c4 28          	add    $0x28,%rsp
    fb3d:	44 89 f0             	mov    %r14d,%eax
    fb40:	5d                   	pop    %rbp
    fb41:	41 5c                	pop    %r12
    fb43:	41 5d                	pop    %r13
    fb45:	41 5e                	pop    %r14
    fb47:	c3                   	ret    
    fb48:	e8 f3 3f 00 00       	call   13b40 <__stack_chk_fail>
    fb4d:	0f 1f 00             	nopl   (%rax)

000000000000fb50 <sgx_mm_commit>:
    fb50:	f3 0f 1e fa          	endbr64 
    fb54:	48 8d 15 a5 24 02 00 	lea    0x224a5(%rip),%rdx        # 32000 <g_user_ema_root>
    fb5b:	e9 30 ff ff ff       	jmp    fa90 <mm_commit_internal>

000000000000fb60 <mm_uncommit_internal>:
    fb60:	f3 0f 1e fa          	endbr64 
    fb64:	41 56                	push   %r14
    fb66:	41 be 0e 00 00 00    	mov    $0xe,%r14d
    fb6c:	41 55                	push   %r13
    fb6e:	49 89 fd             	mov    %rdi,%r13
    fb71:	41 54                	push   %r12
    fb73:	49 89 f4             	mov    %rsi,%r12
    fb76:	55                   	push   %rbp
    fb77:	48 89 d5             	mov    %rdx,%rbp
    fb7a:	48 83 ec 28          	sub    $0x28,%rsp
    fb7e:	48 8b 3d 0b 2f 03 00 	mov    0x32f0b(%rip),%rdi        # 42a90 <mm_lock>
    fb85:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    fb8c:	00 00 
    fb8e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    fb93:	31 c0                	xor    %eax,%eax
    fb95:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    fb9c:	00 00 
    fb9e:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    fba5:	00 00 
    fba7:	e8 34 a7 ff ff       	call   a2e0 <sgx_mm_mutex_lock>
    fbac:	85 c0                	test   %eax,%eax
    fbae:	75 49                	jne    fbf9 <mm_uncommit_internal+0x99>
    fbb0:	4d 01 ec             	add    %r13,%r12
    fbb3:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    fbb8:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    fbbd:	4c 89 ee             	mov    %r13,%rsi
    fbc0:	4c 89 e2             	mov    %r12,%rdx
    fbc3:	48 89 ef             	mov    %rbp,%rdi
    fbc6:	41 be 16 00 00 00    	mov    $0x16,%r14d
    fbcc:	e8 ef dc ff ff       	call   d8c0 <search_ema_range>
    fbd1:	85 c0                	test   %eax,%eax
    fbd3:	78 18                	js     fbed <mm_uncommit_internal+0x8d>
    fbd5:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    fbda:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    fbdf:	4c 89 e1             	mov    %r12,%rcx
    fbe2:	4c 89 ea             	mov    %r13,%rdx
    fbe5:	e8 06 eb ff ff       	call   e6f0 <ema_do_uncommit_loop>
    fbea:	41 89 c6             	mov    %eax,%r14d
    fbed:	48 8b 3d 9c 2e 03 00 	mov    0x32e9c(%rip),%rdi        # 42a90 <mm_lock>
    fbf4:	e8 07 a7 ff ff       	call   a300 <sgx_mm_mutex_unlock>
    fbf9:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    fbfe:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    fc05:	00 00 
    fc07:	75 0f                	jne    fc18 <mm_uncommit_internal+0xb8>
    fc09:	48 83 c4 28          	add    $0x28,%rsp
    fc0d:	44 89 f0             	mov    %r14d,%eax
    fc10:	5d                   	pop    %rbp
    fc11:	41 5c                	pop    %r12
    fc13:	41 5d                	pop    %r13
    fc15:	41 5e                	pop    %r14
    fc17:	c3                   	ret    
    fc18:	e8 23 3f 00 00       	call   13b40 <__stack_chk_fail>
    fc1d:	0f 1f 00             	nopl   (%rax)

000000000000fc20 <mm_dealloc_internal>:
    fc20:	f3 0f 1e fa          	endbr64 
    fc24:	41 56                	push   %r14
    fc26:	41 be 0e 00 00 00    	mov    $0xe,%r14d
    fc2c:	41 55                	push   %r13
    fc2e:	49 89 fd             	mov    %rdi,%r13
    fc31:	41 54                	push   %r12
    fc33:	49 89 f4             	mov    %rsi,%r12
    fc36:	55                   	push   %rbp
    fc37:	48 89 d5             	mov    %rdx,%rbp
    fc3a:	48 83 ec 28          	sub    $0x28,%rsp
    fc3e:	48 8b 3d 4b 2e 03 00 	mov    0x32e4b(%rip),%rdi        # 42a90 <mm_lock>
    fc45:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    fc4c:	00 00 
    fc4e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    fc53:	31 c0                	xor    %eax,%eax
    fc55:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    fc5c:	00 00 
    fc5e:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    fc65:	00 00 
    fc67:	e8 74 a6 ff ff       	call   a2e0 <sgx_mm_mutex_lock>
    fc6c:	85 c0                	test   %eax,%eax
    fc6e:	75 49                	jne    fcb9 <mm_dealloc_internal+0x99>
    fc70:	4d 01 ec             	add    %r13,%r12
    fc73:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    fc78:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    fc7d:	4c 89 ee             	mov    %r13,%rsi
    fc80:	4c 89 e2             	mov    %r12,%rdx
    fc83:	48 89 ef             	mov    %rbp,%rdi
    fc86:	41 be 16 00 00 00    	mov    $0x16,%r14d
    fc8c:	e8 2f dc ff ff       	call   d8c0 <search_ema_range>
    fc91:	85 c0                	test   %eax,%eax
    fc93:	78 18                	js     fcad <mm_dealloc_internal+0x8d>
    fc95:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    fc9a:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    fc9f:	4c 89 e1             	mov    %r12,%rcx
    fca2:	4c 89 ea             	mov    %r13,%rdx
    fca5:	e8 f6 eb ff ff       	call   e8a0 <ema_do_dealloc_loop>
    fcaa:	41 89 c6             	mov    %eax,%r14d
    fcad:	48 8b 3d dc 2d 03 00 	mov    0x32ddc(%rip),%rdi        # 42a90 <mm_lock>
    fcb4:	e8 47 a6 ff ff       	call   a300 <sgx_mm_mutex_unlock>
    fcb9:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    fcbe:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    fcc5:	00 00 
    fcc7:	75 0f                	jne    fcd8 <mm_dealloc_internal+0xb8>
    fcc9:	48 83 c4 28          	add    $0x28,%rsp
    fccd:	44 89 f0             	mov    %r14d,%eax
    fcd0:	5d                   	pop    %rbp
    fcd1:	41 5c                	pop    %r12
    fcd3:	41 5d                	pop    %r13
    fcd5:	41 5e                	pop    %r14
    fcd7:	c3                   	ret    
    fcd8:	e8 63 3e 00 00       	call   13b40 <__stack_chk_fail>
    fcdd:	0f 1f 00             	nopl   (%rax)

000000000000fce0 <mm_modify_type_internal>:
    fce0:	f3 0f 1e fa          	endbr64 
    fce4:	81 fa 00 01 00 00    	cmp    $0x100,%edx
    fcea:	75 14                	jne    fd00 <mm_modify_type_internal+0x20>
    fcec:	48 81 fe 00 10 00 00 	cmp    $0x1000,%rsi
    fcf3:	75 1b                	jne    fd10 <mm_modify_type_internal+0x30>
    fcf5:	48 89 ce             	mov    %rcx,%rsi
    fcf8:	e9 d3 f9 ff ff       	jmp    f6d0 <mm_modify_type_internal.part.0>
    fcfd:	0f 1f 00             	nopl   (%rax)
    fd00:	b8 01 00 00 00       	mov    $0x1,%eax
    fd05:	c3                   	ret    
    fd06:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    fd0d:	00 00 00 
    fd10:	b8 16 00 00 00       	mov    $0x16,%eax
    fd15:	c3                   	ret    
    fd16:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    fd1d:	00 00 00 

000000000000fd20 <mm_modify_permissions_internal>:
    fd20:	f3 0f 1e fa          	endbr64 
    fd24:	41 57                	push   %r15
    fd26:	41 56                	push   %r14
    fd28:	41 be 16 00 00 00    	mov    $0x16,%r14d
    fd2e:	41 55                	push   %r13
    fd30:	41 54                	push   %r12
    fd32:	55                   	push   %rbp
    fd33:	48 83 ec 20          	sub    $0x20,%rsp
    fd37:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    fd3e:	00 00 
    fd40:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    fd45:	31 c0                	xor    %eax,%eax
    fd47:	48 85 f6             	test   %rsi,%rsi
    fd4a:	0f 84 9b 00 00 00    	je     fdeb <mm_modify_permissions_internal+0xcb>
    fd50:	48 89 f8             	mov    %rdi,%rax
    fd53:	49 89 fd             	mov    %rdi,%r13
    fd56:	49 89 f4             	mov    %rsi,%r12
    fd59:	48 09 f0             	or     %rsi,%rax
    fd5c:	a9 ff 0f 00 00       	test   $0xfff,%eax
    fd61:	0f 85 84 00 00 00    	jne    fdeb <mm_modify_permissions_internal+0xcb>
    fd67:	89 d0                	mov    %edx,%eax
    fd69:	41 89 d7             	mov    %edx,%r15d
    fd6c:	83 e0 05             	and    $0x5,%eax
    fd6f:	83 f8 04             	cmp    $0x4,%eax
    fd72:	74 77                	je     fdeb <mm_modify_permissions_internal+0xcb>
    fd74:	48 8b 3d 15 2d 03 00 	mov    0x32d15(%rip),%rdi        # 42a90 <mm_lock>
    fd7b:	48 89 cd             	mov    %rcx,%rbp
    fd7e:	41 be 0e 00 00 00    	mov    $0xe,%r14d
    fd84:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    fd8b:	00 00 
    fd8d:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    fd94:	00 00 
    fd96:	e8 45 a5 ff ff       	call   a2e0 <sgx_mm_mutex_lock>
    fd9b:	85 c0                	test   %eax,%eax
    fd9d:	75 4c                	jne    fdeb <mm_modify_permissions_internal+0xcb>
    fd9f:	4d 01 ec             	add    %r13,%r12
    fda2:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    fda7:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    fdac:	4c 89 ee             	mov    %r13,%rsi
    fdaf:	4c 89 e2             	mov    %r12,%rdx
    fdb2:	48 89 ef             	mov    %rbp,%rdi
    fdb5:	41 be 16 00 00 00    	mov    $0x16,%r14d
    fdbb:	e8 00 db ff ff       	call   d8c0 <search_ema_range>
    fdc0:	85 c0                	test   %eax,%eax
    fdc2:	78 1b                	js     fddf <mm_modify_permissions_internal+0xbf>
    fdc4:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    fdc9:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    fdce:	45 89 f8             	mov    %r15d,%r8d
    fdd1:	4c 89 e1             	mov    %r12,%rcx
    fdd4:	4c 89 ea             	mov    %r13,%rdx
    fdd7:	e8 14 eb ff ff       	call   e8f0 <ema_modify_permissions_loop>
    fddc:	41 89 c6             	mov    %eax,%r14d
    fddf:	48 8b 3d aa 2c 03 00 	mov    0x32caa(%rip),%rdi        # 42a90 <mm_lock>
    fde6:	e8 15 a5 ff ff       	call   a300 <sgx_mm_mutex_unlock>
    fdeb:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    fdf0:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    fdf7:	00 00 
    fdf9:	75 11                	jne    fe0c <mm_modify_permissions_internal+0xec>
    fdfb:	48 83 c4 20          	add    $0x20,%rsp
    fdff:	44 89 f0             	mov    %r14d,%eax
    fe02:	5d                   	pop    %rbp
    fe03:	41 5c                	pop    %r12
    fe05:	41 5d                	pop    %r13
    fe07:	41 5e                	pop    %r14
    fe09:	41 5f                	pop    %r15
    fe0b:	c3                   	ret    
    fe0c:	e8 2f 3d 00 00       	call   13b40 <__stack_chk_fail>
    fe11:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    fe18:	00 00 00 
    fe1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fe20 <sgx_mm_init>:
    fe20:	f3 0f 1e fa          	endbr64 
    fe24:	55                   	push   %rbp
    fe25:	48 89 fd             	mov    %rdi,%rbp
    fe28:	53                   	push   %rbx
    fe29:	48 89 f3             	mov    %rsi,%rbx
    fe2c:	48 83 ec 08          	sub    $0x8,%rsp
    fe30:	e8 6b a4 ff ff       	call   a2a0 <sgx_mm_mutex_create>
    fe35:	48 89 05 54 2c 03 00 	mov    %rax,0x32c54(%rip)        # 42a90 <mm_lock>
    fe3c:	48 85 c0             	test   %rax,%rax
    fe3f:	74 2f                	je     fe70 <sgx_mm_init+0x50>
    fe41:	48 8d 3d c8 f6 ff ff 	lea    -0x938(%rip),%rdi        # f510 <sgx_mm_enclave_pfhandler>
    fe48:	48 89 2d 39 2c 03 00 	mov    %rbp,0x32c39(%rip)        # 42a88 <mm_user_base>
    fe4f:	48 89 1d 2a 2c 03 00 	mov    %rbx,0x32c2a(%rip)        # 42a80 <mm_user_end>
    fe56:	e8 15 a4 ff ff       	call   a270 <sgx_mm_register_pfhandler>
    fe5b:	41 89 c0             	mov    %eax,%r8d
    fe5e:	31 c0                	xor    %eax,%eax
    fe60:	45 84 c0             	test   %r8b,%r8b
    fe63:	74 0b                	je     fe70 <sgx_mm_init+0x50>
    fe65:	48 83 c4 08          	add    $0x8,%rsp
    fe69:	5b                   	pop    %rbx
    fe6a:	5d                   	pop    %rbp
    fe6b:	c3                   	ret    
    fe6c:	0f 1f 40 00          	nopl   0x0(%rax)
    fe70:	48 83 c4 08          	add    $0x8,%rsp
    fe74:	b8 0e 00 00 00       	mov    $0xe,%eax
    fe79:	5b                   	pop    %rbx
    fe7a:	5d                   	pop    %rbp
    fe7b:	c3                   	ret    
    fe7c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000fe80 <alloca>:
    fe80:	f3 0f 1e fa          	endbr64 
    fe84:	5a                   	pop    %rdx
    fe85:	48 89 e1             	mov    %rsp,%rcx
    fe88:	48 83 c7 0f          	add    $0xf,%rdi
    fe8c:	48 83 e7 f0          	and    $0xfffffffffffffff0,%rdi
    fe90:	48 29 fc             	sub    %rdi,%rsp
    fe93:	48 89 e0             	mov    %rsp,%rax
    fe96:	3e ff e2             	notrack jmp *%rdx
    fe99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000fea0 <__assert>:
    fea0:	f3 0f 1e fa          	endbr64 
    fea4:	50                   	push   %rax
    fea5:	58                   	pop    %rax
    fea6:	48 83 ec 08          	sub    $0x8,%rsp
    feaa:	e8 88 5e 01 00       	call   25d37 <abort>
    feaf:	90                   	nop

000000000000feb0 <heap_init>:
    feb0:	f3 0f 1e fa          	endbr64 
    feb4:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    feba:	48 85 ff             	test   %rdi,%rdi
    febd:	75 09                	jne    fec8 <heap_init+0x18>
    febf:	44 89 c0             	mov    %r8d,%eax
    fec2:	c3                   	ret    
    fec3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    fec8:	48 89 f0             	mov    %rsi,%rax
    fecb:	49 89 f9             	mov    %rdi,%r9
    fece:	48 09 d0             	or     %rdx,%rax
    fed1:	41 81 e1 ff 0f 00 00 	and    $0xfff,%r9d
    fed8:	25 ff 0f 00 00       	and    $0xfff,%eax
    fedd:	48 0b 05 2c fe 01 00 	or     0x1fe2c(%rip),%rax        # 2fd10 <heap_base>
    fee4:	4c 09 c8             	or     %r9,%rax
    fee7:	75 d6                	jne    febf <heap_init+0xf>
    fee9:	45 31 c0             	xor    %r8d,%r8d
    feec:	48 89 3d 1d fe 01 00 	mov    %rdi,0x1fe1d(%rip)        # 2fd10 <heap_base>
    fef3:	48 89 35 0e fe 01 00 	mov    %rsi,0x1fe0e(%rip)        # 2fd08 <heap_size>
    fefa:	44 89 c0             	mov    %r8d,%eax
    fefd:	48 89 15 f4 fd 01 00 	mov    %rdx,0x1fdf4(%rip)        # 2fcf8 <heap_min_size>
    ff04:	89 0d f6 fd 01 00    	mov    %ecx,0x1fdf6(%rip)        # 2fd00 <is_edmm_supported>
    ff0a:	c3                   	ret    
    ff0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ff10 <sbrk>:
    ff10:	f3 0f 1e fa          	endbr64 
    ff14:	41 54                	push   %r12
    ff16:	53                   	push   %rbx
    ff17:	48 83 ec 08          	sub    $0x8,%rsp
    ff1b:	48 8b 05 ee fd 01 00 	mov    0x1fdee(%rip),%rax        # 2fd10 <heap_base>
    ff22:	48 85 c0             	test   %rax,%rax
    ff25:	0f 84 fd 00 00 00    	je     10028 <sbrk+0x118>
    ff2b:	48 8b 1d 66 2b 03 00 	mov    0x32b66(%rip),%rbx        # 42a98 <heap_used.2566>
    ff32:	48 85 ff             	test   %rdi,%rdi
    ff35:	0f 88 8d 00 00 00    	js     ffc8 <sbrk+0xb8>
    ff3b:	48 89 fa             	mov    %rdi,%rdx
    ff3e:	49 c7 c4 ff ff ff ff 	mov    $0xffffffffffffffff,%r12
    ff45:	48 f7 d2             	not    %rdx
    ff48:	48 39 da             	cmp    %rbx,%rdx
    ff4b:	72 6d                	jb     ffba <sbrk+0xaa>
    ff4d:	48 8d 14 1f          	lea    (%rdi,%rbx,1),%rdx
    ff51:	48 3b 15 b0 fd 01 00 	cmp    0x1fdb0(%rip),%rdx        # 2fd08 <heap_size>
    ff58:	77 60                	ja     ffba <sbrk+0xaa>
    ff5a:	4c 8d 24 18          	lea    (%rax,%rbx,1),%r12
    ff5e:	48 85 ff             	test   %rdi,%rdi
    ff61:	74 57                	je     ffba <sbrk+0xaa>
    ff63:	48 39 15 36 2b 03 00 	cmp    %rdx,0x32b36(%rip)        # 42aa0 <g_peak_heap_used>
    ff6a:	48 89 d1             	mov    %rdx,%rcx
    ff6d:	48 0f 43 0d 2b 2b 03 	cmovae 0x32b2b(%rip),%rcx        # 42aa0 <g_peak_heap_used>
    ff74:	00 
    ff75:	48 89 15 1c 2b 03 00 	mov    %rdx,0x32b1c(%rip)        # 42a98 <heap_used.2566>
    ff7c:	48 89 0d 1d 2b 03 00 	mov    %rcx,0x32b1d(%rip)        # 42aa0 <g_peak_heap_used>
    ff83:	8b 0d 77 fd 01 00    	mov    0x1fd77(%rip),%ecx        # 2fd00 <is_edmm_supported>
    ff89:	85 c9                	test   %ecx,%ecx
    ff8b:	74 2d                	je     ffba <sbrk+0xaa>
    ff8d:	48 8b 0d 64 fd 01 00 	mov    0x1fd64(%rip),%rcx        # 2fcf8 <heap_min_size>
    ff94:	48 39 ca             	cmp    %rcx,%rdx
    ff97:	76 21                	jbe    ffba <sbrk+0xaa>
    ff99:	4d 89 e0             	mov    %r12,%r8
    ff9c:	48 39 d9             	cmp    %rbx,%rcx
    ff9f:	72 0a                	jb     ffab <sbrk+0x9b>
    ffa1:	48 29 ca             	sub    %rcx,%rdx
    ffa4:	4c 8d 04 08          	lea    (%rax,%rcx,1),%r8
    ffa8:	48 89 d7             	mov    %rdx,%rdi
    ffab:	48 89 fe             	mov    %rdi,%rsi
    ffae:	4c 89 c7             	mov    %r8,%rdi
    ffb1:	e8 0a f5 ff ff       	call   f4c0 <mm_commit>
    ffb6:	85 c0                	test   %eax,%eax
    ffb8:	75 5a                	jne    10014 <sbrk+0x104>
    ffba:	48 83 c4 08          	add    $0x8,%rsp
    ffbe:	4c 89 e0             	mov    %r12,%rax
    ffc1:	5b                   	pop    %rbx
    ffc2:	41 5c                	pop    %r12
    ffc4:	c3                   	ret    
    ffc5:	0f 1f 00             	nopl   (%rax)
    ffc8:	48 89 fe             	mov    %rdi,%rsi
    ffcb:	49 c7 c4 ff ff ff ff 	mov    $0xffffffffffffffff,%r12
    ffd2:	48 f7 de             	neg    %rsi
    ffd5:	48 39 de             	cmp    %rbx,%rsi
    ffd8:	77 e0                	ja     ffba <sbrk+0xaa>
    ffda:	44 8b 05 1f fd 01 00 	mov    0x1fd1f(%rip),%r8d        # 2fd00 <is_edmm_supported>
    ffe1:	48 01 df             	add    %rbx,%rdi
    ffe4:	48 89 3d ad 2a 03 00 	mov    %rdi,0x32aad(%rip)        # 42a98 <heap_used.2566>
    ffeb:	4c 8d 24 38          	lea    (%rax,%rdi,1),%r12
    ffef:	45 85 c0             	test   %r8d,%r8d
    fff2:	74 c6                	je     ffba <sbrk+0xaa>
    fff4:	48 8b 15 fd fc 01 00 	mov    0x1fcfd(%rip),%rdx        # 2fcf8 <heap_min_size>
    fffb:	48 39 da             	cmp    %rbx,%rdx
    fffe:	73 ba                	jae    ffba <sbrk+0xaa>
   10000:	4d 89 e0             	mov    %r12,%r8
   10003:	48 39 fa             	cmp    %rdi,%rdx
   10006:	73 38                	jae    10040 <sbrk+0x130>
   10008:	4c 89 c7             	mov    %r8,%rdi
   1000b:	e8 c0 f4 ff ff       	call   f4d0 <mm_uncommit>
   10010:	85 c0                	test   %eax,%eax
   10012:	74 a6                	je     ffba <sbrk+0xaa>
   10014:	48 89 1d 7d 2a 03 00 	mov    %rbx,0x32a7d(%rip)        # 42a98 <heap_used.2566>
   1001b:	49 c7 c4 ff ff ff ff 	mov    $0xffffffffffffffff,%r12
   10022:	eb 96                	jmp    ffba <sbrk+0xaa>
   10024:	0f 1f 40 00          	nopl   0x0(%rax)
   10028:	49 c7 c4 ff ff ff ff 	mov    $0xffffffffffffffff,%r12
   1002f:	48 83 c4 08          	add    $0x8,%rsp
   10033:	4c 89 e0             	mov    %r12,%rax
   10036:	5b                   	pop    %rbx
   10037:	41 5c                	pop    %r12
   10039:	c3                   	ret    
   1003a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10040:	48 89 de             	mov    %rbx,%rsi
   10043:	4c 8d 04 10          	lea    (%rax,%rdx,1),%r8
   10047:	48 29 d6             	sub    %rdx,%rsi
   1004a:	eb bc                	jmp    10008 <sbrk+0xf8>
   1004c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000010050 <sgx_cpuid>:
   10050:	f3 0f 1e fa          	endbr64 
   10054:	48 85 ff             	test   %rdi,%rdi
   10057:	74 07                	je     10060 <sgx_cpuid+0x10>
   10059:	31 d2                	xor    %edx,%edx
   1005b:	e9 79 47 ff ff       	jmp    47d9 <sgx_oc_cpuidex>
   10060:	b8 02 00 00 00       	mov    $0x2,%eax
   10065:	c3                   	ret    
   10066:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1006d:	00 00 00 

0000000000010070 <sgx_spin_lock>:
   10070:	f3 0f 1e fa          	endbr64 
   10074:	48 83 ec 18          	sub    $0x18,%rsp
   10078:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1007f:	00 00 
   10081:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   10086:	31 c0                	xor    %eax,%eax
   10088:	b8 01 00 00 00       	mov    $0x1,%eax
   1008d:	f0 87 07             	lock xchg %eax,(%rdi)
   10090:	89 44 24 04          	mov    %eax,0x4(%rsp)
   10094:	8b 54 24 04          	mov    0x4(%rsp),%edx
   10098:	85 d2                	test   %edx,%edx
   1009a:	74 4d                	je     100e9 <sgx_spin_lock+0x79>
   1009c:	48 89 f9             	mov    %rdi,%rcx
   1009f:	be 00 04 00 00       	mov    $0x400,%esi
   100a4:	bf 01 00 00 00       	mov    $0x1,%edi
   100a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   100b0:	ba 02 00 00 00       	mov    $0x2,%edx
   100b5:	0f 1f 00             	nopl   (%rax)
   100b8:	85 d2                	test   %edx,%edx
   100ba:	7e 0d                	jle    100c9 <sgx_spin_lock+0x59>
   100bc:	31 c0                	xor    %eax,%eax
   100be:	66 90                	xchg   %ax,%ax
   100c0:	f3 90                	pause  
   100c2:	83 c0 01             	add    $0x1,%eax
   100c5:	39 c2                	cmp    %eax,%edx
   100c7:	75 f7                	jne    100c0 <sgx_spin_lock+0x50>
   100c9:	01 d2                	add    %edx,%edx
   100cb:	8b 01                	mov    (%rcx),%eax
   100cd:	81 fa 00 04 00 00    	cmp    $0x400,%edx
   100d3:	0f 4f d6             	cmovg  %esi,%edx
   100d6:	85 c0                	test   %eax,%eax
   100d8:	75 de                	jne    100b8 <sgx_spin_lock+0x48>
   100da:	f0 87 39             	lock xchg %edi,(%rcx)
   100dd:	89 7c 24 04          	mov    %edi,0x4(%rsp)
   100e1:	8b 44 24 04          	mov    0x4(%rsp),%eax
   100e5:	85 c0                	test   %eax,%eax
   100e7:	75 c7                	jne    100b0 <sgx_spin_lock+0x40>
   100e9:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   100ee:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   100f5:	00 00 
   100f7:	75 07                	jne    10100 <sgx_spin_lock+0x90>
   100f9:	31 c0                	xor    %eax,%eax
   100fb:	48 83 c4 18          	add    $0x18,%rsp
   100ff:	c3                   	ret    
   10100:	e8 3b 3a 00 00       	call   13b40 <__stack_chk_fail>
   10105:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1010c:	00 00 00 
   1010f:	90                   	nop

0000000000010110 <sgx_spin_unlock>:
   10110:	f3 0f 1e fa          	endbr64 
   10114:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
   1011a:	31 c0                	xor    %eax,%eax
   1011c:	c3                   	ret    
   1011d:	0f 1f 00             	nopl   (%rax)

0000000000010120 <vsnprintf>:
   10120:	f3 0f 1e fa          	endbr64 
   10124:	41 55                	push   %r13
   10126:	49 89 cd             	mov    %rcx,%r13
   10129:	41 54                	push   %r12
   1012b:	49 89 d4             	mov    %rdx,%r12
   1012e:	ba 28 00 00 00       	mov    $0x28,%edx
   10133:	55                   	push   %rbp
   10134:	48 89 f5             	mov    %rsi,%rbp
   10137:	31 f6                	xor    %esi,%esi
   10139:	53                   	push   %rbx
   1013a:	48 89 fb             	mov    %rdi,%rbx
   1013d:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
   10144:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1014b:	00 00 
   1014d:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   10154:	00 
   10155:	31 c0                	xor    %eax,%eax
   10157:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
   1015c:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   10161:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
   10168:	00 00 
   1016a:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1016f:	c7 44 24 58 00 00 00 	movl   $0x0,0x58(%rsp)
   10176:	00 
   10177:	e8 94 38 00 00       	call   13a10 <memset>
   1017c:	b8 fe ff ff 7f       	mov    $0x7ffffffe,%eax
   10181:	48 81 fd ff ff ff 7f 	cmp    $0x7fffffff,%rbp
   10188:	77 08                	ja     10192 <vsnprintf+0x72>
   1018a:	8d 45 ff             	lea    -0x1(%rbp),%eax
   1018d:	48 85 ed             	test   %rbp,%rbp
   10190:	74 56                	je     101e8 <vsnprintf+0xc8>
   10192:	4c 89 ea             	mov    %r13,%rdx
   10195:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1019a:	4c 89 e6             	mov    %r12,%rsi
   1019d:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   101a2:	c7 44 24 20 08 02 ff 	movl   $0xffff0208,0x20(%rsp)
   101a9:	ff 
   101aa:	48 89 5c 24 28       	mov    %rbx,0x28(%rsp)
   101af:	89 44 24 1c          	mov    %eax,0x1c(%rsp)
   101b3:	89 44 24 30          	mov    %eax,0x30(%rsp)
   101b7:	e8 14 52 00 00       	call   153d0 <__vfprintf>
   101bc:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   101c1:	c6 02 00             	movb   $0x0,(%rdx)
   101c4:	48 8b 8c 24 88 00 00 	mov    0x88(%rsp),%rcx
   101cb:	00 
   101cc:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   101d3:	00 00 
   101d5:	75 1a                	jne    101f1 <vsnprintf+0xd1>
   101d7:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
   101de:	5b                   	pop    %rbx
   101df:	5d                   	pop    %rbp
   101e0:	41 5c                	pop    %r12
   101e2:	41 5d                	pop    %r13
   101e4:	c3                   	ret    
   101e5:	0f 1f 00             	nopl   (%rax)
   101e8:	31 c0                	xor    %eax,%eax
   101ea:	48 8d 5c 24 0f       	lea    0xf(%rsp),%rbx
   101ef:	eb a1                	jmp    10192 <vsnprintf+0x72>
   101f1:	e8 4a 39 00 00       	call   13b40 <__stack_chk_fail>
   101f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   101fd:	00 00 00 

0000000000010200 <init_mparams>:
   10200:	48 83 ec 18          	sub    $0x18,%rsp
   10204:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1020b:	00 00 
   1020d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   10212:	31 c0                	xor    %eax,%eax
   10214:	b8 01 00 00 00       	mov    $0x1,%eax
   10219:	87 05 91 2c 03 00    	xchg   %eax,0x32c91(%rip)        # 42eb0 <malloc_global_mutex>
   1021f:	85 c0                	test   %eax,%eax
   10221:	74 1f                	je     10242 <init_mparams+0x42>
   10223:	48 8d 15 86 2c 03 00 	lea    0x32c86(%rip),%rdx        # 42eb0 <malloc_global_mutex>
   1022a:	b9 01 00 00 00       	mov    $0x1,%ecx
   1022f:	90                   	nop
   10230:	8b 02                	mov    (%rdx),%eax
   10232:	85 c0                	test   %eax,%eax
   10234:	75 fa                	jne    10230 <init_mparams+0x30>
   10236:	89 c8                	mov    %ecx,%eax
   10238:	87 05 72 2c 03 00    	xchg   %eax,0x32c72(%rip)        # 42eb0 <malloc_global_mutex>
   1023e:	85 c0                	test   %eax,%eax
   10240:	75 ee                	jne    10230 <init_mparams+0x30>
   10242:	48 83 3d 36 2c 03 00 	cmpq   $0x0,0x32c36(%rip)        # 42e80 <mparams>
   10249:	00 
   1024a:	75 6b                	jne    102b7 <init_mparams+0xb7>
   1024c:	48 89 e7             	mov    %rsp,%rdi
   1024f:	be 08 00 00 00       	mov    $0x8,%esi
   10254:	48 c7 05 31 2c 03 00 	movq   $0x1000,0x32c31(%rip)        # 42e90 <mparams+0x10>
   1025b:	00 10 00 00 
   1025f:	48 c7 05 1e 2c 03 00 	movq   $0x1000,0x32c1e(%rip)        # 42e88 <mparams+0x8>
   10266:	00 10 00 00 
   1026a:	48 c7 05 23 2c 03 00 	movq   $0xffffffffffffffff,0x32c23(%rip)        # 42e98 <mparams+0x18>
   10271:	ff ff ff ff 
   10275:	48 c7 05 20 2c 03 00 	movq   $0x200000,0x32c20(%rip)        # 42ea0 <mparams+0x20>
   1027c:	00 00 20 00 
   10280:	c7 05 1e 2c 03 00 02 	movl   $0x2,0x32c1e(%rip)        # 42ea8 <mparams+0x28>
   10287:	00 00 00 
   1028a:	48 c7 05 9b 2b 03 00 	movq   $0x2,0x32b9b(%rip)        # 42e30 <_gm_+0x370>
   10291:	02 00 00 00 
   10295:	e8 06 a4 ff ff       	call   a6a0 <sgx_read_rand>
   1029a:	85 c0                	test   %eax,%eax
   1029c:	75 3d                	jne    102db <init_mparams+0xdb>
   1029e:	48 8b 04 24          	mov    (%rsp),%rax
   102a2:	48 35 55 55 55 55    	xor    $0x55555555,%rax
   102a8:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   102ac:	48 83 c8 08          	or     $0x8,%rax
   102b0:	48 89 05 c9 2b 03 00 	mov    %rax,0x32bc9(%rip)        # 42e80 <mparams>
   102b7:	c7 05 ef 2b 03 00 00 	movl   $0x0,0x32bef(%rip)        # 42eb0 <malloc_global_mutex>
   102be:	00 00 00 
   102c1:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   102c6:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   102cd:	00 00 
   102cf:	75 0f                	jne    102e0 <init_mparams+0xe0>
   102d1:	b8 01 00 00 00       	mov    $0x1,%eax
   102d6:	48 83 c4 18          	add    $0x18,%rsp
   102da:	c3                   	ret    
   102db:	e8 57 5a 01 00       	call   25d37 <abort>
   102e0:	e8 5b 38 00 00       	call   13b40 <__stack_chk_fail>
   102e5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   102ec:	00 00 00 
   102ef:	90                   	nop

00000000000102f0 <dispose_chunk>:
   102f0:	55                   	push   %rbp
   102f1:	4c 8d 04 16          	lea    (%rsi,%rdx,1),%r8
   102f5:	53                   	push   %rbx
   102f6:	48 83 ec 08          	sub    $0x8,%rsp
   102fa:	48 8b 46 08          	mov    0x8(%rsi),%rax
   102fe:	a8 01                	test   $0x1,%al
   10300:	0f 85 9a 01 00 00    	jne    104a0 <dispose_chunk+0x1b0>
   10306:	a8 03                	test   $0x3,%al
   10308:	0f 84 8b 01 00 00    	je     10499 <dispose_chunk+0x1a9>
   1030e:	48 8b 06             	mov    (%rsi),%rax
   10311:	4c 8b 4f 18          	mov    0x18(%rdi),%r9
   10315:	48 29 c6             	sub    %rax,%rsi
   10318:	48 01 c2             	add    %rax,%rdx
   1031b:	49 39 f1             	cmp    %rsi,%r9
   1031e:	0f 87 14 03 00 00    	ja     10638 <dispose_chunk+0x348>
   10324:	48 39 77 20          	cmp    %rsi,0x20(%rdi)
   10328:	0f 84 22 04 00 00    	je     10750 <dispose_chunk+0x460>
   1032e:	48 89 c1             	mov    %rax,%rcx
   10331:	4c 8b 56 18          	mov    0x18(%rsi),%r10
   10335:	48 c1 e9 03          	shr    $0x3,%rcx
   10339:	48 3d ff 00 00 00    	cmp    $0xff,%rax
   1033f:	0f 86 53 03 00 00    	jbe    10698 <dispose_chunk+0x3a8>
   10345:	48 8b 5e 30          	mov    0x30(%rsi),%rbx
   10349:	49 39 f2             	cmp    %rsi,%r10
   1034c:	0f 84 6e 05 00 00    	je     108c0 <dispose_chunk+0x5d0>
   10352:	48 8b 46 10          	mov    0x10(%rsi),%rax
   10356:	49 39 c1             	cmp    %rax,%r9
   10359:	0f 87 d9 02 00 00    	ja     10638 <dispose_chunk+0x348>
   1035f:	48 39 70 18          	cmp    %rsi,0x18(%rax)
   10363:	0f 85 cf 02 00 00    	jne    10638 <dispose_chunk+0x348>
   10369:	49 39 72 10          	cmp    %rsi,0x10(%r10)
   1036d:	0f 85 c5 02 00 00    	jne    10638 <dispose_chunk+0x348>
   10373:	4c 89 50 18          	mov    %r10,0x18(%rax)
   10377:	49 89 42 10          	mov    %rax,0x10(%r10)
   1037b:	48 85 db             	test   %rbx,%rbx
   1037e:	0f 84 20 01 00 00    	je     104a4 <dispose_chunk+0x1b4>
   10384:	8b 46 38             	mov    0x38(%rsi),%eax
   10387:	48 89 c1             	mov    %rax,%rcx
   1038a:	48 8d 04 c7          	lea    (%rdi,%rax,8),%rax
   1038e:	48 39 b0 58 02 00 00 	cmp    %rsi,0x258(%rax)
   10395:	0f 84 95 04 00 00    	je     10830 <dispose_chunk+0x540>
   1039b:	49 39 d9             	cmp    %rbx,%r9
   1039e:	0f 87 94 02 00 00    	ja     10638 <dispose_chunk+0x348>
   103a4:	48 39 73 20          	cmp    %rsi,0x20(%rbx)
   103a8:	0f 84 99 05 00 00    	je     10947 <dispose_chunk+0x657>
   103ae:	4c 89 53 28          	mov    %r10,0x28(%rbx)
   103b2:	4d 85 d2             	test   %r10,%r10
   103b5:	0f 84 e9 00 00 00    	je     104a4 <dispose_chunk+0x1b4>
   103bb:	4d 39 d1             	cmp    %r10,%r9
   103be:	0f 87 74 02 00 00    	ja     10638 <dispose_chunk+0x348>
   103c4:	48 8b 46 20          	mov    0x20(%rsi),%rax
   103c8:	49 89 5a 30          	mov    %rbx,0x30(%r10)
   103cc:	48 85 c0             	test   %rax,%rax
   103cf:	74 11                	je     103e2 <dispose_chunk+0xf2>
   103d1:	49 39 c1             	cmp    %rax,%r9
   103d4:	0f 87 5e 02 00 00    	ja     10638 <dispose_chunk+0x348>
   103da:	49 89 42 20          	mov    %rax,0x20(%r10)
   103de:	4c 89 50 30          	mov    %r10,0x30(%rax)
   103e2:	48 8b 46 28          	mov    0x28(%rsi),%rax
   103e6:	48 85 c0             	test   %rax,%rax
   103e9:	0f 84 b5 00 00 00    	je     104a4 <dispose_chunk+0x1b4>
   103ef:	49 39 c1             	cmp    %rax,%r9
   103f2:	0f 87 40 02 00 00    	ja     10638 <dispose_chunk+0x348>
   103f8:	49 89 42 28          	mov    %rax,0x28(%r10)
   103fc:	4c 89 50 30          	mov    %r10,0x30(%rax)
   10400:	e9 9f 00 00 00       	jmp    104a4 <dispose_chunk+0x1b4>
   10405:	0f 1f 00             	nopl   (%rax)
   10408:	48 89 d0             	mov    %rdx,%rax
   1040b:	48 c1 e8 08          	shr    $0x8,%rax
   1040f:	89 c1                	mov    %eax,%ecx
   10411:	85 c0                	test   %eax,%eax
   10413:	0f 84 27 02 00 00    	je     10640 <dispose_chunk+0x350>
   10419:	3d ff ff 00 00       	cmp    $0xffff,%eax
   1041e:	0f 87 64 03 00 00    	ja     10788 <dispose_chunk+0x498>
   10424:	0f bd c0             	bsr    %eax,%eax
   10427:	b9 26 00 00 00       	mov    $0x26,%ecx
   1042c:	48 89 d3             	mov    %rdx,%rbx
   1042f:	41 b8 1f 00 00 00    	mov    $0x1f,%r8d
   10435:	83 f0 1f             	xor    $0x1f,%eax
   10438:	29 c1                	sub    %eax,%ecx
   1043a:	41 29 c0             	sub    %eax,%r8d
   1043d:	b8 01 00 00 00       	mov    $0x1,%eax
   10442:	48 d3 eb             	shr    %cl,%rbx
   10445:	48 89 d9             	mov    %rbx,%rcx
   10448:	83 e1 01             	and    $0x1,%ecx
   1044b:	46 8d 1c 41          	lea    (%rcx,%r8,2),%r11d
   1044f:	4c 89 d9             	mov    %r11,%rcx
   10452:	4e 8d 14 dd 58 02 00 	lea    0x258(,%r11,8),%r10
   10459:	00 
   1045a:	d3 e0                	shl    %cl,%eax
   1045c:	44 8b 47 04          	mov    0x4(%rdi),%r8d
   10460:	89 4e 38             	mov    %ecx,0x38(%rsi)
   10463:	48 c7 46 28 00 00 00 	movq   $0x0,0x28(%rsi)
   1046a:	00 
   1046b:	48 c7 46 20 00 00 00 	movq   $0x0,0x20(%rsi)
   10472:	00 
   10473:	44 85 c0             	test   %r8d,%eax
   10476:	0f 85 4c 02 00 00    	jne    106c8 <dispose_chunk+0x3d8>
   1047c:	44 09 c0             	or     %r8d,%eax
   1047f:	89 47 04             	mov    %eax,0x4(%rdi)
   10482:	4a 89 b4 df 58 02 00 	mov    %rsi,0x258(%rdi,%r11,8)
   10489:	00 
   1048a:	4c 01 d7             	add    %r10,%rdi
   1048d:	48 89 7e 30          	mov    %rdi,0x30(%rsi)
   10491:	48 89 76 18          	mov    %rsi,0x18(%rsi)
   10495:	48 89 76 10          	mov    %rsi,0x10(%rsi)
   10499:	48 83 c4 08          	add    $0x8,%rsp
   1049d:	5b                   	pop    %rbx
   1049e:	5d                   	pop    %rbp
   1049f:	c3                   	ret    
   104a0:	4c 8b 4f 18          	mov    0x18(%rdi),%r9
   104a4:	4d 39 c1             	cmp    %r8,%r9
   104a7:	0f 87 8b 01 00 00    	ja     10638 <dispose_chunk+0x348>
   104ad:	49 8b 40 08          	mov    0x8(%r8),%rax
   104b1:	a8 02                	test   $0x2,%al
   104b3:	0f 85 07 01 00 00    	jne    105c0 <dispose_chunk+0x2d0>
   104b9:	48 8b 5f 20          	mov    0x20(%rdi),%rbx
   104bd:	4c 39 47 28          	cmp    %r8,0x28(%rdi)
   104c1:	0f 84 e1 02 00 00    	je     107a8 <dispose_chunk+0x4b8>
   104c7:	4c 39 c3             	cmp    %r8,%rbx
   104ca:	0f 84 80 03 00 00    	je     10850 <dispose_chunk+0x560>
   104d0:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   104d4:	4d 8b 50 18          	mov    0x18(%r8),%r10
   104d8:	48 89 c1             	mov    %rax,%rcx
   104db:	48 01 c2             	add    %rax,%rdx
   104de:	48 c1 e9 03          	shr    $0x3,%rcx
   104e2:	48 3d f8 00 00 00    	cmp    $0xf8,%rax
   104e8:	0f 86 7a 01 00 00    	jbe    10668 <dispose_chunk+0x378>
   104ee:	49 8b 68 30          	mov    0x30(%r8),%rbp
   104f2:	4d 39 c2             	cmp    %r8,%r10
   104f5:	0f 84 75 03 00 00    	je     10870 <dispose_chunk+0x580>
   104fb:	49 8b 40 10          	mov    0x10(%r8),%rax
   104ff:	49 39 c1             	cmp    %rax,%r9
   10502:	0f 87 30 01 00 00    	ja     10638 <dispose_chunk+0x348>
   10508:	4c 39 40 18          	cmp    %r8,0x18(%rax)
   1050c:	0f 85 26 01 00 00    	jne    10638 <dispose_chunk+0x348>
   10512:	4d 39 42 10          	cmp    %r8,0x10(%r10)
   10516:	0f 85 1c 01 00 00    	jne    10638 <dispose_chunk+0x348>
   1051c:	4c 89 50 18          	mov    %r10,0x18(%rax)
   10520:	49 89 42 10          	mov    %rax,0x10(%r10)
   10524:	48 85 ed             	test   %rbp,%rbp
   10527:	74 77                	je     105a0 <dispose_chunk+0x2b0>
   10529:	41 8b 40 38          	mov    0x38(%r8),%eax
   1052d:	48 89 c1             	mov    %rax,%rcx
   10530:	48 8d 04 c7          	lea    (%rdi,%rax,8),%rax
   10534:	4c 39 80 58 02 00 00 	cmp    %r8,0x258(%rax)
   1053b:	0f 84 c7 02 00 00    	je     10808 <dispose_chunk+0x518>
   10541:	49 39 e9             	cmp    %rbp,%r9
   10544:	0f 87 ee 00 00 00    	ja     10638 <dispose_chunk+0x348>
   1054a:	4c 39 45 20          	cmp    %r8,0x20(%rbp)
   1054e:	0f 84 bc 03 00 00    	je     10910 <dispose_chunk+0x620>
   10554:	4c 89 55 28          	mov    %r10,0x28(%rbp)
   10558:	4d 85 d2             	test   %r10,%r10
   1055b:	74 43                	je     105a0 <dispose_chunk+0x2b0>
   1055d:	4d 39 ca             	cmp    %r9,%r10
   10560:	0f 82 d2 00 00 00    	jb     10638 <dispose_chunk+0x348>
   10566:	49 8b 40 20          	mov    0x20(%r8),%rax
   1056a:	49 89 6a 30          	mov    %rbp,0x30(%r10)
   1056e:	48 85 c0             	test   %rax,%rax
   10571:	74 11                	je     10584 <dispose_chunk+0x294>
   10573:	49 39 c1             	cmp    %rax,%r9
   10576:	0f 87 bc 00 00 00    	ja     10638 <dispose_chunk+0x348>
   1057c:	49 89 42 20          	mov    %rax,0x20(%r10)
   10580:	4c 89 50 30          	mov    %r10,0x30(%rax)
   10584:	49 8b 40 28          	mov    0x28(%r8),%rax
   10588:	48 85 c0             	test   %rax,%rax
   1058b:	74 13                	je     105a0 <dispose_chunk+0x2b0>
   1058d:	49 39 c1             	cmp    %rax,%r9
   10590:	0f 87 a2 00 00 00    	ja     10638 <dispose_chunk+0x348>
   10596:	49 89 42 28          	mov    %rax,0x28(%r10)
   1059a:	4c 89 50 30          	mov    %r10,0x30(%rax)
   1059e:	66 90                	xchg   %ax,%ax
   105a0:	48 89 d0             	mov    %rdx,%rax
   105a3:	48 83 c8 01          	or     $0x1,%rax
   105a7:	48 89 46 08          	mov    %rax,0x8(%rsi)
   105ab:	48 89 14 16          	mov    %rdx,(%rsi,%rdx,1)
   105af:	48 39 de             	cmp    %rbx,%rsi
   105b2:	75 23                	jne    105d7 <dispose_chunk+0x2e7>
   105b4:	48 89 57 08          	mov    %rdx,0x8(%rdi)
   105b8:	e9 dc fe ff ff       	jmp    10499 <dispose_chunk+0x1a9>
   105bd:	0f 1f 00             	nopl   (%rax)
   105c0:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   105c4:	49 89 40 08          	mov    %rax,0x8(%r8)
   105c8:	48 89 d0             	mov    %rdx,%rax
   105cb:	48 83 c8 01          	or     $0x1,%rax
   105cf:	48 89 46 08          	mov    %rax,0x8(%rsi)
   105d3:	48 89 14 16          	mov    %rdx,(%rsi,%rdx,1)
   105d7:	48 89 d1             	mov    %rdx,%rcx
   105da:	48 c1 e9 03          	shr    $0x3,%rcx
   105de:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
   105e5:	0f 87 1d fe ff ff    	ja     10408 <dispose_chunk+0x118>
   105eb:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
   105ee:	44 8b 07             	mov    (%rdi),%r8d
   105f1:	48 8d 54 c7 48       	lea    0x48(%rdi,%rax,8),%rdx
   105f6:	b8 01 00 00 00       	mov    $0x1,%eax
   105fb:	d3 e0                	shl    %cl,%eax
   105fd:	41 85 c0             	test   %eax,%r8d
   10600:	74 56                	je     10658 <dispose_chunk+0x368>
   10602:	48 8b 42 10          	mov    0x10(%rdx),%rax
   10606:	4c 39 c8             	cmp    %r9,%rax
   10609:	72 2d                	jb     10638 <dispose_chunk+0x348>
   1060b:	48 89 72 10          	mov    %rsi,0x10(%rdx)
   1060f:	48 89 70 18          	mov    %rsi,0x18(%rax)
   10613:	48 89 46 10          	mov    %rax,0x10(%rsi)
   10617:	48 89 56 18          	mov    %rdx,0x18(%rsi)
   1061b:	48 83 c4 08          	add    $0x8,%rsp
   1061f:	5b                   	pop    %rbx
   10620:	5d                   	pop    %rbp
   10621:	c3                   	ret    
   10622:	4d 39 d1             	cmp    %r10,%r9
   10625:	77 11                	ja     10638 <dispose_chunk+0x348>
   10627:	49 39 72 10          	cmp    %rsi,0x10(%r10)
   1062b:	0f 84 44 03 00 00    	je     10975 <dispose_chunk+0x685>
   10631:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10638:	e8 fa 56 01 00       	call   25d37 <abort>
   1063d:	0f 1f 00             	nopl   (%rax)
   10640:	b8 01 00 00 00       	mov    $0x1,%eax
   10645:	41 ba 58 02 00 00    	mov    $0x258,%r10d
   1064b:	41 89 cb             	mov    %ecx,%r11d
   1064e:	e9 09 fe ff ff       	jmp    1045c <dispose_chunk+0x16c>
   10653:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10658:	44 09 c0             	or     %r8d,%eax
   1065b:	89 07                	mov    %eax,(%rdi)
   1065d:	48 89 d0             	mov    %rdx,%rax
   10660:	eb a9                	jmp    1060b <dispose_chunk+0x31b>
   10662:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10668:	44 8d 1c 09          	lea    (%rcx,%rcx,1),%r11d
   1066c:	49 8b 40 10          	mov    0x10(%r8),%rax
   10670:	4e 8d 5c df 48       	lea    0x48(%rdi,%r11,8),%r11
   10675:	49 39 c3             	cmp    %rax,%r11
   10678:	0f 85 9b 02 00 00    	jne    10919 <dispose_chunk+0x629>
   1067e:	49 39 c2             	cmp    %rax,%r10
   10681:	0f 85 1f 03 00 00    	jne    109a6 <dispose_chunk+0x6b6>
   10687:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   1068c:	d3 c0                	rol    %cl,%eax
   1068e:	21 07                	and    %eax,(%rdi)
   10690:	e9 0b ff ff ff       	jmp    105a0 <dispose_chunk+0x2b0>
   10695:	0f 1f 00             	nopl   (%rax)
   10698:	44 8d 1c 09          	lea    (%rcx,%rcx,1),%r11d
   1069c:	48 8b 46 10          	mov    0x10(%rsi),%rax
   106a0:	4e 8d 5c df 48       	lea    0x48(%rdi,%r11,8),%r11
   106a5:	49 39 c3             	cmp    %rax,%r11
   106a8:	0f 85 a2 02 00 00    	jne    10950 <dispose_chunk+0x660>
   106ae:	49 39 c2             	cmp    %rax,%r10
   106b1:	0f 85 6b ff ff ff    	jne    10622 <dispose_chunk+0x332>
   106b7:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   106bc:	d3 c0                	rol    %cl,%eax
   106be:	21 07                	and    %eax,(%rdi)
   106c0:	e9 df fd ff ff       	jmp    104a4 <dispose_chunk+0x1b4>
   106c5:	0f 1f 00             	nopl   (%rax)
   106c8:	4a 8b bc df 58 02 00 	mov    0x258(%rdi,%r11,8),%rdi
   106cf:	00 
   106d0:	49 89 d0             	mov    %rdx,%r8
   106d3:	83 f9 1f             	cmp    $0x1f,%ecx
   106d6:	74 36                	je     1070e <dispose_chunk+0x41e>
   106d8:	d1 e9                	shr    %ecx
   106da:	b8 39 00 00 00       	mov    $0x39,%eax
   106df:	29 c8                	sub    %ecx,%eax
   106e1:	89 c1                	mov    %eax,%ecx
   106e3:	49 d3 e0             	shl    %cl,%r8
   106e6:	eb 26                	jmp    1070e <dispose_chunk+0x41e>
   106e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   106ef:	00 
   106f0:	4c 89 c0             	mov    %r8,%rax
   106f3:	4d 01 c0             	add    %r8,%r8
   106f6:	48 c1 e8 3f          	shr    $0x3f,%rax
   106fa:	48 83 c0 04          	add    $0x4,%rax
   106fe:	48 8b 0c c7          	mov    (%rdi,%rax,8),%rcx
   10702:	48 85 c9             	test   %rcx,%rcx
   10705:	0f 84 d5 00 00 00    	je     107e0 <dispose_chunk+0x4f0>
   1070b:	48 89 cf             	mov    %rcx,%rdi
   1070e:	48 8b 47 08          	mov    0x8(%rdi),%rax
   10712:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   10716:	48 39 d0             	cmp    %rdx,%rax
   10719:	75 d5                	jne    106f0 <dispose_chunk+0x400>
   1071b:	48 8b 47 10          	mov    0x10(%rdi),%rax
   1071f:	49 39 c1             	cmp    %rax,%r9
   10722:	0f 87 10 ff ff ff    	ja     10638 <dispose_chunk+0x348>
   10728:	49 39 f9             	cmp    %rdi,%r9
   1072b:	0f 87 07 ff ff ff    	ja     10638 <dispose_chunk+0x348>
   10731:	48 89 70 18          	mov    %rsi,0x18(%rax)
   10735:	48 89 77 10          	mov    %rsi,0x10(%rdi)
   10739:	48 89 46 10          	mov    %rax,0x10(%rsi)
   1073d:	48 89 7e 18          	mov    %rdi,0x18(%rsi)
   10741:	48 c7 46 30 00 00 00 	movq   $0x0,0x30(%rsi)
   10748:	00 
   10749:	e9 4b fd ff ff       	jmp    10499 <dispose_chunk+0x1a9>
   1074e:	66 90                	xchg   %ax,%ax
   10750:	49 8b 40 08          	mov    0x8(%r8),%rax
   10754:	48 89 c1             	mov    %rax,%rcx
   10757:	83 e1 03             	and    $0x3,%ecx
   1075a:	48 83 f9 03          	cmp    $0x3,%rcx
   1075e:	0f 85 40 fd ff ff    	jne    104a4 <dispose_chunk+0x1b4>
   10764:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   10768:	48 89 57 08          	mov    %rdx,0x8(%rdi)
   1076c:	49 89 40 08          	mov    %rax,0x8(%r8)
   10770:	48 89 d0             	mov    %rdx,%rax
   10773:	48 83 c8 01          	or     $0x1,%rax
   10777:	48 89 46 08          	mov    %rax,0x8(%rsi)
   1077b:	49 89 10             	mov    %rdx,(%r8)
   1077e:	e9 16 fd ff ff       	jmp    10499 <dispose_chunk+0x1a9>
   10783:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10788:	b8 00 00 00 80       	mov    $0x80000000,%eax
   1078d:	41 ba 50 03 00 00    	mov    $0x350,%r10d
   10793:	b9 1f 00 00 00       	mov    $0x1f,%ecx
   10798:	41 bb 1f 00 00 00    	mov    $0x1f,%r11d
   1079e:	e9 b9 fc ff ff       	jmp    1045c <dispose_chunk+0x16c>
   107a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   107a8:	48 03 57 10          	add    0x10(%rdi),%rdx
   107ac:	48 89 77 28          	mov    %rsi,0x28(%rdi)
   107b0:	48 89 57 10          	mov    %rdx,0x10(%rdi)
   107b4:	48 83 ca 01          	or     $0x1,%rdx
   107b8:	48 89 56 08          	mov    %rdx,0x8(%rsi)
   107bc:	48 39 de             	cmp    %rbx,%rsi
   107bf:	0f 85 d4 fc ff ff    	jne    10499 <dispose_chunk+0x1a9>
   107c5:	48 c7 47 20 00 00 00 	movq   $0x0,0x20(%rdi)
   107cc:	00 
   107cd:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
   107d4:	00 
   107d5:	e9 bf fc ff ff       	jmp    10499 <dispose_chunk+0x1a9>
   107da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   107e0:	48 8d 14 c7          	lea    (%rdi,%rax,8),%rdx
   107e4:	49 39 d1             	cmp    %rdx,%r9
   107e7:	0f 87 4b fe ff ff    	ja     10638 <dispose_chunk+0x348>
   107ed:	48 89 34 c7          	mov    %rsi,(%rdi,%rax,8)
   107f1:	48 89 7e 30          	mov    %rdi,0x30(%rsi)
   107f5:	48 89 76 18          	mov    %rsi,0x18(%rsi)
   107f9:	48 89 76 10          	mov    %rsi,0x10(%rsi)
   107fd:	e9 97 fc ff ff       	jmp    10499 <dispose_chunk+0x1a9>
   10802:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10808:	4c 89 90 58 02 00 00 	mov    %r10,0x258(%rax)
   1080f:	4d 85 d2             	test   %r10,%r10
   10812:	0f 85 45 fd ff ff    	jne    1055d <dispose_chunk+0x26d>
   10818:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   1081d:	d3 c0                	rol    %cl,%eax
   1081f:	21 47 04             	and    %eax,0x4(%rdi)
   10822:	e9 79 fd ff ff       	jmp    105a0 <dispose_chunk+0x2b0>
   10827:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1082e:	00 00 
   10830:	4c 89 90 58 02 00 00 	mov    %r10,0x258(%rax)
   10837:	4d 85 d2             	test   %r10,%r10
   1083a:	0f 85 7b fb ff ff    	jne    103bb <dispose_chunk+0xcb>
   10840:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   10845:	d3 c0                	rol    %cl,%eax
   10847:	21 47 04             	and    %eax,0x4(%rdi)
   1084a:	e9 55 fc ff ff       	jmp    104a4 <dispose_chunk+0x1b4>
   1084f:	90                   	nop
   10850:	48 03 57 08          	add    0x8(%rdi),%rdx
   10854:	48 89 77 20          	mov    %rsi,0x20(%rdi)
   10858:	48 89 d0             	mov    %rdx,%rax
   1085b:	48 89 57 08          	mov    %rdx,0x8(%rdi)
   1085f:	48 83 c8 01          	or     $0x1,%rax
   10863:	48 89 46 08          	mov    %rax,0x8(%rsi)
   10867:	48 89 14 16          	mov    %rdx,(%rsi,%rdx,1)
   1086b:	e9 29 fc ff ff       	jmp    10499 <dispose_chunk+0x1a9>
   10870:	49 8b 40 28          	mov    0x28(%r8),%rax
   10874:	49 8d 48 28          	lea    0x28(%r8),%rcx
   10878:	48 85 c0             	test   %rax,%rax
   1087b:	0f 84 01 01 00 00    	je     10982 <dispose_chunk+0x692>
   10881:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10888:	49 89 cb             	mov    %rcx,%r11
   1088b:	49 89 c2             	mov    %rax,%r10
   1088e:	48 8d 48 28          	lea    0x28(%rax),%rcx
   10892:	48 8b 40 28          	mov    0x28(%rax),%rax
   10896:	48 85 c0             	test   %rax,%rax
   10899:	75 ed                	jne    10888 <dispose_chunk+0x598>
   1089b:	49 8b 42 20          	mov    0x20(%r10),%rax
   1089f:	49 8d 4a 20          	lea    0x20(%r10),%rcx
   108a3:	48 85 c0             	test   %rax,%rax
   108a6:	75 e0                	jne    10888 <dispose_chunk+0x598>
   108a8:	4d 39 d9             	cmp    %r11,%r9
   108ab:	0f 87 87 fd ff ff    	ja     10638 <dispose_chunk+0x348>
   108b1:	49 c7 03 00 00 00 00 	movq   $0x0,(%r11)
   108b8:	e9 67 fc ff ff       	jmp    10524 <dispose_chunk+0x234>
   108bd:	0f 1f 00             	nopl   (%rax)
   108c0:	48 8b 46 28          	mov    0x28(%rsi),%rax
   108c4:	48 8d 4e 28          	lea    0x28(%rsi),%rcx
   108c8:	48 85 c0             	test   %rax,%rax
   108cb:	0f 84 c3 00 00 00    	je     10994 <dispose_chunk+0x6a4>
   108d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   108d8:	49 89 cb             	mov    %rcx,%r11
   108db:	49 89 c2             	mov    %rax,%r10
   108de:	48 8d 48 28          	lea    0x28(%rax),%rcx
   108e2:	48 8b 40 28          	mov    0x28(%rax),%rax
   108e6:	48 85 c0             	test   %rax,%rax
   108e9:	75 ed                	jne    108d8 <dispose_chunk+0x5e8>
   108eb:	49 8b 42 20          	mov    0x20(%r10),%rax
   108ef:	49 8d 4a 20          	lea    0x20(%r10),%rcx
   108f3:	48 85 c0             	test   %rax,%rax
   108f6:	75 e0                	jne    108d8 <dispose_chunk+0x5e8>
   108f8:	4d 39 d9             	cmp    %r11,%r9
   108fb:	0f 87 37 fd ff ff    	ja     10638 <dispose_chunk+0x348>
   10901:	49 c7 03 00 00 00 00 	movq   $0x0,(%r11)
   10908:	e9 6e fa ff ff       	jmp    1037b <dispose_chunk+0x8b>
   1090d:	0f 1f 00             	nopl   (%rax)
   10910:	4c 89 55 20          	mov    %r10,0x20(%rbp)
   10914:	e9 3f fc ff ff       	jmp    10558 <dispose_chunk+0x268>
   10919:	49 39 c1             	cmp    %rax,%r9
   1091c:	0f 87 16 fd ff ff    	ja     10638 <dispose_chunk+0x348>
   10922:	4c 39 40 18          	cmp    %r8,0x18(%rax)
   10926:	0f 85 0c fd ff ff    	jne    10638 <dispose_chunk+0x348>
   1092c:	49 39 c2             	cmp    %rax,%r10
   1092f:	0f 84 52 fd ff ff    	je     10687 <dispose_chunk+0x397>
   10935:	4d 39 da             	cmp    %r11,%r10
   10938:	75 6c                	jne    109a6 <dispose_chunk+0x6b6>
   1093a:	4c 89 50 18          	mov    %r10,0x18(%rax)
   1093e:	49 89 42 10          	mov    %rax,0x10(%r10)
   10942:	e9 59 fc ff ff       	jmp    105a0 <dispose_chunk+0x2b0>
   10947:	4c 89 53 20          	mov    %r10,0x20(%rbx)
   1094b:	e9 62 fa ff ff       	jmp    103b2 <dispose_chunk+0xc2>
   10950:	49 39 c1             	cmp    %rax,%r9
   10953:	0f 87 df fc ff ff    	ja     10638 <dispose_chunk+0x348>
   10959:	48 39 70 18          	cmp    %rsi,0x18(%rax)
   1095d:	0f 85 d5 fc ff ff    	jne    10638 <dispose_chunk+0x348>
   10963:	49 39 c2             	cmp    %rax,%r10
   10966:	0f 84 4b fd ff ff    	je     106b7 <dispose_chunk+0x3c7>
   1096c:	4d 39 d3             	cmp    %r10,%r11
   1096f:	0f 85 ad fc ff ff    	jne    10622 <dispose_chunk+0x332>
   10975:	4c 89 50 18          	mov    %r10,0x18(%rax)
   10979:	49 89 42 10          	mov    %rax,0x10(%r10)
   1097d:	e9 22 fb ff ff       	jmp    104a4 <dispose_chunk+0x1b4>
   10982:	49 8b 40 20          	mov    0x20(%r8),%rax
   10986:	48 85 c0             	test   %rax,%rax
   10989:	74 2f                	je     109ba <dispose_chunk+0x6ca>
   1098b:	49 8d 48 20          	lea    0x20(%r8),%rcx
   1098f:	e9 f4 fe ff ff       	jmp    10888 <dispose_chunk+0x598>
   10994:	48 8b 46 20          	mov    0x20(%rsi),%rax
   10998:	48 85 c0             	test   %rax,%rax
   1099b:	74 51                	je     109ee <dispose_chunk+0x6fe>
   1099d:	48 8d 4e 20          	lea    0x20(%rsi),%rcx
   109a1:	e9 32 ff ff ff       	jmp    108d8 <dispose_chunk+0x5e8>
   109a6:	4d 39 ca             	cmp    %r9,%r10
   109a9:	0f 82 89 fc ff ff    	jb     10638 <dispose_chunk+0x348>
   109af:	4d 39 42 10          	cmp    %r8,0x10(%r10)
   109b3:	74 85                	je     1093a <dispose_chunk+0x64a>
   109b5:	e9 7e fc ff ff       	jmp    10638 <dispose_chunk+0x348>
   109ba:	48 85 ed             	test   %rbp,%rbp
   109bd:	0f 84 dd fb ff ff    	je     105a0 <dispose_chunk+0x2b0>
   109c3:	41 8b 40 38          	mov    0x38(%r8),%eax
   109c7:	45 31 d2             	xor    %r10d,%r10d
   109ca:	48 89 c1             	mov    %rax,%rcx
   109cd:	48 8d 04 c7          	lea    (%rdi,%rax,8),%rax
   109d1:	4c 39 80 58 02 00 00 	cmp    %r8,0x258(%rax)
   109d8:	0f 85 63 fb ff ff    	jne    10541 <dispose_chunk+0x251>
   109de:	48 c7 80 58 02 00 00 	movq   $0x0,0x258(%rax)
   109e5:	00 00 00 00 
   109e9:	e9 2a fe ff ff       	jmp    10818 <dispose_chunk+0x528>
   109ee:	48 85 db             	test   %rbx,%rbx
   109f1:	0f 84 ad fa ff ff    	je     104a4 <dispose_chunk+0x1b4>
   109f7:	41 8b 42 38          	mov    0x38(%r10),%eax
   109fb:	45 31 d2             	xor    %r10d,%r10d
   109fe:	48 89 c1             	mov    %rax,%rcx
   10a01:	48 8d 04 c7          	lea    (%rdi,%rax,8),%rax
   10a05:	48 3b b0 58 02 00 00 	cmp    0x258(%rax),%rsi
   10a0c:	0f 85 89 f9 ff ff    	jne    1039b <dispose_chunk+0xab>
   10a12:	48 c7 80 58 02 00 00 	movq   $0x0,0x258(%rax)
   10a19:	00 00 00 00 
   10a1d:	e9 1e fe ff ff       	jmp    10840 <dispose_chunk+0x550>
   10a22:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10a29:	00 00 00 
   10a2c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000010a30 <dlmalloc>:
   10a30:	f3 0f 1e fa          	endbr64 
   10a34:	41 57                	push   %r15
   10a36:	41 56                	push   %r14
   10a38:	41 55                	push   %r13
   10a3a:	41 54                	push   %r12
   10a3c:	55                   	push   %rbp
   10a3d:	53                   	push   %rbx
   10a3e:	48 89 fb             	mov    %rdi,%rbx
   10a41:	48 83 ec 18          	sub    $0x18,%rsp
   10a45:	48 83 3d 33 24 03 00 	cmpq   $0x0,0x32433(%rip)        # 42e80 <mparams>
   10a4c:	00 
   10a4d:	0f 84 7d 03 00 00    	je     10dd0 <dlmalloc+0x3a0>
   10a53:	f6 05 d6 23 03 00 02 	testb  $0x2,0x323d6(%rip)        # 42e30 <_gm_+0x370>
   10a5a:	0f 85 38 03 00 00    	jne    10d98 <dlmalloc+0x368>
   10a60:	48 81 fb e0 00 00 00 	cmp    $0xe0,%rbx
   10a67:	0f 87 c3 00 00 00    	ja     10b30 <dlmalloc+0x100>
   10a6d:	48 83 fb 0e          	cmp    $0xe,%rbx
   10a71:	0f 87 09 03 00 00    	ja     10d80 <dlmalloc+0x350>
   10a77:	b9 04 00 00 00       	mov    $0x4,%ecx
   10a7c:	41 bd 20 00 00 00    	mov    $0x20,%r13d
   10a82:	8b 15 38 20 03 00    	mov    0x32038(%rip),%edx        # 42ac0 <_gm_>
   10a88:	48 8d 2d 31 20 03 00 	lea    0x32031(%rip),%rbp        # 42ac0 <_gm_>
   10a8f:	89 d0                	mov    %edx,%eax
   10a91:	d3 e8                	shr    %cl,%eax
   10a93:	a8 03                	test   $0x3,%al
   10a95:	0f 84 45 03 00 00    	je     10de0 <dlmalloc+0x3b0>
   10a9b:	f7 d0                	not    %eax
   10a9d:	83 e0 01             	and    $0x1,%eax
   10aa0:	01 c1                	add    %eax,%ecx
   10aa2:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
   10aa5:	48 8d 74 c5 48       	lea    0x48(%rbp,%rax,8),%rsi
   10aaa:	4c 8b 66 10          	mov    0x10(%rsi),%r12
   10aae:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   10ab3:	48 39 c6             	cmp    %rax,%rsi
   10ab6:	0f 84 e4 0d 00 00    	je     118a0 <dlmalloc+0xe70>
   10abc:	48 39 05 15 20 03 00 	cmp    %rax,0x32015(%rip)        # 42ad8 <_gm_+0x18>
   10ac3:	0f 87 3f 07 00 00    	ja     11208 <dlmalloc+0x7d8>
   10ac9:	4c 39 60 18          	cmp    %r12,0x18(%rax)
   10acd:	0f 85 35 07 00 00    	jne    11208 <dlmalloc+0x7d8>
   10ad3:	48 89 70 18          	mov    %rsi,0x18(%rax)
   10ad7:	48 89 46 10          	mov    %rax,0x10(%rsi)
   10adb:	c1 e1 03             	shl    $0x3,%ecx
   10ade:	48 33 2d 9b 23 03 00 	xor    0x3239b(%rip),%rbp        # 42e80 <mparams>
   10ae5:	89 c8                	mov    %ecx,%eax
   10ae7:	83 c8 03             	or     $0x3,%eax
   10aea:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   10aef:	49 8d 04 0c          	lea    (%r12,%rcx,1),%rax
   10af3:	49 83 c4 10          	add    $0x10,%r12
   10af7:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
   10afc:	48 89 28             	mov    %rbp,(%rax)
   10aff:	4d 85 e4             	test   %r12,%r12
   10b02:	0f 85 20 02 00 00    	jne    10d28 <dlmalloc+0x2f8>
   10b08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10b0f:	00 
   10b10:	45 31 e4             	xor    %r12d,%r12d
   10b13:	f6 05 16 23 03 00 02 	testb  $0x2,0x32316(%rip)        # 42e30 <_gm_+0x370>
   10b1a:	0f 84 45 02 00 00    	je     10d65 <dlmalloc+0x335>
   10b20:	c7 05 0a 23 03 00 00 	movl   $0x0,0x3230a(%rip)        # 42e34 <_gm_+0x374>
   10b27:	00 00 00 
   10b2a:	e9 36 02 00 00       	jmp    10d65 <dlmalloc+0x335>
   10b2f:	90                   	nop
   10b30:	48 8b 3d 91 1f 03 00 	mov    0x31f91(%rip),%rdi        # 42ac8 <_gm_+0x8>
   10b37:	48 8d 2d 82 1f 03 00 	lea    0x31f82(%rip),%rbp        # 42ac0 <_gm_>
   10b3e:	49 89 f8             	mov    %rdi,%r8
   10b41:	48 81 fb 7f ff ff ff 	cmp    $0xffffffffffffff7f,%rbx
   10b48:	0f 86 62 01 00 00    	jbe    10cb0 <dlmalloc+0x280>
   10b4e:	48 8b 05 2b 23 03 00 	mov    0x3232b(%rip),%rax        # 42e80 <mparams>
   10b55:	48 83 ff ff          	cmp    $0xffffffffffffffff,%rdi
   10b59:	0f 84 01 04 00 00    	je     10f60 <dlmalloc+0x530>
   10b5f:	49 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%r13
   10b66:	48 85 c0             	test   %rax,%rax
   10b69:	75 a5                	jne    10b10 <dlmalloc+0xe0>
   10b6b:	e8 90 f6 ff ff       	call   10200 <init_mparams>
   10b70:	48 8b 05 19 23 03 00 	mov    0x32319(%rip),%rax        # 42e90 <mparams+0x10>
   10b77:	4d 8d 44 05 5f       	lea    0x5f(%r13,%rax,1),%r8
   10b7c:	48 f7 d8             	neg    %rax
   10b7f:	49 21 c0             	and    %rax,%r8
   10b82:	4d 39 c5             	cmp    %r8,%r13
   10b85:	73 89                	jae    10b10 <dlmalloc+0xe0>
   10b87:	48 8b 05 9a 22 03 00 	mov    0x3229a(%rip),%rax        # 42e28 <_gm_+0x368>
   10b8e:	48 85 c0             	test   %rax,%rax
   10b91:	74 1d                	je     10bb0 <dlmalloc+0x180>
   10b93:	48 8b 0d 7e 22 03 00 	mov    0x3227e(%rip),%rcx        # 42e18 <_gm_+0x358>
   10b9a:	49 8d 14 08          	lea    (%r8,%rcx,1),%rdx
   10b9e:	48 39 d0             	cmp    %rdx,%rax
   10ba1:	0f 82 69 ff ff ff    	jb     10b10 <dlmalloc+0xe0>
   10ba7:	48 39 d1             	cmp    %rdx,%rcx
   10baa:	0f 83 60 ff ff ff    	jae    10b10 <dlmalloc+0xe0>
   10bb0:	f6 05 79 22 03 00 04 	testb  $0x4,0x32279(%rip)        # 42e30 <_gm_+0x370>
   10bb7:	0f 85 cd 00 00 00    	jne    10c8a <dlmalloc+0x25a>
   10bbd:	48 8b 15 24 1f 03 00 	mov    0x31f24(%rip),%rdx        # 42ae8 <_gm_+0x28>
   10bc4:	48 85 d2             	test   %rdx,%rdx
   10bc7:	74 25                	je     10bee <dlmalloc+0x1be>
   10bc9:	4c 8d 35 68 22 03 00 	lea    0x32268(%rip),%r14        # 42e38 <_gm_+0x378>
   10bd0:	49 8b 06             	mov    (%r14),%rax
   10bd3:	48 39 c2             	cmp    %rax,%rdx
   10bd6:	72 0d                	jb     10be5 <dlmalloc+0x1b5>
   10bd8:	49 03 46 08          	add    0x8(%r14),%rax
   10bdc:	48 39 c2             	cmp    %rax,%rdx
   10bdf:	0f 82 a8 0f 00 00    	jb     11b8d <dlmalloc+0x115d>
   10be5:	4d 8b 76 10          	mov    0x10(%r14),%r14
   10be9:	4d 85 f6             	test   %r14,%r14
   10bec:	75 e2                	jne    10bd0 <dlmalloc+0x1a0>
   10bee:	b8 01 00 00 00       	mov    $0x1,%eax
   10bf3:	87 05 b7 22 03 00    	xchg   %eax,0x322b7(%rip)        # 42eb0 <malloc_global_mutex>
   10bf9:	85 c0                	test   %eax,%eax
   10bfb:	0f 85 20 08 00 00    	jne    11421 <dlmalloc+0x9f1>
   10c01:	31 ff                	xor    %edi,%edi
   10c03:	4c 89 04 24          	mov    %r8,(%rsp)
   10c07:	e8 04 f3 ff ff       	call   ff10 <sbrk>
   10c0c:	4c 8b 04 24          	mov    (%rsp),%r8
   10c10:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   10c14:	49 89 c6             	mov    %rax,%r14
   10c17:	74 67                	je     10c80 <dlmalloc+0x250>
   10c19:	48 8b 15 68 22 03 00 	mov    0x32268(%rip),%rdx        # 42e88 <mparams+0x8>
   10c20:	4d 89 c7             	mov    %r8,%r15
   10c23:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
   10c27:	49 85 c6             	test   %rax,%r14
   10c2a:	74 0f                	je     10c3b <dlmalloc+0x20b>
   10c2c:	4c 01 f0             	add    %r14,%rax
   10c2f:	48 f7 da             	neg    %rdx
   10c32:	4d 29 f7             	sub    %r14,%r15
   10c35:	48 21 d0             	and    %rdx,%rax
   10c38:	49 01 c7             	add    %rax,%r15
   10c3b:	4d 39 fd             	cmp    %r15,%r13
   10c3e:	73 40                	jae    10c80 <dlmalloc+0x250>
   10c40:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
   10c47:	ff ff 7f 
   10c4a:	49 39 c7             	cmp    %rax,%r15
   10c4d:	77 31                	ja     10c80 <dlmalloc+0x250>
   10c4f:	48 8b 0d d2 21 03 00 	mov    0x321d2(%rip),%rcx        # 42e28 <_gm_+0x368>
   10c56:	48 85 c9             	test   %rcx,%rcx
   10c59:	0f 84 6c 14 00 00    	je     120cb <dlmalloc+0x169b>
   10c5f:	48 8b 15 b2 21 03 00 	mov    0x321b2(%rip),%rdx        # 42e18 <_gm_+0x358>
   10c66:	49 8d 04 17          	lea    (%r15,%rdx,1),%rax
   10c6a:	48 39 c1             	cmp    %rax,%rcx
   10c6d:	72 11                	jb     10c80 <dlmalloc+0x250>
   10c6f:	48 39 c2             	cmp    %rax,%rdx
   10c72:	0f 82 53 14 00 00    	jb     120cb <dlmalloc+0x169b>
   10c78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10c7f:	00 
   10c80:	c7 05 26 22 03 00 00 	movl   $0x0,0x32226(%rip)        # 42eb0 <malloc_global_mutex>
   10c87:	00 00 00 
   10c8a:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
   10c91:	ff ff 7f 
   10c94:	49 39 c0             	cmp    %rax,%r8
   10c97:	0f 86 03 0d 00 00    	jbe    119a0 <dlmalloc+0xf70>
   10c9d:	e8 be 37 00 00       	call   14460 <__errno>
   10ca2:	45 31 e4             	xor    %r12d,%r12d
   10ca5:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   10cab:	e9 a8 00 00 00       	jmp    10d58 <dlmalloc+0x328>
   10cb0:	44 8b 0d 0d 1e 03 00 	mov    0x31e0d(%rip),%r9d        # 42ac4 <_gm_+0x4>
   10cb7:	4c 8d 6b 1f          	lea    0x1f(%rbx),%r13
   10cbb:	49 83 e5 f0          	and    $0xfffffffffffffff0,%r13
   10cbf:	45 85 c9             	test   %r9d,%r9d
   10cc2:	0f 85 d8 02 00 00    	jne    10fa0 <dlmalloc+0x570>
   10cc8:	48 8b 35 b1 21 03 00 	mov    0x321b1(%rip),%rsi        # 42e80 <mparams>
   10ccf:	49 39 fd             	cmp    %rdi,%r13
   10cd2:	0f 86 14 01 00 00    	jbe    10dec <dlmalloc+0x3bc>
   10cd8:	48 8b 05 f1 1d 03 00 	mov    0x31df1(%rip),%rax        # 42ad0 <_gm_+0x10>
   10cdf:	49 39 c5             	cmp    %rax,%r13
   10ce2:	0f 83 a8 0c 00 00    	jae    11990 <dlmalloc+0xf60>
   10ce8:	4c 8b 25 f9 1d 03 00 	mov    0x31df9(%rip),%r12        # 42ae8 <_gm_+0x28>
   10cef:	4c 29 e8             	sub    %r13,%rax
   10cf2:	48 31 f5             	xor    %rsi,%rbp
   10cf5:	48 89 05 d4 1d 03 00 	mov    %rax,0x31dd4(%rip)        # 42ad0 <_gm_+0x10>
   10cfc:	48 83 c8 01          	or     $0x1,%rax
   10d00:	4b 8d 14 2c          	lea    (%r12,%r13,1),%rdx
   10d04:	49 83 cd 03          	or     $0x3,%r13
   10d08:	49 83 c4 10          	add    $0x10,%r12
   10d0c:	48 89 15 d5 1d 03 00 	mov    %rdx,0x31dd5(%rip)        # 42ae8 <_gm_+0x28>
   10d13:	48 89 42 08          	mov    %rax,0x8(%rdx)
   10d17:	4d 89 6c 24 f8       	mov    %r13,-0x8(%r12)
   10d1c:	48 89 2a             	mov    %rbp,(%rdx)
   10d1f:	4d 85 e4             	test   %r12,%r12
   10d22:	0f 84 e8 fd ff ff    	je     10b10 <dlmalloc+0xe0>
   10d28:	e8 93 ac ff ff       	call   b9c0 <get_heap_base>
   10d2d:	49 39 c4             	cmp    %rax,%r12
   10d30:	0f 82 d2 04 00 00    	jb     11208 <dlmalloc+0x7d8>
   10d36:	4c 89 e0             	mov    %r12,%rax
   10d39:	48 f7 d0             	not    %rax
   10d3c:	48 39 d8             	cmp    %rbx,%rax
   10d3f:	0f 82 c3 04 00 00    	jb     11208 <dlmalloc+0x7d8>
   10d45:	31 ff                	xor    %edi,%edi
   10d47:	4c 01 e3             	add    %r12,%rbx
   10d4a:	e8 c1 f1 ff ff       	call   ff10 <sbrk>
   10d4f:	48 39 d8             	cmp    %rbx,%rax
   10d52:	0f 82 b0 04 00 00    	jb     11208 <dlmalloc+0x7d8>
   10d58:	f6 05 d1 20 03 00 02 	testb  $0x2,0x320d1(%rip)        # 42e30 <_gm_+0x370>
   10d5f:	0f 85 bb fd ff ff    	jne    10b20 <dlmalloc+0xf0>
   10d65:	48 83 c4 18          	add    $0x18,%rsp
   10d69:	4c 89 e0             	mov    %r12,%rax
   10d6c:	5b                   	pop    %rbx
   10d6d:	5d                   	pop    %rbp
   10d6e:	41 5c                	pop    %r12
   10d70:	41 5d                	pop    %r13
   10d72:	41 5e                	pop    %r14
   10d74:	41 5f                	pop    %r15
   10d76:	c3                   	ret    
   10d77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   10d7e:	00 00 
   10d80:	4c 8d 6b 1f          	lea    0x1f(%rbx),%r13
   10d84:	49 83 e5 f0          	and    $0xfffffffffffffff0,%r13
   10d88:	4c 89 e9             	mov    %r13,%rcx
   10d8b:	48 c1 e9 03          	shr    $0x3,%rcx
   10d8f:	e9 ee fc ff ff       	jmp    10a82 <dlmalloc+0x52>
   10d94:	0f 1f 40 00          	nopl   0x0(%rax)
   10d98:	b8 01 00 00 00       	mov    $0x1,%eax
   10d9d:	87 05 91 20 03 00    	xchg   %eax,0x32091(%rip)        # 42e34 <_gm_+0x374>
   10da3:	85 c0                	test   %eax,%eax
   10da5:	0f 84 b5 fc ff ff    	je     10a60 <dlmalloc+0x30>
   10dab:	ba 01 00 00 00       	mov    $0x1,%edx
   10db0:	8b 05 7e 20 03 00    	mov    0x3207e(%rip),%eax        # 42e34 <_gm_+0x374>
   10db6:	85 c0                	test   %eax,%eax
   10db8:	75 f6                	jne    10db0 <dlmalloc+0x380>
   10dba:	89 d0                	mov    %edx,%eax
   10dbc:	87 05 72 20 03 00    	xchg   %eax,0x32072(%rip)        # 42e34 <_gm_+0x374>
   10dc2:	85 c0                	test   %eax,%eax
   10dc4:	75 ea                	jne    10db0 <dlmalloc+0x380>
   10dc6:	e9 95 fc ff ff       	jmp    10a60 <dlmalloc+0x30>
   10dcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10dd0:	e8 2b f4 ff ff       	call   10200 <init_mparams>
   10dd5:	e9 79 fc ff ff       	jmp    10a53 <dlmalloc+0x23>
   10dda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10de0:	48 8b 3d e1 1c 03 00 	mov    0x31ce1(%rip),%rdi        # 42ac8 <_gm_+0x8>
   10de7:	4c 39 ef             	cmp    %r13,%rdi
   10dea:	72 5c                	jb     10e48 <dlmalloc+0x418>
   10dec:	4c 8b 25 ed 1c 03 00 	mov    0x31ced(%rip),%r12        # 42ae0 <_gm_+0x20>
   10df3:	48 89 f8             	mov    %rdi,%rax
   10df6:	48 33 2d 83 20 03 00 	xor    0x32083(%rip),%rbp        # 42e80 <mparams>
   10dfd:	4c 29 e8             	sub    %r13,%rax
   10e00:	49 8d 14 3c          	lea    (%r12,%rdi,1),%rdx
   10e04:	48 83 f8 1f          	cmp    $0x1f,%rax
   10e08:	0f 86 4c 0d 00 00    	jbe    11b5a <dlmalloc+0x112a>
   10e0e:	48 89 c6             	mov    %rax,%rsi
   10e11:	4b 8d 0c 2c          	lea    (%r12,%r13,1),%rcx
   10e15:	49 83 cd 03          	or     $0x3,%r13
   10e19:	48 89 05 a8 1c 03 00 	mov    %rax,0x31ca8(%rip)        # 42ac8 <_gm_+0x8>
   10e20:	48 83 ce 01          	or     $0x1,%rsi
   10e24:	48 89 0d b5 1c 03 00 	mov    %rcx,0x31cb5(%rip)        # 42ae0 <_gm_+0x20>
   10e2b:	48 89 71 08          	mov    %rsi,0x8(%rcx)
   10e2f:	48 89 02             	mov    %rax,(%rdx)
   10e32:	4d 89 6c 24 08       	mov    %r13,0x8(%r12)
   10e37:	48 89 29             	mov    %rbp,(%rcx)
   10e3a:	49 83 c4 10          	add    $0x10,%r12
   10e3e:	e9 dc fe ff ff       	jmp    10d1f <dlmalloc+0x2ef>
   10e43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10e48:	85 c0                	test   %eax,%eax
   10e4a:	0f 84 c0 03 00 00    	je     11210 <dlmalloc+0x7e0>
   10e50:	be 01 00 00 00       	mov    $0x1,%esi
   10e55:	d3 e0                	shl    %cl,%eax
   10e57:	41 89 f0             	mov    %esi,%r8d
   10e5a:	41 d3 e0             	shl    %cl,%r8d
   10e5d:	47 8d 0c 00          	lea    (%r8,%r8,1),%r9d
   10e61:	45 89 c8             	mov    %r9d,%r8d
   10e64:	41 f7 d8             	neg    %r8d
   10e67:	45 09 c8             	or     %r9d,%r8d
   10e6a:	44 21 c0             	and    %r8d,%eax
   10e6d:	89 c1                	mov    %eax,%ecx
   10e6f:	f7 d9                	neg    %ecx
   10e71:	21 c8                	and    %ecx,%eax
   10e73:	31 c9                	xor    %ecx,%ecx
   10e75:	f3 0f bc c8          	tzcnt  %eax,%ecx
   10e79:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
   10e7c:	4c 8d 44 c5 48       	lea    0x48(%rbp,%rax,8),%r8
   10e81:	4d 8b 60 10          	mov    0x10(%r8),%r12
   10e85:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   10e8a:	49 39 c0             	cmp    %rax,%r8
   10e8d:	0f 84 77 08 00 00    	je     1170a <dlmalloc+0xcda>
   10e93:	48 39 05 3e 1c 03 00 	cmp    %rax,0x31c3e(%rip)        # 42ad8 <_gm_+0x18>
   10e9a:	0f 87 68 03 00 00    	ja     11208 <dlmalloc+0x7d8>
   10ea0:	4c 39 60 18          	cmp    %r12,0x18(%rax)
   10ea4:	0f 85 5e 03 00 00    	jne    11208 <dlmalloc+0x7d8>
   10eaa:	4c 89 40 18          	mov    %r8,0x18(%rax)
   10eae:	49 89 40 10          	mov    %rax,0x10(%r8)
   10eb2:	8d 04 cd 00 00 00 00 	lea    0x0(,%rcx,8),%eax
   10eb9:	48 8b 35 c0 1f 03 00 	mov    0x31fc0(%rip),%rsi        # 42e80 <mparams>
   10ec0:	48 89 c2             	mov    %rax,%rdx
   10ec3:	48 89 c1             	mov    %rax,%rcx
   10ec6:	4c 01 e0             	add    %r12,%rax
   10ec9:	4c 29 ea             	sub    %r13,%rdx
   10ecc:	48 31 ee             	xor    %rbp,%rsi
   10ecf:	48 83 fa 1f          	cmp    $0x1f,%rdx
   10ed3:	0f 86 9d 0c 00 00    	jbe    11b76 <dlmalloc+0x1146>
   10ed9:	4c 89 e9             	mov    %r13,%rcx
   10edc:	4d 01 e5             	add    %r12,%r13
   10edf:	48 83 c9 03          	or     $0x3,%rcx
   10ee3:	49 89 4c 24 08       	mov    %rcx,0x8(%r12)
   10ee8:	48 89 d1             	mov    %rdx,%rcx
   10eeb:	48 83 c9 01          	or     $0x1,%rcx
   10eef:	49 89 75 00          	mov    %rsi,0x0(%r13)
   10ef3:	49 89 4d 08          	mov    %rcx,0x8(%r13)
   10ef7:	48 89 10             	mov    %rdx,(%rax)
   10efa:	48 85 ff             	test   %rdi,%rdi
   10efd:	74 4e                	je     10f4d <dlmalloc+0x51d>
   10eff:	48 c1 ef 03          	shr    $0x3,%rdi
   10f03:	48 8b 05 d6 1b 03 00 	mov    0x31bd6(%rip),%rax        # 42ae0 <_gm_+0x20>
   10f0a:	8d 34 3f             	lea    (%rdi,%rdi,1),%esi
   10f0d:	48 89 f9             	mov    %rdi,%rcx
   10f10:	8b 3d aa 1b 03 00    	mov    0x31baa(%rip),%edi        # 42ac0 <_gm_>
   10f16:	4c 8d 44 f5 48       	lea    0x48(%rbp,%rsi,8),%r8
   10f1b:	be 01 00 00 00       	mov    $0x1,%esi
   10f20:	d3 e6                	shl    %cl,%esi
   10f22:	89 f1                	mov    %esi,%ecx
   10f24:	85 f7                	test   %esi,%edi
   10f26:	0f 84 a3 0e 00 00    	je     11dcf <dlmalloc+0x139f>
   10f2c:	49 8b 48 10          	mov    0x10(%r8),%rcx
   10f30:	48 3b 0d a1 1b 03 00 	cmp    0x31ba1(%rip),%rcx        # 42ad8 <_gm_+0x18>
   10f37:	0f 82 cb 02 00 00    	jb     11208 <dlmalloc+0x7d8>
   10f3d:	49 89 40 10          	mov    %rax,0x10(%r8)
   10f41:	48 89 41 18          	mov    %rax,0x18(%rcx)
   10f45:	48 89 48 10          	mov    %rcx,0x10(%rax)
   10f49:	4c 89 40 18          	mov    %r8,0x18(%rax)
   10f4d:	48 89 15 74 1b 03 00 	mov    %rdx,0x31b74(%rip)        # 42ac8 <_gm_+0x8>
   10f54:	4c 89 2d 85 1b 03 00 	mov    %r13,0x31b85(%rip)        # 42ae0 <_gm_+0x20>
   10f5b:	e9 da fe ff ff       	jmp    10e3a <dlmalloc+0x40a>
   10f60:	4c 8b 25 79 1b 03 00 	mov    0x31b79(%rip),%r12        # 42ae0 <_gm_+0x20>
   10f67:	48 31 c5             	xor    %rax,%rbp
   10f6a:	49 8d 54 24 ff       	lea    -0x1(%r12),%rdx
   10f6f:	48 c7 05 4e 1b 03 00 	movq   $0x0,0x31b4e(%rip)        # 42ac8 <_gm_+0x8>
   10f76:	00 00 00 00 
   10f7a:	48 c7 05 5b 1b 03 00 	movq   $0x0,0x31b5b(%rip)        # 42ae0 <_gm_+0x20>
   10f81:	00 00 00 00 
   10f85:	49 89 7c 24 08       	mov    %rdi,0x8(%r12)
   10f8a:	48 89 2a             	mov    %rbp,(%rdx)
   10f8d:	48 83 4a 08 01       	orq    $0x1,0x8(%rdx)
   10f92:	e9 a3 fe ff ff       	jmp    10e3a <dlmalloc+0x40a>
   10f97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   10f9e:	00 00 
   10fa0:	4c 89 e8             	mov    %r13,%rax
   10fa3:	4c 89 ee             	mov    %r13,%rsi
   10fa6:	48 c1 e8 08          	shr    $0x8,%rax
   10faa:	48 f7 de             	neg    %rsi
   10fad:	41 89 c2             	mov    %eax,%r10d
   10fb0:	85 c0                	test   %eax,%eax
   10fb2:	0f 85 40 04 00 00    	jne    113f8 <dlmalloc+0x9c8>
   10fb8:	48 8b 05 59 1d 03 00 	mov    0x31d59(%rip),%rax        # 42d18 <_gm_+0x258>
   10fbf:	b9 39 00 00 00       	mov    $0x39,%ecx
   10fc4:	48 85 c0             	test   %rax,%rax
   10fc7:	0f 84 d8 0b 00 00    	je     11ba5 <dlmalloc+0x1175>
   10fcd:	4c 89 ea             	mov    %r13,%rdx
   10fd0:	48 d3 e2             	shl    %cl,%rdx
   10fd3:	48 89 d1             	mov    %rdx,%rcx
   10fd6:	45 31 db             	xor    %r11d,%r11d
   10fd9:	45 31 e4             	xor    %r12d,%r12d
   10fdc:	eb 05                	jmp    10fe3 <dlmalloc+0x5b3>
   10fde:	66 90                	xchg   %ax,%ax
   10fe0:	48 01 c9             	add    %rcx,%rcx
   10fe3:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10fe7:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
   10feb:	4c 29 ea             	sub    %r13,%rdx
   10fee:	48 39 f2             	cmp    %rsi,%rdx
   10ff1:	73 0f                	jae    11002 <dlmalloc+0x5d2>
   10ff3:	48 85 d2             	test   %rdx,%rdx
   10ff6:	0f 84 67 0b 00 00    	je     11b63 <dlmalloc+0x1133>
   10ffc:	48 89 d6             	mov    %rdx,%rsi
   10fff:	49 89 c4             	mov    %rax,%r12
   11002:	48 89 ca             	mov    %rcx,%rdx
   11005:	4c 8b 70 28          	mov    0x28(%rax),%r14
   11009:	48 c1 ea 3f          	shr    $0x3f,%rdx
   1100d:	48 83 c2 04          	add    $0x4,%rdx
   11011:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   11015:	4d 85 f6             	test   %r14,%r14
   11018:	74 07                	je     11021 <dlmalloc+0x5f1>
   1101a:	49 39 c6             	cmp    %rax,%r14
   1101d:	4d 0f 45 de          	cmovne %r14,%r11
   11021:	48 85 c0             	test   %rax,%rax
   11024:	75 ba                	jne    10fe0 <dlmalloc+0x5b0>
   11026:	4c 89 e0             	mov    %r12,%rax
   11029:	4c 09 d8             	or     %r11,%rax
   1102c:	0f 84 8d 0a 00 00    	je     11abf <dlmalloc+0x108f>
   11032:	48 89 f2             	mov    %rsi,%rdx
   11035:	4d 85 db             	test   %r11,%r11
   11038:	74 31                	je     1106b <dlmalloc+0x63b>
   1103a:	4c 89 d8             	mov    %r11,%rax
   1103d:	eb 04                	jmp    11043 <dlmalloc+0x613>
   1103f:	90                   	nop
   11040:	48 89 c8             	mov    %rcx,%rax
   11043:	48 8b 70 08          	mov    0x8(%rax),%rsi
   11047:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   1104b:	4c 29 ee             	sub    %r13,%rsi
   1104e:	48 39 d6             	cmp    %rdx,%rsi
   11051:	73 06                	jae    11059 <dlmalloc+0x629>
   11053:	48 89 f2             	mov    %rsi,%rdx
   11056:	49 89 c4             	mov    %rax,%r12
   11059:	48 8b 48 20          	mov    0x20(%rax),%rcx
   1105d:	48 85 c9             	test   %rcx,%rcx
   11060:	75 de                	jne    11040 <dlmalloc+0x610>
   11062:	48 8b 48 28          	mov    0x28(%rax),%rcx
   11066:	48 85 c9             	test   %rcx,%rcx
   11069:	75 d5                	jne    11040 <dlmalloc+0x610>
   1106b:	4d 85 e4             	test   %r12,%r12
   1106e:	0f 84 54 fc ff ff    	je     10cc8 <dlmalloc+0x298>
   11074:	4c 89 c0             	mov    %r8,%rax
   11077:	4c 29 e8             	sub    %r13,%rax
   1107a:	48 39 d0             	cmp    %rdx,%rax
   1107d:	0f 86 45 fc ff ff    	jbe    10cc8 <dlmalloc+0x298>
   11083:	4c 8b 15 4e 1a 03 00 	mov    0x31a4e(%rip),%r10        # 42ad8 <_gm_+0x18>
   1108a:	4d 39 e2             	cmp    %r12,%r10
   1108d:	0f 87 75 01 00 00    	ja     11208 <dlmalloc+0x7d8>
   11093:	4b 8d 3c 2c          	lea    (%r12,%r13,1),%rdi
   11097:	4c 39 e7             	cmp    %r12,%rdi
   1109a:	0f 86 68 01 00 00    	jbe    11208 <dlmalloc+0x7d8>
   110a0:	49 8b 74 24 18       	mov    0x18(%r12),%rsi
   110a5:	4d 8b 74 24 30       	mov    0x30(%r12),%r14
   110aa:	4c 39 e6             	cmp    %r12,%rsi
   110ad:	0f 84 ff 0a 00 00    	je     11bb2 <dlmalloc+0x1182>
   110b3:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   110b8:	49 39 c2             	cmp    %rax,%r10
   110bb:	0f 87 47 01 00 00    	ja     11208 <dlmalloc+0x7d8>
   110c1:	4c 39 60 18          	cmp    %r12,0x18(%rax)
   110c5:	0f 85 3d 01 00 00    	jne    11208 <dlmalloc+0x7d8>
   110cb:	4c 39 66 10          	cmp    %r12,0x10(%rsi)
   110cf:	0f 85 33 01 00 00    	jne    11208 <dlmalloc+0x7d8>
   110d5:	48 89 70 18          	mov    %rsi,0x18(%rax)
   110d9:	48 89 46 10          	mov    %rax,0x10(%rsi)
   110dd:	4d 85 f6             	test   %r14,%r14
   110e0:	74 79                	je     1115b <dlmalloc+0x72b>
   110e2:	41 8b 44 24 38       	mov    0x38(%r12),%eax
   110e7:	48 89 c1             	mov    %rax,%rcx
   110ea:	4c 8d 58 4a          	lea    0x4a(%rax),%r11
   110ee:	4c 39 a4 c5 58 02 00 	cmp    %r12,0x258(%rbp,%rax,8)
   110f5:	00 
   110f6:	0f 84 e3 0c 00 00    	je     11ddf <dlmalloc+0x13af>
   110fc:	4d 39 f2             	cmp    %r14,%r10
   110ff:	0f 87 03 01 00 00    	ja     11208 <dlmalloc+0x7d8>
   11105:	4d 39 66 20          	cmp    %r12,0x20(%r14)
   11109:	0f 84 bc 0d 00 00    	je     11ecb <dlmalloc+0x149b>
   1110f:	49 89 76 28          	mov    %rsi,0x28(%r14)
   11113:	48 85 f6             	test   %rsi,%rsi
   11116:	74 43                	je     1115b <dlmalloc+0x72b>
   11118:	49 39 f2             	cmp    %rsi,%r10
   1111b:	0f 87 e7 00 00 00    	ja     11208 <dlmalloc+0x7d8>
   11121:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   11126:	4c 89 76 30          	mov    %r14,0x30(%rsi)
   1112a:	48 85 c0             	test   %rax,%rax
   1112d:	74 11                	je     11140 <dlmalloc+0x710>
   1112f:	49 39 c2             	cmp    %rax,%r10
   11132:	0f 87 d0 00 00 00    	ja     11208 <dlmalloc+0x7d8>
   11138:	48 89 46 20          	mov    %rax,0x20(%rsi)
   1113c:	48 89 70 30          	mov    %rsi,0x30(%rax)
   11140:	49 8b 44 24 28       	mov    0x28(%r12),%rax
   11145:	48 85 c0             	test   %rax,%rax
   11148:	74 11                	je     1115b <dlmalloc+0x72b>
   1114a:	49 39 c2             	cmp    %rax,%r10
   1114d:	0f 87 b5 00 00 00    	ja     11208 <dlmalloc+0x7d8>
   11153:	48 89 46 28          	mov    %rax,0x28(%rsi)
   11157:	48 89 70 30          	mov    %rsi,0x30(%rax)
   1115b:	48 8b 35 1e 1d 03 00 	mov    0x31d1e(%rip),%rsi        # 42e80 <mparams>
   11162:	48 89 e9             	mov    %rbp,%rcx
   11165:	48 31 f1             	xor    %rsi,%rcx
   11168:	48 83 fa 1f          	cmp    $0x1f,%rdx
   1116c:	0f 86 3c 0c 00 00    	jbe    11dae <dlmalloc+0x137e>
   11172:	4c 89 e8             	mov    %r13,%rax
   11175:	48 83 c8 03          	or     $0x3,%rax
   11179:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   1117e:	48 89 d0             	mov    %rdx,%rax
   11181:	48 89 0f             	mov    %rcx,(%rdi)
   11184:	48 83 c8 01          	or     $0x1,%rax
   11188:	48 89 d1             	mov    %rdx,%rcx
   1118b:	48 89 47 08          	mov    %rax,0x8(%rdi)
   1118f:	48 c1 e9 03          	shr    $0x3,%rcx
   11193:	48 89 14 17          	mov    %rdx,(%rdi,%rdx,1)
   11197:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
   1119e:	0f 87 11 0b 00 00    	ja     11cb5 <dlmalloc+0x1285>
   111a4:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
   111a7:	44 8b 0d 12 19 03 00 	mov    0x31912(%rip),%r9d        # 42ac0 <_gm_>
   111ae:	48 8d 54 c5 48       	lea    0x48(%rbp,%rax,8),%rdx
   111b3:	b8 01 00 00 00       	mov    $0x1,%eax
   111b8:	d3 e0                	shl    %cl,%eax
   111ba:	41 85 c1             	test   %eax,%r9d
   111bd:	0f 84 14 0e 00 00    	je     11fd7 <dlmalloc+0x15a7>
   111c3:	48 8b 42 10          	mov    0x10(%rdx),%rax
   111c7:	49 39 c2             	cmp    %rax,%r10
   111ca:	77 3c                	ja     11208 <dlmalloc+0x7d8>
   111cc:	48 89 7a 10          	mov    %rdi,0x10(%rdx)
   111d0:	48 89 78 18          	mov    %rdi,0x18(%rax)
   111d4:	48 89 47 10          	mov    %rax,0x10(%rdi)
   111d8:	48 89 57 18          	mov    %rdx,0x18(%rdi)
   111dc:	49 83 c4 10          	add    $0x10,%r12
   111e0:	4c 89 c7             	mov    %r8,%rdi
   111e3:	0f 85 3f fb ff ff    	jne    10d28 <dlmalloc+0x2f8>
   111e9:	e9 e1 fa ff ff       	jmp    10ccf <dlmalloc+0x29f>
   111ee:	4c 3b 05 e3 18 03 00 	cmp    0x318e3(%rip),%r8        # 42ad8 <_gm_+0x18>
   111f5:	72 11                	jb     11208 <dlmalloc+0x7d8>
   111f7:	49 39 50 18          	cmp    %rdx,0x18(%r8)
   111fb:	0f 84 85 0e 00 00    	je     12086 <dlmalloc+0x1656>
   11201:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11208:	e8 2a 4b 01 00       	call   25d37 <abort>
   1120d:	0f 1f 00             	nopl   (%rax)
   11210:	44 8b 0d ad 18 03 00 	mov    0x318ad(%rip),%r9d        # 42ac4 <_gm_+0x4>
   11217:	48 8b 35 62 1c 03 00 	mov    0x31c62(%rip),%rsi        # 42e80 <mparams>
   1121e:	45 85 c9             	test   %r9d,%r9d
   11221:	0f 84 b1 fa ff ff    	je     10cd8 <dlmalloc+0x2a8>
   11227:	44 89 c8             	mov    %r9d,%eax
   1122a:	f7 d8                	neg    %eax
   1122c:	44 21 c8             	and    %r9d,%eax
   1122f:	f3 0f bc c0          	tzcnt  %eax,%eax
   11233:	89 c0                	mov    %eax,%eax
   11235:	48 8b 84 c5 58 02 00 	mov    0x258(%rbp,%rax,8),%rax
   1123c:	00 
   1123d:	4c 8b 40 08          	mov    0x8(%rax),%r8
   11241:	49 89 c4             	mov    %rax,%r12
   11244:	49 83 e0 f8          	and    $0xfffffffffffffff8,%r8
   11248:	4d 29 e8             	sub    %r13,%r8
   1124b:	eb 1c                	jmp    11269 <dlmalloc+0x839>
   1124d:	0f 1f 00             	nopl   (%rax)
   11250:	48 8b 41 08          	mov    0x8(%rcx),%rax
   11254:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   11258:	4c 29 e8             	sub    %r13,%rax
   1125b:	4c 39 c0             	cmp    %r8,%rax
   1125e:	73 06                	jae    11266 <dlmalloc+0x836>
   11260:	49 89 c0             	mov    %rax,%r8
   11263:	49 89 cc             	mov    %rcx,%r12
   11266:	48 89 c8             	mov    %rcx,%rax
   11269:	48 8b 48 20          	mov    0x20(%rax),%rcx
   1126d:	48 85 c9             	test   %rcx,%rcx
   11270:	75 de                	jne    11250 <dlmalloc+0x820>
   11272:	48 8b 48 28          	mov    0x28(%rax),%rcx
   11276:	48 85 c9             	test   %rcx,%rcx
   11279:	75 d5                	jne    11250 <dlmalloc+0x820>
   1127b:	4c 8b 1d 56 18 03 00 	mov    0x31856(%rip),%r11        # 42ad8 <_gm_+0x18>
   11282:	4d 39 e3             	cmp    %r12,%r11
   11285:	77 81                	ja     11208 <dlmalloc+0x7d8>
   11287:	4f 8d 14 2c          	lea    (%r12,%r13,1),%r10
   1128b:	4d 39 e2             	cmp    %r12,%r10
   1128e:	0f 86 74 ff ff ff    	jbe    11208 <dlmalloc+0x7d8>
   11294:	49 8b 74 24 18       	mov    0x18(%r12),%rsi
   11299:	4d 8b 7c 24 30       	mov    0x30(%r12),%r15
   1129e:	4c 39 e6             	cmp    %r12,%rsi
   112a1:	0f 84 9e 0b 00 00    	je     11e45 <dlmalloc+0x1415>
   112a7:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   112ac:	49 39 c3             	cmp    %rax,%r11
   112af:	0f 87 53 ff ff ff    	ja     11208 <dlmalloc+0x7d8>
   112b5:	4c 39 60 18          	cmp    %r12,0x18(%rax)
   112b9:	0f 85 49 ff ff ff    	jne    11208 <dlmalloc+0x7d8>
   112bf:	4c 39 66 10          	cmp    %r12,0x10(%rsi)
   112c3:	0f 85 3f ff ff ff    	jne    11208 <dlmalloc+0x7d8>
   112c9:	48 89 70 18          	mov    %rsi,0x18(%rax)
   112cd:	48 89 46 10          	mov    %rax,0x10(%rsi)
   112d1:	4d 85 ff             	test   %r15,%r15
   112d4:	74 79                	je     1134f <dlmalloc+0x91f>
   112d6:	41 8b 4c 24 38       	mov    0x38(%r12),%ecx
   112db:	48 89 c8             	mov    %rcx,%rax
   112de:	4c 8d 71 4a          	lea    0x4a(%rcx),%r14
   112e2:	4c 39 a4 cd 58 02 00 	cmp    %r12,0x258(%rbp,%rcx,8)
   112e9:	00 
   112ea:	0f 84 f8 0c 00 00    	je     11fe8 <dlmalloc+0x15b8>
   112f0:	4d 39 fb             	cmp    %r15,%r11
   112f3:	0f 87 0f ff ff ff    	ja     11208 <dlmalloc+0x7d8>
   112f9:	4d 39 67 20          	cmp    %r12,0x20(%r15)
   112fd:	0f 84 55 0e 00 00    	je     12158 <dlmalloc+0x1728>
   11303:	49 89 77 28          	mov    %rsi,0x28(%r15)
   11307:	48 85 f6             	test   %rsi,%rsi
   1130a:	74 43                	je     1134f <dlmalloc+0x91f>
   1130c:	49 39 f3             	cmp    %rsi,%r11
   1130f:	0f 87 f3 fe ff ff    	ja     11208 <dlmalloc+0x7d8>
   11315:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   1131a:	4c 89 7e 30          	mov    %r15,0x30(%rsi)
   1131e:	48 85 c0             	test   %rax,%rax
   11321:	74 11                	je     11334 <dlmalloc+0x904>
   11323:	49 39 c3             	cmp    %rax,%r11
   11326:	0f 87 dc fe ff ff    	ja     11208 <dlmalloc+0x7d8>
   1132c:	48 89 46 20          	mov    %rax,0x20(%rsi)
   11330:	48 89 70 30          	mov    %rsi,0x30(%rax)
   11334:	49 8b 44 24 28       	mov    0x28(%r12),%rax
   11339:	48 85 c0             	test   %rax,%rax
   1133c:	74 11                	je     1134f <dlmalloc+0x91f>
   1133e:	49 39 c3             	cmp    %rax,%r11
   11341:	0f 87 c1 fe ff ff    	ja     11208 <dlmalloc+0x7d8>
   11347:	48 89 46 28          	mov    %rax,0x28(%rsi)
   1134b:	48 89 70 30          	mov    %rsi,0x30(%rax)
   1134f:	48 8b 35 2a 1b 03 00 	mov    0x31b2a(%rip),%rsi        # 42e80 <mparams>
   11356:	48 89 e9             	mov    %rbp,%rcx
   11359:	48 31 f1             	xor    %rsi,%rcx
   1135c:	49 83 f8 1f          	cmp    $0x1f,%r8
   11360:	0f 86 79 0b 00 00    	jbe    11edf <dlmalloc+0x14af>
   11366:	4c 89 e8             	mov    %r13,%rax
   11369:	48 83 c8 03          	or     $0x3,%rax
   1136d:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   11372:	4c 89 c0             	mov    %r8,%rax
   11375:	48 83 c8 01          	or     $0x1,%rax
   11379:	49 89 0a             	mov    %rcx,(%r10)
   1137c:	49 89 42 08          	mov    %rax,0x8(%r10)
   11380:	4f 89 04 02          	mov    %r8,(%r10,%r8,1)
   11384:	48 85 ff             	test   %rdi,%rdi
   11387:	74 46                	je     113cf <dlmalloc+0x99f>
   11389:	48 c1 ef 03          	shr    $0x3,%rdi
   1138d:	41 be 01 00 00 00    	mov    $0x1,%r14d
   11393:	48 8b 05 46 17 03 00 	mov    0x31746(%rip),%rax        # 42ae0 <_gm_+0x20>
   1139a:	48 89 f9             	mov    %rdi,%rcx
   1139d:	44 8d 0c 3f          	lea    (%rdi,%rdi,1),%r9d
   113a1:	41 d3 e6             	shl    %cl,%r14d
   113a4:	4e 8d 4c cd 48       	lea    0x48(%rbp,%r9,8),%r9
   113a9:	44 85 f2             	test   %r14d,%edx
   113ac:	0f 84 3a 0e 00 00    	je     121ec <dlmalloc+0x17bc>
   113b2:	49 8b 51 10          	mov    0x10(%r9),%rdx
   113b6:	49 39 d3             	cmp    %rdx,%r11
   113b9:	0f 87 49 fe ff ff    	ja     11208 <dlmalloc+0x7d8>
   113bf:	49 89 41 10          	mov    %rax,0x10(%r9)
   113c3:	48 89 42 18          	mov    %rax,0x18(%rdx)
   113c7:	48 89 50 10          	mov    %rdx,0x10(%rax)
   113cb:	4c 89 48 18          	mov    %r9,0x18(%rax)
   113cf:	4c 89 05 f2 16 03 00 	mov    %r8,0x316f2(%rip)        # 42ac8 <_gm_+0x8>
   113d6:	4c 89 15 03 17 03 00 	mov    %r10,0x31703(%rip)        # 42ae0 <_gm_+0x20>
   113dd:	49 83 c4 10          	add    $0x10,%r12
   113e1:	0f 85 41 f9 ff ff    	jne    10d28 <dlmalloc+0x2f8>
   113e7:	48 8b 3d da 16 03 00 	mov    0x316da(%rip),%rdi        # 42ac8 <_gm_+0x8>
   113ee:	e9 dc f8 ff ff       	jmp    10ccf <dlmalloc+0x29f>
   113f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   113f8:	3d ff ff 00 00       	cmp    $0xffff,%eax
   113fd:	0f 86 fd 06 00 00    	jbe    11b00 <dlmalloc+0x10d0>
   11403:	48 8b 05 06 1a 03 00 	mov    0x31a06(%rip),%rax        # 42e10 <_gm_+0x350>
   1140a:	4c 89 e9             	mov    %r13,%rcx
   1140d:	41 ba 1f 00 00 00    	mov    $0x1f,%r10d
   11413:	48 85 c0             	test   %rax,%rax
   11416:	0f 85 ba fb ff ff    	jne    10fd6 <dlmalloc+0x5a6>
   1141c:	e9 a7 f8 ff ff       	jmp    10cc8 <dlmalloc+0x298>
   11421:	45 31 f6             	xor    %r14d,%r14d
   11424:	48 8d 15 85 1a 03 00 	lea    0x31a85(%rip),%rdx        # 42eb0 <malloc_global_mutex>
   1142b:	b9 01 00 00 00       	mov    $0x1,%ecx
   11430:	8b 02                	mov    (%rdx),%eax
   11432:	85 c0                	test   %eax,%eax
   11434:	75 fa                	jne    11430 <dlmalloc+0xa00>
   11436:	89 c8                	mov    %ecx,%eax
   11438:	87 05 72 1a 03 00    	xchg   %eax,0x31a72(%rip)        # 42eb0 <malloc_global_mutex>
   1143e:	85 c0                	test   %eax,%eax
   11440:	75 ee                	jne    11430 <dlmalloc+0xa00>
   11442:	4d 85 f6             	test   %r14,%r14
   11445:	0f 84 b6 f7 ff ff    	je     10c01 <dlmalloc+0x1d1>
   1144b:	48 8b 05 3e 1a 03 00 	mov    0x31a3e(%rip),%rax        # 42e90 <mparams+0x10>
   11452:	4c 8d 78 5f          	lea    0x5f(%rax),%r15
   11456:	4c 2b 3d 73 16 03 00 	sub    0x31673(%rip),%r15        # 42ad0 <_gm_+0x10>
   1145d:	48 f7 d8             	neg    %rax
   11460:	4d 01 ef             	add    %r13,%r15
   11463:	49 21 c7             	and    %rax,%r15
   11466:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
   1146d:	ff ff 7f 
   11470:	49 39 c7             	cmp    %rax,%r15
   11473:	0f 87 07 f8 ff ff    	ja     10c80 <dlmalloc+0x250>
   11479:	4c 89 ff             	mov    %r15,%rdi
   1147c:	4c 89 04 24          	mov    %r8,(%rsp)
   11480:	e8 8b ea ff ff       	call   ff10 <sbrk>
   11485:	4c 8b 04 24          	mov    (%rsp),%r8
   11489:	49 89 c4             	mov    %rax,%r12
   1148c:	49 8b 46 08          	mov    0x8(%r14),%rax
   11490:	49 03 06             	add    (%r14),%rax
   11493:	49 39 c4             	cmp    %rax,%r12
   11496:	0f 85 4b 0c 00 00    	jne    120e7 <dlmalloc+0x16b7>
   1149c:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   114a0:	0f 84 da f7 ff ff    	je     10c80 <dlmalloc+0x250>
   114a6:	c7 05 00 1a 03 00 00 	movl   $0x0,0x31a00(%rip)        # 42eb0 <malloc_global_mutex>
   114ad:	00 00 00 
   114b0:	48 8b 05 61 19 03 00 	mov    0x31961(%rip),%rax        # 42e18 <_gm_+0x358>
   114b7:	4c 01 f8             	add    %r15,%rax
   114ba:	48 3b 05 5f 19 03 00 	cmp    0x3195f(%rip),%rax        # 42e20 <_gm_+0x360>
   114c1:	48 89 05 50 19 03 00 	mov    %rax,0x31950(%rip)        # 42e18 <_gm_+0x358>
   114c8:	76 07                	jbe    114d1 <dlmalloc+0xaa1>
   114ca:	48 89 05 4f 19 03 00 	mov    %rax,0x3194f(%rip)        # 42e20 <_gm_+0x360>
   114d1:	48 8b 35 10 16 03 00 	mov    0x31610(%rip),%rsi        # 42ae8 <_gm_+0x28>
   114d8:	48 8d 05 59 19 03 00 	lea    0x31959(%rip),%rax        # 42e38 <_gm_+0x378>
   114df:	48 85 f6             	test   %rsi,%rsi
   114e2:	0f 84 c8 03 00 00    	je     118b0 <dlmalloc+0xe80>
   114e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   114ef:	00 
   114f0:	48 8b 10             	mov    (%rax),%rdx
   114f3:	48 8b 48 08          	mov    0x8(%rax),%rcx
   114f7:	48 8d 3c 0a          	lea    (%rdx,%rcx,1),%rdi
   114fb:	49 39 fc             	cmp    %rdi,%r12
   114fe:	0f 84 14 03 00 00    	je     11818 <dlmalloc+0xde8>
   11504:	48 8b 40 10          	mov    0x10(%rax),%rax
   11508:	48 85 c0             	test   %rax,%rax
   1150b:	75 e3                	jne    114f0 <dlmalloc+0xac0>
   1150d:	4c 39 25 c4 15 03 00 	cmp    %r12,0x315c4(%rip)        # 42ad8 <_gm_+0x18>
   11514:	76 07                	jbe    1151d <dlmalloc+0xaed>
   11516:	4c 89 25 bb 15 03 00 	mov    %r12,0x315bb(%rip)        # 42ad8 <_gm_+0x18>
   1151d:	4b 8d 14 3c          	lea    (%r12,%r15,1),%rdx
   11521:	48 8d 05 10 19 03 00 	lea    0x31910(%rip),%rax        # 42e38 <_gm_+0x378>
   11528:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1152f:	00 
   11530:	48 39 10             	cmp    %rdx,(%rax)
   11533:	0f 84 e7 01 00 00    	je     11720 <dlmalloc+0xcf0>
   11539:	48 8b 40 10          	mov    0x10(%rax),%rax
   1153d:	48 85 c0             	test   %rax,%rax
   11540:	75 ee                	jne    11530 <dlmalloc+0xb00>
   11542:	4d 89 e0             	mov    %r12,%r8
   11545:	49 8d 7c 24 10       	lea    0x10(%r12),%rdi
   1154a:	41 83 e0 0f          	and    $0xf,%r8d
   1154e:	48 8d 05 e3 18 03 00 	lea    0x318e3(%rip),%rax        # 42e38 <_gm_+0x378>
   11555:	0f 1f 00             	nopl   (%rax)
   11558:	48 8b 10             	mov    (%rax),%rdx
   1155b:	48 39 d6             	cmp    %rdx,%rsi
   1155e:	72 09                	jb     11569 <dlmalloc+0xb39>
   11560:	48 03 50 08          	add    0x8(%rax),%rdx
   11564:	48 39 d6             	cmp    %rdx,%rsi
   11567:	72 09                	jb     11572 <dlmalloc+0xb42>
   11569:	48 8b 40 10          	mov    0x10(%rax),%rax
   1156d:	48 85 c0             	test   %rax,%rax
   11570:	75 e6                	jne    11558 <dlmalloc+0xb28>
   11572:	48 8b 48 08          	mov    0x8(%rax),%rcx
   11576:	48 03 08             	add    (%rax),%rcx
   11579:	48 c7 c2 a1 ff ff ff 	mov    $0xffffffffffffffa1,%rdx
   11580:	48 8d 41 b1          	lea    -0x4f(%rcx),%rax
   11584:	a8 0f                	test   $0xf,%al
   11586:	74 0a                	je     11592 <dlmalloc+0xb62>
   11588:	48 f7 d8             	neg    %rax
   1158b:	83 e0 0f             	and    $0xf,%eax
   1158e:	48 8d 50 a1          	lea    -0x5f(%rax),%rdx
   11592:	48 01 ca             	add    %rcx,%rdx
   11595:	48 8d 46 20          	lea    0x20(%rsi),%rax
   11599:	4d 8d 4f b0          	lea    -0x50(%r15),%r9
   1159d:	48 39 c2             	cmp    %rax,%rdx
   115a0:	48 0f 42 d6          	cmovb  %rsi,%rdx
   115a4:	4c 8d 52 10          	lea    0x10(%rdx),%r10
   115a8:	4d 85 c0             	test   %r8,%r8
   115ab:	0f 84 cf 03 00 00    	je     11980 <dlmalloc+0xf50>
   115b1:	48 f7 df             	neg    %rdi
   115b4:	4c 89 c8             	mov    %r9,%rax
   115b7:	83 e7 0f             	and    $0xf,%edi
   115ba:	4d 8d 04 3c          	lea    (%r12,%rdi,1),%r8
   115be:	48 29 f8             	sub    %rdi,%rax
   115c1:	48 89 05 08 15 03 00 	mov    %rax,0x31508(%rip)        # 42ad0 <_gm_+0x10>
   115c8:	48 83 c8 01          	or     $0x1,%rax
   115cc:	f3 0f 6f 05 64 18 03 	movdqu 0x31864(%rip),%xmm0        # 42e38 <_gm_+0x378>
   115d3:	00 
   115d4:	4c 89 05 0d 15 03 00 	mov    %r8,0x3150d(%rip)        # 42ae8 <_gm_+0x28>
   115db:	49 89 40 08          	mov    %rax,0x8(%r8)
   115df:	48 8b 05 ba 18 03 00 	mov    0x318ba(%rip),%rax        # 42ea0 <mparams+0x20>
   115e6:	4b c7 44 0c 08 50 00 	movq   $0x50,0x8(%r12,%r9,1)
   115ed:	00 00 
   115ef:	48 89 05 fa 14 03 00 	mov    %rax,0x314fa(%rip)        # 42af0 <_gm_+0x30>
   115f6:	48 8b 05 83 18 03 00 	mov    0x31883(%rip),%rax        # 42e80 <mparams>
   115fd:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
   11601:	f3 0f 6f 0d 3f 18 03 	movdqu 0x3183f(%rip),%xmm1        # 42e48 <_gm_+0x388>
   11608:	00 
   11609:	48 31 e8             	xor    %rbp,%rax
   1160c:	48 c7 42 08 33 00 00 	movq   $0x33,0x8(%rdx)
   11613:	00 
   11614:	48 89 42 30          	mov    %rax,0x30(%rdx)
   11618:	48 8d 42 38          	lea    0x38(%rdx),%rax
   1161c:	0f 11 4a 20          	movups %xmm1,0x20(%rdx)
   11620:	4c 89 25 11 18 03 00 	mov    %r12,0x31811(%rip)        # 42e38 <_gm_+0x378>
   11627:	4c 89 3d 12 18 03 00 	mov    %r15,0x31812(%rip)        # 42e40 <_gm_+0x380>
   1162e:	c7 05 18 18 03 00 00 	movl   $0x0,0x31818(%rip)        # 42e50 <_gm_+0x390>
   11635:	00 00 00 
   11638:	4c 89 15 09 18 03 00 	mov    %r10,0x31809(%rip)        # 42e48 <_gm_+0x388>
   1163f:	90                   	nop
   11640:	48 c7 00 0b 00 00 00 	movq   $0xb,(%rax)
   11647:	48 83 c0 08          	add    $0x8,%rax
   1164b:	48 39 c1             	cmp    %rax,%rcx
   1164e:	77 f0                	ja     11640 <dlmalloc+0xc10>
   11650:	48 39 d6             	cmp    %rdx,%rsi
   11653:	0f 84 f5 04 00 00    	je     11b4e <dlmalloc+0x111e>
   11659:	48 89 d7             	mov    %rdx,%rdi
   1165c:	48 83 62 08 fe       	andq   $0xfffffffffffffffe,0x8(%rdx)
   11661:	48 29 f7             	sub    %rsi,%rdi
   11664:	48 89 f8             	mov    %rdi,%rax
   11667:	48 89 f9             	mov    %rdi,%rcx
   1166a:	48 83 c8 01          	or     $0x1,%rax
   1166e:	48 c1 e9 03          	shr    $0x3,%rcx
   11672:	48 89 46 08          	mov    %rax,0x8(%rsi)
   11676:	48 89 3a             	mov    %rdi,(%rdx)
   11679:	48 81 ff ff 00 00 00 	cmp    $0xff,%rdi
   11680:	0f 87 9e 03 00 00    	ja     11a24 <dlmalloc+0xff4>
   11686:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
   11689:	8b 3d 31 14 03 00    	mov    0x31431(%rip),%edi        # 42ac0 <_gm_>
   1168f:	48 8d 54 c5 48       	lea    0x48(%rbp,%rax,8),%rdx
   11694:	b8 01 00 00 00       	mov    $0x1,%eax
   11699:	d3 e0                	shl    %cl,%eax
   1169b:	85 c7                	test   %eax,%edi
   1169d:	0f 85 fc 05 00 00    	jne    11c9f <dlmalloc+0x126f>
   116a3:	09 f8                	or     %edi,%eax
   116a5:	89 05 15 14 03 00    	mov    %eax,0x31415(%rip)        # 42ac0 <_gm_>
   116ab:	48 89 d0             	mov    %rdx,%rax
   116ae:	48 89 72 10          	mov    %rsi,0x10(%rdx)
   116b2:	48 89 70 18          	mov    %rsi,0x18(%rax)
   116b6:	48 89 56 18          	mov    %rdx,0x18(%rsi)
   116ba:	48 89 46 10          	mov    %rax,0x10(%rsi)
   116be:	48 8b 05 0b 14 03 00 	mov    0x3140b(%rip),%rax        # 42ad0 <_gm_+0x10>
   116c5:	49 39 c5             	cmp    %rax,%r13
   116c8:	0f 83 cf f5 ff ff    	jae    10c9d <dlmalloc+0x26d>
   116ce:	4c 8b 25 13 14 03 00 	mov    0x31413(%rip),%r12        # 42ae8 <_gm_+0x28>
   116d5:	4c 29 e8             	sub    %r13,%rax
   116d8:	48 33 2d a1 17 03 00 	xor    0x317a1(%rip),%rbp        # 42e80 <mparams>
   116df:	48 89 05 ea 13 03 00 	mov    %rax,0x313ea(%rip)        # 42ad0 <_gm_+0x10>
   116e6:	48 83 c8 01          	or     $0x1,%rax
   116ea:	4b 8d 14 2c          	lea    (%r12,%r13,1),%rdx
   116ee:	49 83 cd 03          	or     $0x3,%r13
   116f2:	48 89 15 ef 13 03 00 	mov    %rdx,0x313ef(%rip)        # 42ae8 <_gm_+0x28>
   116f9:	48 89 42 08          	mov    %rax,0x8(%rdx)
   116fd:	4d 89 6c 24 08       	mov    %r13,0x8(%r12)
   11702:	48 89 2a             	mov    %rbp,(%rdx)
   11705:	e9 30 f7 ff ff       	jmp    10e3a <dlmalloc+0x40a>
   1170a:	d3 e6                	shl    %cl,%esi
   1170c:	f7 d6                	not    %esi
   1170e:	21 f2                	and    %esi,%edx
   11710:	89 15 aa 13 03 00    	mov    %edx,0x313aa(%rip)        # 42ac0 <_gm_>
   11716:	e9 97 f7 ff ff       	jmp    10eb2 <dlmalloc+0x482>
   1171b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11720:	44 8b 48 18          	mov    0x18(%rax),%r9d
   11724:	4d 89 e0             	mov    %r12,%r8
   11727:	49 8d 7c 24 10       	lea    0x10(%r12),%rdi
   1172c:	41 83 e0 0f          	and    $0xf,%r8d
   11730:	41 83 e1 08          	and    $0x8,%r9d
   11734:	0f 85 14 fe ff ff    	jne    1154e <dlmalloc+0xb1e>
   1173a:	4c 01 78 08          	add    %r15,0x8(%rax)
   1173e:	4c 89 20             	mov    %r12,(%rax)
   11741:	4d 85 c0             	test   %r8,%r8
   11744:	74 09                	je     1174f <dlmalloc+0xd1f>
   11746:	48 f7 df             	neg    %rdi
   11749:	83 e7 0f             	and    $0xf,%edi
   1174c:	49 01 fc             	add    %rdi,%r12
   1174f:	48 8d 42 10          	lea    0x10(%rdx),%rax
   11753:	f6 c2 0f             	test   $0xf,%dl
   11756:	74 09                	je     11761 <dlmalloc+0xd31>
   11758:	48 f7 d8             	neg    %rax
   1175b:	83 e0 0f             	and    $0xf,%eax
   1175e:	48 01 c2             	add    %rax,%rdx
   11761:	48 8b 0d 18 17 03 00 	mov    0x31718(%rip),%rcx        # 42e80 <mparams>
   11768:	48 89 d0             	mov    %rdx,%rax
   1176b:	4b 8d 3c 2c          	lea    (%r12,%r13,1),%rdi
   1176f:	4c 29 e0             	sub    %r12,%rax
   11772:	4c 29 e8             	sub    %r13,%rax
   11775:	48 31 e9             	xor    %rbp,%rcx
   11778:	49 83 cd 03          	or     $0x3,%r13
   1177c:	4d 89 6c 24 08       	mov    %r13,0x8(%r12)
   11781:	48 89 0f             	mov    %rcx,(%rdi)
   11784:	48 39 d6             	cmp    %rdx,%rsi
   11787:	0f 84 1c 07 00 00    	je     11ea9 <dlmalloc+0x1479>
   1178d:	48 39 15 4c 13 03 00 	cmp    %rdx,0x3134c(%rip)        # 42ae0 <_gm_+0x20>
   11794:	0f 84 8e 08 00 00    	je     12028 <dlmalloc+0x15f8>
   1179a:	4c 8b 42 08          	mov    0x8(%rdx),%r8
   1179e:	4c 89 c1             	mov    %r8,%rcx
   117a1:	83 e1 03             	and    $0x3,%ecx
   117a4:	48 83 f9 01          	cmp    $0x1,%rcx
   117a8:	0f 84 a3 08 00 00    	je     12051 <dlmalloc+0x1621>
   117ae:	49 83 e0 fe          	and    $0xfffffffffffffffe,%r8
   117b2:	48 89 c1             	mov    %rax,%rcx
   117b5:	4c 89 42 08          	mov    %r8,0x8(%rdx)
   117b9:	48 89 c2             	mov    %rax,%rdx
   117bc:	48 c1 e9 03          	shr    $0x3,%rcx
   117c0:	48 83 ca 01          	or     $0x1,%rdx
   117c4:	48 89 57 08          	mov    %rdx,0x8(%rdi)
   117c8:	48 89 04 07          	mov    %rax,(%rdi,%rax,1)
   117cc:	48 3d ff 00 00 00    	cmp    $0xff,%rax
   117d2:	0f 87 65 07 00 00    	ja     11f3d <dlmalloc+0x150d>
   117d8:	be 01 00 00 00       	mov    $0x1,%esi
   117dd:	8b 15 dd 12 03 00    	mov    0x312dd(%rip),%edx        # 42ac0 <_gm_>
   117e3:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
   117e6:	d3 e6                	shl    %cl,%esi
   117e8:	48 8d 44 c5 48       	lea    0x48(%rbp,%rax,8),%rax
   117ed:	85 f2                	test   %esi,%edx
   117ef:	0f 85 20 0a 00 00    	jne    12215 <dlmalloc+0x17e5>
   117f5:	09 f2                	or     %esi,%edx
   117f7:	89 15 c3 12 03 00    	mov    %edx,0x312c3(%rip)        # 42ac0 <_gm_>
   117fd:	48 89 c2             	mov    %rax,%rdx
   11800:	48 89 78 10          	mov    %rdi,0x10(%rax)
   11804:	48 89 7a 18          	mov    %rdi,0x18(%rdx)
   11808:	48 89 57 10          	mov    %rdx,0x10(%rdi)
   1180c:	48 89 47 18          	mov    %rax,0x18(%rdi)
   11810:	e9 25 f6 ff ff       	jmp    10e3a <dlmalloc+0x40a>
   11815:	0f 1f 00             	nopl   (%rax)
   11818:	f6 40 18 08          	testb  $0x8,0x18(%rax)
   1181c:	0f 85 eb fc ff ff    	jne    1150d <dlmalloc+0xadd>
   11822:	48 39 d6             	cmp    %rdx,%rsi
   11825:	0f 82 e2 fc ff ff    	jb     1150d <dlmalloc+0xadd>
   1182b:	4c 39 e6             	cmp    %r12,%rsi
   1182e:	0f 83 d9 fc ff ff    	jae    1150d <dlmalloc+0xadd>
   11834:	4c 01 f9             	add    %r15,%rcx
   11837:	4c 03 3d 92 12 03 00 	add    0x31292(%rip),%r15        # 42ad0 <_gm_+0x10>
   1183e:	48 89 48 08          	mov    %rcx,0x8(%rax)
   11842:	48 8d 46 10          	lea    0x10(%rsi),%rax
   11846:	40 f6 c6 0f          	test   $0xf,%sil
   1184a:	0f 84 84 06 00 00    	je     11ed4 <dlmalloc+0x14a4>
   11850:	48 f7 d8             	neg    %rax
   11853:	4c 89 ff             	mov    %r15,%rdi
   11856:	83 e0 0f             	and    $0xf,%eax
   11859:	48 29 c7             	sub    %rax,%rdi
   1185c:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
   11860:	48 89 f8             	mov    %rdi,%rax
   11863:	48 89 c1             	mov    %rax,%rcx
   11866:	48 89 15 7b 12 03 00 	mov    %rdx,0x3127b(%rip)        # 42ae8 <_gm_+0x28>
   1186d:	48 83 c9 01          	or     $0x1,%rcx
   11871:	48 89 05 58 12 03 00 	mov    %rax,0x31258(%rip)        # 42ad0 <_gm_+0x10>
   11878:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1187c:	48 8b 15 1d 16 03 00 	mov    0x3161d(%rip),%rdx        # 42ea0 <mparams+0x20>
   11883:	4a c7 44 3e 08 50 00 	movq   $0x50,0x8(%rsi,%r15,1)
   1188a:	00 00 
   1188c:	48 89 15 5d 12 03 00 	mov    %rdx,0x3125d(%rip)        # 42af0 <_gm_+0x30>
   11893:	e9 2d fe ff ff       	jmp    116c5 <dlmalloc+0xc95>
   11898:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1189f:	00 
   118a0:	0f b3 ca             	btr    %ecx,%edx
   118a3:	89 15 17 12 03 00    	mov    %edx,0x31217(%rip)        # 42ac0 <_gm_>
   118a9:	e9 2d f2 ff ff       	jmp    10adb <dlmalloc+0xab>
   118ae:	66 90                	xchg   %ax,%ax
   118b0:	48 8b 05 21 12 03 00 	mov    0x31221(%rip),%rax        # 42ad8 <_gm_+0x18>
   118b7:	48 85 c0             	test   %rax,%rax
   118ba:	74 05                	je     118c1 <dlmalloc+0xe91>
   118bc:	4c 39 e0             	cmp    %r12,%rax
   118bf:	76 07                	jbe    118c8 <dlmalloc+0xe98>
   118c1:	4c 89 25 10 12 03 00 	mov    %r12,0x31210(%rip)        # 42ad8 <_gm_+0x18>
   118c8:	48 8b 05 b1 15 03 00 	mov    0x315b1(%rip),%rax        # 42e80 <mparams>
   118cf:	4c 89 25 62 15 03 00 	mov    %r12,0x31562(%rip)        # 42e38 <_gm_+0x378>
   118d6:	4c 89 3d 63 15 03 00 	mov    %r15,0x31563(%rip)        # 42e40 <_gm_+0x380>
   118dd:	c7 05 69 15 03 00 00 	movl   $0x0,0x31569(%rip)        # 42e50 <_gm_+0x390>
   118e4:	00 00 00 
   118e7:	48 c7 05 06 12 03 00 	movq   $0xffffffffffffffff,0x31206(%rip)        # 42af8 <_gm_+0x38>
   118ee:	ff ff ff ff 
   118f2:	48 89 05 07 12 03 00 	mov    %rax,0x31207(%rip)        # 42b00 <_gm_+0x40>
   118f9:	48 8d 05 08 12 03 00 	lea    0x31208(%rip),%rax        # 42b08 <_gm_+0x48>
   11900:	48 8d 90 00 02 00 00 	lea    0x200(%rax),%rdx
   11907:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1190e:	00 00 
   11910:	48 89 40 18          	mov    %rax,0x18(%rax)
   11914:	48 89 40 10          	mov    %rax,0x10(%rax)
   11918:	48 83 c0 10          	add    $0x10,%rax
   1191c:	48 39 c2             	cmp    %rax,%rdx
   1191f:	75 ef                	jne    11910 <dlmalloc+0xee0>
   11921:	49 83 ef 50          	sub    $0x50,%r15
   11925:	49 8d 44 24 10       	lea    0x10(%r12),%rax
   1192a:	41 f6 c4 0f          	test   $0xf,%r12b
   1192e:	0f 84 37 02 00 00    	je     11b6b <dlmalloc+0x113b>
   11934:	48 f7 d8             	neg    %rax
   11937:	4c 89 ff             	mov    %r15,%rdi
   1193a:	83 e0 0f             	and    $0xf,%eax
   1193d:	48 29 c7             	sub    %rax,%rdi
   11940:	49 8d 14 04          	lea    (%r12,%rax,1),%rdx
   11944:	48 89 f8             	mov    %rdi,%rax
   11947:	48 89 c1             	mov    %rax,%rcx
   1194a:	48 89 15 97 11 03 00 	mov    %rdx,0x31197(%rip)        # 42ae8 <_gm_+0x28>
   11951:	48 83 c9 01          	or     $0x1,%rcx
   11955:	48 89 05 74 11 03 00 	mov    %rax,0x31174(%rip)        # 42ad0 <_gm_+0x10>
   1195c:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   11960:	48 8b 15 39 15 03 00 	mov    0x31539(%rip),%rdx        # 42ea0 <mparams+0x20>
   11967:	4b c7 44 3c 08 50 00 	movq   $0x50,0x8(%r12,%r15,1)
   1196e:	00 00 
   11970:	48 89 15 79 11 03 00 	mov    %rdx,0x31179(%rip)        # 42af0 <_gm_+0x30>
   11977:	e9 49 fd ff ff       	jmp    116c5 <dlmalloc+0xc95>
   1197c:	0f 1f 40 00          	nopl   0x0(%rax)
   11980:	4c 89 c8             	mov    %r9,%rax
   11983:	4d 89 e0             	mov    %r12,%r8
   11986:	e9 36 fc ff ff       	jmp    115c1 <dlmalloc+0xb91>
   1198b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11990:	48 85 f6             	test   %rsi,%rsi
   11993:	0f 85 d7 f1 ff ff    	jne    10b70 <dlmalloc+0x140>
   11999:	e9 cd f1 ff ff       	jmp    10b6b <dlmalloc+0x13b>
   1199e:	66 90                	xchg   %ax,%ax
   119a0:	b8 01 00 00 00       	mov    $0x1,%eax
   119a5:	87 05 05 15 03 00    	xchg   %eax,0x31505(%rip)        # 42eb0 <malloc_global_mutex>
   119ab:	48 8d 15 fe 14 03 00 	lea    0x314fe(%rip),%rdx        # 42eb0 <malloc_global_mutex>
   119b2:	b9 01 00 00 00       	mov    $0x1,%ecx
   119b7:	85 c0                	test   %eax,%eax
   119b9:	75 55                	jne    11a10 <dlmalloc+0xfe0>
   119bb:	4c 89 c7             	mov    %r8,%rdi
   119be:	e8 4d e5 ff ff       	call   ff10 <sbrk>
   119c3:	31 ff                	xor    %edi,%edi
   119c5:	49 89 c4             	mov    %rax,%r12
   119c8:	e8 43 e5 ff ff       	call   ff10 <sbrk>
   119cd:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   119d1:	0f 95 c1             	setne  %cl
   119d4:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   119d8:	c7 05 ce 14 03 00 00 	movl   $0x0,0x314ce(%rip)        # 42eb0 <malloc_global_mutex>
   119df:	00 00 00 
   119e2:	0f 95 c2             	setne  %dl
   119e5:	84 d1                	test   %dl,%cl
   119e7:	0f 84 b0 f2 ff ff    	je     10c9d <dlmalloc+0x26d>
   119ed:	49 39 c4             	cmp    %rax,%r12
   119f0:	0f 83 a7 f2 ff ff    	jae    10c9d <dlmalloc+0x26d>
   119f6:	4c 29 e0             	sub    %r12,%rax
   119f9:	49 89 c7             	mov    %rax,%r15
   119fc:	49 8d 45 50          	lea    0x50(%r13),%rax
   11a00:	49 39 c7             	cmp    %rax,%r15
   11a03:	0f 87 a7 fa ff ff    	ja     114b0 <dlmalloc+0xa80>
   11a09:	e9 8f f2 ff ff       	jmp    10c9d <dlmalloc+0x26d>
   11a0e:	66 90                	xchg   %ax,%ax
   11a10:	8b 02                	mov    (%rdx),%eax
   11a12:	85 c0                	test   %eax,%eax
   11a14:	75 fa                	jne    11a10 <dlmalloc+0xfe0>
   11a16:	89 c8                	mov    %ecx,%eax
   11a18:	87 05 92 14 03 00    	xchg   %eax,0x31492(%rip)        # 42eb0 <malloc_global_mutex>
   11a1e:	85 c0                	test   %eax,%eax
   11a20:	75 ee                	jne    11a10 <dlmalloc+0xfe0>
   11a22:	eb 97                	jmp    119bb <dlmalloc+0xf8b>
   11a24:	48 89 f8             	mov    %rdi,%rax
   11a27:	48 c1 e8 08          	shr    $0x8,%rax
   11a2b:	89 c1                	mov    %eax,%ecx
   11a2d:	85 c0                	test   %eax,%eax
   11a2f:	0f 84 57 02 00 00    	je     11c8c <dlmalloc+0x125c>
   11a35:	3d ff ff 00 00       	cmp    $0xffff,%eax
   11a3a:	0f 87 bd 03 00 00    	ja     11dfd <dlmalloc+0x13cd>
   11a40:	0f bd c0             	bsr    %eax,%eax
   11a43:	b9 26 00 00 00       	mov    $0x26,%ecx
   11a48:	48 89 fa             	mov    %rdi,%rdx
   11a4b:	83 f0 1f             	xor    $0x1f,%eax
   11a4e:	29 c1                	sub    %eax,%ecx
   11a50:	48 d3 ea             	shr    %cl,%rdx
   11a53:	b9 1f 00 00 00       	mov    $0x1f,%ecx
   11a58:	29 c1                	sub    %eax,%ecx
   11a5a:	83 e2 01             	and    $0x1,%edx
   11a5d:	b8 01 00 00 00       	mov    $0x1,%eax
   11a62:	44 8d 0c 4a          	lea    (%rdx,%rcx,2),%r9d
   11a66:	4c 89 c9             	mov    %r9,%rcx
   11a69:	4e 8d 04 cd 58 02 00 	lea    0x258(,%r9,8),%r8
   11a70:	00 
   11a71:	d3 e0                	shl    %cl,%eax
   11a73:	8b 15 4b 10 03 00    	mov    0x3104b(%rip),%edx        # 42ac4 <_gm_+0x4>
   11a79:	89 4e 38             	mov    %ecx,0x38(%rsi)
   11a7c:	48 c7 46 28 00 00 00 	movq   $0x0,0x28(%rsi)
   11a83:	00 
   11a84:	48 c7 46 20 00 00 00 	movq   $0x0,0x20(%rsi)
   11a8b:	00 
   11a8c:	85 d0                	test   %edx,%eax
   11a8e:	0f 85 69 01 00 00    	jne    11bfd <dlmalloc+0x11cd>
   11a94:	09 d0                	or     %edx,%eax
   11a96:	49 01 e8             	add    %rbp,%r8
   11a99:	4a 89 b4 cd 58 02 00 	mov    %rsi,0x258(%rbp,%r9,8)
   11aa0:	00 
   11aa1:	89 05 1d 10 03 00    	mov    %eax,0x3101d(%rip)        # 42ac4 <_gm_+0x4>
   11aa7:	48 8b 05 22 10 03 00 	mov    0x31022(%rip),%rax        # 42ad0 <_gm_+0x10>
   11aae:	4c 89 46 30          	mov    %r8,0x30(%rsi)
   11ab2:	48 89 76 18          	mov    %rsi,0x18(%rsi)
   11ab6:	48 89 76 10          	mov    %rsi,0x10(%rsi)
   11aba:	e9 06 fc ff ff       	jmp    116c5 <dlmalloc+0xc95>
   11abf:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   11ac4:	44 89 d1             	mov    %r10d,%ecx
   11ac7:	48 89 f2             	mov    %rsi,%rdx
   11aca:	d3 e0                	shl    %cl,%eax
   11acc:	44 21 c8             	and    %r9d,%eax
   11acf:	0f 84 f3 f1 ff ff    	je     10cc8 <dlmalloc+0x298>
   11ad5:	89 c1                	mov    %eax,%ecx
   11ad7:	45 31 e4             	xor    %r12d,%r12d
   11ada:	f7 d9                	neg    %ecx
   11adc:	21 c8                	and    %ecx,%eax
   11ade:	f3 0f bc c0          	tzcnt  %eax,%eax
   11ae2:	89 c0                	mov    %eax,%eax
   11ae4:	48 8b 84 c5 58 02 00 	mov    0x258(%rbp,%rax,8),%rax
   11aeb:	00 
   11aec:	48 85 c0             	test   %rax,%rax
   11aef:	0f 85 4e f5 ff ff    	jne    11043 <dlmalloc+0x613>
   11af5:	e9 ce f1 ff ff       	jmp    10cc8 <dlmalloc+0x298>
   11afa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11b00:	0f bd c0             	bsr    %eax,%eax
   11b03:	b9 26 00 00 00       	mov    $0x26,%ecx
   11b08:	4c 89 ea             	mov    %r13,%rdx
   11b0b:	83 f0 1f             	xor    $0x1f,%eax
   11b0e:	29 c1                	sub    %eax,%ecx
   11b10:	48 d3 ea             	shr    %cl,%rdx
   11b13:	b9 1f 00 00 00       	mov    $0x1f,%ecx
   11b18:	83 e2 01             	and    $0x1,%edx
   11b1b:	29 c1                	sub    %eax,%ecx
   11b1d:	8d 04 4a             	lea    (%rdx,%rcx,2),%eax
   11b20:	49 89 c2             	mov    %rax,%r10
   11b23:	48 8b 84 c5 58 02 00 	mov    0x258(%rbp,%rax,8),%rax
   11b2a:	00 
   11b2b:	48 85 c0             	test   %rax,%rax
   11b2e:	74 8f                	je     11abf <dlmalloc+0x108f>
   11b30:	4c 89 e9             	mov    %r13,%rcx
   11b33:	41 83 fa 1f          	cmp    $0x1f,%r10d
   11b37:	0f 84 99 f4 ff ff    	je     10fd6 <dlmalloc+0x5a6>
   11b3d:	44 89 d2             	mov    %r10d,%edx
   11b40:	b9 39 00 00 00       	mov    $0x39,%ecx
   11b45:	d1 ea                	shr    %edx
   11b47:	29 d1                	sub    %edx,%ecx
   11b49:	e9 7f f4 ff ff       	jmp    10fcd <dlmalloc+0x59d>
   11b4e:	48 8b 05 7b 0f 03 00 	mov    0x30f7b(%rip),%rax        # 42ad0 <_gm_+0x10>
   11b55:	e9 6b fb ff ff       	jmp    116c5 <dlmalloc+0xc95>
   11b5a:	48 83 cf 03          	or     $0x3,%rdi
   11b5e:	e9 0c f4 ff ff       	jmp    10f6f <dlmalloc+0x53f>
   11b63:	49 89 c4             	mov    %rax,%r12
   11b66:	e9 d8 f4 ff ff       	jmp    11043 <dlmalloc+0x613>
   11b6b:	4c 89 f8             	mov    %r15,%rax
   11b6e:	4c 89 e2             	mov    %r12,%rdx
   11b71:	e9 d1 fd ff ff       	jmp    11947 <dlmalloc+0xf17>
   11b76:	83 c9 03             	or     $0x3,%ecx
   11b79:	89 cf                	mov    %ecx,%edi
   11b7b:	49 89 7c 24 08       	mov    %rdi,0x8(%r12)
   11b80:	48 89 30             	mov    %rsi,(%rax)
   11b83:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
   11b88:	e9 ad f2 ff ff       	jmp    10e3a <dlmalloc+0x40a>
   11b8d:	b8 01 00 00 00       	mov    $0x1,%eax
   11b92:	87 05 18 13 03 00    	xchg   %eax,0x31318(%rip)        # 42eb0 <malloc_global_mutex>
   11b98:	85 c0                	test   %eax,%eax
   11b9a:	0f 85 84 f8 ff ff    	jne    11424 <dlmalloc+0x9f4>
   11ba0:	e9 a6 f8 ff ff       	jmp    1144b <dlmalloc+0xa1b>
   11ba5:	48 89 f2             	mov    %rsi,%rdx
   11ba8:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   11bad:	e9 1a ff ff ff       	jmp    11acc <dlmalloc+0x109c>
   11bb2:	49 8b 44 24 28       	mov    0x28(%r12),%rax
   11bb7:	49 8d 4c 24 28       	lea    0x28(%r12),%rcx
   11bbc:	48 85 c0             	test   %rax,%rax
   11bbf:	0f 84 3b 03 00 00    	je     11f00 <dlmalloc+0x14d0>
   11bc5:	0f 1f 00             	nopl   (%rax)
   11bc8:	49 89 cb             	mov    %rcx,%r11
   11bcb:	48 89 c6             	mov    %rax,%rsi
   11bce:	48 8d 48 28          	lea    0x28(%rax),%rcx
   11bd2:	48 8b 40 28          	mov    0x28(%rax),%rax
   11bd6:	48 85 c0             	test   %rax,%rax
   11bd9:	75 ed                	jne    11bc8 <dlmalloc+0x1198>
   11bdb:	48 8b 46 20          	mov    0x20(%rsi),%rax
   11bdf:	48 8d 4e 20          	lea    0x20(%rsi),%rcx
   11be3:	48 85 c0             	test   %rax,%rax
   11be6:	75 e0                	jne    11bc8 <dlmalloc+0x1198>
   11be8:	4d 39 da             	cmp    %r11,%r10
   11beb:	0f 87 17 f6 ff ff    	ja     11208 <dlmalloc+0x7d8>
   11bf1:	49 c7 03 00 00 00 00 	movq   $0x0,(%r11)
   11bf8:	e9 e0 f4 ff ff       	jmp    110dd <dlmalloc+0x6ad>
   11bfd:	4a 8b 94 cd 58 02 00 	mov    0x258(%rbp,%r9,8),%rdx
   11c04:	00 
   11c05:	49 89 f8             	mov    %rdi,%r8
   11c08:	83 f9 1f             	cmp    $0x1f,%ecx
   11c0b:	74 31                	je     11c3e <dlmalloc+0x120e>
   11c0d:	d1 e9                	shr    %ecx
   11c0f:	b8 39 00 00 00       	mov    $0x39,%eax
   11c14:	29 c8                	sub    %ecx,%eax
   11c16:	89 c1                	mov    %eax,%ecx
   11c18:	49 d3 e0             	shl    %cl,%r8
   11c1b:	eb 21                	jmp    11c3e <dlmalloc+0x120e>
   11c1d:	0f 1f 00             	nopl   (%rax)
   11c20:	4c 89 c0             	mov    %r8,%rax
   11c23:	4d 01 c0             	add    %r8,%r8
   11c26:	48 c1 e8 3f          	shr    $0x3f,%rax
   11c2a:	48 83 c0 04          	add    $0x4,%rax
   11c2e:	48 8b 0c c2          	mov    (%rdx,%rax,8),%rcx
   11c32:	48 85 c9             	test   %rcx,%rcx
   11c35:	0f 84 dd 01 00 00    	je     11e18 <dlmalloc+0x13e8>
   11c3b:	48 89 ca             	mov    %rcx,%rdx
   11c3e:	48 8b 42 08          	mov    0x8(%rdx),%rax
   11c42:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   11c46:	48 39 c7             	cmp    %rax,%rdi
   11c49:	75 d5                	jne    11c20 <dlmalloc+0x11f0>
   11c4b:	48 8b 42 10          	mov    0x10(%rdx),%rax
   11c4f:	48 8b 0d 82 0e 03 00 	mov    0x30e82(%rip),%rcx        # 42ad8 <_gm_+0x18>
   11c56:	48 39 c8             	cmp    %rcx,%rax
   11c59:	0f 82 a9 f5 ff ff    	jb     11208 <dlmalloc+0x7d8>
   11c5f:	48 39 ca             	cmp    %rcx,%rdx
   11c62:	0f 82 a0 f5 ff ff    	jb     11208 <dlmalloc+0x7d8>
   11c68:	48 89 70 18          	mov    %rsi,0x18(%rax)
   11c6c:	48 89 72 10          	mov    %rsi,0x10(%rdx)
   11c70:	48 89 46 10          	mov    %rax,0x10(%rsi)
   11c74:	48 8b 05 55 0e 03 00 	mov    0x30e55(%rip),%rax        # 42ad0 <_gm_+0x10>
   11c7b:	48 89 56 18          	mov    %rdx,0x18(%rsi)
   11c7f:	48 c7 46 30 00 00 00 	movq   $0x0,0x30(%rsi)
   11c86:	00 
   11c87:	e9 39 fa ff ff       	jmp    116c5 <dlmalloc+0xc95>
   11c8c:	b8 01 00 00 00       	mov    $0x1,%eax
   11c91:	41 b8 58 02 00 00    	mov    $0x258,%r8d
   11c97:	41 89 c9             	mov    %ecx,%r9d
   11c9a:	e9 d4 fd ff ff       	jmp    11a73 <dlmalloc+0x1043>
   11c9f:	48 8b 42 10          	mov    0x10(%rdx),%rax
   11ca3:	48 3b 05 2e 0e 03 00 	cmp    0x30e2e(%rip),%rax        # 42ad8 <_gm_+0x18>
   11caa:	0f 83 fe f9 ff ff    	jae    116ae <dlmalloc+0xc7e>
   11cb0:	e9 53 f5 ff ff       	jmp    11208 <dlmalloc+0x7d8>
   11cb5:	48 89 d1             	mov    %rdx,%rcx
   11cb8:	48 c1 e9 08          	shr    $0x8,%rcx
   11cbc:	89 c8                	mov    %ecx,%eax
   11cbe:	85 c9                	test   %ecx,%ecx
   11cc0:	0f 84 cf 01 00 00    	je     11e95 <dlmalloc+0x1465>
   11cc6:	81 f9 ff ff 00 00    	cmp    $0xffff,%ecx
   11ccc:	0f 87 dd 03 00 00    	ja     120af <dlmalloc+0x167f>
   11cd2:	0f bd c1             	bsr    %ecx,%eax
   11cd5:	b9 26 00 00 00       	mov    $0x26,%ecx
   11cda:	49 89 d7             	mov    %rdx,%r15
   11cdd:	41 b9 1f 00 00 00    	mov    $0x1f,%r9d
   11ce3:	83 f0 1f             	xor    $0x1f,%eax
   11ce6:	29 c1                	sub    %eax,%ecx
   11ce8:	41 29 c1             	sub    %eax,%r9d
   11ceb:	49 d3 ef             	shr    %cl,%r15
   11cee:	4c 89 f9             	mov    %r15,%rcx
   11cf1:	83 e1 01             	and    $0x1,%ecx
   11cf4:	46 8d 1c 49          	lea    (%rcx,%r9,2),%r11d
   11cf8:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   11cfe:	44 89 d9             	mov    %r11d,%ecx
   11d01:	4c 89 d8             	mov    %r11,%rax
   11d04:	4e 8d 34 dd 58 02 00 	lea    0x258(,%r11,8),%r14
   11d0b:	00 
   11d0c:	41 d3 e1             	shl    %cl,%r9d
   11d0f:	8b 0d af 0d 03 00    	mov    0x30daf(%rip),%ecx        # 42ac4 <_gm_+0x4>
   11d15:	89 47 38             	mov    %eax,0x38(%rdi)
   11d18:	48 c7 47 28 00 00 00 	movq   $0x0,0x28(%rdi)
   11d1f:	00 
   11d20:	48 c7 47 20 00 00 00 	movq   $0x0,0x20(%rdi)
   11d27:	00 
   11d28:	44 85 c9             	test   %r9d,%ecx
   11d2b:	0f 84 e7 01 00 00    	je     11f18 <dlmalloc+0x14e8>
   11d31:	4e 8b 8c dd 58 02 00 	mov    0x258(%rbp,%r11,8),%r9
   11d38:	00 
   11d39:	49 89 d3             	mov    %rdx,%r11
   11d3c:	83 f8 1f             	cmp    $0x1f,%eax
   11d3f:	74 2d                	je     11d6e <dlmalloc+0x133e>
   11d41:	d1 e8                	shr    %eax
   11d43:	b9 39 00 00 00       	mov    $0x39,%ecx
   11d48:	29 c1                	sub    %eax,%ecx
   11d4a:	49 d3 e3             	shl    %cl,%r11
   11d4d:	eb 1f                	jmp    11d6e <dlmalloc+0x133e>
   11d4f:	90                   	nop
   11d50:	4c 89 d8             	mov    %r11,%rax
   11d53:	4d 01 db             	add    %r11,%r11
   11d56:	48 c1 e8 3f          	shr    $0x3f,%rax
   11d5a:	48 83 c0 04          	add    $0x4,%rax
   11d5e:	49 8b 0c c1          	mov    (%r9,%rax,8),%rcx
   11d62:	48 85 c9             	test   %rcx,%rcx
   11d65:	0f 84 9b 02 00 00    	je     12006 <dlmalloc+0x15d6>
   11d6b:	49 89 c9             	mov    %rcx,%r9
   11d6e:	49 8b 41 08          	mov    0x8(%r9),%rax
   11d72:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   11d76:	48 39 d0             	cmp    %rdx,%rax
   11d79:	75 d5                	jne    11d50 <dlmalloc+0x1320>
   11d7b:	49 8b 41 10          	mov    0x10(%r9),%rax
   11d7f:	4d 39 ca             	cmp    %r9,%r10
   11d82:	0f 87 80 f4 ff ff    	ja     11208 <dlmalloc+0x7d8>
   11d88:	49 39 c2             	cmp    %rax,%r10
   11d8b:	0f 87 77 f4 ff ff    	ja     11208 <dlmalloc+0x7d8>
   11d91:	48 89 78 18          	mov    %rdi,0x18(%rax)
   11d95:	49 89 79 10          	mov    %rdi,0x10(%r9)
   11d99:	48 89 47 10          	mov    %rax,0x10(%rdi)
   11d9d:	4c 89 4f 18          	mov    %r9,0x18(%rdi)
   11da1:	48 c7 47 30 00 00 00 	movq   $0x0,0x30(%rdi)
   11da8:	00 
   11da9:	e9 2e f4 ff ff       	jmp    111dc <dlmalloc+0x7ac>
   11dae:	49 8d 44 15 00       	lea    0x0(%r13,%rdx,1),%rax
   11db3:	48 89 c2             	mov    %rax,%rdx
   11db6:	4c 01 e0             	add    %r12,%rax
   11db9:	48 83 ca 03          	or     $0x3,%rdx
   11dbd:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
   11dc2:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
   11dc7:	48 89 08             	mov    %rcx,(%rax)
   11dca:	e9 0d f4 ff ff       	jmp    111dc <dlmalloc+0x7ac>
   11dcf:	09 f9                	or     %edi,%ecx
   11dd1:	89 0d e9 0c 03 00    	mov    %ecx,0x30ce9(%rip)        # 42ac0 <_gm_>
   11dd7:	4c 89 c1             	mov    %r8,%rcx
   11dda:	e9 5e f1 ff ff       	jmp    10f3d <dlmalloc+0x50d>
   11ddf:	4a 89 74 dd 08       	mov    %rsi,0x8(%rbp,%r11,8)
   11de4:	48 85 f6             	test   %rsi,%rsi
   11de7:	0f 85 2b f3 ff ff    	jne    11118 <dlmalloc+0x6e8>
   11ded:	41 0f b3 c9          	btr    %ecx,%r9d
   11df1:	44 89 0d cc 0c 03 00 	mov    %r9d,0x30ccc(%rip)        # 42ac4 <_gm_+0x4>
   11df8:	e9 5e f3 ff ff       	jmp    1115b <dlmalloc+0x72b>
   11dfd:	b8 00 00 00 80       	mov    $0x80000000,%eax
   11e02:	41 b8 50 03 00 00    	mov    $0x350,%r8d
   11e08:	b9 1f 00 00 00       	mov    $0x1f,%ecx
   11e0d:	41 b9 1f 00 00 00    	mov    $0x1f,%r9d
   11e13:	e9 5b fc ff ff       	jmp    11a73 <dlmalloc+0x1043>
   11e18:	48 8d 0c c2          	lea    (%rdx,%rax,8),%rcx
   11e1c:	48 39 0d b5 0c 03 00 	cmp    %rcx,0x30cb5(%rip)        # 42ad8 <_gm_+0x18>
   11e23:	0f 87 df f3 ff ff    	ja     11208 <dlmalloc+0x7d8>
   11e29:	48 89 34 c2          	mov    %rsi,(%rdx,%rax,8)
   11e2d:	48 8b 05 9c 0c 03 00 	mov    0x30c9c(%rip),%rax        # 42ad0 <_gm_+0x10>
   11e34:	48 89 56 30          	mov    %rdx,0x30(%rsi)
   11e38:	48 89 76 18          	mov    %rsi,0x18(%rsi)
   11e3c:	48 89 76 10          	mov    %rsi,0x10(%rsi)
   11e40:	e9 80 f8 ff ff       	jmp    116c5 <dlmalloc+0xc95>
   11e45:	49 8b 44 24 28       	mov    0x28(%r12),%rax
   11e4a:	49 8d 4c 24 28       	lea    0x28(%r12),%rcx
   11e4f:	48 85 c0             	test   %rax,%rax
   11e52:	0f 84 a5 03 00 00    	je     121fd <dlmalloc+0x17cd>
   11e58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   11e5f:	00 
   11e60:	49 89 ce             	mov    %rcx,%r14
   11e63:	48 89 c6             	mov    %rax,%rsi
   11e66:	48 8d 48 28          	lea    0x28(%rax),%rcx
   11e6a:	48 8b 40 28          	mov    0x28(%rax),%rax
   11e6e:	48 85 c0             	test   %rax,%rax
   11e71:	75 ed                	jne    11e60 <dlmalloc+0x1430>
   11e73:	48 8b 46 20          	mov    0x20(%rsi),%rax
   11e77:	48 8d 4e 20          	lea    0x20(%rsi),%rcx
   11e7b:	48 85 c0             	test   %rax,%rax
   11e7e:	75 e0                	jne    11e60 <dlmalloc+0x1430>
   11e80:	4d 39 f3             	cmp    %r14,%r11
   11e83:	0f 87 7f f3 ff ff    	ja     11208 <dlmalloc+0x7d8>
   11e89:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
   11e90:	e9 3c f4 ff ff       	jmp    112d1 <dlmalloc+0x8a1>
   11e95:	41 be 58 02 00 00    	mov    $0x258,%r14d
   11e9b:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   11ea1:	41 89 cb             	mov    %ecx,%r11d
   11ea4:	e9 66 fe ff ff       	jmp    11d0f <dlmalloc+0x12df>
   11ea9:	48 03 05 20 0c 03 00 	add    0x30c20(%rip),%rax        # 42ad0 <_gm_+0x10>
   11eb0:	48 89 3d 31 0c 03 00 	mov    %rdi,0x30c31(%rip)        # 42ae8 <_gm_+0x28>
   11eb7:	48 89 05 12 0c 03 00 	mov    %rax,0x30c12(%rip)        # 42ad0 <_gm_+0x10>
   11ebe:	48 83 c8 01          	or     $0x1,%rax
   11ec2:	48 89 47 08          	mov    %rax,0x8(%rdi)
   11ec6:	e9 6f ef ff ff       	jmp    10e3a <dlmalloc+0x40a>
   11ecb:	49 89 76 20          	mov    %rsi,0x20(%r14)
   11ecf:	e9 3f f2 ff ff       	jmp    11113 <dlmalloc+0x6e3>
   11ed4:	4c 89 f8             	mov    %r15,%rax
   11ed7:	48 89 f2             	mov    %rsi,%rdx
   11eda:	e9 84 f9 ff ff       	jmp    11863 <dlmalloc+0xe33>
   11edf:	4b 8d 44 05 00       	lea    0x0(%r13,%r8,1),%rax
   11ee4:	48 89 c2             	mov    %rax,%rdx
   11ee7:	4c 01 e0             	add    %r12,%rax
   11eea:	48 83 ca 03          	or     $0x3,%rdx
   11eee:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
   11ef3:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
   11ef8:	48 89 08             	mov    %rcx,(%rax)
   11efb:	e9 dd f4 ff ff       	jmp    113dd <dlmalloc+0x9ad>
   11f00:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   11f05:	48 85 c0             	test   %rax,%rax
   11f08:	0f 84 2f 03 00 00    	je     1223d <dlmalloc+0x180d>
   11f0e:	49 8d 4c 24 20       	lea    0x20(%r12),%rcx
   11f13:	e9 b0 fc ff ff       	jmp    11bc8 <dlmalloc+0x1198>
   11f18:	44 09 c9             	or     %r9d,%ecx
   11f1b:	49 01 ee             	add    %rbp,%r14
   11f1e:	4a 89 bc dd 58 02 00 	mov    %rdi,0x258(%rbp,%r11,8)
   11f25:	00 
   11f26:	89 0d 98 0b 03 00    	mov    %ecx,0x30b98(%rip)        # 42ac4 <_gm_+0x4>
   11f2c:	4c 89 77 30          	mov    %r14,0x30(%rdi)
   11f30:	48 89 7f 18          	mov    %rdi,0x18(%rdi)
   11f34:	48 89 7f 10          	mov    %rdi,0x10(%rdi)
   11f38:	e9 9f f2 ff ff       	jmp    111dc <dlmalloc+0x7ac>
   11f3d:	48 89 c2             	mov    %rax,%rdx
   11f40:	48 c1 ea 08          	shr    $0x8,%rdx
   11f44:	89 d1                	mov    %edx,%ecx
   11f46:	85 d2                	test   %edx,%edx
   11f48:	0f 84 dd 02 00 00    	je     1222b <dlmalloc+0x17fb>
   11f4e:	81 fa ff ff 00 00    	cmp    $0xffff,%edx
   11f54:	0f 87 0d 04 00 00    	ja     12367 <dlmalloc+0x1937>
   11f5a:	0f bd d2             	bsr    %edx,%edx
   11f5d:	b9 26 00 00 00       	mov    $0x26,%ecx
   11f62:	48 89 c6             	mov    %rax,%rsi
   11f65:	83 f2 1f             	xor    $0x1f,%edx
   11f68:	29 d1                	sub    %edx,%ecx
   11f6a:	48 d3 ee             	shr    %cl,%rsi
   11f6d:	48 89 f1             	mov    %rsi,%rcx
   11f70:	be 1f 00 00 00       	mov    $0x1f,%esi
   11f75:	83 e1 01             	and    $0x1,%ecx
   11f78:	29 d6                	sub    %edx,%esi
   11f7a:	ba 01 00 00 00       	mov    $0x1,%edx
   11f7f:	8d 34 71             	lea    (%rcx,%rsi,2),%esi
   11f82:	48 89 f1             	mov    %rsi,%rcx
   11f85:	4c 8d 04 f5 58 02 00 	lea    0x258(,%rsi,8),%r8
   11f8c:	00 
   11f8d:	d3 e2                	shl    %cl,%edx
   11f8f:	44 8b 15 2e 0b 03 00 	mov    0x30b2e(%rip),%r10d        # 42ac4 <_gm_+0x4>
   11f96:	89 4f 38             	mov    %ecx,0x38(%rdi)
   11f99:	48 c7 47 28 00 00 00 	movq   $0x0,0x28(%rdi)
   11fa0:	00 
   11fa1:	48 c7 47 20 00 00 00 	movq   $0x0,0x20(%rdi)
   11fa8:	00 
   11fa9:	44 85 d2             	test   %r10d,%edx
   11fac:	0f 85 af 01 00 00    	jne    12161 <dlmalloc+0x1731>
   11fb2:	44 09 d2             	or     %r10d,%edx
   11fb5:	49 01 e8             	add    %rbp,%r8
   11fb8:	48 89 bc f5 58 02 00 	mov    %rdi,0x258(%rbp,%rsi,8)
   11fbf:	00 
   11fc0:	89 15 fe 0a 03 00    	mov    %edx,0x30afe(%rip)        # 42ac4 <_gm_+0x4>
   11fc6:	4c 89 47 30          	mov    %r8,0x30(%rdi)
   11fca:	48 89 7f 18          	mov    %rdi,0x18(%rdi)
   11fce:	48 89 7f 10          	mov    %rdi,0x10(%rdi)
   11fd2:	e9 63 ee ff ff       	jmp    10e3a <dlmalloc+0x40a>
   11fd7:	44 09 c8             	or     %r9d,%eax
   11fda:	89 05 e0 0a 03 00    	mov    %eax,0x30ae0(%rip)        # 42ac0 <_gm_>
   11fe0:	48 89 d0             	mov    %rdx,%rax
   11fe3:	e9 e4 f1 ff ff       	jmp    111cc <dlmalloc+0x79c>
   11fe8:	4a 89 74 f5 08       	mov    %rsi,0x8(%rbp,%r14,8)
   11fed:	48 85 f6             	test   %rsi,%rsi
   11ff0:	0f 85 16 f3 ff ff    	jne    1130c <dlmalloc+0x8dc>
   11ff6:	41 0f b3 c1          	btr    %eax,%r9d
   11ffa:	44 89 0d c3 0a 03 00 	mov    %r9d,0x30ac3(%rip)        # 42ac4 <_gm_+0x4>
   12001:	e9 49 f3 ff ff       	jmp    1134f <dlmalloc+0x91f>
   12006:	49 8d 14 c1          	lea    (%r9,%rax,8),%rdx
   1200a:	49 39 d2             	cmp    %rdx,%r10
   1200d:	0f 87 f5 f1 ff ff    	ja     11208 <dlmalloc+0x7d8>
   12013:	49 89 3c c1          	mov    %rdi,(%r9,%rax,8)
   12017:	4c 89 4f 30          	mov    %r9,0x30(%rdi)
   1201b:	48 89 7f 18          	mov    %rdi,0x18(%rdi)
   1201f:	48 89 7f 10          	mov    %rdi,0x10(%rdi)
   12023:	e9 b4 f1 ff ff       	jmp    111dc <dlmalloc+0x7ac>
   12028:	48 03 05 99 0a 03 00 	add    0x30a99(%rip),%rax        # 42ac8 <_gm_+0x8>
   1202f:	48 89 3d aa 0a 03 00 	mov    %rdi,0x30aaa(%rip)        # 42ae0 <_gm_+0x20>
   12036:	48 89 c2             	mov    %rax,%rdx
   12039:	48 89 05 88 0a 03 00 	mov    %rax,0x30a88(%rip)        # 42ac8 <_gm_+0x8>
   12040:	48 83 ca 01          	or     $0x1,%rdx
   12044:	48 89 57 08          	mov    %rdx,0x8(%rdi)
   12048:	48 89 04 07          	mov    %rax,(%rdi,%rax,1)
   1204c:	e9 e9 ed ff ff       	jmp    10e3a <dlmalloc+0x40a>
   12051:	4d 89 c3             	mov    %r8,%r11
   12054:	4c 89 c1             	mov    %r8,%rcx
   12057:	48 8b 72 18          	mov    0x18(%rdx),%rsi
   1205b:	49 83 e3 f8          	and    $0xfffffffffffffff8,%r11
   1205f:	48 c1 e9 03          	shr    $0x3,%rcx
   12063:	49 81 f8 ff 00 00 00 	cmp    $0xff,%r8
   1206a:	0f 87 00 02 00 00    	ja     12270 <dlmalloc+0x1840>
   12070:	44 8d 14 09          	lea    (%rcx,%rcx,1),%r10d
   12074:	4c 8b 42 10          	mov    0x10(%rdx),%r8
   12078:	4e 8d 54 d5 48       	lea    0x48(%rbp,%r10,8),%r10
   1207d:	4d 39 d0             	cmp    %r10,%r8
   12080:	0f 85 68 f1 ff ff    	jne    111ee <dlmalloc+0x7be>
   12086:	49 39 f0             	cmp    %rsi,%r8
   12089:	0f 84 ba 03 00 00    	je     12449 <dlmalloc+0x1a19>
   1208f:	49 39 f2             	cmp    %rsi,%r10
   12092:	0f 85 c3 03 00 00    	jne    1245b <dlmalloc+0x1a2b>
   12098:	49 89 70 18          	mov    %rsi,0x18(%r8)
   1209c:	4c 89 46 10          	mov    %r8,0x10(%rsi)
   120a0:	4c 01 da             	add    %r11,%rdx
   120a3:	4c 01 d8             	add    %r11,%rax
   120a6:	4c 8b 42 08          	mov    0x8(%rdx),%r8
   120aa:	e9 ff f6 ff ff       	jmp    117ae <dlmalloc+0xd7e>
   120af:	41 be 50 03 00 00    	mov    $0x350,%r14d
   120b5:	41 b9 00 00 00 80    	mov    $0x80000000,%r9d
   120bb:	b8 1f 00 00 00       	mov    $0x1f,%eax
   120c0:	41 bb 1f 00 00 00    	mov    $0x1f,%r11d
   120c6:	e9 44 fc ff ff       	jmp    11d0f <dlmalloc+0x12df>
   120cb:	4c 89 ff             	mov    %r15,%rdi
   120ce:	4c 89 04 24          	mov    %r8,(%rsp)
   120d2:	e8 39 de ff ff       	call   ff10 <sbrk>
   120d7:	4c 8b 04 24          	mov    (%rsp),%r8
   120db:	4c 39 f0             	cmp    %r14,%rax
   120de:	49 89 c4             	mov    %rax,%r12
   120e1:	0f 84 cd 02 00 00    	je     123b4 <dlmalloc+0x1984>
   120e7:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   120eb:	0f 84 8f eb ff ff    	je     10c80 <dlmalloc+0x250>
   120f1:	49 8d 45 60          	lea    0x60(%r13),%rax
   120f5:	4c 39 f8             	cmp    %r15,%rax
   120f8:	0f 86 a8 f3 ff ff    	jbe    114a6 <dlmalloc+0xa76>
   120fe:	48 8b 05 8b 0d 03 00 	mov    0x30d8b(%rip),%rax        # 42e90 <mparams+0x10>
   12105:	4d 89 f9             	mov    %r15,%r9
   12108:	49 f7 d9             	neg    %r9
   1210b:	4d 8d 74 05 5f       	lea    0x5f(%r13,%rax,1),%r14
   12110:	48 f7 d8             	neg    %rax
   12113:	4d 29 fe             	sub    %r15,%r14
   12116:	49 21 c6             	and    %rax,%r14
   12119:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
   12120:	ff ff 7f 
   12123:	49 39 c6             	cmp    %rax,%r14
   12126:	0f 87 7a f3 ff ff    	ja     114a6 <dlmalloc+0xa76>
   1212c:	4c 89 f7             	mov    %r14,%rdi
   1212f:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   12134:	4c 89 04 24          	mov    %r8,(%rsp)
   12138:	e8 d3 dd ff ff       	call   ff10 <sbrk>
   1213d:	4c 8b 04 24          	mov    (%rsp),%r8
   12141:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   12146:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   1214a:	0f 84 da 02 00 00    	je     1242a <dlmalloc+0x19fa>
   12150:	4d 01 f7             	add    %r14,%r15
   12153:	e9 4e f3 ff ff       	jmp    114a6 <dlmalloc+0xa76>
   12158:	49 89 77 20          	mov    %rsi,0x20(%r15)
   1215c:	e9 a6 f1 ff ff       	jmp    11307 <dlmalloc+0x8d7>
   12161:	48 8b b4 f5 58 02 00 	mov    0x258(%rbp,%rsi,8),%rsi
   12168:	00 
   12169:	83 f9 1f             	cmp    $0x1f,%ecx
   1216c:	74 0b                	je     12179 <dlmalloc+0x1749>
   1216e:	d1 e9                	shr    %ecx
   12170:	41 b9 39 00 00 00    	mov    $0x39,%r9d
   12176:	41 29 c9             	sub    %ecx,%r9d
   12179:	44 89 c9             	mov    %r9d,%ecx
   1217c:	48 89 c2             	mov    %rax,%rdx
   1217f:	48 d3 e2             	shl    %cl,%rdx
   12182:	48 89 d1             	mov    %rdx,%rcx
   12185:	eb 1e                	jmp    121a5 <dlmalloc+0x1775>
   12187:	48 89 ca             	mov    %rcx,%rdx
   1218a:	48 01 c9             	add    %rcx,%rcx
   1218d:	48 c1 ea 3f          	shr    $0x3f,%rdx
   12191:	48 83 c2 04          	add    $0x4,%rdx
   12195:	4c 8b 04 d6          	mov    (%rsi,%rdx,8),%r8
   12199:	4d 85 c0             	test   %r8,%r8
   1219c:	0f 84 9f 01 00 00    	je     12341 <dlmalloc+0x1911>
   121a2:	4c 89 c6             	mov    %r8,%rsi
   121a5:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   121a9:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
   121ad:	48 39 d0             	cmp    %rdx,%rax
   121b0:	75 d5                	jne    12187 <dlmalloc+0x1757>
   121b2:	48 8b 46 10          	mov    0x10(%rsi),%rax
   121b6:	48 8b 15 1b 09 03 00 	mov    0x3091b(%rip),%rdx        # 42ad8 <_gm_+0x18>
   121bd:	48 39 d0             	cmp    %rdx,%rax
   121c0:	0f 82 42 f0 ff ff    	jb     11208 <dlmalloc+0x7d8>
   121c6:	48 39 d6             	cmp    %rdx,%rsi
   121c9:	0f 82 39 f0 ff ff    	jb     11208 <dlmalloc+0x7d8>
   121cf:	48 89 78 18          	mov    %rdi,0x18(%rax)
   121d3:	48 89 7e 10          	mov    %rdi,0x10(%rsi)
   121d7:	48 89 47 10          	mov    %rax,0x10(%rdi)
   121db:	48 89 77 18          	mov    %rsi,0x18(%rdi)
   121df:	48 c7 47 30 00 00 00 	movq   $0x0,0x30(%rdi)
   121e6:	00 
   121e7:	e9 4e ec ff ff       	jmp    10e3a <dlmalloc+0x40a>
   121ec:	44 09 f2             	or     %r14d,%edx
   121ef:	89 15 cb 08 03 00    	mov    %edx,0x308cb(%rip)        # 42ac0 <_gm_>
   121f5:	4c 89 ca             	mov    %r9,%rdx
   121f8:	e9 c2 f1 ff ff       	jmp    113bf <dlmalloc+0x98f>
   121fd:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   12202:	48 85 c0             	test   %rax,%rax
   12205:	0f 84 76 01 00 00    	je     12381 <dlmalloc+0x1951>
   1220b:	49 8d 4c 24 20       	lea    0x20(%r12),%rcx
   12210:	e9 4b fc ff ff       	jmp    11e60 <dlmalloc+0x1430>
   12215:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12219:	48 3b 15 b8 08 03 00 	cmp    0x308b8(%rip),%rdx        # 42ad8 <_gm_+0x18>
   12220:	0f 83 da f5 ff ff    	jae    11800 <dlmalloc+0xdd0>
   12226:	e9 dd ef ff ff       	jmp    11208 <dlmalloc+0x7d8>
   1222b:	ba 01 00 00 00       	mov    $0x1,%edx
   12230:	41 b8 58 02 00 00    	mov    $0x258,%r8d
   12236:	89 ce                	mov    %ecx,%esi
   12238:	e9 52 fd ff ff       	jmp    11f8f <dlmalloc+0x155f>
   1223d:	4d 85 f6             	test   %r14,%r14
   12240:	0f 84 15 ef ff ff    	je     1115b <dlmalloc+0x72b>
   12246:	41 8b 44 24 38       	mov    0x38(%r12),%eax
   1224b:	31 f6                	xor    %esi,%esi
   1224d:	48 89 c1             	mov    %rax,%rcx
   12250:	4c 8d 58 4a          	lea    0x4a(%rax),%r11
   12254:	4c 3b a4 c5 58 02 00 	cmp    0x258(%rbp,%rax,8),%r12
   1225b:	00 
   1225c:	0f 85 9a ee ff ff    	jne    110fc <dlmalloc+0x6cc>
   12262:	4a c7 44 dd 08 00 00 	movq   $0x0,0x8(%rbp,%r11,8)
   12269:	00 00 
   1226b:	e9 7d fb ff ff       	jmp    11ded <dlmalloc+0x13bd>
   12270:	4c 8b 52 30          	mov    0x30(%rdx),%r10
   12274:	48 39 f2             	cmp    %rsi,%rdx
   12277:	0f 84 5f 01 00 00    	je     123dc <dlmalloc+0x19ac>
   1227d:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
   12281:	48 3b 0d 50 08 03 00 	cmp    0x30850(%rip),%rcx        # 42ad8 <_gm_+0x18>
   12288:	0f 82 7a ef ff ff    	jb     11208 <dlmalloc+0x7d8>
   1228e:	48 39 51 18          	cmp    %rdx,0x18(%rcx)
   12292:	0f 85 70 ef ff ff    	jne    11208 <dlmalloc+0x7d8>
   12298:	48 39 56 10          	cmp    %rdx,0x10(%rsi)
   1229c:	0f 85 66 ef ff ff    	jne    11208 <dlmalloc+0x7d8>
   122a2:	48 89 71 18          	mov    %rsi,0x18(%rcx)
   122a6:	48 89 4e 10          	mov    %rcx,0x10(%rsi)
   122aa:	4d 85 d2             	test   %r10,%r10
   122ad:	0f 84 ed fd ff ff    	je     120a0 <dlmalloc+0x1670>
   122b3:	44 8b 42 38          	mov    0x38(%rdx),%r8d
   122b7:	4c 89 c1             	mov    %r8,%rcx
   122ba:	4d 8d 68 4a          	lea    0x4a(%r8),%r13
   122be:	4a 39 94 c5 58 02 00 	cmp    %rdx,0x258(%rbp,%r8,8)
   122c5:	00 
   122c6:	0f 84 f0 00 00 00    	je     123bc <dlmalloc+0x198c>
   122cc:	4c 3b 15 05 08 03 00 	cmp    0x30805(%rip),%r10        # 42ad8 <_gm_+0x18>
   122d3:	0f 82 2f ef ff ff    	jb     11208 <dlmalloc+0x7d8>
   122d9:	49 39 52 20          	cmp    %rdx,0x20(%r10)
   122dd:	0f 84 aa 01 00 00    	je     1248d <dlmalloc+0x1a5d>
   122e3:	49 89 72 28          	mov    %rsi,0x28(%r10)
   122e7:	48 85 f6             	test   %rsi,%rsi
   122ea:	0f 84 b0 fd ff ff    	je     120a0 <dlmalloc+0x1670>
   122f0:	4c 8b 05 e1 07 03 00 	mov    0x307e1(%rip),%r8        # 42ad8 <_gm_+0x18>
   122f7:	4c 39 c6             	cmp    %r8,%rsi
   122fa:	0f 82 08 ef ff ff    	jb     11208 <dlmalloc+0x7d8>
   12300:	48 8b 4a 20          	mov    0x20(%rdx),%rcx
   12304:	4c 89 56 30          	mov    %r10,0x30(%rsi)
   12308:	48 85 c9             	test   %rcx,%rcx
   1230b:	74 11                	je     1231e <dlmalloc+0x18ee>
   1230d:	49 39 c8             	cmp    %rcx,%r8
   12310:	0f 87 f2 ee ff ff    	ja     11208 <dlmalloc+0x7d8>
   12316:	48 89 4e 20          	mov    %rcx,0x20(%rsi)
   1231a:	48 89 71 30          	mov    %rsi,0x30(%rcx)
   1231e:	48 8b 4a 28          	mov    0x28(%rdx),%rcx
   12322:	48 85 c9             	test   %rcx,%rcx
   12325:	0f 84 75 fd ff ff    	je     120a0 <dlmalloc+0x1670>
   1232b:	49 39 c8             	cmp    %rcx,%r8
   1232e:	0f 87 d4 ee ff ff    	ja     11208 <dlmalloc+0x7d8>
   12334:	48 89 4e 28          	mov    %rcx,0x28(%rsi)
   12338:	48 89 71 30          	mov    %rsi,0x30(%rcx)
   1233c:	e9 5f fd ff ff       	jmp    120a0 <dlmalloc+0x1670>
   12341:	48 8d 04 d6          	lea    (%rsi,%rdx,8),%rax
   12345:	48 39 05 8c 07 03 00 	cmp    %rax,0x3078c(%rip)        # 42ad8 <_gm_+0x18>
   1234c:	0f 87 b6 ee ff ff    	ja     11208 <dlmalloc+0x7d8>
   12352:	48 89 3c d6          	mov    %rdi,(%rsi,%rdx,8)
   12356:	48 89 77 30          	mov    %rsi,0x30(%rdi)
   1235a:	48 89 7f 18          	mov    %rdi,0x18(%rdi)
   1235e:	48 89 7f 10          	mov    %rdi,0x10(%rdi)
   12362:	e9 d3 ea ff ff       	jmp    10e3a <dlmalloc+0x40a>
   12367:	ba 00 00 00 80       	mov    $0x80000000,%edx
   1236c:	41 b8 50 03 00 00    	mov    $0x350,%r8d
   12372:	b9 1f 00 00 00       	mov    $0x1f,%ecx
   12377:	be 1f 00 00 00       	mov    $0x1f,%esi
   1237c:	e9 0e fc ff ff       	jmp    11f8f <dlmalloc+0x155f>
   12381:	4d 85 ff             	test   %r15,%r15
   12384:	0f 84 c5 ef ff ff    	je     1134f <dlmalloc+0x91f>
   1238a:	41 8b 4c 24 38       	mov    0x38(%r12),%ecx
   1238f:	31 f6                	xor    %esi,%esi
   12391:	48 89 c8             	mov    %rcx,%rax
   12394:	4c 8d 71 4a          	lea    0x4a(%rcx),%r14
   12398:	4c 3b a4 cd 58 02 00 	cmp    0x258(%rbp,%rcx,8),%r12
   1239f:	00 
   123a0:	0f 85 4a ef ff ff    	jne    112f0 <dlmalloc+0x8c0>
   123a6:	4a c7 44 f5 08 00 00 	movq   $0x0,0x8(%rbp,%r14,8)
   123ad:	00 00 
   123af:	e9 42 fc ff ff       	jmp    11ff6 <dlmalloc+0x15c6>
   123b4:	4d 89 f4             	mov    %r14,%r12
   123b7:	e9 ea f0 ff ff       	jmp    114a6 <dlmalloc+0xa76>
   123bc:	4a 89 74 ed 08       	mov    %rsi,0x8(%rbp,%r13,8)
   123c1:	48 85 f6             	test   %rsi,%rsi
   123c4:	0f 85 26 ff ff ff    	jne    122f0 <dlmalloc+0x18c0>
   123ca:	be fe ff ff ff       	mov    $0xfffffffe,%esi
   123cf:	d3 c6                	rol    %cl,%esi
   123d1:	21 35 ed 06 03 00    	and    %esi,0x306ed(%rip)        # 42ac4 <_gm_+0x4>
   123d7:	e9 c4 fc ff ff       	jmp    120a0 <dlmalloc+0x1670>
   123dc:	48 8b 72 28          	mov    0x28(%rdx),%rsi
   123e0:	48 85 f6             	test   %rsi,%rsi
   123e3:	0f 84 8e 00 00 00    	je     12477 <dlmalloc+0x1a47>
   123e9:	4c 8d 42 28          	lea    0x28(%rdx),%r8
   123ed:	48 89 f1             	mov    %rsi,%rcx
   123f0:	4d 89 c5             	mov    %r8,%r13
   123f3:	48 89 ce             	mov    %rcx,%rsi
   123f6:	4c 8d 41 28          	lea    0x28(%rcx),%r8
   123fa:	48 8b 49 28          	mov    0x28(%rcx),%rcx
   123fe:	48 85 c9             	test   %rcx,%rcx
   12401:	75 ed                	jne    123f0 <dlmalloc+0x19c0>
   12403:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
   12407:	4c 8d 46 20          	lea    0x20(%rsi),%r8
   1240b:	48 85 c9             	test   %rcx,%rcx
   1240e:	75 e0                	jne    123f0 <dlmalloc+0x19c0>
   12410:	4c 39 2d c1 06 03 00 	cmp    %r13,0x306c1(%rip)        # 42ad8 <_gm_+0x18>
   12417:	0f 87 eb ed ff ff    	ja     11208 <dlmalloc+0x7d8>
   1241d:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
   12424:	00 
   12425:	e9 80 fe ff ff       	jmp    122aa <dlmalloc+0x187a>
   1242a:	4c 89 cf             	mov    %r9,%rdi
   1242d:	4c 89 04 24          	mov    %r8,(%rsp)
   12431:	e8 da da ff ff       	call   ff10 <sbrk>
   12436:	c7 05 70 0a 03 00 00 	movl   $0x0,0x30a70(%rip)        # 42eb0 <malloc_global_mutex>
   1243d:	00 00 00 
   12440:	4c 8b 04 24          	mov    (%rsp),%r8
   12444:	e9 41 e8 ff ff       	jmp    10c8a <dlmalloc+0x25a>
   12449:	be fe ff ff ff       	mov    $0xfffffffe,%esi
   1244e:	d3 c6                	rol    %cl,%esi
   12450:	21 35 6a 06 03 00    	and    %esi,0x3066a(%rip)        # 42ac0 <_gm_>
   12456:	e9 45 fc ff ff       	jmp    120a0 <dlmalloc+0x1670>
   1245b:	48 39 35 76 06 03 00 	cmp    %rsi,0x30676(%rip)        # 42ad8 <_gm_+0x18>
   12462:	0f 87 a0 ed ff ff    	ja     11208 <dlmalloc+0x7d8>
   12468:	48 39 56 10          	cmp    %rdx,0x10(%rsi)
   1246c:	0f 84 26 fc ff ff    	je     12098 <dlmalloc+0x1668>
   12472:	e9 91 ed ff ff       	jmp    11208 <dlmalloc+0x7d8>
   12477:	48 8b 72 20          	mov    0x20(%rdx),%rsi
   1247b:	48 85 f6             	test   %rsi,%rsi
   1247e:	0f 84 26 fe ff ff    	je     122aa <dlmalloc+0x187a>
   12484:	4c 8d 42 20          	lea    0x20(%rdx),%r8
   12488:	e9 60 ff ff ff       	jmp    123ed <dlmalloc+0x19bd>
   1248d:	49 89 72 20          	mov    %rsi,0x20(%r10)
   12491:	e9 51 fe ff ff       	jmp    122e7 <dlmalloc+0x18b7>
   12496:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1249d:	00 00 00 

00000000000124a0 <dlfree>:
   124a0:	f3 0f 1e fa          	endbr64 
   124a4:	48 85 ff             	test   %rdi,%rdi
   124a7:	0f 84 eb 01 00 00    	je     12698 <dlfree+0x1f8>
   124ad:	41 55                	push   %r13
   124af:	48 8d 47 f0          	lea    -0x10(%rdi),%rax
   124b3:	41 54                	push   %r12
   124b5:	55                   	push   %rbp
   124b6:	53                   	push   %rbx
   124b7:	48 83 ec 08          	sub    $0x8,%rsp
   124bb:	48 8b 57 f8          	mov    -0x8(%rdi),%rdx
   124bf:	48 8b 0d ba 09 03 00 	mov    0x309ba(%rip),%rcx        # 42e80 <mparams>
   124c6:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
   124ca:	48 8b 5c 17 f0       	mov    -0x10(%rdi,%rdx,1),%rbx
   124cf:	48 31 cb             	xor    %rcx,%rbx
   124d2:	48 3b 4b 40          	cmp    0x40(%rbx),%rcx
   124d6:	0f 85 7c 02 00 00    	jne    12758 <dlfree+0x2b8>
   124dc:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
   124e3:	0f 85 67 01 00 00    	jne    12650 <dlfree+0x1b0>
   124e9:	4c 8b 43 18          	mov    0x18(%rbx),%r8
   124ed:	49 39 c0             	cmp    %rax,%r8
   124f0:	0f 87 9a 01 00 00    	ja     12690 <dlfree+0x1f0>
   124f6:	48 8b 4f f8          	mov    -0x8(%rdi),%rcx
   124fa:	49 89 c9             	mov    %rcx,%r9
   124fd:	41 83 e1 03          	and    $0x3,%r9d
   12501:	49 83 f9 01          	cmp    $0x1,%r9
   12505:	0f 84 85 01 00 00    	je     12690 <dlfree+0x1f0>
   1250b:	48 89 ca             	mov    %rcx,%rdx
   1250e:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
   12512:	83 e1 01             	and    $0x1,%ecx
   12515:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
   12519:	0f 84 c1 00 00 00    	je     125e0 <dlfree+0x140>
   1251f:	48 39 f0             	cmp    %rsi,%rax
   12522:	0f 83 68 01 00 00    	jae    12690 <dlfree+0x1f0>
   12528:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
   1252c:	f6 c1 01             	test   $0x1,%cl
   1252f:	0f 84 5b 01 00 00    	je     12690 <dlfree+0x1f0>
   12535:	f6 c1 02             	test   $0x2,%cl
   12538:	0f 85 62 01 00 00    	jne    126a0 <dlfree+0x200>
   1253e:	4c 8b 5b 20          	mov    0x20(%rbx),%r11
   12542:	48 39 73 28          	cmp    %rsi,0x28(%rbx)
   12546:	0f 84 7c 06 00 00    	je     12bc8 <dlfree+0x728>
   1254c:	49 39 f3             	cmp    %rsi,%r11
   1254f:	0f 84 9b 07 00 00    	je     12cf0 <dlfree+0x850>
   12555:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
   12559:	48 8b 7e 18          	mov    0x18(%rsi),%rdi
   1255d:	48 89 cd             	mov    %rcx,%rbp
   12560:	48 01 ca             	add    %rcx,%rdx
   12563:	48 c1 ed 03          	shr    $0x3,%rbp
   12567:	48 81 f9 f8 00 00 00 	cmp    $0xf8,%rcx
   1256e:	0f 87 94 03 00 00    	ja     12908 <dlfree+0x468>
   12574:	44 8d 54 2d 00       	lea    0x0(%rbp,%rbp,1),%r10d
   12579:	4c 8b 4e 10          	mov    0x10(%rsi),%r9
   1257d:	4a 8d 4c d3 48       	lea    0x48(%rbx,%r10,8),%rcx
   12582:	4c 39 c9             	cmp    %r9,%rcx
   12585:	0f 85 4a 05 00 00    	jne    12ad5 <dlfree+0x635>
   1258b:	4c 39 cf             	cmp    %r9,%rdi
   1258e:	0f 85 62 05 00 00    	jne    12af6 <dlfree+0x656>
   12594:	be fe ff ff ff       	mov    $0xfffffffe,%esi
   12599:	89 e9                	mov    %ebp,%ecx
   1259b:	d3 c6                	rol    %cl,%esi
   1259d:	21 33                	and    %esi,(%rbx)
   1259f:	90                   	nop
   125a0:	48 89 d1             	mov    %rdx,%rcx
   125a3:	48 83 c9 01          	or     $0x1,%rcx
   125a7:	48 89 48 08          	mov    %rcx,0x8(%rax)
   125ab:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
   125af:	4c 39 d8             	cmp    %r11,%rax
   125b2:	0f 85 ff 00 00 00    	jne    126b7 <dlfree+0x217>
   125b8:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   125bc:	0f 1f 40 00          	nopl   0x0(%rax)
   125c0:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
   125c7:	0f 85 39 01 00 00    	jne    12706 <dlfree+0x266>
   125cd:	48 83 c4 08          	add    $0x8,%rsp
   125d1:	5b                   	pop    %rbx
   125d2:	5d                   	pop    %rbp
   125d3:	41 5c                	pop    %r12
   125d5:	41 5d                	pop    %r13
   125d7:	c3                   	ret    
   125d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   125df:	00 
   125e0:	4d 85 c9             	test   %r9,%r9
   125e3:	74 db                	je     125c0 <dlfree+0x120>
   125e5:	4c 8b 4f f0          	mov    -0x10(%rdi),%r9
   125e9:	4c 29 c8             	sub    %r9,%rax
   125ec:	4c 01 ca             	add    %r9,%rdx
   125ef:	49 39 c0             	cmp    %rax,%r8
   125f2:	0f 87 98 00 00 00    	ja     12690 <dlfree+0x1f0>
   125f8:	48 39 43 20          	cmp    %rax,0x20(%rbx)
   125fc:	0f 84 ce 03 00 00    	je     129d0 <dlfree+0x530>
   12602:	4c 89 c9             	mov    %r9,%rcx
   12605:	48 8b 78 18          	mov    0x18(%rax),%rdi
   12609:	48 c1 e9 03          	shr    $0x3,%rcx
   1260d:	49 81 f9 ff 00 00 00 	cmp    $0xff,%r9
   12614:	0f 87 26 02 00 00    	ja     12840 <dlfree+0x3a0>
   1261a:	44 8d 14 09          	lea    (%rcx,%rcx,1),%r10d
   1261e:	4c 8b 48 10          	mov    0x10(%rax),%r9
   12622:	4e 8d 54 d3 48       	lea    0x48(%rbx,%r10,8),%r10
   12627:	4d 39 ca             	cmp    %r9,%r10
   1262a:	0f 85 ed 04 00 00    	jne    12b1d <dlfree+0x67d>
   12630:	4c 39 cf             	cmp    %r9,%rdi
   12633:	0f 85 05 05 00 00    	jne    12b3e <dlfree+0x69e>
   12639:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
   1263e:	d3 c7                	rol    %cl,%edi
   12640:	21 3b                	and    %edi,(%rbx)
   12642:	e9 d8 fe ff ff       	jmp    1251f <dlfree+0x7f>
   12647:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1264e:	00 00 
   12650:	48 8d 8b 74 03 00 00 	lea    0x374(%rbx),%rcx
   12657:	ba 01 00 00 00       	mov    $0x1,%edx
   1265c:	87 11                	xchg   %edx,(%rcx)
   1265e:	85 d2                	test   %edx,%edx
   12660:	0f 84 83 fe ff ff    	je     124e9 <dlfree+0x49>
   12666:	be 01 00 00 00       	mov    $0x1,%esi
   1266b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12670:	8b 93 74 03 00 00    	mov    0x374(%rbx),%edx
   12676:	85 d2                	test   %edx,%edx
   12678:	75 f6                	jne    12670 <dlfree+0x1d0>
   1267a:	89 f2                	mov    %esi,%edx
   1267c:	87 11                	xchg   %edx,(%rcx)
   1267e:	85 d2                	test   %edx,%edx
   12680:	75 ee                	jne    12670 <dlfree+0x1d0>
   12682:	e9 62 fe ff ff       	jmp    124e9 <dlfree+0x49>
   12687:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1268e:	00 00 
   12690:	e8 a2 36 01 00       	call   25d37 <abort>
   12695:	0f 1f 00             	nopl   (%rax)
   12698:	c3                   	ret    
   12699:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   126a0:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
   126a4:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   126a8:	48 89 d1             	mov    %rdx,%rcx
   126ab:	48 83 c9 01          	or     $0x1,%rcx
   126af:	48 89 48 08          	mov    %rcx,0x8(%rax)
   126b3:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
   126b7:	48 89 d1             	mov    %rdx,%rcx
   126ba:	48 c1 e9 03          	shr    $0x3,%rcx
   126be:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
   126c5:	77 59                	ja     12720 <dlfree+0x280>
   126c7:	8d 14 09             	lea    (%rcx,%rcx,1),%edx
   126ca:	8b 3b                	mov    (%rbx),%edi
   126cc:	48 8d 74 d3 48       	lea    0x48(%rbx,%rdx,8),%rsi
   126d1:	ba 01 00 00 00       	mov    $0x1,%edx
   126d6:	d3 e2                	shl    %cl,%edx
   126d8:	85 d7                	test   %edx,%edi
   126da:	0f 84 88 04 00 00    	je     12b68 <dlfree+0x6c8>
   126e0:	48 8b 56 10          	mov    0x10(%rsi),%rdx
   126e4:	49 39 d0             	cmp    %rdx,%r8
   126e7:	77 6f                	ja     12758 <dlfree+0x2b8>
   126e9:	48 89 46 10          	mov    %rax,0x10(%rsi)
   126ed:	48 89 42 18          	mov    %rax,0x18(%rdx)
   126f1:	48 89 50 10          	mov    %rdx,0x10(%rax)
   126f5:	48 89 70 18          	mov    %rsi,0x18(%rax)
   126f9:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
   12700:	0f 84 c7 fe ff ff    	je     125cd <dlfree+0x12d>
   12706:	c7 83 74 03 00 00 00 	movl   $0x0,0x374(%rbx)
   1270d:	00 00 00 
   12710:	48 83 c4 08          	add    $0x8,%rsp
   12714:	5b                   	pop    %rbx
   12715:	5d                   	pop    %rbp
   12716:	41 5c                	pop    %r12
   12718:	41 5d                	pop    %r13
   1271a:	c3                   	ret    
   1271b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12720:	48 89 d6             	mov    %rdx,%rsi
   12723:	48 c1 ee 08          	shr    $0x8,%rsi
   12727:	89 f1                	mov    %esi,%ecx
   12729:	85 f6                	test   %esi,%esi
   1272b:	74 33                	je     12760 <dlfree+0x2c0>
   1272d:	81 fe ff ff 00 00    	cmp    $0xffff,%esi
   12733:	0f 86 cf 02 00 00    	jbe    12a08 <dlfree+0x568>
   12739:	be 00 00 00 80       	mov    $0x80000000,%esi
   1273e:	41 ba 50 03 00 00    	mov    $0x350,%r10d
   12744:	b9 1f 00 00 00       	mov    $0x1f,%ecx
   12749:	41 b9 1f 00 00 00    	mov    $0x1f,%r9d
   1274f:	eb 1d                	jmp    1276e <dlfree+0x2ce>
   12751:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12758:	e8 da 35 01 00       	call   25d37 <abort>
   1275d:	0f 1f 00             	nopl   (%rax)
   12760:	be 01 00 00 00       	mov    $0x1,%esi
   12765:	41 ba 58 02 00 00    	mov    $0x258,%r10d
   1276b:	41 89 c9             	mov    %ecx,%r9d
   1276e:	8b 7b 04             	mov    0x4(%rbx),%edi
   12771:	89 48 38             	mov    %ecx,0x38(%rax)
   12774:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   1277b:	00 
   1277c:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   12783:	00 
   12784:	85 fe                	test   %edi,%esi
   12786:	0f 84 ec 03 00 00    	je     12b78 <dlfree+0x6d8>
   1278c:	4a 8b b4 cb 58 02 00 	mov    0x258(%rbx,%r9,8),%rsi
   12793:	00 
   12794:	48 89 d7             	mov    %rdx,%rdi
   12797:	83 f9 1f             	cmp    $0x1f,%ecx
   1279a:	74 32                	je     127ce <dlfree+0x32e>
   1279c:	d1 e9                	shr    %ecx
   1279e:	bf 39 00 00 00       	mov    $0x39,%edi
   127a3:	29 cf                	sub    %ecx,%edi
   127a5:	89 f9                	mov    %edi,%ecx
   127a7:	48 89 d7             	mov    %rdx,%rdi
   127aa:	48 d3 e7             	shl    %cl,%rdi
   127ad:	eb 1f                	jmp    127ce <dlfree+0x32e>
   127af:	90                   	nop
   127b0:	48 89 f9             	mov    %rdi,%rcx
   127b3:	48 01 ff             	add    %rdi,%rdi
   127b6:	48 c1 e9 3f          	shr    $0x3f,%rcx
   127ba:	48 83 c1 04          	add    $0x4,%rcx
   127be:	4c 8b 0c ce          	mov    (%rsi,%rcx,8),%r9
   127c2:	4d 85 c9             	test   %r9,%r9
   127c5:	0f 84 d5 03 00 00    	je     12ba0 <dlfree+0x700>
   127cb:	4c 89 ce             	mov    %r9,%rsi
   127ce:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
   127d2:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
   127d6:	48 39 d1             	cmp    %rdx,%rcx
   127d9:	75 d5                	jne    127b0 <dlfree+0x310>
   127db:	48 8b 56 10          	mov    0x10(%rsi),%rdx
   127df:	49 39 f0             	cmp    %rsi,%r8
   127e2:	0f 87 70 ff ff ff    	ja     12758 <dlfree+0x2b8>
   127e8:	49 39 d0             	cmp    %rdx,%r8
   127eb:	0f 87 67 ff ff ff    	ja     12758 <dlfree+0x2b8>
   127f1:	48 89 42 18          	mov    %rax,0x18(%rdx)
   127f5:	48 89 46 10          	mov    %rax,0x10(%rsi)
   127f9:	48 89 50 10          	mov    %rdx,0x10(%rax)
   127fd:	48 89 70 18          	mov    %rsi,0x18(%rax)
   12801:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
   12808:	00 
   12809:	48 83 6b 38 01       	subq   $0x1,0x38(%rbx)
   1280e:	0f 85 ac fd ff ff    	jne    125c0 <dlfree+0x120>
   12814:	48 8b 83 88 03 00 00 	mov    0x388(%rbx),%rax
   1281b:	48 85 c0             	test   %rax,%rax
   1281e:	74 09                	je     12829 <dlfree+0x389>
   12820:	48 8b 40 10          	mov    0x10(%rax),%rax
   12824:	48 85 c0             	test   %rax,%rax
   12827:	75 f7                	jne    12820 <dlfree+0x380>
   12829:	48 c7 43 38 ff ff ff 	movq   $0xffffffffffffffff,0x38(%rbx)
   12830:	ff 
   12831:	e9 8a fd ff ff       	jmp    125c0 <dlfree+0x120>
   12836:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1283d:	00 00 00 
   12840:	4c 8b 58 30          	mov    0x30(%rax),%r11
   12844:	48 39 c7             	cmp    %rax,%rdi
   12847:	0f 84 f6 01 00 00    	je     12a43 <dlfree+0x5a3>
   1284d:	48 8b 48 10          	mov    0x10(%rax),%rcx
   12851:	49 39 c8             	cmp    %rcx,%r8
   12854:	0f 87 fe fe ff ff    	ja     12758 <dlfree+0x2b8>
   1285a:	48 39 41 18          	cmp    %rax,0x18(%rcx)
   1285e:	0f 85 f4 fe ff ff    	jne    12758 <dlfree+0x2b8>
   12864:	48 39 47 10          	cmp    %rax,0x10(%rdi)
   12868:	0f 85 ea fe ff ff    	jne    12758 <dlfree+0x2b8>
   1286e:	48 89 79 18          	mov    %rdi,0x18(%rcx)
   12872:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
   12876:	4d 85 db             	test   %r11,%r11
   12879:	0f 84 a0 fc ff ff    	je     1251f <dlfree+0x7f>
   1287f:	44 8b 48 38          	mov    0x38(%rax),%r9d
   12883:	4c 89 c9             	mov    %r9,%rcx
   12886:	4e 8d 0c cb          	lea    (%rbx,%r9,8),%r9
   1288a:	49 39 81 58 02 00 00 	cmp    %rax,0x258(%r9)
   12891:	0f 84 79 04 00 00    	je     12d10 <dlfree+0x870>
   12897:	4d 39 d8             	cmp    %r11,%r8
   1289a:	0f 87 b8 fe ff ff    	ja     12758 <dlfree+0x2b8>
   128a0:	49 39 43 20          	cmp    %rax,0x20(%r11)
   128a4:	0f 84 b9 04 00 00    	je     12d63 <dlfree+0x8c3>
   128aa:	49 89 7b 28          	mov    %rdi,0x28(%r11)
   128ae:	48 85 ff             	test   %rdi,%rdi
   128b1:	0f 84 68 fc ff ff    	je     1251f <dlfree+0x7f>
   128b7:	49 39 f8             	cmp    %rdi,%r8
   128ba:	0f 87 98 fe ff ff    	ja     12758 <dlfree+0x2b8>
   128c0:	48 8b 48 20          	mov    0x20(%rax),%rcx
   128c4:	4c 89 5f 30          	mov    %r11,0x30(%rdi)
   128c8:	48 85 c9             	test   %rcx,%rcx
   128cb:	74 11                	je     128de <dlfree+0x43e>
   128cd:	49 39 c8             	cmp    %rcx,%r8
   128d0:	0f 87 82 fe ff ff    	ja     12758 <dlfree+0x2b8>
   128d6:	48 89 4f 20          	mov    %rcx,0x20(%rdi)
   128da:	48 89 79 30          	mov    %rdi,0x30(%rcx)
   128de:	48 8b 48 28          	mov    0x28(%rax),%rcx
   128e2:	48 85 c9             	test   %rcx,%rcx
   128e5:	0f 84 34 fc ff ff    	je     1251f <dlfree+0x7f>
   128eb:	49 39 c8             	cmp    %rcx,%r8
   128ee:	0f 87 64 fe ff ff    	ja     12758 <dlfree+0x2b8>
   128f4:	48 89 4f 28          	mov    %rcx,0x28(%rdi)
   128f8:	48 89 79 30          	mov    %rdi,0x30(%rcx)
   128fc:	e9 1e fc ff ff       	jmp    1251f <dlfree+0x7f>
   12901:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12908:	48 8b 6e 30          	mov    0x30(%rsi),%rbp
   1290c:	48 39 f7             	cmp    %rsi,%rdi
   1290f:	0f 84 78 01 00 00    	je     12a8d <dlfree+0x5ed>
   12915:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   12919:	49 39 c8             	cmp    %rcx,%r8
   1291c:	0f 87 36 fe ff ff    	ja     12758 <dlfree+0x2b8>
   12922:	48 39 71 18          	cmp    %rsi,0x18(%rcx)
   12926:	0f 85 2c fe ff ff    	jne    12758 <dlfree+0x2b8>
   1292c:	48 39 77 10          	cmp    %rsi,0x10(%rdi)
   12930:	0f 85 22 fe ff ff    	jne    12758 <dlfree+0x2b8>
   12936:	48 89 79 18          	mov    %rdi,0x18(%rcx)
   1293a:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
   1293e:	48 85 ed             	test   %rbp,%rbp
   12941:	0f 84 59 fc ff ff    	je     125a0 <dlfree+0x100>
   12947:	44 8b 4e 38          	mov    0x38(%rsi),%r9d
   1294b:	4c 89 c9             	mov    %r9,%rcx
   1294e:	4e 8d 0c cb          	lea    (%rbx,%r9,8),%r9
   12952:	49 39 b1 58 02 00 00 	cmp    %rsi,0x258(%r9)
   12959:	0f 84 e5 03 00 00    	je     12d44 <dlfree+0x8a4>
   1295f:	49 39 e8             	cmp    %rbp,%r8
   12962:	0f 87 f0 fd ff ff    	ja     12758 <dlfree+0x2b8>
   12968:	48 39 75 20          	cmp    %rsi,0x20(%rbp)
   1296c:	0f 84 fa 03 00 00    	je     12d6c <dlfree+0x8cc>
   12972:	48 89 7d 28          	mov    %rdi,0x28(%rbp)
   12976:	48 85 ff             	test   %rdi,%rdi
   12979:	0f 84 21 fc ff ff    	je     125a0 <dlfree+0x100>
   1297f:	49 39 f8             	cmp    %rdi,%r8
   12982:	0f 87 d0 fd ff ff    	ja     12758 <dlfree+0x2b8>
   12988:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
   1298c:	48 89 6f 30          	mov    %rbp,0x30(%rdi)
   12990:	48 85 c9             	test   %rcx,%rcx
   12993:	74 11                	je     129a6 <dlfree+0x506>
   12995:	49 39 c8             	cmp    %rcx,%r8
   12998:	0f 87 ba fd ff ff    	ja     12758 <dlfree+0x2b8>
   1299e:	48 89 4f 20          	mov    %rcx,0x20(%rdi)
   129a2:	48 89 79 30          	mov    %rdi,0x30(%rcx)
   129a6:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
   129aa:	48 85 c9             	test   %rcx,%rcx
   129ad:	0f 84 ed fb ff ff    	je     125a0 <dlfree+0x100>
   129b3:	49 39 c8             	cmp    %rcx,%r8
   129b6:	0f 87 9c fd ff ff    	ja     12758 <dlfree+0x2b8>
   129bc:	48 89 4f 28          	mov    %rcx,0x28(%rdi)
   129c0:	48 89 79 30          	mov    %rdi,0x30(%rcx)
   129c4:	e9 d7 fb ff ff       	jmp    125a0 <dlfree+0x100>
   129c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   129d0:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
   129d4:	48 89 cf             	mov    %rcx,%rdi
   129d7:	83 e7 03             	and    $0x3,%edi
   129da:	48 83 ff 03          	cmp    $0x3,%rdi
   129de:	0f 85 3b fb ff ff    	jne    1251f <dlfree+0x7f>
   129e4:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
   129e8:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   129ec:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   129f0:	48 89 d1             	mov    %rdx,%rcx
   129f3:	48 83 c9 01          	or     $0x1,%rcx
   129f7:	48 89 48 08          	mov    %rcx,0x8(%rax)
   129fb:	48 89 16             	mov    %rdx,(%rsi)
   129fe:	e9 bd fb ff ff       	jmp    125c0 <dlfree+0x120>
   12a03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12a08:	0f bd f6             	bsr    %esi,%esi
   12a0b:	b9 26 00 00 00       	mov    $0x26,%ecx
   12a10:	48 89 d7             	mov    %rdx,%rdi
   12a13:	83 f6 1f             	xor    $0x1f,%esi
   12a16:	29 f1                	sub    %esi,%ecx
   12a18:	48 d3 ef             	shr    %cl,%rdi
   12a1b:	48 89 f9             	mov    %rdi,%rcx
   12a1e:	bf 1f 00 00 00       	mov    $0x1f,%edi
   12a23:	83 e1 01             	and    $0x1,%ecx
   12a26:	29 f7                	sub    %esi,%edi
   12a28:	be 01 00 00 00       	mov    $0x1,%esi
   12a2d:	44 8d 0c 79          	lea    (%rcx,%rdi,2),%r9d
   12a31:	4c 89 c9             	mov    %r9,%rcx
   12a34:	4e 8d 14 cd 58 02 00 	lea    0x258(,%r9,8),%r10
   12a3b:	00 
   12a3c:	d3 e6                	shl    %cl,%esi
   12a3e:	e9 2b fd ff ff       	jmp    1276e <dlfree+0x2ce>
   12a43:	48 8b 48 28          	mov    0x28(%rax),%rcx
   12a47:	4c 8d 48 28          	lea    0x28(%rax),%r9
   12a4b:	48 85 c9             	test   %rcx,%rcx
   12a4e:	0f 84 21 03 00 00    	je     12d75 <dlfree+0x8d5>
   12a54:	0f 1f 40 00          	nopl   0x0(%rax)
   12a58:	4d 89 ca             	mov    %r9,%r10
   12a5b:	48 89 cf             	mov    %rcx,%rdi
   12a5e:	4c 8d 49 28          	lea    0x28(%rcx),%r9
   12a62:	48 8b 49 28          	mov    0x28(%rcx),%rcx
   12a66:	48 85 c9             	test   %rcx,%rcx
   12a69:	75 ed                	jne    12a58 <dlfree+0x5b8>
   12a6b:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
   12a6f:	4c 8d 4f 20          	lea    0x20(%rdi),%r9
   12a73:	48 85 c9             	test   %rcx,%rcx
   12a76:	75 e0                	jne    12a58 <dlfree+0x5b8>
   12a78:	4d 39 d0             	cmp    %r10,%r8
   12a7b:	0f 87 d7 fc ff ff    	ja     12758 <dlfree+0x2b8>
   12a81:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
   12a88:	e9 e9 fd ff ff       	jmp    12876 <dlfree+0x3d6>
   12a8d:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
   12a91:	4c 8d 4e 28          	lea    0x28(%rsi),%r9
   12a95:	48 85 c9             	test   %rcx,%rcx
   12a98:	0f 84 e9 02 00 00    	je     12d87 <dlfree+0x8e7>
   12a9e:	66 90                	xchg   %ax,%ax
   12aa0:	4d 89 ca             	mov    %r9,%r10
   12aa3:	48 89 cf             	mov    %rcx,%rdi
   12aa6:	4c 8d 49 28          	lea    0x28(%rcx),%r9
   12aaa:	48 8b 49 28          	mov    0x28(%rcx),%rcx
   12aae:	48 85 c9             	test   %rcx,%rcx
   12ab1:	75 ed                	jne    12aa0 <dlfree+0x600>
   12ab3:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
   12ab7:	4c 8d 4f 20          	lea    0x20(%rdi),%r9
   12abb:	48 85 c9             	test   %rcx,%rcx
   12abe:	75 e0                	jne    12aa0 <dlfree+0x600>
   12ac0:	4d 39 d0             	cmp    %r10,%r8
   12ac3:	0f 87 8f fc ff ff    	ja     12758 <dlfree+0x2b8>
   12ac9:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
   12ad0:	e9 69 fe ff ff       	jmp    1293e <dlfree+0x49e>
   12ad5:	4d 39 c8             	cmp    %r9,%r8
   12ad8:	0f 87 7a fc ff ff    	ja     12758 <dlfree+0x2b8>
   12ade:	49 39 71 18          	cmp    %rsi,0x18(%r9)
   12ae2:	0f 85 70 fc ff ff    	jne    12758 <dlfree+0x2b8>
   12ae8:	4c 39 cf             	cmp    %r9,%rdi
   12aeb:	0f 84 a3 fa ff ff    	je     12594 <dlfree+0xf4>
   12af1:	48 39 f9             	cmp    %rdi,%rcx
   12af4:	74 1a                	je     12b10 <dlfree+0x670>
   12af6:	49 39 f8             	cmp    %rdi,%r8
   12af9:	0f 87 59 fc ff ff    	ja     12758 <dlfree+0x2b8>
   12aff:	48 39 77 10          	cmp    %rsi,0x10(%rdi)
   12b03:	0f 85 4f fc ff ff    	jne    12758 <dlfree+0x2b8>
   12b09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12b10:	49 89 79 18          	mov    %rdi,0x18(%r9)
   12b14:	4c 89 4f 10          	mov    %r9,0x10(%rdi)
   12b18:	e9 83 fa ff ff       	jmp    125a0 <dlfree+0x100>
   12b1d:	4d 39 c8             	cmp    %r9,%r8
   12b20:	0f 87 32 fc ff ff    	ja     12758 <dlfree+0x2b8>
   12b26:	49 39 41 18          	cmp    %rax,0x18(%r9)
   12b2a:	0f 85 28 fc ff ff    	jne    12758 <dlfree+0x2b8>
   12b30:	4c 39 cf             	cmp    %r9,%rdi
   12b33:	0f 84 00 fb ff ff    	je     12639 <dlfree+0x199>
   12b39:	49 39 fa             	cmp    %rdi,%r10
   12b3c:	74 1a                	je     12b58 <dlfree+0x6b8>
   12b3e:	49 39 f8             	cmp    %rdi,%r8
   12b41:	0f 87 11 fc ff ff    	ja     12758 <dlfree+0x2b8>
   12b47:	48 39 47 10          	cmp    %rax,0x10(%rdi)
   12b4b:	0f 85 07 fc ff ff    	jne    12758 <dlfree+0x2b8>
   12b51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12b58:	49 89 79 18          	mov    %rdi,0x18(%r9)
   12b5c:	4c 89 4f 10          	mov    %r9,0x10(%rdi)
   12b60:	e9 ba f9 ff ff       	jmp    1251f <dlfree+0x7f>
   12b65:	0f 1f 00             	nopl   (%rax)
   12b68:	09 fa                	or     %edi,%edx
   12b6a:	89 13                	mov    %edx,(%rbx)
   12b6c:	48 89 f2             	mov    %rsi,%rdx
   12b6f:	e9 75 fb ff ff       	jmp    126e9 <dlfree+0x249>
   12b74:	0f 1f 40 00          	nopl   0x0(%rax)
   12b78:	09 fe                	or     %edi,%esi
   12b7a:	49 01 da             	add    %rbx,%r10
   12b7d:	89 73 04             	mov    %esi,0x4(%rbx)
   12b80:	4a 89 84 cb 58 02 00 	mov    %rax,0x258(%rbx,%r9,8)
   12b87:	00 
   12b88:	4c 89 50 30          	mov    %r10,0x30(%rax)
   12b8c:	48 89 40 18          	mov    %rax,0x18(%rax)
   12b90:	48 89 40 10          	mov    %rax,0x10(%rax)
   12b94:	e9 70 fc ff ff       	jmp    12809 <dlfree+0x369>
   12b99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12ba0:	48 8d 14 ce          	lea    (%rsi,%rcx,8),%rdx
   12ba4:	49 39 d0             	cmp    %rdx,%r8
   12ba7:	0f 87 ab fb ff ff    	ja     12758 <dlfree+0x2b8>
   12bad:	48 89 04 ce          	mov    %rax,(%rsi,%rcx,8)
   12bb1:	48 89 70 30          	mov    %rsi,0x30(%rax)
   12bb5:	48 89 40 18          	mov    %rax,0x18(%rax)
   12bb9:	48 89 40 10          	mov    %rax,0x10(%rax)
   12bbd:	e9 47 fc ff ff       	jmp    12809 <dlfree+0x369>
   12bc2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   12bc8:	48 03 53 10          	add    0x10(%rbx),%rdx
   12bcc:	48 89 43 28          	mov    %rax,0x28(%rbx)
   12bd0:	48 89 d1             	mov    %rdx,%rcx
   12bd3:	48 89 53 10          	mov    %rdx,0x10(%rbx)
   12bd7:	48 83 c9 01          	or     $0x1,%rcx
   12bdb:	48 89 48 08          	mov    %rcx,0x8(%rax)
   12bdf:	4c 39 d8             	cmp    %r11,%rax
   12be2:	0f 84 47 01 00 00    	je     12d2f <dlfree+0x88f>
   12be8:	48 3b 53 30          	cmp    0x30(%rbx),%rdx
   12bec:	0f 86 ce f9 ff ff    	jbe    125c0 <dlfree+0x120>
   12bf2:	48 83 3d 86 02 03 00 	cmpq   $0x0,0x30286(%rip)        # 42e80 <mparams>
   12bf9:	00 
   12bfa:	0f 84 99 01 00 00    	je     12d99 <dlfree+0x8f9>
   12c00:	48 85 c0             	test   %rax,%rax
   12c03:	0f 84 b7 f9 ff ff    	je     125c0 <dlfree+0x120>
   12c09:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
   12c0d:	48 83 f9 50          	cmp    $0x50,%rcx
   12c11:	0f 86 a6 00 00 00    	jbe    12cbd <dlfree+0x81d>
   12c17:	48 8d ab 78 03 00 00 	lea    0x378(%rbx),%rbp
   12c1e:	66 90                	xchg   %ax,%ax
   12c20:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   12c24:	48 39 d0             	cmp    %rdx,%rax
   12c27:	72 09                	jb     12c32 <dlfree+0x792>
   12c29:	48 03 55 08          	add    0x8(%rbp),%rdx
   12c2d:	48 39 d0             	cmp    %rdx,%rax
   12c30:	72 09                	jb     12c3b <dlfree+0x79b>
   12c32:	48 8b 6d 10          	mov    0x10(%rbp),%rbp
   12c36:	48 85 ed             	test   %rbp,%rbp
   12c39:	75 e5                	jne    12c20 <dlfree+0x780>
   12c3b:	f6 45 18 08          	testb  $0x8,0x18(%rbp)
   12c3f:	75 7c                	jne    12cbd <dlfree+0x81d>
   12c41:	48 8b 35 48 02 03 00 	mov    0x30248(%rip),%rsi        # 42e90 <mparams+0x10>
   12c48:	31 d2                	xor    %edx,%edx
   12c4a:	48 8d 44 31 af       	lea    -0x51(%rcx,%rsi,1),%rax
   12c4f:	48 f7 f6             	div    %rsi
   12c52:	48 83 e8 01          	sub    $0x1,%rax
   12c56:	48 0f af c6          	imul   %rsi,%rax
   12c5a:	49 89 c4             	mov    %rax,%r12
   12c5d:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
   12c64:	ff ff 7f 
   12c67:	49 39 c4             	cmp    %rax,%r12
   12c6a:	76 0d                	jbe    12c79 <dlfree+0x7d9>
   12c6c:	49 bc 00 00 00 00 00 	movabs $0x8000000000000000,%r12
   12c73:	00 00 80 
   12c76:	49 29 f4             	sub    %rsi,%r12
   12c79:	b8 01 00 00 00       	mov    $0x1,%eax
   12c7e:	87 05 2c 02 03 00    	xchg   %eax,0x3022c(%rip)        # 42eb0 <malloc_global_mutex>
   12c84:	48 8d 15 25 02 03 00 	lea    0x30225(%rip),%rdx        # 42eb0 <malloc_global_mutex>
   12c8b:	b9 01 00 00 00       	mov    $0x1,%ecx
   12c90:	85 c0                	test   %eax,%eax
   12c92:	75 40                	jne    12cd4 <dlfree+0x834>
   12c94:	31 ff                	xor    %edi,%edi
   12c96:	e8 75 d2 ff ff       	call   ff10 <sbrk>
   12c9b:	49 89 c5             	mov    %rax,%r13
   12c9e:	48 8b 45 08          	mov    0x8(%rbp),%rax
   12ca2:	48 03 45 00          	add    0x0(%rbp),%rax
   12ca6:	49 39 c5             	cmp    %rax,%r13
   12ca9:	0f 84 5c 01 00 00    	je     12e0b <dlfree+0x96b>
   12caf:	c7 05 f7 01 03 00 00 	movl   $0x0,0x301f7(%rip)        # 42eb0 <malloc_global_mutex>
   12cb6:	00 00 00 
   12cb9:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
   12cbd:	48 3b 4b 30          	cmp    0x30(%rbx),%rcx
   12cc1:	0f 86 f9 f8 ff ff    	jbe    125c0 <dlfree+0x120>
   12cc7:	48 c7 43 30 ff ff ff 	movq   $0xffffffffffffffff,0x30(%rbx)
   12cce:	ff 
   12ccf:	e9 ec f8 ff ff       	jmp    125c0 <dlfree+0x120>
   12cd4:	8b 02                	mov    (%rdx),%eax
   12cd6:	85 c0                	test   %eax,%eax
   12cd8:	75 fa                	jne    12cd4 <dlfree+0x834>
   12cda:	89 c8                	mov    %ecx,%eax
   12cdc:	87 05 ce 01 03 00    	xchg   %eax,0x301ce(%rip)        # 42eb0 <malloc_global_mutex>
   12ce2:	85 c0                	test   %eax,%eax
   12ce4:	75 ee                	jne    12cd4 <dlfree+0x834>
   12ce6:	eb ac                	jmp    12c94 <dlfree+0x7f4>
   12ce8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   12cef:	00 
   12cf0:	48 03 53 08          	add    0x8(%rbx),%rdx
   12cf4:	48 89 43 20          	mov    %rax,0x20(%rbx)
   12cf8:	48 89 d1             	mov    %rdx,%rcx
   12cfb:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   12cff:	48 83 c9 01          	or     $0x1,%rcx
   12d03:	48 89 48 08          	mov    %rcx,0x8(%rax)
   12d07:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
   12d0b:	e9 b0 f8 ff ff       	jmp    125c0 <dlfree+0x120>
   12d10:	49 89 b9 58 02 00 00 	mov    %rdi,0x258(%r9)
   12d17:	48 85 ff             	test   %rdi,%rdi
   12d1a:	0f 85 97 fb ff ff    	jne    128b7 <dlfree+0x417>
   12d20:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
   12d25:	d3 c7                	rol    %cl,%edi
   12d27:	21 7b 04             	and    %edi,0x4(%rbx)
   12d2a:	e9 f0 f7 ff ff       	jmp    1251f <dlfree+0x7f>
   12d2f:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
   12d36:	00 
   12d37:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
   12d3e:	00 
   12d3f:	e9 a4 fe ff ff       	jmp    12be8 <dlfree+0x748>
   12d44:	49 89 b9 58 02 00 00 	mov    %rdi,0x258(%r9)
   12d4b:	48 85 ff             	test   %rdi,%rdi
   12d4e:	0f 85 2b fc ff ff    	jne    1297f <dlfree+0x4df>
   12d54:	be fe ff ff ff       	mov    $0xfffffffe,%esi
   12d59:	d3 c6                	rol    %cl,%esi
   12d5b:	21 73 04             	and    %esi,0x4(%rbx)
   12d5e:	e9 3d f8 ff ff       	jmp    125a0 <dlfree+0x100>
   12d63:	49 89 7b 20          	mov    %rdi,0x20(%r11)
   12d67:	e9 42 fb ff ff       	jmp    128ae <dlfree+0x40e>
   12d6c:	48 89 7d 20          	mov    %rdi,0x20(%rbp)
   12d70:	e9 01 fc ff ff       	jmp    12976 <dlfree+0x4d6>
   12d75:	48 8b 48 20          	mov    0x20(%rax),%rcx
   12d79:	48 85 c9             	test   %rcx,%rcx
   12d7c:	74 29                	je     12da7 <dlfree+0x907>
   12d7e:	4c 8d 48 20          	lea    0x20(%rax),%r9
   12d82:	e9 d1 fc ff ff       	jmp    12a58 <dlfree+0x5b8>
   12d87:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
   12d8b:	48 85 c9             	test   %rcx,%rcx
   12d8e:	74 49                	je     12dd9 <dlfree+0x939>
   12d90:	4c 8d 4e 20          	lea    0x20(%rsi),%r9
   12d94:	e9 07 fd ff ff       	jmp    12aa0 <dlfree+0x600>
   12d99:	e8 62 d4 ff ff       	call   10200 <init_mparams>
   12d9e:	48 8b 43 28          	mov    0x28(%rbx),%rax
   12da2:	e9 59 fe ff ff       	jmp    12c00 <dlfree+0x760>
   12da7:	4d 85 db             	test   %r11,%r11
   12daa:	0f 84 6f f7 ff ff    	je     1251f <dlfree+0x7f>
   12db0:	8b 78 38             	mov    0x38(%rax),%edi
   12db3:	4c 8d 0c fb          	lea    (%rbx,%rdi,8),%r9
   12db7:	48 89 f9             	mov    %rdi,%rcx
   12dba:	31 ff                	xor    %edi,%edi
   12dbc:	49 39 81 58 02 00 00 	cmp    %rax,0x258(%r9)
   12dc3:	0f 85 ce fa ff ff    	jne    12897 <dlfree+0x3f7>
   12dc9:	49 c7 81 58 02 00 00 	movq   $0x0,0x258(%r9)
   12dd0:	00 00 00 00 
   12dd4:	e9 47 ff ff ff       	jmp    12d20 <dlfree+0x880>
   12dd9:	48 85 ed             	test   %rbp,%rbp
   12ddc:	0f 84 be f7 ff ff    	je     125a0 <dlfree+0x100>
   12de2:	8b 7e 38             	mov    0x38(%rsi),%edi
   12de5:	4c 8d 0c fb          	lea    (%rbx,%rdi,8),%r9
   12de9:	48 89 f9             	mov    %rdi,%rcx
   12dec:	31 ff                	xor    %edi,%edi
   12dee:	49 39 b1 58 02 00 00 	cmp    %rsi,0x258(%r9)
   12df5:	0f 85 64 fb ff ff    	jne    1295f <dlfree+0x4bf>
   12dfb:	49 c7 81 58 02 00 00 	movq   $0x0,0x258(%r9)
   12e02:	00 00 00 00 
   12e06:	e9 49 ff ff ff       	jmp    12d54 <dlfree+0x8b4>
   12e0b:	4c 89 e7             	mov    %r12,%rdi
   12e0e:	48 f7 df             	neg    %rdi
   12e11:	e8 fa d0 ff ff       	call   ff10 <sbrk>
   12e16:	31 ff                	xor    %edi,%edi
   12e18:	49 89 c4             	mov    %rax,%r12
   12e1b:	e8 f0 d0 ff ff       	call   ff10 <sbrk>
   12e20:	49 83 c4 01          	add    $0x1,%r12
   12e24:	c7 05 82 00 03 00 00 	movl   $0x0,0x30082(%rip)        # 42eb0 <malloc_global_mutex>
   12e2b:	00 00 00 
   12e2e:	74 6b                	je     12e9b <dlfree+0x9fb>
   12e30:	49 39 c5             	cmp    %rax,%r13
   12e33:	76 66                	jbe    12e9b <dlfree+0x9fb>
   12e35:	49 29 c5             	sub    %rax,%r13
   12e38:	74 61                	je     12e9b <dlfree+0x9fb>
   12e3a:	48 8b 43 28          	mov    0x28(%rbx),%rax
   12e3e:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   12e42:	4c 29 6d 08          	sub    %r13,0x8(%rbp)
   12e46:	48 89 c1             	mov    %rax,%rcx
   12e49:	4c 29 ea             	sub    %r13,%rdx
   12e4c:	48 8d 70 10          	lea    0x10(%rax),%rsi
   12e50:	4c 29 ab 58 03 00 00 	sub    %r13,0x358(%rbx)
   12e57:	83 e1 0f             	and    $0xf,%ecx
   12e5a:	74 09                	je     12e65 <dlfree+0x9c5>
   12e5c:	48 f7 de             	neg    %rsi
   12e5f:	48 89 f1             	mov    %rsi,%rcx
   12e62:	83 e1 0f             	and    $0xf,%ecx
   12e65:	48 89 d7             	mov    %rdx,%rdi
   12e68:	48 8d 34 08          	lea    (%rax,%rcx,1),%rsi
   12e6c:	48 29 cf             	sub    %rcx,%rdi
   12e6f:	48 89 73 28          	mov    %rsi,0x28(%rbx)
   12e73:	48 89 f9             	mov    %rdi,%rcx
   12e76:	48 89 7b 10          	mov    %rdi,0x10(%rbx)
   12e7a:	48 83 c9 01          	or     $0x1,%rcx
   12e7e:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   12e82:	48 c7 44 10 08 50 00 	movq   $0x50,0x8(%rax,%rdx,1)
   12e89:	00 00 
   12e8b:	48 8b 05 0e 00 03 00 	mov    0x3000e(%rip),%rax        # 42ea0 <mparams+0x20>
   12e92:	48 89 43 30          	mov    %rax,0x30(%rbx)
   12e96:	e9 25 f7 ff ff       	jmp    125c0 <dlfree+0x120>
   12e9b:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
   12e9f:	e9 19 fe ff ff       	jmp    12cbd <dlfree+0x81d>
   12ea4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   12eab:	00 00 00 
   12eae:	66 90                	xchg   %ax,%ax

0000000000012eb0 <calloc>:
   12eb0:	f3 0f 1e fa          	endbr64 
   12eb4:	41 55                	push   %r13
   12eb6:	41 54                	push   %r12
   12eb8:	49 89 fc             	mov    %rdi,%r12
   12ebb:	48 83 ec 08          	sub    $0x8,%rsp
   12ebf:	48 85 ff             	test   %rdi,%rdi
   12ec2:	74 2b                	je     12eef <calloc+0x3f>
   12ec4:	48 89 f8             	mov    %rdi,%rax
   12ec7:	48 89 f9             	mov    %rdi,%rcx
   12eca:	48 09 f0             	or     %rsi,%rax
   12ecd:	48 0f af ce          	imul   %rsi,%rcx
   12ed1:	48 a9 00 00 ff ff    	test   $0xffffffffffff0000,%rax
   12ed7:	74 47                	je     12f20 <calloc+0x70>
   12ed9:	31 d2                	xor    %edx,%edx
   12edb:	48 89 c8             	mov    %rcx,%rax
   12ede:	49 c7 c4 ff ff ff ff 	mov    $0xffffffffffffffff,%r12
   12ee5:	48 f7 f7             	div    %rdi
   12ee8:	48 39 f0             	cmp    %rsi,%rax
   12eeb:	4c 0f 44 e1          	cmove  %rcx,%r12
   12eef:	4c 89 e7             	mov    %r12,%rdi
   12ef2:	e8 39 db ff ff       	call   10a30 <dlmalloc>
   12ef7:	49 89 c5             	mov    %rax,%r13
   12efa:	48 85 c0             	test   %rax,%rax
   12efd:	74 0d                	je     12f0c <calloc+0x5c>
   12eff:	4c 89 e2             	mov    %r12,%rdx
   12f02:	31 f6                	xor    %esi,%esi
   12f04:	48 89 c7             	mov    %rax,%rdi
   12f07:	e8 04 0b 00 00       	call   13a10 <memset>
   12f0c:	48 83 c4 08          	add    $0x8,%rsp
   12f10:	4c 89 e8             	mov    %r13,%rax
   12f13:	41 5c                	pop    %r12
   12f15:	41 5d                	pop    %r13
   12f17:	c3                   	ret    
   12f18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   12f1f:	00 
   12f20:	49 89 cc             	mov    %rcx,%r12
   12f23:	eb ca                	jmp    12eef <calloc+0x3f>
   12f25:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   12f2c:	00 00 00 
   12f2f:	90                   	nop

0000000000012f30 <dlrealloc>:
   12f30:	f3 0f 1e fa          	endbr64 
   12f34:	41 57                	push   %r15
   12f36:	41 56                	push   %r14
   12f38:	41 55                	push   %r13
   12f3a:	41 54                	push   %r12
   12f3c:	55                   	push   %rbp
   12f3d:	48 89 f5             	mov    %rsi,%rbp
   12f40:	53                   	push   %rbx
   12f41:	48 83 ec 08          	sub    $0x8,%rsp
   12f45:	48 85 ff             	test   %rdi,%rdi
   12f48:	0f 84 d2 01 00 00    	je     13120 <dlrealloc+0x1f0>
   12f4e:	48 81 fe 7f ff ff ff 	cmp    $0xffffffffffffff7f,%rsi
   12f55:	0f 87 e5 01 00 00    	ja     13140 <dlrealloc+0x210>
   12f5b:	49 89 fc             	mov    %rdi,%r12
   12f5e:	48 85 f6             	test   %rsi,%rsi
   12f61:	0f 84 f1 01 00 00    	je     13158 <dlrealloc+0x228>
   12f67:	48 8d 46 1f          	lea    0x1f(%rsi),%rax
   12f6b:	4c 8d 77 f0          	lea    -0x10(%rdi),%r14
   12f6f:	48 8b 7f f8          	mov    -0x8(%rdi),%rdi
   12f73:	ba 20 00 00 00       	mov    $0x20,%edx
   12f78:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   12f7c:	48 83 fe 0e          	cmp    $0xe,%rsi
   12f80:	48 8b 0d f9 fe 02 00 	mov    0x2fef9(%rip),%rcx        # 42e80 <mparams>
   12f87:	48 0f 46 c2          	cmovbe %rdx,%rax
   12f8b:	48 89 fa             	mov    %rdi,%rdx
   12f8e:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
   12f92:	49 8d 34 16          	lea    (%r14,%rdx,1),%rsi
   12f96:	48 8b 1e             	mov    (%rsi),%rbx
   12f99:	48 31 cb             	xor    %rcx,%rbx
   12f9c:	48 3b 4b 40          	cmp    0x40(%rbx),%rcx
   12fa0:	0f 85 92 00 00 00    	jne    13038 <dlrealloc+0x108>
   12fa6:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
   12fad:	0f 85 8d 00 00 00    	jne    13040 <dlrealloc+0x110>
   12fb3:	4c 8b 43 18          	mov    0x18(%rbx),%r8
   12fb7:	4d 39 c6             	cmp    %r8,%r14
   12fba:	72 7c                	jb     13038 <dlrealloc+0x108>
   12fbc:	48 89 f9             	mov    %rdi,%rcx
   12fbf:	83 e1 03             	and    $0x3,%ecx
   12fc2:	48 83 f9 01          	cmp    $0x1,%rcx
   12fc6:	74 70                	je     13038 <dlrealloc+0x108>
   12fc8:	49 39 f6             	cmp    %rsi,%r14
   12fcb:	73 6b                	jae    13038 <dlrealloc+0x108>
   12fcd:	4c 8b 4e 08          	mov    0x8(%rsi),%r9
   12fd1:	41 f6 c1 01          	test   $0x1,%r9b
   12fd5:	74 61                	je     13038 <dlrealloc+0x108>
   12fd7:	48 85 c9             	test   %rcx,%rcx
   12fda:	0f 84 b0 00 00 00    	je     13090 <dlrealloc+0x160>
   12fe0:	48 39 d0             	cmp    %rdx,%rax
   12fe3:	0f 87 7f 01 00 00    	ja     13168 <dlrealloc+0x238>
   12fe9:	48 29 c2             	sub    %rax,%rdx
   12fec:	49 89 d5             	mov    %rdx,%r13
   12fef:	48 83 fa 1f          	cmp    $0x1f,%rdx
   12ff3:	0f 87 8f 02 00 00    	ja     13288 <dlrealloc+0x358>
   12ff9:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
   13000:	0f 85 2a 03 00 00    	jne    13330 <dlrealloc+0x400>
   13006:	4d 85 f6             	test   %r14,%r14
   13009:	0f 84 bb 00 00 00    	je     130ca <dlrealloc+0x19a>
   1300f:	4d 89 e5             	mov    %r12,%r13
   13012:	48 83 c4 08          	add    $0x8,%rsp
   13016:	4c 89 e8             	mov    %r13,%rax
   13019:	5b                   	pop    %rbx
   1301a:	5d                   	pop    %rbp
   1301b:	41 5c                	pop    %r12
   1301d:	41 5d                	pop    %r13
   1301f:	41 5e                	pop    %r14
   13021:	41 5f                	pop    %r15
   13023:	c3                   	ret    
   13024:	4d 39 d8             	cmp    %r11,%r8
   13027:	77 0f                	ja     13038 <dlrealloc+0x108>
   13029:	49 39 73 10          	cmp    %rsi,0x10(%r11)
   1302d:	0f 84 a9 01 00 00    	je     131dc <dlrealloc+0x2ac>
   13033:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13038:	e8 fa 2c 01 00       	call   25d37 <abort>
   1303d:	0f 1f 00             	nopl   (%rax)
   13040:	48 8d 8b 74 03 00 00 	lea    0x374(%rbx),%rcx
   13047:	ba 01 00 00 00       	mov    $0x1,%edx
   1304c:	87 11                	xchg   %edx,(%rcx)
   1304e:	85 d2                	test   %edx,%edx
   13050:	74 20                	je     13072 <dlrealloc+0x142>
   13052:	be 01 00 00 00       	mov    $0x1,%esi
   13057:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1305e:	00 00 
   13060:	8b 93 74 03 00 00    	mov    0x374(%rbx),%edx
   13066:	85 d2                	test   %edx,%edx
   13068:	75 f6                	jne    13060 <dlrealloc+0x130>
   1306a:	89 f2                	mov    %esi,%edx
   1306c:	87 11                	xchg   %edx,(%rcx)
   1306e:	85 d2                	test   %edx,%edx
   13070:	75 ee                	jne    13060 <dlrealloc+0x130>
   13072:	49 8b 7c 24 f8       	mov    -0x8(%r12),%rdi
   13077:	48 89 fa             	mov    %rdi,%rdx
   1307a:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
   1307e:	49 8d 34 16          	lea    (%r14,%rdx,1),%rsi
   13082:	e9 2c ff ff ff       	jmp    12fb3 <dlrealloc+0x83>
   13087:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1308e:	00 00 
   13090:	48 3d f8 00 00 00    	cmp    $0xf8,%rax
   13096:	76 1f                	jbe    130b7 <dlrealloc+0x187>
   13098:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1309c:	48 39 d1             	cmp    %rdx,%rcx
   1309f:	77 16                	ja     130b7 <dlrealloc+0x187>
   130a1:	48 29 c2             	sub    %rax,%rdx
   130a4:	48 8b 05 e5 fd 02 00 	mov    0x2fde5(%rip),%rax        # 42e90 <mparams+0x10>
   130ab:	48 01 c0             	add    %rax,%rax
   130ae:	48 39 c2             	cmp    %rax,%rdx
   130b1:	0f 86 42 ff ff ff    	jbe    12ff9 <dlrealloc+0xc9>
   130b7:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
   130be:	74 0a                	je     130ca <dlrealloc+0x19a>
   130c0:	c7 83 74 03 00 00 00 	movl   $0x0,0x374(%rbx)
   130c7:	00 00 00 
   130ca:	48 89 ef             	mov    %rbp,%rdi
   130cd:	e8 5e d9 ff ff       	call   10a30 <dlmalloc>
   130d2:	49 89 c5             	mov    %rax,%r13
   130d5:	48 85 c0             	test   %rax,%rax
   130d8:	0f 84 34 ff ff ff    	je     13012 <dlrealloc+0xe2>
   130de:	4d 8b 74 24 f8       	mov    -0x8(%r12),%r14
   130e3:	48 89 ea             	mov    %rbp,%rdx
   130e6:	4c 89 e6             	mov    %r12,%rsi
   130e9:	48 89 c7             	mov    %rax,%rdi
   130ec:	49 83 e6 f8          	and    $0xfffffffffffffff8,%r14
   130f0:	49 83 ee 10          	sub    $0x10,%r14
   130f4:	4c 39 f5             	cmp    %r14,%rbp
   130f7:	49 0f 47 d6          	cmova  %r14,%rdx
   130fb:	e8 f0 06 00 00       	call   137f0 <memcpy>
   13100:	4c 89 e7             	mov    %r12,%rdi
   13103:	4c 89 f2             	mov    %r14,%rdx
   13106:	31 f6                	xor    %esi,%esi
   13108:	e8 03 09 00 00       	call   13a10 <memset>
   1310d:	4c 89 e7             	mov    %r12,%rdi
   13110:	e8 8b f3 ff ff       	call   124a0 <dlfree>
   13115:	e9 f8 fe ff ff       	jmp    13012 <dlrealloc+0xe2>
   1311a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13120:	48 83 c4 08          	add    $0x8,%rsp
   13124:	48 89 f7             	mov    %rsi,%rdi
   13127:	5b                   	pop    %rbx
   13128:	5d                   	pop    %rbp
   13129:	41 5c                	pop    %r12
   1312b:	41 5d                	pop    %r13
   1312d:	41 5e                	pop    %r14
   1312f:	41 5f                	pop    %r15
   13131:	e9 fa d8 ff ff       	jmp    10a30 <dlmalloc>
   13136:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1313d:	00 00 00 
   13140:	e8 1b 13 00 00       	call   14460 <__errno>
   13145:	45 31 ed             	xor    %r13d,%r13d
   13148:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   1314e:	e9 bf fe ff ff       	jmp    13012 <dlrealloc+0xe2>
   13153:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13158:	e8 43 f3 ff ff       	call   124a0 <dlfree>
   1315d:	45 31 ed             	xor    %r13d,%r13d
   13160:	e9 ad fe ff ff       	jmp    13012 <dlrealloc+0xe2>
   13165:	0f 1f 00             	nopl   (%rax)
   13168:	48 39 73 28          	cmp    %rsi,0x28(%rbx)
   1316c:	0f 84 6e 01 00 00    	je     132e0 <dlrealloc+0x3b0>
   13172:	48 39 73 20          	cmp    %rsi,0x20(%rbx)
   13176:	0f 84 a4 00 00 00    	je     13220 <dlrealloc+0x2f0>
   1317c:	41 f6 c1 02          	test   $0x2,%r9b
   13180:	0f 85 31 ff ff ff    	jne    130b7 <dlrealloc+0x187>
   13186:	49 83 e1 f8          	and    $0xfffffffffffffff8,%r9
   1318a:	4c 01 ca             	add    %r9,%rdx
   1318d:	48 39 d0             	cmp    %rdx,%rax
   13190:	0f 87 21 ff ff ff    	ja     130b7 <dlrealloc+0x187>
   13196:	49 89 d2             	mov    %rdx,%r10
   13199:	4c 89 c9             	mov    %r9,%rcx
   1319c:	4c 8b 5e 18          	mov    0x18(%rsi),%r11
   131a0:	49 29 c2             	sub    %rax,%r10
   131a3:	48 c1 e9 03          	shr    $0x3,%rcx
   131a7:	49 81 f9 f8 00 00 00 	cmp    $0xf8,%r9
   131ae:	0f 87 8b 01 00 00    	ja     1333f <dlrealloc+0x40f>
   131b4:	44 8d 2c 09          	lea    (%rcx,%rcx,1),%r13d
   131b8:	4c 8b 4e 10          	mov    0x10(%rsi),%r9
   131bc:	4e 8d 6c eb 48       	lea    0x48(%rbx,%r13,8),%r13
   131c1:	4d 39 e9             	cmp    %r13,%r9
   131c4:	0f 85 14 03 00 00    	jne    134de <dlrealloc+0x5ae>
   131ca:	4d 39 d9             	cmp    %r11,%r9
   131cd:	0f 84 8f 02 00 00    	je     13462 <dlrealloc+0x532>
   131d3:	4d 39 dd             	cmp    %r11,%r13
   131d6:	0f 85 48 fe ff ff    	jne    13024 <dlrealloc+0xf4>
   131dc:	4d 89 59 18          	mov    %r11,0x18(%r9)
   131e0:	4d 89 4b 10          	mov    %r9,0x10(%r11)
   131e4:	48 8b 35 95 fc 02 00 	mov    0x2fc95(%rip),%rsi        # 42e80 <mparams>
   131eb:	83 e7 01             	and    $0x1,%edi
   131ee:	49 8d 0c 16          	lea    (%r14,%rdx,1),%rcx
   131f2:	48 31 de             	xor    %rbx,%rsi
   131f5:	49 83 fa 1f          	cmp    $0x1f,%r10
   131f9:	0f 87 2a 02 00 00    	ja     13429 <dlrealloc+0x4f9>
   131ff:	48 09 fa             	or     %rdi,%rdx
   13202:	48 83 ca 02          	or     $0x2,%rdx
   13206:	49 89 54 24 f8       	mov    %rdx,-0x8(%r12)
   1320b:	48 89 31             	mov    %rsi,(%rcx)
   1320e:	48 83 49 08 01       	orq    $0x1,0x8(%rcx)
   13213:	e9 e1 fd ff ff       	jmp    12ff9 <dlrealloc+0xc9>
   13218:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1321f:	00 
   13220:	48 03 53 08          	add    0x8(%rbx),%rdx
   13224:	48 39 d0             	cmp    %rdx,%rax
   13227:	0f 87 8a fe ff ff    	ja     130b7 <dlrealloc+0x187>
   1322d:	4c 8b 05 4c fc 02 00 	mov    0x2fc4c(%rip),%r8        # 42e80 <mparams>
   13234:	48 89 d6             	mov    %rdx,%rsi
   13237:	49 8d 0c 16          	lea    (%r14,%rdx,1),%rcx
   1323b:	83 e7 01             	and    $0x1,%edi
   1323e:	48 29 c6             	sub    %rax,%rsi
   13241:	49 31 d8             	xor    %rbx,%r8
   13244:	48 83 fe 1f          	cmp    $0x1f,%rsi
   13248:	0f 86 b2 01 00 00    	jbe    13400 <dlrealloc+0x4d0>
   1324e:	49 8d 14 06          	lea    (%r14,%rax,1),%rdx
   13252:	48 09 c7             	or     %rax,%rdi
   13255:	48 89 f0             	mov    %rsi,%rax
   13258:	48 83 cf 02          	or     $0x2,%rdi
   1325c:	48 83 c8 01          	or     $0x1,%rax
   13260:	49 89 7c 24 f8       	mov    %rdi,-0x8(%r12)
   13265:	4c 89 02             	mov    %r8,(%rdx)
   13268:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1326c:	48 89 31             	mov    %rsi,(%rcx)
   1326f:	48 83 61 08 fe       	andq   $0xfffffffffffffffe,0x8(%rcx)
   13274:	48 89 73 08          	mov    %rsi,0x8(%rbx)
   13278:	48 89 53 20          	mov    %rdx,0x20(%rbx)
   1327c:	e9 78 fd ff ff       	jmp    12ff9 <dlrealloc+0xc9>
   13281:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13288:	83 e7 01             	and    $0x1,%edi
   1328b:	4d 8d 3c 06          	lea    (%r14,%rax,1),%r15
   1328f:	48 83 ca 03          	or     $0x3,%rdx
   13293:	48 09 f8             	or     %rdi,%rax
   13296:	49 8d 7f 10          	lea    0x10(%r15),%rdi
   1329a:	48 83 c8 02          	or     $0x2,%rax
   1329e:	49 89 44 24 f8       	mov    %rax,-0x8(%r12)
   132a3:	48 8b 05 d6 fb 02 00 	mov    0x2fbd6(%rip),%rax        # 42e80 <mparams>
   132aa:	49 89 57 08          	mov    %rdx,0x8(%r15)
   132ae:	49 8d 55 f0          	lea    -0x10(%r13),%rdx
   132b2:	48 31 d8             	xor    %rbx,%rax
   132b5:	49 89 07             	mov    %rax,(%r15)
   132b8:	48 83 4e 08 01       	orq    $0x1,0x8(%rsi)
   132bd:	48 89 06             	mov    %rax,(%rsi)
   132c0:	31 f6                	xor    %esi,%esi
   132c2:	e8 49 07 00 00       	call   13a10 <memset>
   132c7:	4c 89 ea             	mov    %r13,%rdx
   132ca:	4c 89 fe             	mov    %r15,%rsi
   132cd:	48 89 df             	mov    %rbx,%rdi
   132d0:	e8 1b d0 ff ff       	call   102f0 <dispose_chunk>
   132d5:	e9 1f fd ff ff       	jmp    12ff9 <dlrealloc+0xc9>
   132da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   132e0:	48 03 53 10          	add    0x10(%rbx),%rdx
   132e4:	48 39 d0             	cmp    %rdx,%rax
   132e7:	0f 83 ca fd ff ff    	jae    130b7 <dlrealloc+0x187>
   132ed:	83 e7 01             	and    $0x1,%edi
   132f0:	49 8d 0c 06          	lea    (%r14,%rax,1),%rcx
   132f4:	48 29 c2             	sub    %rax,%rdx
   132f7:	48 09 f8             	or     %rdi,%rax
   132fa:	48 83 c8 02          	or     $0x2,%rax
   132fe:	49 89 44 24 f8       	mov    %rax,-0x8(%r12)
   13303:	48 8b 05 76 fb 02 00 	mov    0x2fb76(%rip),%rax        # 42e80 <mparams>
   1330a:	48 31 d8             	xor    %rbx,%rax
   1330d:	48 89 01             	mov    %rax,(%rcx)
   13310:	48 89 d0             	mov    %rdx,%rax
   13313:	48 83 c8 01          	or     $0x1,%rax
   13317:	48 89 41 08          	mov    %rax,0x8(%rcx)
   1331b:	48 89 4b 28          	mov    %rcx,0x28(%rbx)
   1331f:	48 89 53 10          	mov    %rdx,0x10(%rbx)
   13323:	e9 d1 fc ff ff       	jmp    12ff9 <dlrealloc+0xc9>
   13328:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1332f:	00 
   13330:	c7 83 74 03 00 00 00 	movl   $0x0,0x374(%rbx)
   13337:	00 00 00 
   1333a:	e9 c7 fc ff ff       	jmp    13006 <dlrealloc+0xd6>
   1333f:	4c 8b 7e 30          	mov    0x30(%rsi),%r15
   13343:	4c 39 de             	cmp    %r11,%rsi
   13346:	0f 84 24 01 00 00    	je     13470 <dlrealloc+0x540>
   1334c:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   13350:	49 39 c8             	cmp    %rcx,%r8
   13353:	0f 87 df fc ff ff    	ja     13038 <dlrealloc+0x108>
   13359:	48 39 71 18          	cmp    %rsi,0x18(%rcx)
   1335d:	0f 85 d5 fc ff ff    	jne    13038 <dlrealloc+0x108>
   13363:	49 39 73 10          	cmp    %rsi,0x10(%r11)
   13367:	0f 85 cb fc ff ff    	jne    13038 <dlrealloc+0x108>
   1336d:	4c 89 59 18          	mov    %r11,0x18(%rcx)
   13371:	49 89 4b 10          	mov    %rcx,0x10(%r11)
   13375:	4d 85 ff             	test   %r15,%r15
   13378:	0f 84 66 fe ff ff    	je     131e4 <dlrealloc+0x2b4>
   1337e:	44 8b 4e 38          	mov    0x38(%rsi),%r9d
   13382:	4c 89 c9             	mov    %r9,%rcx
   13385:	4e 8d 0c cb          	lea    (%rbx,%r9,8),%r9
   13389:	49 3b b1 58 02 00 00 	cmp    0x258(%r9),%rsi
   13390:	0f 84 20 01 00 00    	je     134b6 <dlrealloc+0x586>
   13396:	4d 39 f8             	cmp    %r15,%r8
   13399:	0f 87 99 fc ff ff    	ja     13038 <dlrealloc+0x108>
   1339f:	49 3b 77 20          	cmp    0x20(%r15),%rsi
   133a3:	0f 84 2c 01 00 00    	je     134d5 <dlrealloc+0x5a5>
   133a9:	4d 89 5f 28          	mov    %r11,0x28(%r15)
   133ad:	4d 85 db             	test   %r11,%r11
   133b0:	0f 84 2e fe ff ff    	je     131e4 <dlrealloc+0x2b4>
   133b6:	4d 39 d8             	cmp    %r11,%r8
   133b9:	0f 87 79 fc ff ff    	ja     13038 <dlrealloc+0x108>
   133bf:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
   133c3:	4d 89 7b 30          	mov    %r15,0x30(%r11)
   133c7:	48 85 c9             	test   %rcx,%rcx
   133ca:	74 11                	je     133dd <dlrealloc+0x4ad>
   133cc:	49 39 c8             	cmp    %rcx,%r8
   133cf:	0f 87 63 fc ff ff    	ja     13038 <dlrealloc+0x108>
   133d5:	49 89 4b 20          	mov    %rcx,0x20(%r11)
   133d9:	4c 89 59 30          	mov    %r11,0x30(%rcx)
   133dd:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
   133e1:	48 85 c9             	test   %rcx,%rcx
   133e4:	0f 84 fa fd ff ff    	je     131e4 <dlrealloc+0x2b4>
   133ea:	49 39 c8             	cmp    %rcx,%r8
   133ed:	0f 87 45 fc ff ff    	ja     13038 <dlrealloc+0x108>
   133f3:	49 89 4b 28          	mov    %rcx,0x28(%r11)
   133f7:	4c 89 59 30          	mov    %r11,0x30(%rcx)
   133fb:	e9 e4 fd ff ff       	jmp    131e4 <dlrealloc+0x2b4>
   13400:	48 09 fa             	or     %rdi,%rdx
   13403:	48 83 ca 02          	or     $0x2,%rdx
   13407:	49 89 54 24 f8       	mov    %rdx,-0x8(%r12)
   1340c:	4c 89 01             	mov    %r8,(%rcx)
   1340f:	48 83 49 08 01       	orq    $0x1,0x8(%rcx)
   13414:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
   1341b:	00 
   1341c:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
   13423:	00 
   13424:	e9 d0 fb ff ff       	jmp    12ff9 <dlrealloc+0xc9>
   13429:	4d 8d 04 06          	lea    (%r14,%rax,1),%r8
   1342d:	48 09 c7             	or     %rax,%rdi
   13430:	4c 89 d0             	mov    %r10,%rax
   13433:	4c 89 d2             	mov    %r10,%rdx
   13436:	48 83 cf 02          	or     $0x2,%rdi
   1343a:	48 83 c8 03          	or     $0x3,%rax
   1343e:	49 89 7c 24 f8       	mov    %rdi,-0x8(%r12)
   13443:	48 89 df             	mov    %rbx,%rdi
   13446:	49 89 30             	mov    %rsi,(%r8)
   13449:	49 89 40 08          	mov    %rax,0x8(%r8)
   1344d:	48 83 49 08 01       	orq    $0x1,0x8(%rcx)
   13452:	48 89 31             	mov    %rsi,(%rcx)
   13455:	4c 89 c6             	mov    %r8,%rsi
   13458:	e8 93 ce ff ff       	call   102f0 <dispose_chunk>
   1345d:	e9 97 fb ff ff       	jmp    12ff9 <dlrealloc+0xc9>
   13462:	be fe ff ff ff       	mov    $0xfffffffe,%esi
   13467:	d3 c6                	rol    %cl,%esi
   13469:	21 33                	and    %esi,(%rbx)
   1346b:	e9 74 fd ff ff       	jmp    131e4 <dlrealloc+0x2b4>
   13470:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
   13474:	4c 8d 4e 28          	lea    0x28(%rsi),%r9
   13478:	48 85 c9             	test   %rcx,%rcx
   1347b:	74 79                	je     134f6 <dlrealloc+0x5c6>
   1347d:	0f 1f 00             	nopl   (%rax)
   13480:	4d 89 cd             	mov    %r9,%r13
   13483:	49 89 cb             	mov    %rcx,%r11
   13486:	4c 8d 49 28          	lea    0x28(%rcx),%r9
   1348a:	48 8b 49 28          	mov    0x28(%rcx),%rcx
   1348e:	48 85 c9             	test   %rcx,%rcx
   13491:	75 ed                	jne    13480 <dlrealloc+0x550>
   13493:	49 8b 4b 20          	mov    0x20(%r11),%rcx
   13497:	4d 8d 4b 20          	lea    0x20(%r11),%r9
   1349b:	48 85 c9             	test   %rcx,%rcx
   1349e:	75 e0                	jne    13480 <dlrealloc+0x550>
   134a0:	4d 39 e8             	cmp    %r13,%r8
   134a3:	0f 87 8f fb ff ff    	ja     13038 <dlrealloc+0x108>
   134a9:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
   134b0:	00 
   134b1:	e9 bf fe ff ff       	jmp    13375 <dlrealloc+0x445>
   134b6:	4d 89 99 58 02 00 00 	mov    %r11,0x258(%r9)
   134bd:	4d 85 db             	test   %r11,%r11
   134c0:	0f 85 f0 fe ff ff    	jne    133b6 <dlrealloc+0x486>
   134c6:	be fe ff ff ff       	mov    $0xfffffffe,%esi
   134cb:	d3 c6                	rol    %cl,%esi
   134cd:	21 73 04             	and    %esi,0x4(%rbx)
   134d0:	e9 0f fd ff ff       	jmp    131e4 <dlrealloc+0x2b4>
   134d5:	4d 89 5f 20          	mov    %r11,0x20(%r15)
   134d9:	e9 cf fe ff ff       	jmp    133ad <dlrealloc+0x47d>
   134de:	4d 39 c8             	cmp    %r9,%r8
   134e1:	0f 87 51 fb ff ff    	ja     13038 <dlrealloc+0x108>
   134e7:	49 39 71 18          	cmp    %rsi,0x18(%r9)
   134eb:	0f 84 d9 fc ff ff    	je     131ca <dlrealloc+0x29a>
   134f1:	e9 42 fb ff ff       	jmp    13038 <dlrealloc+0x108>
   134f6:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
   134fa:	48 85 c9             	test   %rcx,%rcx
   134fd:	74 09                	je     13508 <dlrealloc+0x5d8>
   134ff:	4c 8d 4e 20          	lea    0x20(%rsi),%r9
   13503:	e9 78 ff ff ff       	jmp    13480 <dlrealloc+0x550>
   13508:	4d 85 ff             	test   %r15,%r15
   1350b:	0f 84 d3 fc ff ff    	je     131e4 <dlrealloc+0x2b4>
   13511:	44 8b 4e 38          	mov    0x38(%rsi),%r9d
   13515:	45 31 db             	xor    %r11d,%r11d
   13518:	4c 89 c9             	mov    %r9,%rcx
   1351b:	4e 8d 0c cb          	lea    (%rbx,%r9,8),%r9
   1351f:	49 39 b1 58 02 00 00 	cmp    %rsi,0x258(%r9)
   13526:	0f 85 6a fe ff ff    	jne    13396 <dlrealloc+0x466>
   1352c:	49 c7 81 58 02 00 00 	movq   $0x0,0x258(%r9)
   13533:	00 00 00 00 
   13537:	eb 8d                	jmp    134c6 <dlrealloc+0x596>
   13539:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000013540 <__memcpy.part.0>:
   13540:	48 89 f0             	mov    %rsi,%rax
   13543:	48 09 f8             	or     %rdi,%rax
   13546:	a8 07                	test   $0x7,%al
   13548:	74 46                	je     13590 <__memcpy.part.0+0x50>
   1354a:	48 89 f0             	mov    %rsi,%rax
   1354d:	48 31 f8             	xor    %rdi,%rax
   13550:	a8 07                	test   $0x7,%al
   13552:	75 0a                	jne    1355e <__memcpy.part.0+0x1e>
   13554:	48 83 fa 07          	cmp    $0x7,%rdx
   13558:	0f 87 92 00 00 00    	ja     135f0 <__memcpy.part.0+0xb0>
   1355e:	45 31 c9             	xor    %r9d,%r9d
   13561:	45 31 c0             	xor    %r8d,%r8d
   13564:	45 31 d2             	xor    %r10d,%r10d
   13567:	31 c0                	xor    %eax,%eax
   13569:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13570:	0f b6 0c 06          	movzbl (%rsi,%rax,1),%ecx
   13574:	88 0c 07             	mov    %cl,(%rdi,%rax,1)
   13577:	48 83 c0 01          	add    $0x1,%rax
   1357b:	48 39 c2             	cmp    %rax,%rdx
   1357e:	75 f0                	jne    13570 <__memcpy.part.0+0x30>
   13580:	48 01 d6             	add    %rdx,%rsi
   13583:	48 01 d7             	add    %rdx,%rdi
   13586:	4c 89 d2             	mov    %r10,%rdx
   13589:	eb 13                	jmp    1359e <__memcpy.part.0+0x5e>
   1358b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13590:	49 89 d0             	mov    %rdx,%r8
   13593:	49 89 d1             	mov    %rdx,%r9
   13596:	49 c1 e8 03          	shr    $0x3,%r8
   1359a:	41 83 e1 07          	and    $0x7,%r9d
   1359e:	48 83 fa 07          	cmp    $0x7,%rdx
   135a2:	76 27                	jbe    135cb <__memcpy.part.0+0x8b>
   135a4:	31 c0                	xor    %eax,%eax
   135a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   135ad:	00 00 00 
   135b0:	48 8b 14 c6          	mov    (%rsi,%rax,8),%rdx
   135b4:	48 89 14 c7          	mov    %rdx,(%rdi,%rax,8)
   135b8:	48 83 c0 01          	add    $0x1,%rax
   135bc:	49 39 c0             	cmp    %rax,%r8
   135bf:	75 ef                	jne    135b0 <__memcpy.part.0+0x70>
   135c1:	49 c1 e0 03          	shl    $0x3,%r8
   135c5:	4c 01 c6             	add    %r8,%rsi
   135c8:	4c 01 c7             	add    %r8,%rdi
   135cb:	4d 85 c9             	test   %r9,%r9
   135ce:	74 18                	je     135e8 <__memcpy.part.0+0xa8>
   135d0:	31 c0                	xor    %eax,%eax
   135d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   135d8:	0f b6 14 06          	movzbl (%rsi,%rax,1),%edx
   135dc:	88 14 07             	mov    %dl,(%rdi,%rax,1)
   135df:	48 83 c0 01          	add    $0x1,%rax
   135e3:	49 39 c1             	cmp    %rax,%r9
   135e6:	75 f0                	jne    135d8 <__memcpy.part.0+0x98>
   135e8:	c3                   	ret    
   135e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   135f0:	48 89 f0             	mov    %rsi,%rax
   135f3:	83 e0 07             	and    $0x7,%eax
   135f6:	4c 8d 54 10 f8       	lea    -0x8(%rax,%rdx,1),%r10
   135fb:	ba 08 00 00 00       	mov    $0x8,%edx
   13600:	4d 89 d0             	mov    %r10,%r8
   13603:	4d 89 d1             	mov    %r10,%r9
   13606:	48 29 c2             	sub    %rax,%rdx
   13609:	49 c1 e8 03          	shr    $0x3,%r8
   1360d:	41 83 e1 07          	and    $0x7,%r9d
   13611:	e9 51 ff ff ff       	jmp    13567 <__memcpy.part.0+0x27>
   13616:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1361d:	00 00 00 

0000000000013620 <memcpy_verw.part.0>:
   13620:	41 55                	push   %r13
   13622:	41 54                	push   %r12
   13624:	49 89 d4             	mov    %rdx,%r12
   13627:	55                   	push   %rbp
   13628:	48 89 f5             	mov    %rsi,%rbp
   1362b:	53                   	push   %rbx
   1362c:	48 89 fb             	mov    %rdi,%rbx
   1362f:	48 83 ec 08          	sub    $0x8,%rsp
   13633:	48 83 fa 07          	cmp    $0x7,%rdx
   13637:	77 24                	ja     1365d <memcpy_verw.part.0+0x3d>
   13639:	eb 55                	jmp    13690 <memcpy_verw.part.0+0x70>
   1363b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13640:	48 89 ee             	mov    %rbp,%rsi
   13643:	48 89 df             	mov    %rbx,%rdi
   13646:	49 83 ec 01          	sub    $0x1,%r12
   1364a:	48 83 c5 01          	add    $0x1,%rbp
   1364e:	e8 3d 53 00 00       	call   18990 <__memcpy_verw>
   13653:	48 83 c3 01          	add    $0x1,%rbx
   13657:	49 83 fc 07          	cmp    $0x7,%r12
   1365b:	76 33                	jbe    13690 <memcpy_verw.part.0+0x70>
   1365d:	48 89 d8             	mov    %rbx,%rax
   13660:	48 09 e8             	or     %rbp,%rax
   13663:	a8 07                	test   $0x7,%al
   13665:	75 d9                	jne    13640 <memcpy_verw.part.0+0x20>
   13667:	4d 89 e3             	mov    %r12,%r11
   1366a:	49 83 e3 f8          	and    $0xfffffffffffffff8,%r11
   1366e:	48 39 eb             	cmp    %rbp,%rbx
   13671:	74 0e                	je     13681 <memcpy_verw.part.0+0x61>
   13673:	4c 89 da             	mov    %r11,%rdx
   13676:	48 89 ee             	mov    %rbp,%rsi
   13679:	48 89 df             	mov    %rbx,%rdi
   1367c:	e8 bf fe ff ff       	call   13540 <__memcpy.part.0>
   13681:	4d 29 dc             	sub    %r11,%r12
   13684:	4c 01 dd             	add    %r11,%rbp
   13687:	4c 01 db             	add    %r11,%rbx
   1368a:	49 83 fc 07          	cmp    $0x7,%r12
   1368e:	77 cd                	ja     1365d <memcpy_verw.part.0+0x3d>
   13690:	4d 85 e4             	test   %r12,%r12
   13693:	74 2a                	je     136bf <memcpy_verw.part.0+0x9f>
   13695:	45 31 ed             	xor    %r13d,%r13d
   13698:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1369f:	00 
   136a0:	48 89 ee             	mov    %rbp,%rsi
   136a3:	48 89 df             	mov    %rbx,%rdi
   136a6:	48 83 c5 01          	add    $0x1,%rbp
   136aa:	48 83 c3 01          	add    $0x1,%rbx
   136ae:	e8 dd 52 00 00       	call   18990 <__memcpy_verw>
   136b3:	41 8d 45 01          	lea    0x1(%r13),%eax
   136b7:	49 89 c5             	mov    %rax,%r13
   136ba:	4c 39 e0             	cmp    %r12,%rax
   136bd:	72 e1                	jb     136a0 <memcpy_verw.part.0+0x80>
   136bf:	48 83 c4 08          	add    $0x8,%rsp
   136c3:	5b                   	pop    %rbx
   136c4:	5d                   	pop    %rbp
   136c5:	41 5c                	pop    %r12
   136c7:	41 5d                	pop    %r13
   136c9:	c3                   	ret    
   136ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000136d0 <copy_external_memory>:
   136d0:	41 57                	push   %r15
   136d2:	66 0f ef c0          	pxor   %xmm0,%xmm0
   136d6:	41 56                	push   %r14
   136d8:	41 55                	push   %r13
   136da:	41 54                	push   %r12
   136dc:	55                   	push   %rbp
   136dd:	53                   	push   %rbx
   136de:	48 83 ec 38          	sub    $0x38,%rsp
   136e2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   136e9:	00 00 
   136eb:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   136f0:	31 c0                	xor    %eax,%eax
   136f2:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   136f7:	48 85 d2             	test   %rdx,%rdx
   136fa:	74 31                	je     1372d <copy_external_memory+0x5d>
   136fc:	41 89 f6             	mov    %esi,%r14d
   136ff:	49 89 fd             	mov    %rdi,%r13
   13702:	48 89 f5             	mov    %rsi,%rbp
   13705:	49 89 d4             	mov    %rdx,%r12
   13708:	89 cb                	mov    %ecx,%ebx
   1370a:	41 83 e6 07          	and    $0x7,%r14d
   1370e:	75 58                	jne    13768 <copy_external_memory+0x98>
   13710:	48 83 fa 08          	cmp    $0x8,%rdx
   13714:	75 52                	jne    13768 <copy_external_memory+0x98>
   13716:	84 db                	test   %bl,%bl
   13718:	74 36                	je     13750 <copy_external_memory+0x80>
   1371a:	4c 39 ed             	cmp    %r13,%rbp
   1371d:	74 0e                	je     1372d <copy_external_memory+0x5d>
   1371f:	4c 89 e2             	mov    %r12,%rdx
   13722:	48 89 ee             	mov    %rbp,%rsi
   13725:	4c 89 ef             	mov    %r13,%rdi
   13728:	e8 f3 fe ff ff       	call   13620 <memcpy_verw.part.0>
   1372d:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   13732:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   13739:	00 00 
   1373b:	0f 85 7f 00 00 00    	jne    137c0 <copy_external_memory+0xf0>
   13741:	48 83 c4 38          	add    $0x38,%rsp
   13745:	5b                   	pop    %rbx
   13746:	5d                   	pop    %rbp
   13747:	41 5c                	pop    %r12
   13749:	41 5d                	pop    %r13
   1374b:	41 5e                	pop    %r14
   1374d:	41 5f                	pop    %r15
   1374f:	c3                   	ret    
   13750:	4c 39 ed             	cmp    %r13,%rbp
   13753:	74 d8                	je     1372d <copy_external_memory+0x5d>
   13755:	4c 89 e2             	mov    %r12,%rdx
   13758:	48 89 ee             	mov    %rbp,%rsi
   1375b:	4c 89 ef             	mov    %r13,%rdi
   1375e:	e8 dd fd ff ff       	call   13540 <__memcpy.part.0>
   13763:	eb c8                	jmp    1372d <copy_external_memory+0x5d>
   13765:	0f 1f 00             	nopl   (%rax)
   13768:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   1376d:	45 89 f7             	mov    %r14d,%r15d
   13770:	48 89 ee             	mov    %rbp,%rsi
   13773:	4c 29 fe             	sub    %r15,%rsi
   13776:	48 89 d7             	mov    %rdx,%rdi
   13779:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1377e:	e8 2d 52 00 00       	call   189b0 <__memcpy_8a>
   13783:	45 85 f6             	test   %r14d,%r14d
   13786:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1378b:	74 0a                	je     13797 <copy_external_memory+0xc7>
   1378d:	4b 8d 04 27          	lea    (%r15,%r12,1),%rax
   13791:	48 83 f8 08          	cmp    $0x8,%rax
   13795:	77 11                	ja     137a8 <copy_external_memory+0xd8>
   13797:	4a 8d 2c 3a          	lea    (%rdx,%r15,1),%rbp
   1379b:	84 db                	test   %bl,%bl
   1379d:	74 b1                	je     13750 <copy_external_memory+0x80>
   1379f:	e9 76 ff ff ff       	jmp    1371a <copy_external_memory+0x4a>
   137a4:	0f 1f 40 00          	nopl   0x0(%rax)
   137a8:	4c 29 fd             	sub    %r15,%rbp
   137ab:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   137b0:	48 8d 75 08          	lea    0x8(%rbp),%rsi
   137b4:	e8 f7 51 00 00       	call   189b0 <__memcpy_8a>
   137b9:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   137be:	eb d7                	jmp    13797 <copy_external_memory+0xc7>
   137c0:	e8 7b 03 00 00       	call   13b40 <__stack_chk_fail>
   137c5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   137cc:	00 00 00 
   137cf:	90                   	nop

00000000000137d0 <memcpy_verw>:
   137d0:	f3 0f 1e fa          	endbr64 
   137d4:	41 54                	push   %r12
   137d6:	49 89 fc             	mov    %rdi,%r12
   137d9:	48 85 d2             	test   %rdx,%rdx
   137dc:	74 0a                	je     137e8 <memcpy_verw+0x18>
   137de:	48 39 f7             	cmp    %rsi,%rdi
   137e1:	74 05                	je     137e8 <memcpy_verw+0x18>
   137e3:	e8 38 fe ff ff       	call   13620 <memcpy_verw.part.0>
   137e8:	4c 89 e0             	mov    %r12,%rax
   137eb:	41 5c                	pop    %r12
   137ed:	c3                   	ret    
   137ee:	66 90                	xchg   %ax,%ax

00000000000137f0 <memcpy>:
   137f0:	f3 0f 1e fa          	endbr64 
   137f4:	41 57                	push   %r15
   137f6:	41 56                	push   %r14
   137f8:	49 89 fe             	mov    %rdi,%r14
   137fb:	41 55                	push   %r13
   137fd:	41 54                	push   %r12
   137ff:	55                   	push   %rbp
   13800:	53                   	push   %rbx
   13801:	48 83 ec 18          	sub    $0x18,%rsp
   13805:	48 85 d2             	test   %rdx,%rdx
   13808:	0f 84 c8 00 00 00    	je     138d6 <memcpy+0xe6>
   1380e:	48 89 f5             	mov    %rsi,%rbp
   13811:	48 39 f7             	cmp    %rsi,%rdi
   13814:	0f 84 bc 00 00 00    	je     138d6 <memcpy+0xe6>
   1381a:	48 89 d6             	mov    %rdx,%rsi
   1381d:	48 89 ef             	mov    %rbp,%rdi
   13820:	49 89 d4             	mov    %rdx,%r12
   13823:	e8 78 6c ff ff       	call   a4a0 <sgx_is_within_enclave>
   13828:	4c 89 e6             	mov    %r12,%rsi
   1382b:	4c 89 f7             	mov    %r14,%rdi
   1382e:	89 c3                	mov    %eax,%ebx
   13830:	e8 6b 6c ff ff       	call   a4a0 <sgx_is_within_enclave>
   13835:	85 db                	test   %ebx,%ebx
   13837:	0f 85 b3 00 00 00    	jne    138f0 <memcpy+0x100>
   1383d:	45 31 ff             	xor    %r15d,%r15d
   13840:	85 c0                	test   %eax,%eax
   13842:	4d 89 f5             	mov    %r14,%r13
   13845:	41 0f 94 c7          	sete   %r15b
   13849:	49 83 fc 07          	cmp    $0x7,%r12
   1384d:	77 43                	ja     13892 <memcpy+0xa2>
   1384f:	eb 74                	jmp    138c5 <memcpy+0xd5>
   13851:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13858:	4c 89 eb             	mov    %r13,%rbx
   1385b:	b8 08 00 00 00       	mov    $0x8,%eax
   13860:	48 89 ee             	mov    %rbp,%rsi
   13863:	4c 89 ef             	mov    %r13,%rdi
   13866:	83 e3 07             	and    $0x7,%ebx
   13869:	44 89 f9             	mov    %r15d,%ecx
   1386c:	48 29 d8             	sub    %rbx,%rax
   1386f:	4e 8d 64 23 f8       	lea    -0x8(%rbx,%r12,1),%r12
   13874:	48 89 c2             	mov    %rax,%rdx
   13877:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1387c:	e8 4f fe ff ff       	call   136d0 <copy_external_memory>
   13881:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   13886:	48 01 c5             	add    %rax,%rbp
   13889:	49 01 c5             	add    %rax,%r13
   1388c:	49 83 fc 07          	cmp    $0x7,%r12
   13890:	76 33                	jbe    138c5 <memcpy+0xd5>
   13892:	48 89 e8             	mov    %rbp,%rax
   13895:	4c 09 e8             	or     %r13,%rax
   13898:	a8 07                	test   $0x7,%al
   1389a:	75 bc                	jne    13858 <memcpy+0x68>
   1389c:	4d 89 e3             	mov    %r12,%r11
   1389f:	49 83 e3 f8          	and    $0xfffffffffffffff8,%r11
   138a3:	49 39 ed             	cmp    %rbp,%r13
   138a6:	74 0e                	je     138b6 <memcpy+0xc6>
   138a8:	4c 89 da             	mov    %r11,%rdx
   138ab:	48 89 ee             	mov    %rbp,%rsi
   138ae:	4c 89 ef             	mov    %r13,%rdi
   138b1:	e8 8a fc ff ff       	call   13540 <__memcpy.part.0>
   138b6:	4d 29 dc             	sub    %r11,%r12
   138b9:	4c 01 dd             	add    %r11,%rbp
   138bc:	4d 01 dd             	add    %r11,%r13
   138bf:	49 83 fc 07          	cmp    $0x7,%r12
   138c3:	77 cd                	ja     13892 <memcpy+0xa2>
   138c5:	44 89 f9             	mov    %r15d,%ecx
   138c8:	4c 89 e2             	mov    %r12,%rdx
   138cb:	48 89 ee             	mov    %rbp,%rsi
   138ce:	4c 89 ef             	mov    %r13,%rdi
   138d1:	e8 fa fd ff ff       	call   136d0 <copy_external_memory>
   138d6:	48 83 c4 18          	add    $0x18,%rsp
   138da:	4c 89 f0             	mov    %r14,%rax
   138dd:	5b                   	pop    %rbx
   138de:	5d                   	pop    %rbp
   138df:	41 5c                	pop    %r12
   138e1:	41 5d                	pop    %r13
   138e3:	41 5e                	pop    %r14
   138e5:	41 5f                	pop    %r15
   138e7:	c3                   	ret    
   138e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   138ef:	00 
   138f0:	4c 89 e2             	mov    %r12,%rdx
   138f3:	48 89 ee             	mov    %rbp,%rsi
   138f6:	4c 89 f7             	mov    %r14,%rdi
   138f9:	85 c0                	test   %eax,%eax
   138fb:	75 0b                	jne    13908 <memcpy+0x118>
   138fd:	e8 1e fd ff ff       	call   13620 <memcpy_verw.part.0>
   13902:	eb d2                	jmp    138d6 <memcpy+0xe6>
   13904:	0f 1f 40 00          	nopl   0x0(%rax)
   13908:	e8 33 fc ff ff       	call   13540 <__memcpy.part.0>
   1390d:	eb c7                	jmp    138d6 <memcpy+0xe6>
   1390f:	90                   	nop

0000000000013910 <memset_verw>:
   13910:	f3 0f 1e fa          	endbr64 
   13914:	41 56                	push   %r14
   13916:	41 55                	push   %r13
   13918:	49 89 fd             	mov    %rdi,%r13
   1391b:	41 54                	push   %r12
   1391d:	55                   	push   %rbp
   1391e:	53                   	push   %rbx
   1391f:	48 83 ec 20          	sub    $0x20,%rsp
   13923:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1392a:	00 00 
   1392c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   13931:	31 c0                	xor    %eax,%eax
   13933:	48 85 d2             	test   %rdx,%rdx
   13936:	0f 84 a8 00 00 00    	je     139e4 <memset_verw+0xd4>
   1393c:	48 85 ff             	test   %rdi,%rdi
   1393f:	0f 84 9f 00 00 00    	je     139e4 <memset_verw+0xd4>
   13945:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
   1394a:	48 89 d5             	mov    %rdx,%rbp
   1394d:	ba 08 00 00 00       	mov    $0x8,%edx
   13952:	4c 89 eb             	mov    %r13,%rbx
   13955:	4c 89 e7             	mov    %r12,%rdi
   13958:	40 88 74 24 0f       	mov    %sil,0xf(%rsp)
   1395d:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   13964:	00 00 
   13966:	e8 55 50 00 00       	call   189c0 <__memset>
   1396b:	48 83 fd 07          	cmp    $0x7,%rbp
   1396f:	76 4b                	jbe    139bc <memset_verw+0xac>
   13971:	4c 8d 74 24 0f       	lea    0xf(%rsp),%r14
   13976:	eb 21                	jmp    13999 <memset_verw+0x89>
   13978:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1397f:	00 
   13980:	48 89 df             	mov    %rbx,%rdi
   13983:	4c 89 e6             	mov    %r12,%rsi
   13986:	48 83 ed 08          	sub    $0x8,%rbp
   1398a:	48 83 c3 08          	add    $0x8,%rbx
   1398e:	e8 1d 50 00 00       	call   189b0 <__memcpy_8a>
   13993:	48 83 fd 07          	cmp    $0x7,%rbp
   13997:	76 1e                	jbe    139b7 <memset_verw+0xa7>
   13999:	f6 c3 07             	test   $0x7,%bl
   1399c:	74 e2                	je     13980 <memset_verw+0x70>
   1399e:	48 89 df             	mov    %rbx,%rdi
   139a1:	4c 89 f6             	mov    %r14,%rsi
   139a4:	48 83 ed 01          	sub    $0x1,%rbp
   139a8:	48 83 c3 01          	add    $0x1,%rbx
   139ac:	e8 df 4f 00 00       	call   18990 <__memcpy_verw>
   139b1:	48 83 fd 07          	cmp    $0x7,%rbp
   139b5:	77 e2                	ja     13999 <memset_verw+0x89>
   139b7:	48 85 ed             	test   %rbp,%rbp
   139ba:	74 28                	je     139e4 <memset_verw+0xd4>
   139bc:	45 31 e4             	xor    %r12d,%r12d
   139bf:	4c 8d 74 24 0f       	lea    0xf(%rsp),%r14
   139c4:	0f 1f 40 00          	nopl   0x0(%rax)
   139c8:	48 89 df             	mov    %rbx,%rdi
   139cb:	4c 89 f6             	mov    %r14,%rsi
   139ce:	48 83 c3 01          	add    $0x1,%rbx
   139d2:	e8 b9 4f 00 00       	call   18990 <__memcpy_verw>
   139d7:	41 8d 44 24 01       	lea    0x1(%r12),%eax
   139dc:	49 89 c4             	mov    %rax,%r12
   139df:	48 39 e8             	cmp    %rbp,%rax
   139e2:	72 e4                	jb     139c8 <memset_verw+0xb8>
   139e4:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   139e9:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   139f0:	00 00 
   139f2:	75 10                	jne    13a04 <memset_verw+0xf4>
   139f4:	48 83 c4 20          	add    $0x20,%rsp
   139f8:	4c 89 e8             	mov    %r13,%rax
   139fb:	5b                   	pop    %rbx
   139fc:	5d                   	pop    %rbp
   139fd:	41 5c                	pop    %r12
   139ff:	41 5d                	pop    %r13
   13a01:	41 5e                	pop    %r14
   13a03:	c3                   	ret    
   13a04:	e8 37 01 00 00       	call   13b40 <__stack_chk_fail>
   13a09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000013a10 <memset>:
   13a10:	f3 0f 1e fa          	endbr64 
   13a14:	e9 a7 4f 00 00       	jmp    189c0 <__memset>
   13a19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000013a20 <memset_s>:
   13a20:	f3 0f 1e fa          	endbr64 
   13a24:	41 54                	push   %r12
   13a26:	48 85 ff             	test   %rdi,%rdi
   13a29:	74 4d                	je     13a78 <memset_s+0x58>
   13a2b:	49 89 f0             	mov    %rsi,%r8
   13a2e:	89 d6                	mov    %edx,%esi
   13a30:	48 89 ca             	mov    %rcx,%rdx
   13a33:	4c 39 c1             	cmp    %r8,%rcx
   13a36:	76 28                	jbe    13a60 <memset_s+0x40>
   13a38:	48 8b 05 a1 e6 01 00 	mov    0x1e6a1(%rip),%rax        # 320e0 <__memset_vp>
   13a3f:	4c 89 c2             	mov    %r8,%rdx
   13a42:	41 bc 4b 00 00 00    	mov    $0x4b,%r12d
   13a48:	ff d0                	call   *%rax
   13a4a:	e8 11 0a 00 00       	call   14460 <__errno>
   13a4f:	44 89 20             	mov    %r12d,(%rax)
   13a52:	44 89 e0             	mov    %r12d,%eax
   13a55:	41 5c                	pop    %r12
   13a57:	c3                   	ret    
   13a58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   13a5f:	00 
   13a60:	45 31 e4             	xor    %r12d,%r12d
   13a63:	48 8b 05 76 e6 01 00 	mov    0x1e676(%rip),%rax        # 320e0 <__memset_vp>
   13a6a:	ff d0                	call   *%rax
   13a6c:	44 89 e0             	mov    %r12d,%eax
   13a6f:	41 5c                	pop    %r12
   13a71:	c3                   	ret    
   13a72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13a78:	41 bc 16 00 00 00    	mov    $0x16,%r12d
   13a7e:	eb ca                	jmp    13a4a <memset_s+0x2a>

0000000000013a80 <sgx_init_string_lib>:
   13a80:	f3 0f 1e fa          	endbr64 
   13a84:	31 c0                	xor    %eax,%eax
   13a86:	c3                   	ret    
   13a87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   13a8e:	00 00 

0000000000013a90 <strlen>:
   13a90:	f3 0f 1e fa          	endbr64 
   13a94:	e9 87 4f 00 00       	jmp    18a20 <_libc__strlen>
   13a99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000013aa0 <strncpy>:
   13aa0:	f3 0f 1e fa          	endbr64 
   13aa4:	48 89 f8             	mov    %rdi,%rax
   13aa7:	48 85 d2             	test   %rdx,%rdx
   13aaa:	74 54                	je     13b00 <strncpy+0x60>
   13aac:	48 89 f9             	mov    %rdi,%rcx
   13aaf:	eb 0c                	jmp    13abd <strncpy+0x1d>
   13ab1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13ab8:	48 85 d2             	test   %rdx,%rdx
   13abb:	74 43                	je     13b00 <strncpy+0x60>
   13abd:	44 0f b6 06          	movzbl (%rsi),%r8d
   13ac1:	49 89 c9             	mov    %rcx,%r9
   13ac4:	48 83 c6 01          	add    $0x1,%rsi
   13ac8:	48 83 c1 01          	add    $0x1,%rcx
   13acc:	49 89 d2             	mov    %rdx,%r10
   13acf:	48 83 ea 01          	sub    $0x1,%rdx
   13ad3:	44 88 41 ff          	mov    %r8b,-0x1(%rcx)
   13ad7:	45 84 c0             	test   %r8b,%r8b
   13ada:	75 dc                	jne    13ab8 <strncpy+0x18>
   13adc:	48 85 d2             	test   %rdx,%rdx
   13adf:	74 1f                	je     13b00 <strncpy+0x60>
   13ae1:	4d 01 d1             	add    %r10,%r9
   13ae4:	0f 1f 40 00          	nopl   0x0(%rax)
   13ae8:	48 83 c1 01          	add    $0x1,%rcx
   13aec:	c6 41 ff 00          	movb   $0x0,-0x1(%rcx)
   13af0:	4c 39 c9             	cmp    %r9,%rcx
   13af3:	75 f3                	jne    13ae8 <strncpy+0x48>
   13af5:	c3                   	ret    
   13af6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   13afd:	00 00 00 
   13b00:	c3                   	ret    
   13b01:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   13b08:	00 00 00 
   13b0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000013b10 <strnlen>:
   13b10:	f3 0f 1e fa          	endbr64 
   13b14:	48 89 f0             	mov    %rsi,%rax
   13b17:	48 8d 0c 37          	lea    (%rdi,%rsi,1),%rcx
   13b1b:	48 89 fa             	mov    %rdi,%rdx
   13b1e:	48 85 f6             	test   %rsi,%rsi
   13b21:	75 0e                	jne    13b31 <strnlen+0x21>
   13b23:	eb 18                	jmp    13b3d <strnlen+0x2d>
   13b25:	0f 1f 00             	nopl   (%rax)
   13b28:	48 83 c2 01          	add    $0x1,%rdx
   13b2c:	48 39 d1             	cmp    %rdx,%rcx
   13b2f:	74 0b                	je     13b3c <strnlen+0x2c>
   13b31:	80 3a 00             	cmpb   $0x0,(%rdx)
   13b34:	75 f2                	jne    13b28 <strnlen+0x18>
   13b36:	48 89 d0             	mov    %rdx,%rax
   13b39:	48 29 f8             	sub    %rdi,%rax
   13b3c:	c3                   	ret    
   13b3d:	c3                   	ret    
   13b3e:	66 90                	xchg   %ax,%ax

0000000000013b40 <__stack_chk_fail>:
   13b40:	f3 0f 1e fa          	endbr64 
   13b44:	50                   	push   %rax
   13b45:	58                   	pop    %rax
   13b46:	48 83 ec 08          	sub    $0x8,%rsp
   13b4a:	e8 e8 21 01 00       	call   25d37 <abort>
   13b4f:	90                   	nop

0000000000013b50 <sgx_thread_cond_wait>:
   13b50:	f3 0f 1e fa          	endbr64 
   13b54:	41 56                	push   %r14
   13b56:	41 55                	push   %r13
   13b58:	41 54                	push   %r12
   13b5a:	55                   	push   %rbp
   13b5b:	53                   	push   %rbx
   13b5c:	48 83 ec 20          	sub    $0x20,%rsp
   13b60:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13b67:	00 00 
   13b69:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   13b6e:	31 c0                	xor    %eax,%eax
   13b70:	48 85 ff             	test   %rdi,%rdi
   13b73:	0f 84 e7 00 00 00    	je     13c60 <sgx_thread_cond_wait+0x110>
   13b79:	49 89 f4             	mov    %rsi,%r12
   13b7c:	be 18 00 00 00       	mov    $0x18,%esi
   13b81:	48 89 fd             	mov    %rdi,%rbp
   13b84:	e8 17 69 ff ff       	call   a4a0 <sgx_is_within_enclave>
   13b89:	4d 85 e4             	test   %r12,%r12
   13b8c:	0f 84 ce 00 00 00    	je     13c60 <sgx_thread_cond_wait+0x110>
   13b92:	85 c0                	test   %eax,%eax
   13b94:	0f 84 c6 00 00 00    	je     13c60 <sgx_thread_cond_wait+0x110>
   13b9a:	be 28 00 00 00       	mov    $0x28,%esi
   13b9f:	4c 89 e7             	mov    %r12,%rdi
   13ba2:	e8 f9 68 ff ff       	call   a4a0 <sgx_is_within_enclave>
   13ba7:	85 c0                	test   %eax,%eax
   13ba9:	0f 84 b1 00 00 00    	je     13c60 <sgx_thread_cond_wait+0x110>
   13baf:	e8 8f 1d 01 00       	call   25943 <get_thread_data>
   13bb4:	48 89 ef             	mov    %rbp,%rdi
   13bb7:	48 89 c3             	mov    %rax,%rbx
   13bba:	e8 b1 c4 ff ff       	call   10070 <sgx_spin_lock>
   13bbf:	48 83 7d 08 00       	cmpq   $0x0,0x8(%rbp)
   13bc4:	48 c7 43 60 00 00 00 	movq   $0x0,0x60(%rbx)
   13bcb:	00 
   13bcc:	0f 85 b4 00 00 00    	jne    13c86 <sgx_thread_cond_wait+0x136>
   13bd2:	48 89 5d 08          	mov    %rbx,0x8(%rbp)
   13bd6:	48 89 5d 10          	mov    %rbx,0x10(%rbp)
   13bda:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   13bdf:	4c 89 e7             	mov    %r12,%rdi
   13be2:	4c 8d 74 24 0c       	lea    0xc(%rsp),%r14
   13be7:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   13bee:	00 00 
   13bf0:	e8 1b 03 00 00       	call   13f10 <sgx_thread_mutex_unlock_lazy>
   13bf5:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   13bf9:	41 89 c5             	mov    %eax,%r13d
   13bfc:	85 c0                	test   %eax,%eax
   13bfe:	0f 85 c0 00 00 00    	jne    13cc4 <sgx_thread_cond_wait+0x174>
   13c04:	0f 1f 40 00          	nopl   0x0(%rax)
   13c08:	48 89 ef             	mov    %rbp,%rdi
   13c0b:	e8 00 c5 ff ff       	call   10110 <sgx_spin_unlock>
   13c10:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   13c15:	48 85 c0             	test   %rax,%rax
   13c18:	75 7e                	jne    13c98 <sgx_thread_cond_wait+0x148>
   13c1a:	48 8b 43 10          	mov    0x10(%rbx),%rax
   13c1e:	4c 89 f7             	mov    %r14,%rdi
   13c21:	48 8d b0 00 04 01 00 	lea    0x10400(%rax),%rsi
   13c28:	e8 fb 0d ff ff       	call   4a28 <sgx_thread_wait_untrusted_event_ocall>
   13c2d:	48 89 ef             	mov    %rbp,%rdi
   13c30:	e8 3b c4 ff ff       	call   10070 <sgx_spin_lock>
   13c35:	48 8b 45 08          	mov    0x8(%rbp),%rax
   13c39:	48 85 c0             	test   %rax,%rax
   13c3c:	74 10                	je     13c4e <sgx_thread_cond_wait+0xfe>
   13c3e:	66 90                	xchg   %ax,%ax
   13c40:	48 39 c3             	cmp    %rax,%rbx
   13c43:	74 c3                	je     13c08 <sgx_thread_cond_wait+0xb8>
   13c45:	48 8b 40 60          	mov    0x60(%rax),%rax
   13c49:	48 85 c0             	test   %rax,%rax
   13c4c:	75 f2                	jne    13c40 <sgx_thread_cond_wait+0xf0>
   13c4e:	48 89 ef             	mov    %rbp,%rdi
   13c51:	e8 ba c4 ff ff       	call   10110 <sgx_spin_unlock>
   13c56:	4c 89 e7             	mov    %r12,%rdi
   13c59:	e8 42 01 00 00       	call   13da0 <sgx_thread_mutex_lock>
   13c5e:	eb 06                	jmp    13c66 <sgx_thread_cond_wait+0x116>
   13c60:	41 bd 16 00 00 00    	mov    $0x16,%r13d
   13c66:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   13c6b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   13c72:	00 00 
   13c74:	75 5d                	jne    13cd3 <sgx_thread_cond_wait+0x183>
   13c76:	48 83 c4 20          	add    $0x20,%rsp
   13c7a:	44 89 e8             	mov    %r13d,%eax
   13c7d:	5b                   	pop    %rbx
   13c7e:	5d                   	pop    %rbp
   13c7f:	41 5c                	pop    %r12
   13c81:	41 5d                	pop    %r13
   13c83:	41 5e                	pop    %r14
   13c85:	c3                   	ret    
   13c86:	48 8b 45 10          	mov    0x10(%rbp),%rax
   13c8a:	48 89 58 60          	mov    %rbx,0x60(%rax)
   13c8e:	e9 43 ff ff ff       	jmp    13bd6 <sgx_thread_cond_wait+0x86>
   13c93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13c98:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
   13c9c:	48 8b 70 10          	mov    0x10(%rax),%rsi
   13ca0:	4c 89 f7             	mov    %r14,%rdi
   13ca3:	48 8d 91 00 04 01 00 	lea    0x10400(%rcx),%rdx
   13caa:	48 81 c6 00 04 01 00 	add    $0x10400,%rsi
   13cb1:	e8 5c 0f ff ff       	call   4c12 <sgx_thread_setwait_untrusted_events_ocall>
   13cb6:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   13cbd:	00 00 
   13cbf:	e9 69 ff ff ff       	jmp    13c2d <sgx_thread_cond_wait+0xdd>
   13cc4:	48 89 ef             	mov    %rbp,%rdi
   13cc7:	e8 44 c4 ff ff       	call   10110 <sgx_spin_unlock>
   13ccc:	44 8b 6c 24 0c       	mov    0xc(%rsp),%r13d
   13cd1:	eb 93                	jmp    13c66 <sgx_thread_cond_wait+0x116>
   13cd3:	e8 68 fe ff ff       	call   13b40 <__stack_chk_fail>
   13cd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   13cdf:	00 

0000000000013ce0 <sgx_thread_cond_signal>:
   13ce0:	f3 0f 1e fa          	endbr64 
   13ce4:	55                   	push   %rbp
   13ce5:	53                   	push   %rbx
   13ce6:	48 83 ec 18          	sub    $0x18,%rsp
   13cea:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13cf1:	00 00 
   13cf3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   13cf8:	31 c0                	xor    %eax,%eax
   13cfa:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
   13d01:	00 
   13d02:	48 85 ff             	test   %rdi,%rdi
   13d05:	74 71                	je     13d78 <sgx_thread_cond_signal+0x98>
   13d07:	be 18 00 00 00       	mov    $0x18,%esi
   13d0c:	48 89 fd             	mov    %rdi,%rbp
   13d0f:	e8 8c 67 ff ff       	call   a4a0 <sgx_is_within_enclave>
   13d14:	85 c0                	test   %eax,%eax
   13d16:	74 60                	je     13d78 <sgx_thread_cond_signal+0x98>
   13d18:	48 89 ef             	mov    %rbp,%rdi
   13d1b:	e8 50 c3 ff ff       	call   10070 <sgx_spin_lock>
   13d20:	48 8b 5d 08          	mov    0x8(%rbp),%rbx
   13d24:	48 85 db             	test   %rbx,%rbx
   13d27:	74 57                	je     13d80 <sgx_thread_cond_signal+0xa0>
   13d29:	48 8b 43 60          	mov    0x60(%rbx),%rax
   13d2d:	48 89 45 08          	mov    %rax,0x8(%rbp)
   13d31:	48 85 c0             	test   %rax,%rax
   13d34:	75 08                	jne    13d3e <sgx_thread_cond_signal+0x5e>
   13d36:	48 c7 45 10 00 00 00 	movq   $0x0,0x10(%rbp)
   13d3d:	00 
   13d3e:	48 89 ef             	mov    %rbp,%rdi
   13d41:	e8 ca c3 ff ff       	call   10110 <sgx_spin_unlock>
   13d46:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   13d4a:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
   13d4f:	48 81 c6 00 04 01 00 	add    $0x10400,%rsi
   13d56:	e8 c2 0d ff ff       	call   4b1d <sgx_thread_set_untrusted_event_ocall>
   13d5b:	31 c0                	xor    %eax,%eax
   13d5d:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   13d62:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   13d69:	00 00 
   13d6b:	75 1f                	jne    13d8c <sgx_thread_cond_signal+0xac>
   13d6d:	48 83 c4 18          	add    $0x18,%rsp
   13d71:	5b                   	pop    %rbx
   13d72:	5d                   	pop    %rbp
   13d73:	c3                   	ret    
   13d74:	0f 1f 40 00          	nopl   0x0(%rax)
   13d78:	b8 16 00 00 00       	mov    $0x16,%eax
   13d7d:	eb de                	jmp    13d5d <sgx_thread_cond_signal+0x7d>
   13d7f:	90                   	nop
   13d80:	48 89 ef             	mov    %rbp,%rdi
   13d83:	e8 88 c3 ff ff       	call   10110 <sgx_spin_unlock>
   13d88:	31 c0                	xor    %eax,%eax
   13d8a:	eb d1                	jmp    13d5d <sgx_thread_cond_signal+0x7d>
   13d8c:	e8 af fd ff ff       	call   13b40 <__stack_chk_fail>
   13d91:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   13d98:	00 00 00 
   13d9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000013da0 <sgx_thread_mutex_lock>:
   13da0:	f3 0f 1e fa          	endbr64 
   13da4:	41 55                	push   %r13
   13da6:	41 54                	push   %r12
   13da8:	55                   	push   %rbp
   13da9:	53                   	push   %rbx
   13daa:	48 83 ec 18          	sub    $0x18,%rsp
   13dae:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   13db5:	00 00 
   13db7:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   13dbc:	31 c0                	xor    %eax,%eax
   13dbe:	48 85 ff             	test   %rdi,%rdi
   13dc1:	0f 84 f3 00 00 00    	je     13eba <sgx_thread_mutex_lock+0x11a>
   13dc7:	be 28 00 00 00       	mov    $0x28,%esi
   13dcc:	48 89 fd             	mov    %rdi,%rbp
   13dcf:	e8 cc 66 ff ff       	call   a4a0 <sgx_is_within_enclave>
   13dd4:	85 c0                	test   %eax,%eax
   13dd6:	0f 84 de 00 00 00    	je     13eba <sgx_thread_mutex_lock+0x11a>
   13ddc:	e8 62 1b 01 00       	call   25943 <get_thread_data>
   13de1:	4c 8d 6d 0c          	lea    0xc(%rbp),%r13
   13de5:	4c 8d 64 24 04       	lea    0x4(%rsp),%r12
   13dea:	48 89 c3             	mov    %rax,%rbx
   13ded:	0f 1f 00             	nopl   (%rax)
   13df0:	4c 89 ef             	mov    %r13,%rdi
   13df3:	e8 78 c2 ff ff       	call   10070 <sgx_spin_lock>
   13df8:	8b 45 08             	mov    0x8(%rbp),%eax
   13dfb:	8d 50 ff             	lea    -0x1(%rax),%edx
   13dfe:	83 fa 01             	cmp    $0x1,%edx
   13e01:	0f 87 ab 00 00 00    	ja     13eb2 <sgx_thread_mutex_lock+0x112>
   13e07:	48 8b 55 10          	mov    0x10(%rbp),%rdx
   13e0b:	83 f8 02             	cmp    $0x2,%eax
   13e0e:	74 70                	je     13e80 <sgx_thread_mutex_lock+0xe0>
   13e10:	48 8b 45 18          	mov    0x18(%rbp),%rax
   13e14:	48 85 d2             	test   %rdx,%rdx
   13e17:	75 4f                	jne    13e68 <sgx_thread_mutex_lock+0xc8>
   13e19:	48 39 c3             	cmp    %rax,%rbx
   13e1c:	0f 84 d2 00 00 00    	je     13ef4 <sgx_thread_mutex_lock+0x154>
   13e22:	48 85 c0             	test   %rax,%rax
   13e25:	0f 84 af 00 00 00    	je     13eda <sgx_thread_mutex_lock+0x13a>
   13e2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13e30:	48 8b 40 60          	mov    0x60(%rax),%rax
   13e34:	48 85 c0             	test   %rax,%rax
   13e37:	74 67                	je     13ea0 <sgx_thread_mutex_lock+0x100>
   13e39:	48 39 c3             	cmp    %rax,%rbx
   13e3c:	75 f2                	jne    13e30 <sgx_thread_mutex_lock+0x90>
   13e3e:	4c 89 ef             	mov    %r13,%rdi
   13e41:	e8 ca c2 ff ff       	call   10110 <sgx_spin_unlock>
   13e46:	48 8b 43 10          	mov    0x10(%rbx),%rax
   13e4a:	4c 89 e7             	mov    %r12,%rdi
   13e4d:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
   13e54:	00 
   13e55:	48 8d b0 00 04 01 00 	lea    0x10400(%rax),%rsi
   13e5c:	e8 c7 0b ff ff       	call   4a28 <sgx_thread_wait_untrusted_event_ocall>
   13e61:	eb 8d                	jmp    13df0 <sgx_thread_mutex_lock+0x50>
   13e63:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13e68:	48 85 c0             	test   %rax,%rax
   13e6b:	75 cc                	jne    13e39 <sgx_thread_mutex_lock+0x99>
   13e6d:	48 c7 43 60 00 00 00 	movq   $0x0,0x60(%rbx)
   13e74:	00 
   13e75:	48 89 5d 18          	mov    %rbx,0x18(%rbp)
   13e79:	48 89 5d 20          	mov    %rbx,0x20(%rbp)
   13e7d:	eb bf                	jmp    13e3e <sgx_thread_mutex_lock+0x9e>
   13e7f:	90                   	nop
   13e80:	48 39 d3             	cmp    %rdx,%rbx
   13e83:	75 8b                	jne    13e10 <sgx_thread_mutex_lock+0x70>
   13e85:	48 83 45 00 01       	addq   $0x1,0x0(%rbp)
   13e8a:	4c 89 ef             	mov    %r13,%rdi
   13e8d:	e8 7e c2 ff ff       	call   10110 <sgx_spin_unlock>
   13e92:	31 c0                	xor    %eax,%eax
   13e94:	eb 29                	jmp    13ebf <sgx_thread_mutex_lock+0x11f>
   13e96:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   13e9d:	00 00 00 
   13ea0:	48 8b 45 20          	mov    0x20(%rbp),%rax
   13ea4:	48 c7 43 60 00 00 00 	movq   $0x0,0x60(%rbx)
   13eab:	00 
   13eac:	48 89 58 60          	mov    %rbx,0x60(%rax)
   13eb0:	eb c7                	jmp    13e79 <sgx_thread_mutex_lock+0xd9>
   13eb2:	4c 89 ef             	mov    %r13,%rdi
   13eb5:	e8 56 c2 ff ff       	call   10110 <sgx_spin_unlock>
   13eba:	b8 16 00 00 00       	mov    $0x16,%eax
   13ebf:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   13ec4:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   13ecb:	00 00 
   13ecd:	75 3c                	jne    13f0b <sgx_thread_mutex_lock+0x16b>
   13ecf:	48 83 c4 18          	add    $0x18,%rsp
   13ed3:	5b                   	pop    %rbx
   13ed4:	5d                   	pop    %rbp
   13ed5:	41 5c                	pop    %r12
   13ed7:	41 5d                	pop    %r13
   13ed9:	c3                   	ret    
   13eda:	48 85 db             	test   %rbx,%rbx
   13edd:	74 15                	je     13ef4 <sgx_thread_mutex_lock+0x154>
   13edf:	48 83 45 00 01       	addq   $0x1,0x0(%rbp)
   13ee4:	4c 89 ef             	mov    %r13,%rdi
   13ee7:	48 89 5d 10          	mov    %rbx,0x10(%rbp)
   13eeb:	e8 20 c2 ff ff       	call   10110 <sgx_spin_unlock>
   13ef0:	31 c0                	xor    %eax,%eax
   13ef2:	eb cb                	jmp    13ebf <sgx_thread_mutex_lock+0x11f>
   13ef4:	48 8b 43 60          	mov    0x60(%rbx),%rax
   13ef8:	48 89 45 18          	mov    %rax,0x18(%rbp)
   13efc:	48 85 c0             	test   %rax,%rax
   13eff:	75 de                	jne    13edf <sgx_thread_mutex_lock+0x13f>
   13f01:	48 c7 45 20 00 00 00 	movq   $0x0,0x20(%rbp)
   13f08:	00 
   13f09:	eb d4                	jmp    13edf <sgx_thread_mutex_lock+0x13f>
   13f0b:	e8 30 fc ff ff       	call   13b40 <__stack_chk_fail>

0000000000013f10 <sgx_thread_mutex_unlock_lazy>:
   13f10:	f3 0f 1e fa          	endbr64 
   13f14:	48 85 ff             	test   %rdi,%rdi
   13f17:	0f 84 d3 00 00 00    	je     13ff0 <sgx_thread_mutex_unlock_lazy+0xe0>
   13f1d:	41 55                	push   %r13
   13f1f:	41 54                	push   %r12
   13f21:	55                   	push   %rbp
   13f22:	48 89 f5             	mov    %rsi,%rbp
   13f25:	be 28 00 00 00       	mov    $0x28,%esi
   13f2a:	53                   	push   %rbx
   13f2b:	48 89 fb             	mov    %rdi,%rbx
   13f2e:	48 83 ec 08          	sub    $0x8,%rsp
   13f32:	e8 69 65 ff ff       	call   a4a0 <sgx_is_within_enclave>
   13f37:	85 c0                	test   %eax,%eax
   13f39:	74 6d                	je     13fa8 <sgx_thread_mutex_unlock_lazy+0x98>
   13f3b:	e8 03 1a 01 00       	call   25943 <get_thread_data>
   13f40:	4c 8d 6b 0c          	lea    0xc(%rbx),%r13
   13f44:	4c 89 ef             	mov    %r13,%rdi
   13f47:	49 89 c4             	mov    %rax,%r12
   13f4a:	e8 21 c1 ff ff       	call   10070 <sgx_spin_lock>
   13f4f:	8b 43 08             	mov    0x8(%rbx),%eax
   13f52:	83 e8 01             	sub    $0x1,%eax
   13f55:	83 f8 01             	cmp    $0x1,%eax
   13f58:	77 46                	ja     13fa0 <sgx_thread_mutex_unlock_lazy+0x90>
   13f5a:	48 8b 43 10          	mov    0x10(%rbx),%rax
   13f5e:	48 85 c0             	test   %rax,%rax
   13f61:	74 5d                	je     13fc0 <sgx_thread_mutex_unlock_lazy+0xb0>
   13f63:	49 39 c4             	cmp    %rax,%r12
   13f66:	75 58                	jne    13fc0 <sgx_thread_mutex_unlock_lazy+0xb0>
   13f68:	48 83 2b 01          	subq   $0x1,(%rbx)
   13f6c:	75 72                	jne    13fe0 <sgx_thread_mutex_unlock_lazy+0xd0>
   13f6e:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   13f75:	00 
   13f76:	4c 89 ef             	mov    %r13,%rdi
   13f79:	48 8b 5b 18          	mov    0x18(%rbx),%rbx
   13f7d:	e8 8e c1 ff ff       	call   10110 <sgx_spin_unlock>
   13f82:	48 85 ed             	test   %rbp,%rbp
   13f85:	74 04                	je     13f8b <sgx_thread_mutex_unlock_lazy+0x7b>
   13f87:	48 89 5d 00          	mov    %rbx,0x0(%rbp)
   13f8b:	48 83 c4 08          	add    $0x8,%rsp
   13f8f:	31 c0                	xor    %eax,%eax
   13f91:	5b                   	pop    %rbx
   13f92:	5d                   	pop    %rbp
   13f93:	41 5c                	pop    %r12
   13f95:	41 5d                	pop    %r13
   13f97:	c3                   	ret    
   13f98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   13f9f:	00 
   13fa0:	4c 89 ef             	mov    %r13,%rdi
   13fa3:	e8 68 c1 ff ff       	call   10110 <sgx_spin_unlock>
   13fa8:	b8 16 00 00 00       	mov    $0x16,%eax
   13fad:	48 83 c4 08          	add    $0x8,%rsp
   13fb1:	5b                   	pop    %rbx
   13fb2:	5d                   	pop    %rbp
   13fb3:	41 5c                	pop    %r12
   13fb5:	41 5d                	pop    %r13
   13fb7:	c3                   	ret    
   13fb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   13fbf:	00 
   13fc0:	4c 89 ef             	mov    %r13,%rdi
   13fc3:	e8 48 c1 ff ff       	call   10110 <sgx_spin_unlock>
   13fc8:	48 83 c4 08          	add    $0x8,%rsp
   13fcc:	b8 01 00 00 00       	mov    $0x1,%eax
   13fd1:	5b                   	pop    %rbx
   13fd2:	5d                   	pop    %rbp
   13fd3:	41 5c                	pop    %r12
   13fd5:	41 5d                	pop    %r13
   13fd7:	c3                   	ret    
   13fd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   13fdf:	00 
   13fe0:	4c 89 ef             	mov    %r13,%rdi
   13fe3:	e8 28 c1 ff ff       	call   10110 <sgx_spin_unlock>
   13fe8:	31 c0                	xor    %eax,%eax
   13fea:	eb c1                	jmp    13fad <sgx_thread_mutex_unlock_lazy+0x9d>
   13fec:	0f 1f 40 00          	nopl   0x0(%rax)
   13ff0:	b8 16 00 00 00       	mov    $0x16,%eax
   13ff5:	c3                   	ret    
   13ff6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   13ffd:	00 00 00 

0000000000014000 <sgx_thread_mutex_unlock>:
   14000:	f3 0f 1e fa          	endbr64 
   14004:	41 54                	push   %r12
   14006:	48 83 ec 20          	sub    $0x20,%rsp
   1400a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   14011:	00 00 
   14013:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   14018:	31 c0                	xor    %eax,%eax
   1401a:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
   1401f:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   14026:	00 00 
   14028:	e8 e3 fe ff ff       	call   13f10 <sgx_thread_mutex_unlock_lazy>
   1402d:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   14031:	41 89 c4             	mov    %eax,%r12d
   14034:	85 c0                	test   %eax,%eax
   14036:	75 0a                	jne    14042 <sgx_thread_mutex_unlock+0x42>
   14038:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1403d:	48 85 c0             	test   %rax,%rax
   14040:	75 1e                	jne    14060 <sgx_thread_mutex_unlock+0x60>
   14042:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   14047:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1404e:	00 00 
   14050:	75 25                	jne    14077 <sgx_thread_mutex_unlock+0x77>
   14052:	48 83 c4 20          	add    $0x20,%rsp
   14056:	44 89 e0             	mov    %r12d,%eax
   14059:	41 5c                	pop    %r12
   1405b:	c3                   	ret    
   1405c:	0f 1f 40 00          	nopl   0x0(%rax)
   14060:	48 8b 70 10          	mov    0x10(%rax),%rsi
   14064:	48 8d 7c 24 0c       	lea    0xc(%rsp),%rdi
   14069:	48 81 c6 00 04 01 00 	add    $0x10400,%rsi
   14070:	e8 a8 0a ff ff       	call   4b1d <sgx_thread_set_untrusted_event_ocall>
   14075:	eb cb                	jmp    14042 <sgx_thread_mutex_unlock+0x42>
   14077:	e8 c4 fa ff ff       	call   13b40 <__stack_chk_fail>
   1407c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000014080 <sgx_thread_spin_trylock>:
   14080:	f3 0f 1e fa          	endbr64 
   14084:	48 85 ff             	test   %rdi,%rdi
   14087:	74 7f                	je     14108 <sgx_thread_spin_trylock+0x88>
   14089:	41 54                	push   %r12
   1408b:	be 18 00 00 00       	mov    $0x18,%esi
   14090:	55                   	push   %rbp
   14091:	53                   	push   %rbx
   14092:	48 89 fb             	mov    %rdi,%rbx
   14095:	e8 06 64 ff ff       	call   a4a0 <sgx_is_within_enclave>
   1409a:	85 c0                	test   %eax,%eax
   1409c:	74 42                	je     140e0 <sgx_thread_spin_trylock+0x60>
   1409e:	e8 a0 18 01 00       	call   25943 <get_thread_data>
   140a3:	4c 8d 63 08          	lea    0x8(%rbx),%r12
   140a7:	4c 89 e7             	mov    %r12,%rdi
   140aa:	48 89 c5             	mov    %rax,%rbp
   140ad:	e8 be bf ff ff       	call   10070 <sgx_spin_lock>
   140b2:	48 8b 43 10          	mov    0x10(%rbx),%rax
   140b6:	48 39 e8             	cmp    %rbp,%rax
   140b9:	74 09                	je     140c4 <sgx_thread_spin_trylock+0x44>
   140bb:	48 85 c0             	test   %rax,%rax
   140be:	75 30                	jne    140f0 <sgx_thread_spin_trylock+0x70>
   140c0:	48 89 6b 10          	mov    %rbp,0x10(%rbx)
   140c4:	48 83 03 01          	addq   $0x1,(%rbx)
   140c8:	4c 89 e7             	mov    %r12,%rdi
   140cb:	e8 40 c0 ff ff       	call   10110 <sgx_spin_unlock>
   140d0:	5b                   	pop    %rbx
   140d1:	31 c0                	xor    %eax,%eax
   140d3:	5d                   	pop    %rbp
   140d4:	41 5c                	pop    %r12
   140d6:	c3                   	ret    
   140d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   140de:	00 00 
   140e0:	5b                   	pop    %rbx
   140e1:	b8 16 00 00 00       	mov    $0x16,%eax
   140e6:	5d                   	pop    %rbp
   140e7:	41 5c                	pop    %r12
   140e9:	c3                   	ret    
   140ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   140f0:	4c 89 e7             	mov    %r12,%rdi
   140f3:	e8 18 c0 ff ff       	call   10110 <sgx_spin_unlock>
   140f8:	5b                   	pop    %rbx
   140f9:	b8 10 00 00 00       	mov    $0x10,%eax
   140fe:	5d                   	pop    %rbp
   140ff:	41 5c                	pop    %r12
   14101:	c3                   	ret    
   14102:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14108:	b8 16 00 00 00       	mov    $0x16,%eax
   1410d:	c3                   	ret    
   1410e:	66 90                	xchg   %ax,%ax

0000000000014110 <sgx_thread_spin_unlock>:
   14110:	f3 0f 1e fa          	endbr64 
   14114:	48 85 ff             	test   %rdi,%rdi
   14117:	0f 84 8b 00 00 00    	je     141a8 <sgx_thread_spin_unlock+0x98>
   1411d:	41 54                	push   %r12
   1411f:	be 18 00 00 00       	mov    $0x18,%esi
   14124:	55                   	push   %rbp
   14125:	53                   	push   %rbx
   14126:	48 89 fb             	mov    %rdi,%rbx
   14129:	e8 72 63 ff ff       	call   a4a0 <sgx_is_within_enclave>
   1412e:	85 c0                	test   %eax,%eax
   14130:	74 56                	je     14188 <sgx_thread_spin_unlock+0x78>
   14132:	e8 0c 18 01 00       	call   25943 <get_thread_data>
   14137:	4c 8d 63 08          	lea    0x8(%rbx),%r12
   1413b:	4c 89 e7             	mov    %r12,%rdi
   1413e:	48 89 c5             	mov    %rax,%rbp
   14141:	e8 2a bf ff ff       	call   10070 <sgx_spin_lock>
   14146:	48 8b 43 10          	mov    0x10(%rbx),%rax
   1414a:	48 85 c0             	test   %rax,%rax
   1414d:	74 21                	je     14170 <sgx_thread_spin_unlock+0x60>
   1414f:	48 39 e8             	cmp    %rbp,%rax
   14152:	75 1c                	jne    14170 <sgx_thread_spin_unlock+0x60>
   14154:	48 83 2b 01          	subq   $0x1,(%rbx)
   14158:	74 3e                	je     14198 <sgx_thread_spin_unlock+0x88>
   1415a:	4c 89 e7             	mov    %r12,%rdi
   1415d:	e8 ae bf ff ff       	call   10110 <sgx_spin_unlock>
   14162:	5b                   	pop    %rbx
   14163:	31 c0                	xor    %eax,%eax
   14165:	5d                   	pop    %rbp
   14166:	41 5c                	pop    %r12
   14168:	c3                   	ret    
   14169:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   14170:	4c 89 e7             	mov    %r12,%rdi
   14173:	e8 98 bf ff ff       	call   10110 <sgx_spin_unlock>
   14178:	5b                   	pop    %rbx
   14179:	b8 01 00 00 00       	mov    $0x1,%eax
   1417e:	5d                   	pop    %rbp
   1417f:	41 5c                	pop    %r12
   14181:	c3                   	ret    
   14182:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14188:	5b                   	pop    %rbx
   14189:	b8 16 00 00 00       	mov    $0x16,%eax
   1418e:	5d                   	pop    %rbp
   1418f:	41 5c                	pop    %r12
   14191:	c3                   	ret    
   14192:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14198:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   1419f:	00 
   141a0:	eb b8                	jmp    1415a <sgx_thread_spin_unlock+0x4a>
   141a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   141a8:	b8 16 00 00 00       	mov    $0x16,%eax
   141ad:	c3                   	ret    
   141ae:	66 90                	xchg   %ax,%ax

00000000000141b0 <memcpy_s>:
   141b0:	f3 0f 1e fa          	endbr64 
   141b4:	41 54                	push   %r12
   141b6:	45 31 e4             	xor    %r12d,%r12d
   141b9:	55                   	push   %rbp
   141ba:	48 83 ec 08          	sub    $0x8,%rsp
   141be:	48 85 c9             	test   %rcx,%rcx
   141c1:	74 1d                	je     141e0 <memcpy_s+0x30>
   141c3:	48 85 ff             	test   %rdi,%rdi
   141c6:	74 50                	je     14218 <memcpy_s+0x68>
   141c8:	48 89 d5             	mov    %rdx,%rbp
   141cb:	48 85 d2             	test   %rdx,%rdx
   141ce:	74 20                	je     141f0 <memcpy_s+0x40>
   141d0:	48 39 f1             	cmp    %rsi,%rcx
   141d3:	77 1b                	ja     141f0 <memcpy_s+0x40>
   141d5:	48 89 ca             	mov    %rcx,%rdx
   141d8:	48 89 ee             	mov    %rbp,%rsi
   141db:	e8 10 f6 ff ff       	call   137f0 <memcpy>
   141e0:	48 83 c4 08          	add    $0x8,%rsp
   141e4:	44 89 e0             	mov    %r12d,%eax
   141e7:	5d                   	pop    %rbp
   141e8:	41 5c                	pop    %r12
   141ea:	c3                   	ret    
   141eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   141f0:	48 89 f2             	mov    %rsi,%rdx
   141f3:	31 f6                	xor    %esi,%esi
   141f5:	e8 16 f8 ff ff       	call   13a10 <memset>
   141fa:	48 85 ed             	test   %rbp,%rbp
   141fd:	74 19                	je     14218 <memcpy_s+0x68>
   141ff:	e8 5c 02 00 00       	call   14460 <__errno>
   14204:	41 bc 22 00 00 00    	mov    $0x22,%r12d
   1420a:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
   14210:	eb ce                	jmp    141e0 <memcpy_s+0x30>
   14212:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14218:	e8 43 02 00 00       	call   14460 <__errno>
   1421d:	41 bc 16 00 00 00    	mov    $0x16,%r12d
   14223:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   14229:	eb b5                	jmp    141e0 <memcpy_s+0x30>
   1422b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000014230 <memcpy_verw_s>:
   14230:	f3 0f 1e fa          	endbr64 
   14234:	41 54                	push   %r12
   14236:	45 31 e4             	xor    %r12d,%r12d
   14239:	55                   	push   %rbp
   1423a:	48 83 ec 08          	sub    $0x8,%rsp
   1423e:	48 85 c9             	test   %rcx,%rcx
   14241:	74 1d                	je     14260 <memcpy_verw_s+0x30>
   14243:	48 85 ff             	test   %rdi,%rdi
   14246:	74 50                	je     14298 <memcpy_verw_s+0x68>
   14248:	48 89 d5             	mov    %rdx,%rbp
   1424b:	48 85 d2             	test   %rdx,%rdx
   1424e:	74 20                	je     14270 <memcpy_verw_s+0x40>
   14250:	48 39 f1             	cmp    %rsi,%rcx
   14253:	77 1b                	ja     14270 <memcpy_verw_s+0x40>
   14255:	48 89 ca             	mov    %rcx,%rdx
   14258:	48 89 ee             	mov    %rbp,%rsi
   1425b:	e8 70 f5 ff ff       	call   137d0 <memcpy_verw>
   14260:	48 83 c4 08          	add    $0x8,%rsp
   14264:	44 89 e0             	mov    %r12d,%eax
   14267:	5d                   	pop    %rbp
   14268:	41 5c                	pop    %r12
   1426a:	c3                   	ret    
   1426b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14270:	48 89 f2             	mov    %rsi,%rdx
   14273:	31 f6                	xor    %esi,%esi
   14275:	e8 96 f6 ff ff       	call   13910 <memset_verw>
   1427a:	48 85 ed             	test   %rbp,%rbp
   1427d:	74 19                	je     14298 <memcpy_verw_s+0x68>
   1427f:	e8 dc 01 00 00       	call   14460 <__errno>
   14284:	41 bc 22 00 00 00    	mov    $0x22,%r12d
   1428a:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
   14290:	eb ce                	jmp    14260 <memcpy_verw_s+0x30>
   14292:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14298:	e8 c3 01 00 00       	call   14460 <__errno>
   1429d:	41 bc 16 00 00 00    	mov    $0x16,%r12d
   142a3:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   142a9:	eb b5                	jmp    14260 <memcpy_verw_s+0x30>

00000000000142ab <_setjmp>:
   142ab:	f3 0f 1e fa          	endbr64 
   142af:	50                   	push   %rax
   142b0:	53                   	push   %rbx
   142b1:	51                   	push   %rcx
   142b2:	52                   	push   %rdx
   142b3:	56                   	push   %rsi
   142b4:	57                   	push   %rdi
   142b5:	41 50                	push   %r8
   142b7:	41 51                	push   %r9
   142b9:	41 52                	push   %r10
   142bb:	41 53                	push   %r11
   142bd:	41 54                	push   %r12
   142bf:	41 55                	push   %r13
   142c1:	41 56                	push   %r14
   142c3:	41 57                	push   %r15
   142c5:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
   142cc:	e8 cf 61 ff ff       	call   a4a0 <sgx_is_within_enclave>
   142d1:	83 f8 00             	cmp    $0x0,%eax
   142d4:	74 60                	je     14336 <.crash>
   142d6:	41 5f                	pop    %r15
   142d8:	41 5e                	pop    %r14
   142da:	41 5d                	pop    %r13
   142dc:	41 5c                	pop    %r12
   142de:	41 5b                	pop    %r11
   142e0:	41 5a                	pop    %r10
   142e2:	41 59                	pop    %r9
   142e4:	41 58                	pop    %r8
   142e6:	5f                   	pop    %rdi
   142e7:	5e                   	pop    %rsi
   142e8:	5a                   	pop    %rdx
   142e9:	59                   	pop    %rcx
   142ea:	5b                   	pop    %rbx
   142eb:	58                   	pop    %rax
   142ec:	4c 8b 1c 24          	mov    (%rsp),%r11
   142f0:	48 89 1f             	mov    %rbx,(%rdi)
   142f3:	48 89 6f 08          	mov    %rbp,0x8(%rdi)
   142f7:	4c 89 67 10          	mov    %r12,0x10(%rdi)
   142fb:	4c 89 6f 18          	mov    %r13,0x18(%rdi)
   142ff:	4c 89 77 20          	mov    %r14,0x20(%rdi)
   14303:	4c 89 7f 28          	mov    %r15,0x28(%rdi)
   14307:	48 89 67 30          	mov    %rsp,0x30(%rdi)
   1430b:	4c 89 5f 38          	mov    %r11,0x38(%rdi)
   1430f:	e8 3d 16 01 00       	call   25951 <get_stack_guard>
   14314:	48 31 07             	xor    %rax,(%rdi)
   14317:	48 31 47 08          	xor    %rax,0x8(%rdi)
   1431b:	48 31 47 10          	xor    %rax,0x10(%rdi)
   1431f:	48 31 47 18          	xor    %rax,0x18(%rdi)
   14323:	48 31 47 20          	xor    %rax,0x20(%rdi)
   14327:	48 31 47 28          	xor    %rax,0x28(%rdi)
   1432b:	48 31 47 30          	xor    %rax,0x30(%rdi)
   1432f:	48 31 47 38          	xor    %rax,0x38(%rdi)
   14333:	31 c0                	xor    %eax,%eax
   14335:	c3                   	ret    

0000000000014336 <.crash>:
   14336:	0f 0b                	ud2    

0000000000014338 <_longjmp>:
   14338:	f3 0f 1e fa          	endbr64 
   1433c:	50                   	push   %rax
   1433d:	53                   	push   %rbx
   1433e:	51                   	push   %rcx
   1433f:	52                   	push   %rdx
   14340:	56                   	push   %rsi
   14341:	57                   	push   %rdi
   14342:	41 50                	push   %r8
   14344:	41 51                	push   %r9
   14346:	41 52                	push   %r10
   14348:	41 53                	push   %r11
   1434a:	41 54                	push   %r12
   1434c:	41 55                	push   %r13
   1434e:	41 56                	push   %r14
   14350:	41 57                	push   %r15
   14352:	57                   	push   %rdi
   14353:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
   1435a:	e8 41 61 ff ff       	call   a4a0 <sgx_is_within_enclave>
   1435f:	83 f8 00             	cmp    $0x0,%eax
   14362:	74 d2                	je     14336 <.crash>
   14364:	5f                   	pop    %rdi
   14365:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   14369:	e8 e3 15 01 00       	call   25951 <get_stack_guard>
   1436e:	48 31 c2             	xor    %rax,%rdx
   14371:	52                   	push   %rdx
   14372:	5f                   	pop    %rdi
   14373:	e8 d8 78 ff ff       	call   bc50 <is_valid_sp>
   14378:	83 f8 00             	cmp    $0x0,%eax
   1437b:	74 b9                	je     14336 <.crash>
   1437d:	41 5f                	pop    %r15
   1437f:	41 5e                	pop    %r14
   14381:	41 5d                	pop    %r13
   14383:	41 5c                	pop    %r12
   14385:	41 5b                	pop    %r11
   14387:	41 5a                	pop    %r10
   14389:	41 59                	pop    %r9
   1438b:	41 58                	pop    %r8
   1438d:	5f                   	pop    %rdi
   1438e:	5e                   	pop    %rsi
   1438f:	5a                   	pop    %rdx
   14390:	59                   	pop    %rcx
   14391:	5b                   	pop    %rbx
   14392:	58                   	pop    %rax
   14393:	89 f0                	mov    %esi,%eax
   14395:	48 8b 1f             	mov    (%rdi),%rbx
   14398:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   1439c:	4c 8b 67 10          	mov    0x10(%rdi),%r12
   143a0:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
   143a4:	4c 8b 77 20          	mov    0x20(%rdi),%r14
   143a8:	4c 8b 7f 28          	mov    0x28(%rdi),%r15
   143ac:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   143b0:	48 8b 4f 38          	mov    0x38(%rdi),%rcx
   143b4:	50                   	push   %rax
   143b5:	e8 97 15 01 00       	call   25951 <get_stack_guard>
   143ba:	48 31 c3             	xor    %rax,%rbx
   143bd:	48 31 c6             	xor    %rax,%rsi
   143c0:	49 31 c4             	xor    %rax,%r12
   143c3:	49 31 c5             	xor    %rax,%r13
   143c6:	49 31 c6             	xor    %rax,%r14
   143c9:	49 31 c7             	xor    %rax,%r15
   143cc:	48 31 c2             	xor    %rax,%rdx
   143cf:	48 31 c1             	xor    %rax,%rcx
   143d2:	58                   	pop    %rax
   143d3:	48 89 f5             	mov    %rsi,%rbp
   143d6:	48 89 0a             	mov    %rcx,(%rdx)
   143d9:	48 89 d4             	mov    %rdx,%rsp
   143dc:	85 c0                	test   %eax,%eax
   143de:	75 02                	jne    143e2 <_longjmp+0xaa>
   143e0:	ff c0                	inc    %eax
   143e2:	c3                   	ret    
   143e3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   143ea:	00 00 00 
   143ed:	0f 1f 00             	nopl   (%rax)

00000000000143f0 <rsrv_mem_init>:
   143f0:	f3 0f 1e fa          	endbr64 
   143f4:	48 85 ff             	test   %rdi,%rdi
   143f7:	74 4f                	je     14448 <rsrv_mem_init+0x58>
   143f9:	48 89 f0             	mov    %rsi,%rax
   143fc:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   14402:	48 09 d0             	or     %rdx,%rax
   14405:	48 09 f8             	or     %rdi,%rax
   14408:	a9 ff 0f 00 00       	test   $0xfff,%eax
   1440d:	74 09                	je     14418 <rsrv_mem_init+0x28>
   1440f:	44 89 c0             	mov    %r8d,%eax
   14412:	c3                   	ret    
   14413:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14418:	48 8b 05 09 b9 01 00 	mov    0x1b909(%rip),%rax        # 2fd28 <rsrv_mem_base>
   1441f:	48 f7 d0             	not    %rax
   14422:	48 39 f0             	cmp    %rsi,%rax
   14425:	72 e8                	jb     1440f <rsrv_mem_init+0x1f>
   14427:	45 31 c0             	xor    %r8d,%r8d
   1442a:	48 89 3d f7 b8 01 00 	mov    %rdi,0x1b8f7(%rip)        # 2fd28 <rsrv_mem_base>
   14431:	48 89 35 e8 b8 01 00 	mov    %rsi,0x1b8e8(%rip)        # 2fd20 <rsrv_mem_size>
   14438:	44 89 c0             	mov    %r8d,%eax
   1443b:	48 89 15 d6 b8 01 00 	mov    %rdx,0x1b8d6(%rip)        # 2fd18 <rsrv_mem_min_size>
   14442:	c3                   	ret    
   14443:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14448:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1444e:	44 89 c0             	mov    %r8d,%eax
   14451:	c3                   	ret    
   14452:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   14459:	00 00 00 
   1445c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000014460 <__errno>:
   14460:	f3 0f 1e fa          	endbr64 
   14464:	e9 37 77 ff ff       	jmp    bba0 <get_errno_addr>
   14469:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000014470 <__grow_type_table>:
   14470:	41 56                	push   %r14
   14472:	ba 00 10 00 00       	mov    $0x1000,%edx
   14477:	41 55                	push   %r13
   14479:	49 89 fd             	mov    %rdi,%r13
   1447c:	41 54                	push   %r12
   1447e:	49 89 f4             	mov    %rsi,%r12
   14481:	55                   	push   %rbp
   14482:	53                   	push   %rbx
   14483:	8b 06                	mov    (%rsi),%eax
   14485:	8d 2c 00             	lea    (%rax,%rax,1),%ebp
   14488:	81 fd 00 10 00 00    	cmp    $0x1000,%ebp
   1448e:	0f 4c ea             	cmovl  %edx,%ebp
   14491:	48 63 fd             	movslq %ebp,%rdi
   14494:	83 f8 08             	cmp    $0x8,%eax
   14497:	74 57                	je     144f0 <__grow_type_table+0x80>
   14499:	e8 92 c5 ff ff       	call   10a30 <dlmalloc>
   1449e:	48 89 c3             	mov    %rax,%rbx
   144a1:	48 85 c0             	test   %rax,%rax
   144a4:	74 71                	je     14517 <__grow_type_table+0xa7>
   144a6:	49 63 14 24          	movslq (%r12),%rdx
   144aa:	49 8b 75 00          	mov    0x0(%r13),%rsi
   144ae:	48 89 c7             	mov    %rax,%rdi
   144b1:	e8 ea 45 00 00       	call   18aa0 <memmove>
   144b6:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   144ba:	e8 e1 df ff ff       	call   124a0 <dlfree>
   144bf:	49 89 5d 00          	mov    %rbx,0x0(%r13)
   144c3:	49 63 3c 24          	movslq (%r12),%rdi
   144c7:	89 ea                	mov    %ebp,%edx
   144c9:	31 f6                	xor    %esi,%esi
   144cb:	29 fa                	sub    %edi,%edx
   144cd:	48 01 df             	add    %rbx,%rdi
   144d0:	48 63 d2             	movslq %edx,%rdx
   144d3:	e8 38 f5 ff ff       	call   13a10 <memset>
   144d8:	41 89 2c 24          	mov    %ebp,(%r12)
   144dc:	31 c0                	xor    %eax,%eax
   144de:	5b                   	pop    %rbx
   144df:	5d                   	pop    %rbp
   144e0:	41 5c                	pop    %r12
   144e2:	41 5d                	pop    %r13
   144e4:	41 5e                	pop    %r14
   144e6:	c3                   	ret    
   144e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   144ee:	00 00 
   144f0:	4d 8b 75 00          	mov    0x0(%r13),%r14
   144f4:	e8 37 c5 ff ff       	call   10a30 <dlmalloc>
   144f9:	49 89 45 00          	mov    %rax,0x0(%r13)
   144fd:	48 89 c7             	mov    %rax,%rdi
   14500:	48 85 c0             	test   %rax,%rax
   14503:	74 12                	je     14517 <__grow_type_table+0xa7>
   14505:	49 63 14 24          	movslq (%r12),%rdx
   14509:	4c 89 f6             	mov    %r14,%rsi
   1450c:	e8 8f 45 00 00       	call   18aa0 <memmove>
   14511:	49 8b 5d 00          	mov    0x0(%r13),%rbx
   14515:	eb ac                	jmp    144c3 <__grow_type_table+0x53>
   14517:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1451c:	eb c0                	jmp    144de <__grow_type_table+0x6e>
   1451e:	66 90                	xchg   %ax,%ax

0000000000014520 <__find_arguments>:
   14520:	41 57                	push   %r15
   14522:	49 89 ff             	mov    %rdi,%r15
   14525:	41 56                	push   %r14
   14527:	4c 8d 35 f2 24 01 00 	lea    0x124f2(%rip),%r14        # 26a20 <g_dyn_entry_table+0xa20>
   1452e:	41 55                	push   %r13
   14530:	45 31 ed             	xor    %r13d,%r13d
   14533:	41 54                	push   %r12
   14535:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   1453b:	55                   	push   %rbp
   1453c:	53                   	push   %rbx
   1453d:	48 83 ec 68          	sub    $0x68,%rsp
   14541:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   14546:	48 8d 5c 24 48       	lea    0x48(%rsp),%rbx
   1454b:	31 f6                	xor    %esi,%esi
   1454d:	48 8d 6c 24 3c       	lea    0x3c(%rsp),%rbp
   14552:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   14557:	ba 08 00 00 00       	mov    $0x8,%edx
   1455c:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   14561:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   14568:	00 00 
   1456a:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   1456f:	31 c0                	xor    %eax,%eax
   14571:	48 8d 44 24 50       	lea    0x50(%rsp),%rax
   14576:	c7 44 24 38 08 00 00 	movl   $0x8,0x38(%rsp)
   1457d:	00 
   1457e:	48 89 c7             	mov    %rax,%rdi
   14581:	48 89 04 24          	mov    %rax,(%rsp)
   14585:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1458a:	e8 81 f4 ff ff       	call   13a10 <memset>
   1458f:	ba 08 00 00 00       	mov    $0x8,%edx
   14594:	31 f6                	xor    %esi,%esi
   14596:	48 89 df             	mov    %rbx,%rdi
   14599:	e8 72 f4 ff ff       	call   13a10 <memset>
   1459e:	eb 0c                	jmp    145ac <__find_arguments+0x8c>
   145a0:	48 98                	cltq   
   145a2:	49 01 c7             	add    %rax,%r15
   145a5:	83 7c 24 3c 25       	cmpl   $0x25,0x3c(%rsp)
   145aa:	74 74                	je     14620 <__find_arguments+0x100>
   145ac:	48 89 d9             	mov    %rbx,%rcx
   145af:	ba 01 00 00 00       	mov    $0x1,%edx
   145b4:	4c 89 fe             	mov    %r15,%rsi
   145b7:	48 89 ef             	mov    %rbp,%rdi
   145ba:	e8 01 71 00 00       	call   1b6c0 <mbrtowc>
   145bf:	85 c0                	test   %eax,%eax
   145c1:	7f dd                	jg     145a0 <__find_arguments+0x80>
   145c3:	41 83 fd 07          	cmp    $0x7,%r13d
   145c7:	0f 8f 33 09 00 00    	jg     14f00 <__find_arguments+0x9e0>
   145cd:	45 85 ed             	test   %r13d,%r13d
   145d0:	0f 84 8b 0b 00 00    	je     15161 <__find_arguments+0xc41>
   145d6:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   145db:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   145e0:	ba 01 00 00 00       	mov    $0x1,%edx
   145e5:	48 8d 0d c0 23 01 00 	lea    0x123c0(%rip),%rcx        # 269ac <g_dyn_entry_table+0x9ac>
   145ec:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   145f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   145f8:	48 63 c2             	movslq %edx,%rax
   145fb:	80 3c 07 1c          	cmpb   $0x1c,(%rdi,%rax,1)
   145ff:	0f 87 bc 05 00 00    	ja     14bc1 <__find_arguments+0x6a1>
   14605:	44 0f b6 0c 07       	movzbl (%rdi,%rax,1),%r9d
   1460a:	48 c1 e0 04          	shl    $0x4,%rax
   1460e:	49 03 00             	add    (%r8),%rax
   14611:	4e 63 0c 89          	movslq (%rcx,%r9,4),%r9
   14615:	49 01 c9             	add    %rcx,%r9
   14618:	3e 41 ff e1          	notrack jmp *%r9
   1461c:	0f 1f 40 00          	nopl   0x0(%rax)
   14620:	41 0f be 07          	movsbl (%r15),%eax
   14624:	31 c9                	xor    %ecx,%ecx
   14626:	41 b8 2f 00 00 80    	mov    $0x8000002f,%r8d
   1462c:	49 83 c7 01          	add    $0x1,%r15
   14630:	8d 50 e0             	lea    -0x20(%rax),%edx
   14633:	83 fa 5a             	cmp    $0x5a,%edx
   14636:	0f 87 64 01 00 00    	ja     147a0 <__find_arguments+0x280>
   1463c:	49 63 14 96          	movslq (%r14,%rdx,4),%rdx
   14640:	4c 01 f2             	add    %r14,%rdx
   14643:	3e ff e2             	notrack jmp *%rdx
   14646:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1464d:	00 00 00 
   14650:	31 f6                	xor    %esi,%esi
   14652:	eb 07                	jmp    1465b <__find_arguments+0x13b>
   14654:	0f 1f 40 00          	nopl   0x0(%rax)
   14658:	49 89 d7             	mov    %rdx,%r15
   1465b:	8d 14 b6             	lea    (%rsi,%rsi,4),%edx
   1465e:	44 89 c6             	mov    %r8d,%esi
   14661:	01 d2                	add    %edx,%edx
   14663:	29 c6                	sub    %eax,%esi
   14665:	39 d6                	cmp    %edx,%esi
   14667:	7c 27                	jl     14690 <__find_arguments+0x170>
   14669:	8d 74 10 d0          	lea    -0x30(%rax,%rdx,1),%esi
   1466d:	41 0f be 07          	movsbl (%r15),%eax
   14671:	49 8d 57 01          	lea    0x1(%r15),%rdx
   14675:	8d 78 d0             	lea    -0x30(%rax),%edi
   14678:	83 ff 09             	cmp    $0x9,%edi
   1467b:	0f 87 3f 08 00 00    	ja     14ec0 <__find_arguments+0x9a0>
   14681:	81 fe cc cc cc 0c    	cmp    $0xccccccc,%esi
   14687:	7e cf                	jle    14658 <__find_arguments+0x138>
   14689:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   14690:	e8 cb fd ff ff       	call   14460 <__errno>
   14695:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   1469a:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
   146a0:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   146a6:	48 3b 3c 24          	cmp    (%rsp),%rdi
   146aa:	74 0a                	je     146b6 <__find_arguments+0x196>
   146ac:	48 85 ff             	test   %rdi,%rdi
   146af:	74 05                	je     146b6 <__find_arguments+0x196>
   146b1:	e8 ea dd ff ff       	call   124a0 <dlfree>
   146b6:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   146bb:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   146c2:	00 00 
   146c4:	0f 85 23 0c 00 00    	jne    152ed <__find_arguments+0xdcd>
   146ca:	48 83 c4 68          	add    $0x68,%rsp
   146ce:	44 89 e0             	mov    %r12d,%eax
   146d1:	5b                   	pop    %rbx
   146d2:	5d                   	pop    %rbp
   146d3:	41 5c                	pop    %r12
   146d5:	41 5d                	pop    %r13
   146d7:	41 5e                	pop    %r14
   146d9:	41 5f                	pop    %r15
   146db:	c3                   	ret    
   146dc:	0f 1f 40 00          	nopl   0x0(%rax)
   146e0:	41 0f be 07          	movsbl (%r15),%eax
   146e4:	e9 43 ff ff ff       	jmp    1462c <__find_arguments+0x10c>
   146e9:	83 c9 10             	or     $0x10,%ecx
   146ec:	45 39 e5             	cmp    %r12d,%r13d
   146ef:	8b 44 24 38          	mov    0x38(%rsp),%eax
   146f3:	45 0f 4c ec          	cmovl  %r12d,%r13d
   146f7:	f6 c5 10             	test   $0x10,%ch
   146fa:	74 54                	je     14750 <__find_arguments+0x230>
   146fc:	41 39 c4             	cmp    %eax,%r12d
   146ff:	0f 8d 4e 04 00 00    	jge    14b53 <__find_arguments+0x633>
   14705:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   1470a:	49 63 c4             	movslq %r12d,%rax
   1470d:	41 83 c4 01          	add    $0x1,%r12d
   14711:	c6 04 02 17          	movb   $0x17,(%rdx,%rax,1)
   14715:	e9 92 fe ff ff       	jmp    145ac <__find_arguments+0x8c>
   1471a:	83 c9 10             	or     $0x10,%ecx
   1471d:	45 39 e5             	cmp    %r12d,%r13d
   14720:	8b 44 24 38          	mov    0x38(%rsp),%eax
   14724:	45 0f 4c ec          	cmovl  %r12d,%r13d
   14728:	f6 c5 10             	test   $0x10,%ch
   1472b:	0f 84 d6 00 00 00    	je     14807 <__find_arguments+0x2e7>
   14731:	41 39 c4             	cmp    %eax,%r12d
   14734:	0f 8d a6 06 00 00    	jge    14de0 <__find_arguments+0x8c0>
   1473a:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   1473f:	49 63 c4             	movslq %r12d,%rax
   14742:	41 83 c4 01          	add    $0x1,%r12d
   14746:	c6 04 02 16          	movb   $0x16,(%rdx,%rax,1)
   1474a:	e9 5d fe ff ff       	jmp    145ac <__find_arguments+0x8c>
   1474f:	90                   	nop
   14750:	f6 c5 02             	test   $0x2,%ch
   14753:	75 2b                	jne    14780 <__find_arguments+0x260>
   14755:	f6 c5 04             	test   $0x4,%ch
   14758:	0f 84 12 04 00 00    	je     14b70 <__find_arguments+0x650>
   1475e:	41 39 c4             	cmp    %eax,%r12d
   14761:	0f 8d 91 05 00 00    	jge    14cf8 <__find_arguments+0x7d8>
   14767:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   1476c:	49 63 c4             	movslq %r12d,%rax
   1476f:	41 83 c4 01          	add    $0x1,%r12d
   14773:	c6 04 02 13          	movb   $0x13,(%rdx,%rax,1)
   14777:	e9 30 fe ff ff       	jmp    145ac <__find_arguments+0x8c>
   1477c:	0f 1f 40 00          	nopl   0x0(%rax)
   14780:	41 39 c4             	cmp    %eax,%r12d
   14783:	0f 8d ae 00 00 00    	jge    14837 <__find_arguments+0x317>
   14789:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   1478e:	49 63 c4             	movslq %r12d,%rax
   14791:	41 83 c4 01          	add    $0x1,%r12d
   14795:	c6 04 02 11          	movb   $0x11,(%rdx,%rax,1)
   14799:	e9 0e fe ff ff       	jmp    145ac <__find_arguments+0x8c>
   1479e:	66 90                	xchg   %ax,%ax
   147a0:	85 c0                	test   %eax,%eax
   147a2:	0f 85 04 fe ff ff    	jne    145ac <__find_arguments+0x8c>
   147a8:	e9 16 fe ff ff       	jmp    145c3 <__find_arguments+0xa3>
   147ad:	0f 1f 00             	nopl   (%rax)
   147b0:	45 39 e5             	cmp    %r12d,%r13d
   147b3:	8b 44 24 38          	mov    0x38(%rsp),%eax
   147b7:	45 0f 4c ec          	cmovl  %r12d,%r13d
   147bb:	83 e1 08             	and    $0x8,%ecx
   147be:	74 29                	je     147e9 <__find_arguments+0x2c9>
   147c0:	41 39 c4             	cmp    %eax,%r12d
   147c3:	0f 8d a7 04 00 00    	jge    14c70 <__find_arguments+0x750>
   147c9:	41 8d 54 24 01       	lea    0x1(%r12),%edx
   147ce:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   147d3:	4d 63 e4             	movslq %r12d,%r12
   147d6:	41 39 d5             	cmp    %edx,%r13d
   147d9:	42 c6 04 20 0e       	movb   $0xe,(%rax,%r12,1)
   147de:	44 0f 4c ea          	cmovl  %edx,%r13d
   147e2:	8b 44 24 38          	mov    0x38(%rsp),%eax
   147e6:	41 89 d4             	mov    %edx,%r12d
   147e9:	44 39 e0             	cmp    %r12d,%eax
   147ec:	0f 8e 90 06 00 00    	jle    14e82 <__find_arguments+0x962>
   147f2:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   147f7:	49 63 c4             	movslq %r12d,%rax
   147fa:	41 83 c4 01          	add    $0x1,%r12d
   147fe:	c6 04 02 0d          	movb   $0xd,(%rdx,%rax,1)
   14802:	e9 a5 fd ff ff       	jmp    145ac <__find_arguments+0x8c>
   14807:	f6 c5 02             	test   $0x2,%ch
   1480a:	0f 85 70 ff ff ff    	jne    14780 <__find_arguments+0x260>
   14810:	f6 c5 04             	test   $0x4,%ch
   14813:	0f 84 df 03 00 00    	je     14bf8 <__find_arguments+0x6d8>
   14819:	41 39 c4             	cmp    %eax,%r12d
   1481c:	0f 8d de 08 00 00    	jge    15100 <__find_arguments+0xbe0>
   14822:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   14827:	49 63 c4             	movslq %r12d,%rax
   1482a:	41 83 c4 01          	add    $0x1,%r12d
   1482e:	c6 04 02 14          	movb   $0x14,(%rdx,%rax,1)
   14832:	e9 75 fd ff ff       	jmp    145ac <__find_arguments+0x8c>
   14837:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   1483c:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   14841:	e8 2a fc ff ff       	call   14470 <__grow_type_table>
   14846:	83 f8 ff             	cmp    $0xffffffff,%eax
   14849:	0f 84 41 fe ff ff    	je     14690 <__find_arguments+0x170>
   1484f:	e9 35 ff ff ff       	jmp    14789 <__find_arguments+0x269>
   14854:	0f 1f 40 00          	nopl   0x0(%rax)
   14858:	41 0f be 07          	movsbl (%r15),%eax
   1485c:	49 8d 57 01          	lea    0x1(%r15),%rdx
   14860:	83 f8 2a             	cmp    $0x2a,%eax
   14863:	75 12                	jne    14877 <__find_arguments+0x357>
   14865:	e9 1f 09 00 00       	jmp    15189 <__find_arguments+0xc69>
   1486a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14870:	0f be 02             	movsbl (%rdx),%eax
   14873:	48 83 c2 01          	add    $0x1,%rdx
   14877:	8d 70 d0             	lea    -0x30(%rax),%esi
   1487a:	83 fe 09             	cmp    $0x9,%esi
   1487d:	76 f1                	jbe    14870 <__find_arguments+0x350>
   1487f:	49 89 d7             	mov    %rdx,%r15
   14882:	e9 a9 fd ff ff       	jmp    14630 <__find_arguments+0x110>
   14887:	45 39 e5             	cmp    %r12d,%r13d
   1488a:	8b 44 24 38          	mov    0x38(%rsp),%eax
   1488e:	45 0f 4c ec          	cmovl  %r12d,%r13d
   14892:	83 e1 10             	and    $0x10,%ecx
   14895:	74 29                	je     148c0 <__find_arguments+0x3a0>
   14897:	41 39 c4             	cmp    %eax,%r12d
   1489a:	0f 8d 38 04 00 00    	jge    14cd8 <__find_arguments+0x7b8>
   148a0:	41 8d 54 24 01       	lea    0x1(%r12),%edx
   148a5:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   148aa:	4d 63 e4             	movslq %r12d,%r12
   148ad:	41 39 d5             	cmp    %edx,%r13d
   148b0:	42 c6 04 20 1b       	movb   $0x1b,(%rax,%r12,1)
   148b5:	44 0f 4c ea          	cmovl  %edx,%r13d
   148b9:	8b 44 24 38          	mov    0x38(%rsp),%eax
   148bd:	41 89 d4             	mov    %edx,%r12d
   148c0:	44 39 e0             	cmp    %r12d,%eax
   148c3:	0f 8e 75 05 00 00    	jle    14e3e <__find_arguments+0x91e>
   148c9:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   148ce:	49 63 c4             	movslq %r12d,%rax
   148d1:	41 83 c4 01          	add    $0x1,%r12d
   148d5:	c6 04 02 04          	movb   $0x4,(%rdx,%rax,1)
   148d9:	e9 ce fc ff ff       	jmp    145ac <__find_arguments+0x8c>
   148de:	41 0f be 07          	movsbl (%r15),%eax
   148e2:	80 cd 02             	or     $0x2,%ch
   148e5:	e9 42 fd ff ff       	jmp    1462c <__find_arguments+0x10c>
   148ea:	41 0f be 07          	movsbl (%r15),%eax
   148ee:	83 c9 08             	or     $0x8,%ecx
   148f1:	e9 36 fd ff ff       	jmp    1462c <__find_arguments+0x10c>
   148f6:	41 0f be 17          	movsbl (%r15),%edx
   148fa:	4d 89 f9             	mov    %r15,%r9
   148fd:	45 31 d2             	xor    %r10d,%r10d
   14900:	8d 72 d0             	lea    -0x30(%rdx),%esi
   14903:	89 d0                	mov    %edx,%eax
   14905:	83 fe 09             	cmp    $0x9,%esi
   14908:	76 2e                	jbe    14938 <__find_arguments+0x418>
   1490a:	e9 f1 04 00 00       	jmp    14e00 <__find_arguments+0x8e0>
   1490f:	90                   	nop
   14910:	49 83 c1 01          	add    $0x1,%r9
   14914:	44 8d 54 02 d0       	lea    -0x30(%rdx,%rax,1),%r10d
   14919:	41 0f be 11          	movsbl (%r9),%edx
   1491d:	8d 72 d0             	lea    -0x30(%rdx),%esi
   14920:	89 d0                	mov    %edx,%eax
   14922:	83 fe 09             	cmp    $0x9,%esi
   14925:	0f 87 d5 04 00 00    	ja     14e00 <__find_arguments+0x8e0>
   1492b:	41 81 fa cc cc cc 0c 	cmp    $0xccccccc,%r10d
   14932:	0f 8f 58 fd ff ff    	jg     14690 <__find_arguments+0x170>
   14938:	43 8d 04 92          	lea    (%r10,%r10,4),%eax
   1493c:	44 89 c6             	mov    %r8d,%esi
   1493f:	01 c0                	add    %eax,%eax
   14941:	29 d6                	sub    %edx,%esi
   14943:	39 c6                	cmp    %eax,%esi
   14945:	7d c9                	jge    14910 <__find_arguments+0x3f0>
   14947:	e9 44 fd ff ff       	jmp    14690 <__find_arguments+0x170>
   1494c:	45 39 e5             	cmp    %r12d,%r13d
   1494f:	8b 44 24 38          	mov    0x38(%rsp),%eax
   14953:	45 0f 4c ec          	cmovl  %r12d,%r13d
   14957:	83 e1 10             	and    $0x10,%ecx
   1495a:	74 29                	je     14985 <__find_arguments+0x465>
   1495c:	41 39 c4             	cmp    %eax,%r12d
   1495f:	0f 8d 53 03 00 00    	jge    14cb8 <__find_arguments+0x798>
   14965:	41 8d 54 24 01       	lea    0x1(%r12),%edx
   1496a:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   1496f:	4d 63 e4             	movslq %r12d,%r12
   14972:	41 39 d5             	cmp    %edx,%r13d
   14975:	42 c6 04 20 1c       	movb   $0x1c,(%rax,%r12,1)
   1497a:	44 0f 4c ea          	cmovl  %edx,%r13d
   1497e:	8b 44 24 38          	mov    0x38(%rsp),%eax
   14982:	41 89 d4             	mov    %edx,%r12d
   14985:	44 39 e0             	cmp    %r12d,%eax
   14988:	0f 8e 12 05 00 00    	jle    14ea0 <__find_arguments+0x980>
   1498e:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   14993:	49 63 c4             	movslq %r12d,%rax
   14996:	41 83 c4 01          	add    $0x1,%r12d
   1499a:	c6 04 02 0f          	movb   $0xf,(%rdx,%rax,1)
   1499e:	e9 09 fc ff ff       	jmp    145ac <__find_arguments+0x8c>
   149a3:	41 0f be 07          	movsbl (%r15),%eax
   149a7:	83 c9 20             	or     $0x20,%ecx
   149aa:	e9 7d fc ff ff       	jmp    1462c <__find_arguments+0x10c>
   149af:	44 39 64 24 38       	cmp    %r12d,0x38(%rsp)
   149b4:	0f 8e 07 04 00 00    	jle    14dc1 <__find_arguments+0x8a1>
   149ba:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   149bf:	45 39 e5             	cmp    %r12d,%r13d
   149c2:	49 63 c4             	movslq %r12d,%rax
   149c5:	45 0f 4c ec          	cmovl  %r12d,%r13d
   149c9:	41 83 c4 01          	add    $0x1,%r12d
   149cd:	c6 04 02 10          	movb   $0x10,(%rdx,%rax,1)
   149d1:	e9 d6 fb ff ff       	jmp    145ac <__find_arguments+0x8c>
   149d6:	41 0f be 07          	movsbl (%r15),%eax
   149da:	80 cd 04             	or     $0x4,%ch
   149dd:	e9 4a fc ff ff       	jmp    1462c <__find_arguments+0x10c>
   149e2:	45 39 e5             	cmp    %r12d,%r13d
   149e5:	8b 44 24 38          	mov    0x38(%rsp),%eax
   149e9:	45 0f 4c ec          	cmovl  %r12d,%r13d
   149ed:	f6 c1 20             	test   $0x20,%cl
   149f0:	74 29                	je     14a1b <__find_arguments+0x4fb>
   149f2:	41 39 c4             	cmp    %eax,%r12d
   149f5:	0f 8d 95 02 00 00    	jge    14c90 <__find_arguments+0x770>
   149fb:	41 8d 54 24 01       	lea    0x1(%r12),%edx
   14a00:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   14a05:	4d 63 e4             	movslq %r12d,%r12
   14a08:	41 39 d5             	cmp    %edx,%r13d
   14a0b:	42 c6 04 20 0c       	movb   $0xc,(%rax,%r12,1)
   14a10:	44 0f 4c ea          	cmovl  %edx,%r13d
   14a14:	8b 44 24 38          	mov    0x38(%rsp),%eax
   14a18:	41 89 d4             	mov    %edx,%r12d
   14a1b:	f6 c1 10             	test   $0x10,%cl
   14a1e:	74 29                	je     14a49 <__find_arguments+0x529>
   14a20:	44 39 e0             	cmp    %r12d,%eax
   14a23:	0f 8e 1d 02 00 00    	jle    14c46 <__find_arguments+0x726>
   14a29:	41 8d 54 24 01       	lea    0x1(%r12),%edx
   14a2e:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   14a33:	4d 63 e4             	movslq %r12d,%r12
   14a36:	41 39 d5             	cmp    %edx,%r13d
   14a39:	42 c6 04 20 09       	movb   $0x9,(%rax,%r12,1)
   14a3e:	44 0f 4c ea          	cmovl  %edx,%r13d
   14a42:	8b 44 24 38          	mov    0x38(%rsp),%eax
   14a46:	41 89 d4             	mov    %edx,%r12d
   14a49:	f6 c1 40             	test   $0x40,%cl
   14a4c:	74 29                	je     14a77 <__find_arguments+0x557>
   14a4e:	44 39 e0             	cmp    %r12d,%eax
   14a51:	0f 8e c1 02 00 00    	jle    14d18 <__find_arguments+0x7f8>
   14a57:	41 8d 54 24 01       	lea    0x1(%r12),%edx
   14a5c:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   14a61:	4d 63 e4             	movslq %r12d,%r12
   14a64:	41 39 d5             	cmp    %edx,%r13d
   14a67:	42 c6 04 20 03       	movb   $0x3,(%rax,%r12,1)
   14a6c:	44 0f 4c ea          	cmovl  %edx,%r13d
   14a70:	8b 44 24 38          	mov    0x38(%rsp),%eax
   14a74:	41 89 d4             	mov    %edx,%r12d
   14a77:	f6 c5 02             	test   $0x2,%ch
   14a7a:	74 29                	je     14aa5 <__find_arguments+0x585>
   14a7c:	44 39 e0             	cmp    %r12d,%eax
   14a7f:	0f 8e bb 02 00 00    	jle    14d40 <__find_arguments+0x820>
   14a85:	41 8d 54 24 01       	lea    0x1(%r12),%edx
   14a8a:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   14a8f:	4d 63 e4             	movslq %r12d,%r12
   14a92:	41 39 d5             	cmp    %edx,%r13d
   14a95:	42 c6 04 20 12       	movb   $0x12,(%rax,%r12,1)
   14a9a:	44 0f 4c ea          	cmovl  %edx,%r13d
   14a9e:	8b 44 24 38          	mov    0x38(%rsp),%eax
   14aa2:	41 89 d4             	mov    %edx,%r12d
   14aa5:	f6 c5 04             	test   $0x4,%ch
   14aa8:	74 29                	je     14ad3 <__find_arguments+0x5b3>
   14aaa:	44 39 e0             	cmp    %r12d,%eax
   14aad:	0f 8e d5 02 00 00    	jle    14d88 <__find_arguments+0x868>
   14ab3:	41 8d 54 24 01       	lea    0x1(%r12),%edx
   14ab8:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   14abd:	4d 63 e4             	movslq %r12d,%r12
   14ac0:	41 39 d5             	cmp    %edx,%r13d
   14ac3:	42 c6 04 20 15       	movb   $0x15,(%rax,%r12,1)
   14ac8:	44 0f 4c ea          	cmovl  %edx,%r13d
   14acc:	8b 44 24 38          	mov    0x38(%rsp),%eax
   14ad0:	41 89 d4             	mov    %edx,%r12d
   14ad3:	80 e5 10             	and    $0x10,%ch
   14ad6:	74 29                	je     14b01 <__find_arguments+0x5e1>
   14ad8:	44 39 e0             	cmp    %r12d,%eax
   14adb:	0f 8e 87 02 00 00    	jle    14d68 <__find_arguments+0x848>
   14ae1:	41 8d 54 24 01       	lea    0x1(%r12),%edx
   14ae6:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   14aeb:	4d 63 e4             	movslq %r12d,%r12
   14aee:	41 39 d5             	cmp    %edx,%r13d
   14af1:	42 c6 04 20 18       	movb   $0x18,(%rax,%r12,1)
   14af6:	44 0f 4c ea          	cmovl  %edx,%r13d
   14afa:	8b 44 24 38          	mov    0x38(%rsp),%eax
   14afe:	41 89 d4             	mov    %edx,%r12d
   14b01:	44 39 e0             	cmp    %r12d,%eax
   14b04:	0f 8e d6 03 00 00    	jle    14ee0 <__find_arguments+0x9c0>
   14b0a:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   14b0f:	49 63 c4             	movslq %r12d,%rax
   14b12:	41 83 c4 01          	add    $0x1,%r12d
   14b16:	c6 04 02 06          	movb   $0x6,(%rdx,%rax,1)
   14b1a:	e9 8d fa ff ff       	jmp    145ac <__find_arguments+0x8c>
   14b1f:	41 0f be 07          	movsbl (%r15),%eax
   14b23:	3c 6c                	cmp    $0x6c,%al
   14b25:	0f 84 46 03 00 00    	je     14e71 <__find_arguments+0x951>
   14b2b:	83 c9 10             	or     $0x10,%ecx
   14b2e:	e9 f9 fa ff ff       	jmp    1462c <__find_arguments+0x10c>
   14b33:	41 0f be 07          	movsbl (%r15),%eax
   14b37:	80 cd 10             	or     $0x10,%ch
   14b3a:	e9 ed fa ff ff       	jmp    1462c <__find_arguments+0x10c>
   14b3f:	41 0f be 07          	movsbl (%r15),%eax
   14b43:	3c 68                	cmp    $0x68,%al
   14b45:	0f 84 15 03 00 00    	je     14e60 <__find_arguments+0x940>
   14b4b:	83 c9 40             	or     $0x40,%ecx
   14b4e:	e9 d9 fa ff ff       	jmp    1462c <__find_arguments+0x10c>
   14b53:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   14b58:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   14b5d:	e8 0e f9 ff ff       	call   14470 <__grow_type_table>
   14b62:	83 f8 ff             	cmp    $0xffffffff,%eax
   14b65:	0f 84 25 fb ff ff    	je     14690 <__find_arguments+0x170>
   14b6b:	e9 95 fb ff ff       	jmp    14705 <__find_arguments+0x1e5>
   14b70:	f6 c1 20             	test   $0x20,%cl
   14b73:	0f 84 a6 00 00 00    	je     14c1f <__find_arguments+0x6ff>
   14b79:	41 39 c4             	cmp    %eax,%r12d
   14b7c:	0f 8d 5e 05 00 00    	jge    150e0 <__find_arguments+0xbc0>
   14b82:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   14b87:	49 63 c4             	movslq %r12d,%rax
   14b8a:	41 83 c4 01          	add    $0x1,%r12d
   14b8e:	c6 04 02 0b          	movb   $0xb,(%rdx,%rax,1)
   14b92:	e9 15 fa ff ff       	jmp    145ac <__find_arguments+0x8c>
   14b97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   14b9e:	00 00 
   14ba0:	44 8b 16             	mov    (%rsi),%r10d
   14ba3:	41 83 fa 2f          	cmp    $0x2f,%r10d
   14ba7:	0f 87 03 02 00 00    	ja     14db0 <__find_arguments+0x890>
   14bad:	45 89 d1             	mov    %r10d,%r9d
   14bb0:	41 83 c2 08          	add    $0x8,%r10d
   14bb4:	4c 03 4e 10          	add    0x10(%rsi),%r9
   14bb8:	44 89 16             	mov    %r10d,(%rsi)
   14bbb:	4d 8b 09             	mov    (%r9),%r9
   14bbe:	4c 89 08             	mov    %r9,(%rax)
   14bc1:	83 c2 01             	add    $0x1,%edx
   14bc4:	41 39 d5             	cmp    %edx,%r13d
   14bc7:	0f 8d 2b fa ff ff    	jge    145f8 <__find_arguments+0xd8>
   14bcd:	45 31 e4             	xor    %r12d,%r12d
   14bd0:	e9 d1 fa ff ff       	jmp    146a6 <__find_arguments+0x186>
   14bd5:	44 8b 16             	mov    (%rsi),%r10d
   14bd8:	41 83 fa 2f          	cmp    $0x2f,%r10d
   14bdc:	0f 87 4e 03 00 00    	ja     14f30 <__find_arguments+0xa10>
   14be2:	45 89 d1             	mov    %r10d,%r9d
   14be5:	41 83 c2 08          	add    $0x8,%r10d
   14be9:	4c 03 4e 10          	add    0x10(%rsi),%r9
   14bed:	44 89 16             	mov    %r10d,(%rsi)
   14bf0:	45 8b 09             	mov    (%r9),%r9d
   14bf3:	44 89 08             	mov    %r9d,(%rax)
   14bf6:	eb c9                	jmp    14bc1 <__find_arguments+0x6a1>
   14bf8:	f6 c1 20             	test   $0x20,%cl
   14bfb:	0f 84 40 03 00 00    	je     14f41 <__find_arguments+0xa21>
   14c01:	41 39 c4             	cmp    %eax,%r12d
   14c04:	0f 8d 6e 04 00 00    	jge    15078 <__find_arguments+0xb58>
   14c0a:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   14c0f:	49 63 c4             	movslq %r12d,%rax
   14c12:	41 83 c4 01          	add    $0x1,%r12d
   14c16:	c6 04 02 0a          	movb   $0xa,(%rdx,%rax,1)
   14c1a:	e9 8d f9 ff ff       	jmp    145ac <__find_arguments+0x8c>
   14c1f:	f6 c1 10             	test   $0x10,%cl
   14c22:	0f 84 49 03 00 00    	je     14f71 <__find_arguments+0xa51>
   14c28:	41 39 c4             	cmp    %eax,%r12d
   14c2b:	0f 8d 23 04 00 00    	jge    15054 <__find_arguments+0xb34>
   14c31:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   14c36:	49 63 c4             	movslq %r12d,%rax
   14c39:	41 83 c4 01          	add    $0x1,%r12d
   14c3d:	c6 04 02 08          	movb   $0x8,(%rdx,%rax,1)
   14c41:	e9 66 f9 ff ff       	jmp    145ac <__find_arguments+0x8c>
   14c46:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   14c4b:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   14c50:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
   14c54:	e8 17 f8 ff ff       	call   14470 <__grow_type_table>
   14c59:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
   14c5d:	83 f8 ff             	cmp    $0xffffffff,%eax
   14c60:	0f 84 2a fa ff ff    	je     14690 <__find_arguments+0x170>
   14c66:	e9 be fd ff ff       	jmp    14a29 <__find_arguments+0x509>
   14c6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14c70:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   14c75:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   14c7a:	e8 f1 f7 ff ff       	call   14470 <__grow_type_table>
   14c7f:	83 f8 ff             	cmp    $0xffffffff,%eax
   14c82:	0f 84 08 fa ff ff    	je     14690 <__find_arguments+0x170>
   14c88:	e9 3c fb ff ff       	jmp    147c9 <__find_arguments+0x2a9>
   14c8d:	0f 1f 00             	nopl   (%rax)
   14c90:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   14c95:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   14c9a:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
   14c9e:	e8 cd f7 ff ff       	call   14470 <__grow_type_table>
   14ca3:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
   14ca7:	83 f8 ff             	cmp    $0xffffffff,%eax
   14caa:	0f 84 e0 f9 ff ff    	je     14690 <__find_arguments+0x170>
   14cb0:	e9 46 fd ff ff       	jmp    149fb <__find_arguments+0x4db>
   14cb5:	0f 1f 00             	nopl   (%rax)
   14cb8:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   14cbd:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   14cc2:	e8 a9 f7 ff ff       	call   14470 <__grow_type_table>
   14cc7:	83 f8 ff             	cmp    $0xffffffff,%eax
   14cca:	0f 84 c0 f9 ff ff    	je     14690 <__find_arguments+0x170>
   14cd0:	e9 90 fc ff ff       	jmp    14965 <__find_arguments+0x445>
   14cd5:	0f 1f 00             	nopl   (%rax)
   14cd8:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   14cdd:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   14ce2:	e8 89 f7 ff ff       	call   14470 <__grow_type_table>
   14ce7:	83 f8 ff             	cmp    $0xffffffff,%eax
   14cea:	0f 84 a0 f9 ff ff    	je     14690 <__find_arguments+0x170>
   14cf0:	e9 ab fb ff ff       	jmp    148a0 <__find_arguments+0x380>
   14cf5:	0f 1f 00             	nopl   (%rax)
   14cf8:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   14cfd:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   14d02:	e8 69 f7 ff ff       	call   14470 <__grow_type_table>
   14d07:	83 f8 ff             	cmp    $0xffffffff,%eax
   14d0a:	0f 84 80 f9 ff ff    	je     14690 <__find_arguments+0x170>
   14d10:	e9 52 fa ff ff       	jmp    14767 <__find_arguments+0x247>
   14d15:	0f 1f 00             	nopl   (%rax)
   14d18:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   14d1d:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   14d22:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
   14d26:	e8 45 f7 ff ff       	call   14470 <__grow_type_table>
   14d2b:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
   14d2f:	83 f8 ff             	cmp    $0xffffffff,%eax
   14d32:	0f 84 58 f9 ff ff    	je     14690 <__find_arguments+0x170>
   14d38:	e9 1a fd ff ff       	jmp    14a57 <__find_arguments+0x537>
   14d3d:	0f 1f 00             	nopl   (%rax)
   14d40:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   14d45:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   14d4a:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
   14d4e:	e8 1d f7 ff ff       	call   14470 <__grow_type_table>
   14d53:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
   14d57:	83 f8 ff             	cmp    $0xffffffff,%eax
   14d5a:	0f 84 30 f9 ff ff    	je     14690 <__find_arguments+0x170>
   14d60:	e9 20 fd ff ff       	jmp    14a85 <__find_arguments+0x565>
   14d65:	0f 1f 00             	nopl   (%rax)
   14d68:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   14d6d:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   14d72:	e8 f9 f6 ff ff       	call   14470 <__grow_type_table>
   14d77:	83 f8 ff             	cmp    $0xffffffff,%eax
   14d7a:	0f 84 10 f9 ff ff    	je     14690 <__find_arguments+0x170>
   14d80:	e9 5c fd ff ff       	jmp    14ae1 <__find_arguments+0x5c1>
   14d85:	0f 1f 00             	nopl   (%rax)
   14d88:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   14d8d:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   14d92:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
   14d96:	e8 d5 f6 ff ff       	call   14470 <__grow_type_table>
   14d9b:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
   14d9f:	83 f8 ff             	cmp    $0xffffffff,%eax
   14da2:	0f 84 e8 f8 ff ff    	je     14690 <__find_arguments+0x170>
   14da8:	e9 06 fd ff ff       	jmp    14ab3 <__find_arguments+0x593>
   14dad:	0f 1f 00             	nopl   (%rax)
   14db0:	4c 8b 4e 08          	mov    0x8(%rsi),%r9
   14db4:	4d 8d 51 08          	lea    0x8(%r9),%r10
   14db8:	4c 89 56 08          	mov    %r10,0x8(%rsi)
   14dbc:	e9 fa fd ff ff       	jmp    14bbb <__find_arguments+0x69b>
   14dc1:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   14dc6:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   14dcb:	e8 a0 f6 ff ff       	call   14470 <__grow_type_table>
   14dd0:	83 f8 ff             	cmp    $0xffffffff,%eax
   14dd3:	0f 84 b7 f8 ff ff    	je     14690 <__find_arguments+0x170>
   14dd9:	e9 dc fb ff ff       	jmp    149ba <__find_arguments+0x49a>
   14dde:	66 90                	xchg   %ax,%ax
   14de0:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   14de5:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   14dea:	e8 81 f6 ff ff       	call   14470 <__grow_type_table>
   14def:	83 f8 ff             	cmp    $0xffffffff,%eax
   14df2:	0f 84 98 f8 ff ff    	je     14690 <__find_arguments+0x170>
   14df8:	e9 3d f9 ff ff       	jmp    1473a <__find_arguments+0x21a>
   14dfd:	0f 1f 00             	nopl   (%rax)
   14e00:	8b 54 24 38          	mov    0x38(%rsp),%edx
   14e04:	3c 24                	cmp    $0x24,%al
   14e06:	0f 84 95 01 00 00    	je     14fa1 <__find_arguments+0xa81>
   14e0c:	41 39 d4             	cmp    %edx,%r12d
   14e0f:	0f 8d 0b 03 00 00    	jge    15120 <__find_arguments+0xc00>
   14e15:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   14e1a:	49 63 c4             	movslq %r12d,%rax
   14e1d:	45 39 e5             	cmp    %r12d,%r13d
   14e20:	45 0f 4c ec          	cmovl  %r12d,%r13d
   14e24:	41 83 c4 01          	add    $0x1,%r12d
   14e28:	c6 04 02 04          	movb   $0x4,(%rdx,%rax,1)
   14e2c:	41 0f be 07          	movsbl (%r15),%eax
   14e30:	e9 f7 f7 ff ff       	jmp    1462c <__find_arguments+0x10c>
   14e35:	41 39 c4             	cmp    %eax,%r12d
   14e38:	0f 8c 8b fa ff ff    	jl     148c9 <__find_arguments+0x3a9>
   14e3e:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   14e43:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   14e48:	e8 23 f6 ff ff       	call   14470 <__grow_type_table>
   14e4d:	83 f8 ff             	cmp    $0xffffffff,%eax
   14e50:	0f 84 3a f8 ff ff    	je     14690 <__find_arguments+0x170>
   14e56:	e9 6e fa ff ff       	jmp    148c9 <__find_arguments+0x3a9>
   14e5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14e60:	41 0f be 47 01       	movsbl 0x1(%r15),%eax
   14e65:	80 cd 08             	or     $0x8,%ch
   14e68:	49 83 c7 01          	add    $0x1,%r15
   14e6c:	e9 bb f7 ff ff       	jmp    1462c <__find_arguments+0x10c>
   14e71:	41 0f be 47 01       	movsbl 0x1(%r15),%eax
   14e76:	83 c9 20             	or     $0x20,%ecx
   14e79:	49 83 c7 01          	add    $0x1,%r15
   14e7d:	e9 aa f7 ff ff       	jmp    1462c <__find_arguments+0x10c>
   14e82:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   14e87:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   14e8c:	e8 df f5 ff ff       	call   14470 <__grow_type_table>
   14e91:	83 f8 ff             	cmp    $0xffffffff,%eax
   14e94:	0f 84 f6 f7 ff ff    	je     14690 <__find_arguments+0x170>
   14e9a:	e9 53 f9 ff ff       	jmp    147f2 <__find_arguments+0x2d2>
   14e9f:	90                   	nop
   14ea0:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   14ea5:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   14eaa:	e8 c1 f5 ff ff       	call   14470 <__grow_type_table>
   14eaf:	83 f8 ff             	cmp    $0xffffffff,%eax
   14eb2:	0f 84 d8 f7 ff ff    	je     14690 <__find_arguments+0x170>
   14eb8:	e9 d1 fa ff ff       	jmp    1498e <__find_arguments+0x46e>
   14ebd:	0f 1f 00             	nopl   (%rax)
   14ec0:	83 f8 24             	cmp    $0x24,%eax
   14ec3:	0f 85 b6 f9 ff ff    	jne    1487f <__find_arguments+0x35f>
   14ec9:	41 0f be 47 01       	movsbl 0x1(%r15),%eax
   14ece:	41 89 f4             	mov    %esi,%r12d
   14ed1:	49 89 d7             	mov    %rdx,%r15
   14ed4:	e9 53 f7 ff ff       	jmp    1462c <__find_arguments+0x10c>
   14ed9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   14ee0:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   14ee5:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   14eea:	e8 81 f5 ff ff       	call   14470 <__grow_type_table>
   14eef:	83 f8 ff             	cmp    $0xffffffff,%eax
   14ef2:	0f 84 98 f7 ff ff    	je     14690 <__find_arguments+0x170>
   14ef8:	e9 0d fc ff ff       	jmp    14b0a <__find_arguments+0x5ea>
   14efd:	0f 1f 00             	nopl   (%rax)
   14f00:	41 8d 7d 01          	lea    0x1(%r13),%edi
   14f04:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   14f09:	48 63 ff             	movslq %edi,%rdi
   14f0c:	48 c1 e7 04          	shl    $0x4,%rdi
   14f10:	48 89 38             	mov    %rdi,(%rax)
   14f13:	e8 18 bb ff ff       	call   10a30 <dlmalloc>
   14f18:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   14f1d:	48 89 07             	mov    %rax,(%rdi)
   14f20:	48 85 c0             	test   %rax,%rax
   14f23:	0f 85 ad f6 ff ff    	jne    145d6 <__find_arguments+0xb6>
   14f29:	e9 62 f7 ff ff       	jmp    14690 <__find_arguments+0x170>
   14f2e:	66 90                	xchg   %ax,%ax
   14f30:	4c 8b 4e 08          	mov    0x8(%rsi),%r9
   14f34:	4d 8d 51 08          	lea    0x8(%r9),%r10
   14f38:	4c 89 56 08          	mov    %r10,0x8(%rsi)
   14f3c:	e9 af fc ff ff       	jmp    14bf0 <__find_arguments+0x6d0>
   14f41:	f6 c1 10             	test   $0x10,%cl
   14f44:	0f 85 ec 00 00 00    	jne    15036 <__find_arguments+0xb16>
   14f4a:	f6 c1 40             	test   $0x40,%cl
   14f4d:	0f 84 b5 02 00 00    	je     15208 <__find_arguments+0xce8>
   14f53:	41 39 c4             	cmp    %eax,%r12d
   14f56:	0f 8d 74 03 00 00    	jge    152d0 <__find_arguments+0xdb0>
   14f5c:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   14f61:	49 63 c4             	movslq %r12d,%rax
   14f64:	41 83 c4 01          	add    $0x1,%r12d
   14f68:	c6 04 02 01          	movb   $0x1,(%rdx,%rax,1)
   14f6c:	e9 3b f6 ff ff       	jmp    145ac <__find_arguments+0x8c>
   14f71:	f6 c1 40             	test   $0x40,%cl
   14f74:	0f 85 9e 00 00 00    	jne    15018 <__find_arguments+0xaf8>
   14f7a:	80 e5 08             	and    $0x8,%ch
   14f7d:	0f 84 e8 01 00 00    	je     1516b <__find_arguments+0xc4b>
   14f83:	41 39 c4             	cmp    %eax,%r12d
   14f86:	0f 8d 24 03 00 00    	jge    152b0 <__find_arguments+0xd90>
   14f8c:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   14f91:	49 63 c4             	movslq %r12d,%rax
   14f94:	41 83 c4 01          	add    $0x1,%r12d
   14f98:	c6 04 02 1a          	movb   $0x1a,(%rdx,%rax,1)
   14f9c:	e9 0b f6 ff ff       	jmp    145ac <__find_arguments+0x8c>
   14fa1:	45 39 d5             	cmp    %r10d,%r13d
   14fa4:	45 0f 4c ea          	cmovl  %r10d,%r13d
   14fa8:	44 39 d2             	cmp    %r10d,%edx
   14fab:	0f 8e e7 00 00 00    	jle    15098 <__find_arguments+0xb78>
   14fb1:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   14fb6:	4d 63 d2             	movslq %r10d,%r10
   14fb9:	4d 8d 79 01          	lea    0x1(%r9),%r15
   14fbd:	42 c6 04 10 04       	movb   $0x4,(%rax,%r10,1)
   14fc2:	41 0f be 41 01       	movsbl 0x1(%r9),%eax
   14fc7:	e9 60 f6 ff ff       	jmp    1462c <__find_arguments+0x10c>
   14fcc:	44 8b 56 04          	mov    0x4(%rsi),%r10d
   14fd0:	41 81 fa af 00 00 00 	cmp    $0xaf,%r10d
   14fd7:	0f 87 73 01 00 00    	ja     15150 <__find_arguments+0xc30>
   14fdd:	45 89 d1             	mov    %r10d,%r9d
   14fe0:	41 83 c2 10          	add    $0x10,%r10d
   14fe4:	4c 03 4e 10          	add    0x10(%rsi),%r9
   14fe8:	44 89 56 04          	mov    %r10d,0x4(%rsi)
   14fec:	f2 41 0f 10 01       	movsd  (%r9),%xmm0
   14ff1:	f2 0f 11 00          	movsd  %xmm0,(%rax)
   14ff5:	e9 c7 fb ff ff       	jmp    14bc1 <__find_arguments+0x6a1>
   14ffa:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
   14ffe:	4c 8d 4b 0f          	lea    0xf(%rbx),%r9
   15002:	49 83 e1 f0          	and    $0xfffffffffffffff0,%r9
   15006:	4d 8d 51 10          	lea    0x10(%r9),%r10
   1500a:	4c 89 56 08          	mov    %r10,0x8(%rsi)
   1500e:	41 db 29             	fldt   (%r9)
   15011:	db 38                	fstpt  (%rax)
   15013:	e9 a9 fb ff ff       	jmp    14bc1 <__find_arguments+0x6a1>
   15018:	41 39 c4             	cmp    %eax,%r12d
   1501b:	0f 8d 0e 02 00 00    	jge    1522f <__find_arguments+0xd0f>
   15021:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   15026:	49 63 c4             	movslq %r12d,%rax
   15029:	41 83 c4 01          	add    $0x1,%r12d
   1502d:	c6 04 02 02          	movb   $0x2,(%rdx,%rax,1)
   15031:	e9 76 f5 ff ff       	jmp    145ac <__find_arguments+0x8c>
   15036:	41 39 c4             	cmp    %eax,%r12d
   15039:	0f 8d a5 01 00 00    	jge    151e4 <__find_arguments+0xcc4>
   1503f:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   15044:	49 63 c4             	movslq %r12d,%rax
   15047:	41 83 c4 01          	add    $0x1,%r12d
   1504b:	c6 04 02 07          	movb   $0x7,(%rdx,%rax,1)
   1504f:	e9 58 f5 ff ff       	jmp    145ac <__find_arguments+0x8c>
   15054:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   15059:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   1505e:	e8 0d f4 ff ff       	call   14470 <__grow_type_table>
   15063:	83 f8 ff             	cmp    $0xffffffff,%eax
   15066:	0f 84 24 f6 ff ff    	je     14690 <__find_arguments+0x170>
   1506c:	e9 c0 fb ff ff       	jmp    14c31 <__find_arguments+0x711>
   15071:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15078:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   1507d:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   15082:	e8 e9 f3 ff ff       	call   14470 <__grow_type_table>
   15087:	83 f8 ff             	cmp    $0xffffffff,%eax
   1508a:	0f 84 00 f6 ff ff    	je     14690 <__find_arguments+0x170>
   15090:	e9 75 fb ff ff       	jmp    14c0a <__find_arguments+0x6ea>
   15095:	0f 1f 00             	nopl   (%rax)
   15098:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   1509d:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   150a2:	89 4c 24 2c          	mov    %ecx,0x2c(%rsp)
   150a6:	44 89 54 24 28       	mov    %r10d,0x28(%rsp)
   150ab:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
   150b0:	e8 bb f3 ff ff       	call   14470 <__grow_type_table>
   150b5:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   150ba:	44 8b 54 24 28       	mov    0x28(%rsp),%r10d
   150bf:	41 b8 2f 00 00 80    	mov    $0x8000002f,%r8d
   150c5:	83 f8 ff             	cmp    $0xffffffff,%eax
   150c8:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
   150cc:	0f 84 be f5 ff ff    	je     14690 <__find_arguments+0x170>
   150d2:	e9 da fe ff ff       	jmp    14fb1 <__find_arguments+0xa91>
   150d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   150de:	00 00 
   150e0:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   150e5:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   150ea:	e8 81 f3 ff ff       	call   14470 <__grow_type_table>
   150ef:	83 f8 ff             	cmp    $0xffffffff,%eax
   150f2:	0f 84 98 f5 ff ff    	je     14690 <__find_arguments+0x170>
   150f8:	e9 85 fa ff ff       	jmp    14b82 <__find_arguments+0x662>
   150fd:	0f 1f 00             	nopl   (%rax)
   15100:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   15105:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   1510a:	e8 61 f3 ff ff       	call   14470 <__grow_type_table>
   1510f:	83 f8 ff             	cmp    $0xffffffff,%eax
   15112:	0f 84 78 f5 ff ff    	je     14690 <__find_arguments+0x170>
   15118:	e9 05 f7 ff ff       	jmp    14822 <__find_arguments+0x302>
   1511d:	0f 1f 00             	nopl   (%rax)
   15120:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   15125:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   1512a:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
   1512e:	e8 3d f3 ff ff       	call   14470 <__grow_type_table>
   15133:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
   15137:	41 b8 2f 00 00 80    	mov    $0x8000002f,%r8d
   1513d:	83 f8 ff             	cmp    $0xffffffff,%eax
   15140:	0f 84 4a f5 ff ff    	je     14690 <__find_arguments+0x170>
   15146:	e9 ca fc ff ff       	jmp    14e15 <__find_arguments+0x8f5>
   1514b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15150:	4c 8b 4e 08          	mov    0x8(%rsi),%r9
   15154:	4d 8d 51 08          	lea    0x8(%r9),%r10
   15158:	4c 89 56 08          	mov    %r10,0x8(%rsi)
   1515c:	e9 8b fe ff ff       	jmp    14fec <__find_arguments+0xacc>
   15161:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   15166:	e9 62 fa ff ff       	jmp    14bcd <__find_arguments+0x6ad>
   1516b:	41 39 c4             	cmp    %eax,%r12d
   1516e:	0f 8d 17 01 00 00    	jge    1528b <__find_arguments+0xd6b>
   15174:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   15179:	49 63 c4             	movslq %r12d,%rax
   1517c:	41 83 c4 01          	add    $0x1,%r12d
   15180:	c6 04 02 05          	movb   $0x5,(%rdx,%rax,1)
   15184:	e9 23 f4 ff ff       	jmp    145ac <__find_arguments+0x8c>
   15189:	41 0f be 47 01       	movsbl 0x1(%r15),%eax
   1518e:	49 89 d2             	mov    %rdx,%r10
   15191:	45 31 c9             	xor    %r9d,%r9d
   15194:	8d 78 d0             	lea    -0x30(%rax),%edi
   15197:	89 c6                	mov    %eax,%esi
   15199:	83 ff 09             	cmp    $0x9,%edi
   1519c:	76 32                	jbe    151d0 <__find_arguments+0xcb0>
   1519e:	e9 ad 00 00 00       	jmp    15250 <__find_arguments+0xd30>
   151a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   151a8:	49 83 c2 01          	add    $0x1,%r10
   151ac:	44 8d 4c 30 d0       	lea    -0x30(%rax,%rsi,1),%r9d
   151b1:	41 0f be 02          	movsbl (%r10),%eax
   151b5:	8d 78 d0             	lea    -0x30(%rax),%edi
   151b8:	89 c6                	mov    %eax,%esi
   151ba:	83 ff 09             	cmp    $0x9,%edi
   151bd:	0f 87 8d 00 00 00    	ja     15250 <__find_arguments+0xd30>
   151c3:	41 81 f9 cc cc cc 0c 	cmp    $0xccccccc,%r9d
   151ca:	0f 8f c0 f4 ff ff    	jg     14690 <__find_arguments+0x170>
   151d0:	43 8d 34 89          	lea    (%r9,%r9,4),%esi
   151d4:	44 89 c7             	mov    %r8d,%edi
   151d7:	01 f6                	add    %esi,%esi
   151d9:	29 c7                	sub    %eax,%edi
   151db:	39 f7                	cmp    %esi,%edi
   151dd:	7d c9                	jge    151a8 <__find_arguments+0xc88>
   151df:	e9 ac f4 ff ff       	jmp    14690 <__find_arguments+0x170>
   151e4:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   151e9:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   151ee:	e8 7d f2 ff ff       	call   14470 <__grow_type_table>
   151f3:	83 f8 ff             	cmp    $0xffffffff,%eax
   151f6:	0f 84 94 f4 ff ff    	je     14690 <__find_arguments+0x170>
   151fc:	e9 3e fe ff ff       	jmp    1503f <__find_arguments+0xb1f>
   15201:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15208:	80 e5 08             	and    $0x8,%ch
   1520b:	0f 84 24 fc ff ff    	je     14e35 <__find_arguments+0x915>
   15211:	41 39 c4             	cmp    %eax,%r12d
   15214:	0f 8d d8 00 00 00    	jge    152f2 <__find_arguments+0xdd2>
   1521a:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
   1521f:	49 63 c4             	movslq %r12d,%rax
   15222:	41 83 c4 01          	add    $0x1,%r12d
   15226:	c6 04 02 19          	movb   $0x19,(%rdx,%rax,1)
   1522a:	e9 7d f3 ff ff       	jmp    145ac <__find_arguments+0x8c>
   1522f:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   15234:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   15239:	e8 32 f2 ff ff       	call   14470 <__grow_type_table>
   1523e:	83 f8 ff             	cmp    $0xffffffff,%eax
   15241:	0f 84 49 f4 ff ff    	je     14690 <__find_arguments+0x170>
   15247:	e9 d5 fd ff ff       	jmp    15021 <__find_arguments+0xb01>
   1524c:	0f 1f 40 00          	nopl   0x0(%rax)
   15250:	8b 44 24 38          	mov    0x38(%rsp),%eax
   15254:	40 80 fe 24          	cmp    $0x24,%sil
   15258:	0f 84 ea 00 00 00    	je     15348 <__find_arguments+0xe28>
   1525e:	41 39 c4             	cmp    %eax,%r12d
   15261:	0f 8d a8 00 00 00    	jge    1530f <__find_arguments+0xdef>
   15267:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
   1526c:	49 63 c4             	movslq %r12d,%rax
   1526f:	45 39 e5             	cmp    %r12d,%r13d
   15272:	45 0f 4c ec          	cmovl  %r12d,%r13d
   15276:	41 83 c4 01          	add    $0x1,%r12d
   1527a:	c6 04 06 04          	movb   $0x4,(%rsi,%rax,1)
   1527e:	41 0f be 47 01       	movsbl 0x1(%r15),%eax
   15283:	49 89 d7             	mov    %rdx,%r15
   15286:	e9 a1 f3 ff ff       	jmp    1462c <__find_arguments+0x10c>
   1528b:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   15290:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   15295:	e8 d6 f1 ff ff       	call   14470 <__grow_type_table>
   1529a:	83 f8 ff             	cmp    $0xffffffff,%eax
   1529d:	0f 84 ed f3 ff ff    	je     14690 <__find_arguments+0x170>
   152a3:	e9 cc fe ff ff       	jmp    15174 <__find_arguments+0xc54>
   152a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   152af:	00 
   152b0:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   152b5:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   152ba:	e8 b1 f1 ff ff       	call   14470 <__grow_type_table>
   152bf:	83 f8 ff             	cmp    $0xffffffff,%eax
   152c2:	0f 84 c8 f3 ff ff    	je     14690 <__find_arguments+0x170>
   152c8:	e9 bf fc ff ff       	jmp    14f8c <__find_arguments+0xa6c>
   152cd:	0f 1f 00             	nopl   (%rax)
   152d0:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   152d5:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   152da:	e8 91 f1 ff ff       	call   14470 <__grow_type_table>
   152df:	83 f8 ff             	cmp    $0xffffffff,%eax
   152e2:	0f 84 a8 f3 ff ff    	je     14690 <__find_arguments+0x170>
   152e8:	e9 6f fc ff ff       	jmp    14f5c <__find_arguments+0xa3c>
   152ed:	e8 4e e8 ff ff       	call   13b40 <__stack_chk_fail>
   152f2:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   152f7:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   152fc:	e8 6f f1 ff ff       	call   14470 <__grow_type_table>
   15301:	83 f8 ff             	cmp    $0xffffffff,%eax
   15304:	0f 84 86 f3 ff ff    	je     14690 <__find_arguments+0x170>
   1530a:	e9 0b ff ff ff       	jmp    1521a <__find_arguments+0xcfa>
   1530f:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   15314:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   15319:	89 4c 24 28          	mov    %ecx,0x28(%rsp)
   1531d:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   15322:	e8 49 f1 ff ff       	call   14470 <__grow_type_table>
   15327:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   1532c:	8b 4c 24 28          	mov    0x28(%rsp),%ecx
   15330:	41 b8 2f 00 00 80    	mov    $0x8000002f,%r8d
   15336:	83 c0 01             	add    $0x1,%eax
   15339:	0f 84 51 f3 ff ff    	je     14690 <__find_arguments+0x170>
   1533f:	e9 23 ff ff ff       	jmp    15267 <__find_arguments+0xd47>
   15344:	0f 1f 40 00          	nopl   0x0(%rax)
   15348:	45 39 cd             	cmp    %r9d,%r13d
   1534b:	45 0f 4c e9          	cmovl  %r9d,%r13d
   1534f:	44 39 c8             	cmp    %r9d,%eax
   15352:	7e 1b                	jle    1536f <__find_arguments+0xe4f>
   15354:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   15359:	4d 63 c9             	movslq %r9d,%r9
   1535c:	4d 8d 7a 01          	lea    0x1(%r10),%r15
   15360:	42 c6 04 08 04       	movb   $0x4,(%rax,%r9,1)
   15365:	41 0f be 42 01       	movsbl 0x1(%r10),%eax
   1536a:	e9 bd f2 ff ff       	jmp    1462c <__find_arguments+0x10c>
   1536f:	48 8d 74 24 38       	lea    0x38(%rsp),%rsi
   15374:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
   15379:	89 4c 24 2c          	mov    %ecx,0x2c(%rsp)
   1537d:	44 89 4c 24 28       	mov    %r9d,0x28(%rsp)
   15382:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
   15387:	e8 e4 f0 ff ff       	call   14470 <__grow_type_table>
   1538c:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   15391:	44 8b 4c 24 28       	mov    0x28(%rsp),%r9d
   15396:	41 b8 2f 00 00 80    	mov    $0x8000002f,%r8d
   1539c:	83 c0 01             	add    $0x1,%eax
   1539f:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
   153a3:	0f 84 e7 f2 ff ff    	je     14690 <__find_arguments+0x170>
   153a9:	eb a9                	jmp    15354 <__find_arguments+0xe34>
   153ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000153b0 <__sprint.part.0>:
   153b0:	53                   	push   %rbx
   153b1:	48 89 f3             	mov    %rsi,%rbx
   153b4:	e8 87 64 00 00       	call   1b840 <__sfvwrite>
   153b9:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
   153c0:	00 
   153c1:	5b                   	pop    %rbx
   153c2:	c3                   	ret    
   153c3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   153ca:	00 00 00 
   153cd:	0f 1f 00             	nopl   (%rax)

00000000000153d0 <__vfprintf>:
   153d0:	f3 0f 1e fa          	endbr64 
   153d4:	41 57                	push   %r15
   153d6:	41 56                	push   %r14
   153d8:	41 55                	push   %r13
   153da:	41 54                	push   %r12
   153dc:	55                   	push   %rbp
   153dd:	53                   	push   %rbx
   153de:	48 81 ec b8 02 00 00 	sub    $0x2b8,%rsp
   153e5:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
   153ea:	48 89 74 24 68       	mov    %rsi,0x68(%rsp)
   153ef:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
   153f4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   153fb:	00 00 
   153fd:	48 89 84 24 a8 02 00 	mov    %rax,0x2a8(%rsp)
   15404:	00 
   15405:	31 c0                	xor    %eax,%eax
   15407:	48 8b 47 30          	mov    0x30(%rdi),%rax
   1540b:	48 85 c0             	test   %rax,%rax
   1540e:	74 16                	je     15426 <__vfprintf+0x56>
   15410:	48 83 f8 f0          	cmp    $0xfffffffffffffff0,%rax
   15414:	74 10                	je     15426 <__vfprintf+0x56>
   15416:	44 8b 48 30          	mov    0x30(%rax),%r9d
   1541a:	45 85 c9             	test   %r9d,%r9d
   1541d:	75 07                	jne    15426 <__vfprintf+0x56>
   1541f:	c7 40 30 ff ff ff ff 	movl   $0xffffffff,0x30(%rax)
   15426:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   1542b:	0f b7 41 10          	movzwl 0x10(%rcx),%eax
   1542f:	66 89 04 24          	mov    %ax,(%rsp)
   15433:	83 e0 1a             	and    $0x1a,%eax
   15436:	66 83 f8 0a          	cmp    $0xa,%ax
   1543a:	75 0b                	jne    15447 <__vfprintf+0x77>
   1543c:	66 83 79 12 00       	cmpw   $0x0,0x12(%rcx)
   15441:	0f 89 51 30 00 00    	jns    18498 <__vfprintf+0x30c8>
   15447:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   1544c:	4c 8d ac 24 08 01 00 	lea    0x108(%rsp),%r13
   15453:	00 
   15454:	31 f6                	xor    %esi,%esi
   15456:	48 c7 84 24 c8 00 00 	movq   $0x0,0xc8(%rsp)
   1545d:	00 00 00 00 00 
   15462:	ba 08 00 00 00       	mov    $0x8,%edx
   15467:	4c 89 ef             	mov    %r13,%rdi
   1546a:	4c 8d b4 24 b4 00 00 	lea    0xb4(%rsp),%r14
   15471:	00 
   15472:	f3 0f 6f 08          	movdqu (%rax),%xmm1
   15476:	0f 11 8c 24 18 01 00 	movups %xmm1,0x118(%rsp)
   1547d:	00 
   1547e:	48 8b 40 10          	mov    0x10(%rax),%rax
   15482:	0f 29 0c 24          	movaps %xmm1,(%rsp)
   15486:	48 89 84 24 28 01 00 	mov    %rax,0x128(%rsp)
   1548d:	00 
   1548e:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
   15495:	00 
   15496:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1549b:	48 89 84 24 f0 00 00 	mov    %rax,0xf0(%rsp)
   154a2:	00 
   154a3:	48 c7 84 24 f8 00 00 	movq   $0x0,0xf8(%rsp)
   154aa:	00 00 00 00 00 
   154af:	e8 5c e5 ff ff       	call   13a10 <memset>
   154b4:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
   154b9:	48 c7 44 24 60 00 00 	movq   $0x0,0x60(%rsp)
   154c0:	00 00 
   154c2:	c7 44 24 38 01 00 00 	movl   $0x1,0x38(%rsp)
   154c9:	00 
   154ca:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   154cf:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
   154d6:	00 00 
   154d8:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%rsp)
   154df:	00 
   154e0:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   154e5:	eb 1c                	jmp    15503 <__vfprintf+0x133>
   154e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   154ee:	00 00 
   154f0:	48 98                	cltq   
   154f2:	48 01 c3             	add    %rax,%rbx
   154f5:	83 bc 24 b4 00 00 00 	cmpl   $0x25,0xb4(%rsp)
   154fc:	25 
   154fd:	0f 84 a5 00 00 00    	je     155a8 <__vfprintf+0x1d8>
   15503:	4c 89 e9             	mov    %r13,%rcx
   15506:	ba 01 00 00 00       	mov    $0x1,%edx
   1550b:	48 89 de             	mov    %rbx,%rsi
   1550e:	4c 89 f7             	mov    %r14,%rdi
   15511:	e8 aa 61 00 00       	call   1b6c0 <mbrtowc>
   15516:	89 c5                	mov    %eax,%ebp
   15518:	85 c0                	test   %eax,%eax
   1551a:	7f d4                	jg     154f0 <__vfprintf+0x120>
   1551c:	48 39 5c 24 18       	cmp    %rbx,0x18(%rsp)
   15521:	0f 84 16 02 00 00    	je     1573d <__vfprintf+0x36d>
   15527:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   1552c:	49 89 dc             	mov    %rbx,%r12
   1552f:	49 29 cc             	sub    %rcx,%r12
   15532:	0f 88 28 01 00 00    	js     15660 <__vfprintf+0x290>
   15538:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
   1553d:	2b 44 24 28          	sub    0x28(%rsp),%eax
   15541:	48 98                	cltq   
   15543:	4c 39 e0             	cmp    %r12,%rax
   15546:	0f 8c 14 01 00 00    	jl     15660 <__vfprintf+0x290>
   1554c:	8b 94 24 fc 00 00 00 	mov    0xfc(%rsp),%edx
   15553:	8b 84 24 f8 00 00 00 	mov    0xf8(%rsp),%eax
   1555a:	48 89 8c 24 30 01 00 	mov    %rcx,0x130(%rsp)
   15561:	00 
   15562:	4c 89 a4 24 38 01 00 	mov    %r12,0x138(%rsp)
   15569:	00 
   1556a:	44 01 e2             	add    %r12d,%edx
   1556d:	83 c0 01             	add    $0x1,%eax
   15570:	89 94 24 fc 00 00 00 	mov    %edx,0xfc(%rsp)
   15577:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
   1557e:	83 f8 07             	cmp    $0x7,%eax
   15581:	0f 8e 61 01 00 00    	jle    156e8 <__vfprintf+0x318>
   15587:	85 d2                	test   %edx,%edx
   15589:	0f 85 91 01 00 00    	jne    15720 <__vfprintf+0x350>
   1558f:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   15596:	00 00 00 00 
   1559a:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1559f:	e9 4c 01 00 00       	jmp    156f0 <__vfprintf+0x320>
   155a4:	0f 1f 40 00          	nopl   0x0(%rax)
   155a8:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
   155ac:	48 39 44 24 18       	cmp    %rax,0x18(%rsp)
   155b1:	0f 85 59 01 00 00    	jne    15710 <__vfprintf+0x340>
   155b7:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   155bc:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   155c1:	48 89 c3             	mov    %rax,%rbx
   155c4:	c6 84 24 b3 00 00 00 	movb   $0x0,0xb3(%rsp)
   155cb:	00 
   155cc:	0f be 5b 01          	movsbl 0x1(%rbx),%ebx
   155d0:	41 bb ff ff ff ff    	mov    $0xffffffff,%r11d
   155d6:	48 8d 2d cb 15 01 00 	lea    0x115cb(%rip),%rbp        # 26ba8 <g_dyn_entry_table+0xba8>
   155dd:	c6 84 24 31 02 00 00 	movb   $0x0,0x231(%rsp)
   155e4:	00 
   155e5:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   155ea:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%rsp)
   155f1:	00 
   155f2:	c7 04 24 00 00 00 00 	movl   $0x0,(%rsp)
   155f9:	49 83 c4 01          	add    $0x1,%r12
   155fd:	8d 43 e0             	lea    -0x20(%rbx),%eax
   15600:	83 f8 5a             	cmp    $0x5a,%eax
   15603:	0f 87 77 01 00 00    	ja     15780 <__vfprintf+0x3b0>
   15609:	48 63 44 85 00       	movslq 0x0(%rbp,%rax,4),%rax
   1560e:	48 01 e8             	add    %rbp,%rax
   15611:	3e ff e0             	notrack jmp *%rax
   15614:	0f 1f 40 00          	nopl   0x0(%rax)
   15618:	45 31 c0             	xor    %r8d,%r8d
   1561b:	eb 06                	jmp    15623 <__vfprintf+0x253>
   1561d:	0f 1f 00             	nopl   (%rax)
   15620:	4d 89 fc             	mov    %r15,%r12
   15623:	43 8d 04 80          	lea    (%r8,%r8,4),%eax
   15627:	ba 2f 00 00 80       	mov    $0x8000002f,%edx
   1562c:	01 c0                	add    %eax,%eax
   1562e:	29 da                	sub    %ebx,%edx
   15630:	39 c2                	cmp    %eax,%edx
   15632:	7c 2c                	jl     15660 <__vfprintf+0x290>
   15634:	44 8d 44 03 d0       	lea    -0x30(%rbx,%rax,1),%r8d
   15639:	41 0f be 1c 24       	movsbl (%r12),%ebx
   1563e:	4d 8d 7c 24 01       	lea    0x1(%r12),%r15
   15643:	8d 43 d0             	lea    -0x30(%rbx),%eax
   15646:	83 f8 09             	cmp    $0x9,%eax
   15649:	0f 87 c6 26 00 00    	ja     17d15 <__vfprintf+0x2945>
   1564f:	41 81 f8 cc cc cc 0c 	cmp    $0xccccccc,%r8d
   15656:	7e c8                	jle    15620 <__vfprintf+0x250>
   15658:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1565f:	00 
   15660:	e8 fb ed ff ff       	call   14460 <__errno>
   15665:	c7 44 24 28 ff ff ff 	movl   $0xffffffff,0x28(%rsp)
   1566c:	ff 
   1566d:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   15673:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   15678:	48 85 c0             	test   %rax,%rax
   1567b:	74 08                	je     15685 <__vfprintf+0x2b5>
   1567d:	48 89 c7             	mov    %rax,%rdi
   15680:	e8 1b ce ff ff       	call   124a0 <dlfree>
   15685:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1568a:	48 85 c0             	test   %rax,%rax
   1568d:	74 08                	je     15697 <__vfprintf+0x2c7>
   1568f:	48 89 c7             	mov    %rax,%rdi
   15692:	e8 b9 34 00 00       	call   18b50 <__freedtoa>
   15697:	48 8b bc 24 c8 00 00 	mov    0xc8(%rsp),%rdi
   1569e:	00 
   1569f:	48 85 ff             	test   %rdi,%rdi
   156a2:	74 12                	je     156b6 <__vfprintf+0x2e6>
   156a4:	48 8d 84 24 b0 01 00 	lea    0x1b0(%rsp),%rax
   156ab:	00 
   156ac:	48 39 c7             	cmp    %rax,%rdi
   156af:	74 05                	je     156b6 <__vfprintf+0x2e6>
   156b1:	e8 ea cd ff ff       	call   124a0 <dlfree>
   156b6:	48 8b 84 24 a8 02 00 	mov    0x2a8(%rsp),%rax
   156bd:	00 
   156be:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   156c5:	00 00 
   156c7:	0f 85 b7 2e 00 00    	jne    18584 <__vfprintf+0x31b4>
   156cd:	8b 44 24 28          	mov    0x28(%rsp),%eax
   156d1:	48 81 c4 b8 02 00 00 	add    $0x2b8,%rsp
   156d8:	5b                   	pop    %rbx
   156d9:	5d                   	pop    %rbp
   156da:	41 5c                	pop    %r12
   156dc:	41 5d                	pop    %r13
   156de:	41 5e                	pop    %r14
   156e0:	41 5f                	pop    %r15
   156e2:	c3                   	ret    
   156e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   156e8:	4c 8d 94 24 40 01 00 	lea    0x140(%rsp),%r10
   156ef:	00 
   156f0:	44 01 64 24 28       	add    %r12d,0x28(%rsp)
   156f5:	85 ed                	test   %ebp,%ebp
   156f7:	7e 44                	jle    1573d <__vfprintf+0x36d>
   156f9:	48 8d 43 01          	lea    0x1(%rbx),%rax
   156fd:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   15702:	e9 bd fe ff ff       	jmp    155c4 <__vfprintf+0x1f4>
   15707:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1570e:	00 00 
   15710:	48 89 c3             	mov    %rax,%rbx
   15713:	e9 0f fe ff ff       	jmp    15527 <__vfprintf+0x157>
   15718:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1571f:	00 
   15720:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   15725:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   1572c:	00 
   1572d:	e8 7e fc ff ff       	call   153b0 <__sprint.part.0>
   15732:	85 c0                	test   %eax,%eax
   15734:	75 2a                	jne    15760 <__vfprintf+0x390>
   15736:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1573b:	eb b3                	jmp    156f0 <__vfprintf+0x320>
   1573d:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   15744:	85 c0                	test   %eax,%eax
   15746:	0f 85 f7 24 00 00    	jne    17c43 <__vfprintf+0x2873>
   1574c:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   15753:	00 00 00 00 
   15757:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1575e:	00 00 
   15760:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   15765:	f6 40 10 40          	testb  $0x40,0x10(%rax)
   15769:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1576e:	0f 44 44 24 28       	cmove  0x28(%rsp),%eax
   15773:	89 44 24 28          	mov    %eax,0x28(%rsp)
   15777:	e9 f7 fe ff ff       	jmp    15673 <__vfprintf+0x2a3>
   1577c:	0f 1f 40 00          	nopl   0x0(%rax)
   15780:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   15785:	85 db                	test   %ebx,%ebx
   15787:	74 b4                	je     1573d <__vfprintf+0x36d>
   15789:	c6 84 24 b3 00 00 00 	movb   $0x0,0xb3(%rsp)
   15790:	00 
   15791:	4c 8d 84 24 40 02 00 	lea    0x240(%rsp),%r8
   15798:	00 
   15799:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
   157a0:	00 
   157a1:	88 9c 24 40 02 00 00 	mov    %bl,0x240(%rsp)
   157a8:	bb 01 00 00 00       	mov    $0x1,%ebx
   157ad:	c7 44 24 48 00 00 00 	movl   $0x0,0x48(%rsp)
   157b4:	00 
   157b5:	0f b6 94 24 31 02 00 	movzbl 0x231(%rsp),%edx
   157bc:	00 
   157bd:	0f 1f 00             	nopl   (%rax)
   157c0:	44 8b 24 24          	mov    (%rsp),%r12d
   157c4:	8d 43 02             	lea    0x2(%rbx),%eax
   157c7:	84 d2                	test   %dl,%dl
   157c9:	0f 45 d8             	cmovne %eax,%ebx
   157cc:	41 81 e4 84 00 00 00 	and    $0x84,%r12d
   157d3:	75 0e                	jne    157e3 <__vfprintf+0x413>
   157d5:	8b 6c 24 2c          	mov    0x2c(%rsp),%ebp
   157d9:	29 dd                	sub    %ebx,%ebp
   157db:	85 ed                	test   %ebp,%ebp
   157dd:	0f 8f 4d 11 00 00    	jg     16930 <__vfprintf+0x1560>
   157e3:	80 bc 24 b3 00 00 00 	cmpb   $0x0,0xb3(%rsp)
   157ea:	00 
   157eb:	74 5b                	je     15848 <__vfprintf+0x478>
   157ed:	48 8d 84 24 b3 00 00 	lea    0xb3(%rsp),%rax
   157f4:	00 
   157f5:	49 c7 42 08 01 00 00 	movq   $0x1,0x8(%r10)
   157fc:	00 
   157fd:	49 83 c2 10          	add    $0x10,%r10
   15801:	49 89 42 f0          	mov    %rax,-0x10(%r10)
   15805:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   1580c:	8d 50 01             	lea    0x1(%rax),%edx
   1580f:	8b 84 24 f8 00 00 00 	mov    0xf8(%rsp),%eax
   15816:	89 94 24 fc 00 00 00 	mov    %edx,0xfc(%rsp)
   1581d:	83 c0 01             	add    $0x1,%eax
   15820:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
   15827:	83 f8 07             	cmp    $0x7,%eax
   1582a:	7e 1c                	jle    15848 <__vfprintf+0x478>
   1582c:	85 d2                	test   %edx,%edx
   1582e:	0f 85 14 15 00 00    	jne    16d48 <__vfprintf+0x1978>
   15834:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   1583b:	00 00 00 00 
   1583f:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   15844:	0f 1f 40 00          	nopl   0x0(%rax)
   15848:	80 bc 24 31 02 00 00 	cmpb   $0x0,0x231(%rsp)
   1584f:	00 
   15850:	74 66                	je     158b8 <__vfprintf+0x4e8>
   15852:	48 8d 84 24 30 02 00 	lea    0x230(%rsp),%rax
   15859:	00 
   1585a:	49 c7 42 08 02 00 00 	movq   $0x2,0x8(%r10)
   15861:	00 
   15862:	49 83 c2 10          	add    $0x10,%r10
   15866:	49 89 42 f0          	mov    %rax,-0x10(%r10)
   1586a:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   15871:	c6 84 24 30 02 00 00 	movb   $0x30,0x230(%rsp)
   15878:	30 
   15879:	8d 50 02             	lea    0x2(%rax),%edx
   1587c:	8b 84 24 f8 00 00 00 	mov    0xf8(%rsp),%eax
   15883:	89 94 24 fc 00 00 00 	mov    %edx,0xfc(%rsp)
   1588a:	83 c0 01             	add    $0x1,%eax
   1588d:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
   15894:	83 f8 07             	cmp    $0x7,%eax
   15897:	7e 1f                	jle    158b8 <__vfprintf+0x4e8>
   15899:	85 d2                	test   %edx,%edx
   1589b:	0f 85 df 14 00 00    	jne    16d80 <__vfprintf+0x19b0>
   158a1:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   158a8:	00 00 00 00 
   158ac:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   158b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   158b8:	41 81 fc 80 00 00 00 	cmp    $0x80,%r12d
   158bf:	0f 84 db 0d 00 00    	je     166a0 <__vfprintf+0x12d0>
   158c5:	44 8b 7c 24 48       	mov    0x48(%rsp),%r15d
   158ca:	44 2b 7c 24 40       	sub    0x40(%rsp),%r15d
   158cf:	45 85 ff             	test   %r15d,%r15d
   158d2:	0f 8f 90 0c 00 00    	jg     16568 <__vfprintf+0x1198>
   158d8:	f7 04 24 00 01 00 00 	testl  $0x100,(%rsp)
   158df:	0f 85 2b 0a 00 00    	jne    16310 <__vfprintf+0xf40>
   158e5:	48 63 44 24 40       	movslq 0x40(%rsp),%rax
   158ea:	4d 89 02             	mov    %r8,(%r10)
   158ed:	48 89 c1             	mov    %rax,%rcx
   158f0:	49 89 42 08          	mov    %rax,0x8(%r10)
   158f4:	8b 84 24 f8 00 00 00 	mov    0xf8(%rsp),%eax
   158fb:	03 8c 24 fc 00 00 00 	add    0xfc(%rsp),%ecx
   15902:	83 c0 01             	add    $0x1,%eax
   15905:	89 8c 24 fc 00 00 00 	mov    %ecx,0xfc(%rsp)
   1590c:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
   15913:	83 f8 07             	cmp    $0x7,%eax
   15916:	0f 8e 3c 0c 00 00    	jle    16558 <__vfprintf+0x1188>
   1591c:	85 c9                	test   %ecx,%ecx
   1591e:	0f 85 e8 0f 00 00    	jne    1690c <__vfprintf+0x153c>
   15924:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   1592b:	00 00 00 00 
   1592f:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   15934:	f6 04 24 04          	testb  $0x4,(%rsp)
   15938:	74 11                	je     1594b <__vfprintf+0x57b>
   1593a:	44 8b 64 24 2c       	mov    0x2c(%rsp),%r12d
   1593f:	41 29 dc             	sub    %ebx,%r12d
   15942:	45 85 e4             	test   %r12d,%r12d
   15945:	0f 8f 35 11 00 00    	jg     16a80 <__vfprintf+0x16b0>
   1594b:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
   1594f:	39 d8                	cmp    %ebx,%eax
   15951:	0f 4d d8             	cmovge %eax,%ebx
   15954:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
   15959:	2b 44 24 28          	sub    0x28(%rsp),%eax
   1595d:	39 c3                	cmp    %eax,%ebx
   1595f:	0f 8f fb fc ff ff    	jg     15660 <__vfprintf+0x290>
   15965:	8b 94 24 fc 00 00 00 	mov    0xfc(%rsp),%edx
   1596c:	01 5c 24 28          	add    %ebx,0x28(%rsp)
   15970:	85 d2                	test   %edx,%edx
   15972:	0f 85 80 0e 00 00    	jne    167f8 <__vfprintf+0x1428>
   15978:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   1597f:	00 00 00 00 
   15983:	e9 58 fb ff ff       	jmp    154e0 <__vfprintf+0x110>
   15988:	83 fb 61             	cmp    $0x61,%ebx
   1598b:	ba 78 00 00 00       	mov    $0x78,%edx
   15990:	b8 58 00 00 00       	mov    $0x58,%eax
   15995:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   1599a:	0f 44 c2             	cmove  %edx,%eax
   1599d:	48 8d 0d 7c 13 01 00 	lea    0x1137c(%rip),%rcx        # 26d20 <xdigs_upper.3363>
   159a4:	48 8d 15 85 13 01 00 	lea    0x11385(%rip),%rdx        # 26d30 <xdigs_lower.3362>
   159ab:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   159b0:	48 0f 45 d1          	cmovne %rcx,%rdx
   159b4:	b9 50 00 00 00       	mov    $0x50,%ecx
   159b9:	88 84 24 31 02 00 00 	mov    %al,0x231(%rsp)
   159c0:	48 89 94 24 90 00 00 	mov    %rdx,0x90(%rsp)
   159c7:	00 
   159c8:	ba 70 00 00 00       	mov    $0x70,%edx
   159cd:	0f 45 d1             	cmovne %ecx,%edx
   159d0:	41 81 fb 00 00 00 80 	cmp    $0x80000000,%r11d
   159d7:	41 83 d3 00          	adc    $0x0,%r11d
   159db:	88 94 24 8b 00 00 00 	mov    %dl,0x8b(%rsp)
   159e2:	48 85 ff             	test   %rdi,%rdi
   159e5:	74 19                	je     15a00 <__vfprintf+0x630>
   159e7:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   159ec:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   159f1:	e8 5a 31 00 00       	call   18b50 <__freedtoa>
   159f6:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   159fb:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   15a00:	8b 4c 24 38          	mov    0x38(%rsp),%ecx
   15a04:	48 8b 84 24 c8 00 00 	mov    0xc8(%rsp),%rax
   15a0b:	00 
   15a0c:	8d 69 01             	lea    0x1(%rcx),%ebp
   15a0f:	f6 04 24 08          	testb  $0x8,(%rsp)
   15a13:	0f 84 29 1d 00 00    	je     17742 <__vfprintf+0x2372>
   15a19:	48 85 c0             	test   %rax,%rax
   15a1c:	0f 84 66 24 00 00    	je     17e88 <__vfprintf+0x2ab8>
   15a22:	48 63 d1             	movslq %ecx,%rdx
   15a25:	48 c1 e2 04          	shl    $0x4,%rdx
   15a29:	db 2c 10             	fldt   (%rax,%rdx,1)
   15a2c:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   15a31:	48 8d 8c 24 b8 00 00 	lea    0xb8(%rsp),%rcx
   15a38:	00 
   15a39:	44 89 de             	mov    %r11d,%esi
   15a3c:	d9 c0                	fld    %st(0)
   15a3e:	db bc 24 e0 00 00 00 	fstpt  0xe0(%rsp)
   15a45:	48 8d 94 24 bc 00 00 	lea    0xbc(%rsp),%rdx
   15a4c:	00 
   15a4d:	48 83 ec 10          	sub    $0x10,%rsp
   15a51:	48 8b bc 24 a0 00 00 	mov    0xa0(%rsp),%rdi
   15a58:	00 
   15a59:	4c 8d 84 24 d0 00 00 	lea    0xd0(%rsp),%r8
   15a60:	00 
   15a61:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   15a66:	db 3c 24             	fstpt  (%rsp)
   15a69:	e8 92 4a 00 00       	call   1a500 <__hldtoa>
   15a6e:	5e                   	pop    %rsi
   15a6f:	5f                   	pop    %rdi
   15a70:	48 85 c0             	test   %rax,%rax
   15a73:	44 8b 5c 24 38       	mov    0x38(%rsp),%r11d
   15a78:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   15a7d:	49 89 c0             	mov    %rax,%r8
   15a80:	0f 84 24 1d 00 00    	je     177aa <__vfprintf+0x23da>
   15a86:	45 85 db             	test   %r11d,%r11d
   15a89:	79 0b                	jns    15a96 <__vfprintf+0x6c6>
   15a8b:	44 8b 9c 24 c0 00 00 	mov    0xc0(%rsp),%r11d
   15a92:	00 
   15a93:	45 29 c3             	sub    %r8d,%r11d
   15a96:	8b b4 24 bc 00 00 00 	mov    0xbc(%rsp),%esi
   15a9d:	8b 84 24 b8 00 00 00 	mov    0xb8(%rsp),%eax
   15aa4:	81 fe ff ff ff 7f    	cmp    $0x7fffffff,%esi
   15aaa:	0f 84 4a 20 00 00    	je     17afa <__vfprintf+0x272a>
   15ab0:	0f b6 94 24 31 02 00 	movzbl 0x231(%rsp),%edx
   15ab7:	00 
   15ab8:	85 c0                	test   %eax,%eax
   15aba:	0f 85 fb 00 00 00    	jne    15bbb <__vfprintf+0x7eb>
   15ac0:	89 6c 24 38          	mov    %ebp,0x38(%rsp)
   15ac4:	e9 0a 01 00 00       	jmp    15bd3 <__vfprintf+0x803>
   15ac9:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   15ace:	88 9c 24 8b 00 00 00 	mov    %bl,0x8b(%rsp)
   15ad5:	45 85 db             	test   %r11d,%r11d
   15ad8:	0f 88 ac 1d 00 00    	js     1788a <__vfprintf+0x24ba>
   15ade:	41 83 c3 01          	add    $0x1,%r11d
   15ae2:	45 85 db             	test   %r11d,%r11d
   15ae5:	b8 06 00 00 00       	mov    $0x6,%eax
   15aea:	44 0f 48 d8          	cmovs  %eax,%r11d
   15aee:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   15af3:	48 85 ff             	test   %rdi,%rdi
   15af6:	74 19                	je     15b11 <__vfprintf+0x741>
   15af8:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   15afd:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   15b02:	e8 49 30 00 00       	call   18b50 <__freedtoa>
   15b07:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   15b0c:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   15b11:	8b 74 24 38          	mov    0x38(%rsp),%esi
   15b15:	48 8b 84 24 c8 00 00 	mov    0xc8(%rsp),%rax
   15b1c:	00 
   15b1d:	8d 6e 01             	lea    0x1(%rsi),%ebp
   15b20:	f6 04 24 08          	testb  $0x8,(%rsp)
   15b24:	0f 84 6c 13 00 00    	je     16e96 <__vfprintf+0x1ac6>
   15b2a:	48 85 c0             	test   %rax,%rax
   15b2d:	0f 84 32 1d 00 00    	je     17865 <__vfprintf+0x2495>
   15b33:	48 63 d6             	movslq %esi,%rdx
   15b36:	48 c1 e2 04          	shl    $0x4,%rdx
   15b3a:	db 2c 10             	fldt   (%rax,%rdx,1)
   15b3d:	31 f6                	xor    %esi,%esi
   15b3f:	44 89 da             	mov    %r11d,%edx
   15b42:	80 bc 24 8b 00 00 00 	cmpb   $0x0,0x8b(%rsp)
   15b49:	00 
   15b4a:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   15b4f:	40 0f 94 c6          	sete   %sil
   15b53:	4c 8d 84 24 b8 00 00 	lea    0xb8(%rsp),%r8
   15b5a:	00 
   15b5b:	48 8d 8c 24 bc 00 00 	lea    0xbc(%rsp),%rcx
   15b62:	00 
   15b63:	44 89 5c 24 38       	mov    %r11d,0x38(%rsp)
   15b68:	83 c6 02             	add    $0x2,%esi
   15b6b:	48 8d bc 24 e0 00 00 	lea    0xe0(%rsp),%rdi
   15b72:	00 
   15b73:	4c 8d 8c 24 c0 00 00 	lea    0xc0(%rsp),%r9
   15b7a:	00 
   15b7b:	db bc 24 e0 00 00 00 	fstpt  0xe0(%rsp)
   15b82:	e8 09 4c 00 00       	call   1a790 <__ldtoa>
   15b87:	44 8b 5c 24 38       	mov    0x38(%rsp),%r11d
   15b8c:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   15b91:	48 85 c0             	test   %rax,%rax
   15b94:	49 89 c0             	mov    %rax,%r8
   15b97:	0f 84 0d 1c 00 00    	je     177aa <__vfprintf+0x23da>
   15b9d:	8b b4 24 bc 00 00 00 	mov    0xbc(%rsp),%esi
   15ba4:	0f b6 94 24 31 02 00 	movzbl 0x231(%rsp),%edx
   15bab:	00 
   15bac:	8b 84 24 b8 00 00 00 	mov    0xb8(%rsp),%eax
   15bb3:	89 6c 24 38          	mov    %ebp,0x38(%rsp)
   15bb7:	85 c0                	test   %eax,%eax
   15bb9:	74 0c                	je     15bc7 <__vfprintf+0x7f7>
   15bbb:	c6 84 24 b3 00 00 00 	movb   $0x2d,0xb3(%rsp)
   15bc2:	2d 
   15bc3:	89 6c 24 38          	mov    %ebp,0x38(%rsp)
   15bc7:	81 fe ff ff ff 7f    	cmp    $0x7fffffff,%esi
   15bcd:	0f 84 96 14 00 00    	je     17069 <__vfprintf+0x1c99>
   15bd3:	8b 0c 24             	mov    (%rsp),%ecx
   15bd6:	48 8b 84 24 c0 00 00 	mov    0xc0(%rsp),%rax
   15bdd:	00 
   15bde:	83 e3 df             	and    $0xffffffdf,%ebx
   15be1:	41 89 cc             	mov    %ecx,%r12d
   15be4:	4c 29 c0             	sub    %r8,%rax
   15be7:	89 84 24 98 00 00 00 	mov    %eax,0x98(%rsp)
   15bee:	41 81 cc 00 01 00 00 	or     $0x100,%r12d
   15bf5:	83 fb 47             	cmp    $0x47,%ebx
   15bf8:	75 17                	jne    15c11 <__vfprintf+0x841>
   15bfa:	83 e1 01             	and    $0x1,%ecx
   15bfd:	83 fe fd             	cmp    $0xfffffffd,%esi
   15c00:	7c 09                	jl     15c0b <__vfprintf+0x83b>
   15c02:	41 39 f3             	cmp    %esi,%r11d
   15c05:	0f 8d 1d 21 00 00    	jge    17d28 <__vfprintf+0x2958>
   15c0b:	85 c9                	test   %ecx,%ecx
   15c0d:	44 0f 44 d8          	cmove  %eax,%r11d
   15c11:	8b 0c 24             	mov    (%rsp),%ecx
   15c14:	44 89 df             	mov    %r11d,%edi
   15c17:	83 e1 01             	and    $0x1,%ecx
   15c1a:	80 bc 24 8b 00 00 00 	cmpb   $0x0,0x8b(%rsp)
   15c21:	00 
   15c22:	0f 85 9e 16 00 00    	jne    172c6 <__vfprintf+0x1ef6>
   15c28:	85 f6                	test   %esi,%esi
   15c2a:	bb 01 00 00 00       	mov    $0x1,%ebx
   15c2f:	0f b6 84 24 b3 00 00 	movzbl 0xb3(%rsp),%eax
   15c36:	00 
   15c37:	0f 4f de             	cmovg  %esi,%ebx
   15c3a:	09 f9                	or     %edi,%ecx
   15c3c:	41 89 cb             	mov    %ecx,%r11d
   15c3f:	0f 85 ea 13 00 00    	jne    1702f <__vfprintf+0x1c5f>
   15c45:	89 5c 24 40          	mov    %ebx,0x40(%rsp)
   15c49:	c7 44 24 48 00 00 00 	movl   $0x0,0x48(%rsp)
   15c50:	00 
   15c51:	4c 89 44 24 58       	mov    %r8,0x58(%rsp)
   15c56:	89 b4 24 8c 00 00 00 	mov    %esi,0x8c(%rsp)
   15c5d:	44 89 24 24          	mov    %r12d,(%rsp)
   15c61:	c6 84 24 8b 00 00 00 	movb   $0x0,0x8b(%rsp)
   15c68:	00 
   15c69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15c70:	3c 01                	cmp    $0x1,%al
   15c72:	83 db ff             	sbb    $0xffffffff,%ebx
   15c75:	e9 46 fb ff ff       	jmp    157c0 <__vfprintf+0x3f0>
   15c7a:	8d 43 fe             	lea    -0x2(%rbx),%eax
   15c7d:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   15c82:	88 84 24 8b 00 00 00 	mov    %al,0x8b(%rsp)
   15c89:	45 85 db             	test   %r11d,%r11d
   15c8c:	0f 85 50 fe ff ff    	jne    15ae2 <__vfprintf+0x712>
   15c92:	41 bb 01 00 00 00    	mov    $0x1,%r11d
   15c98:	e9 51 fe ff ff       	jmp    15aee <__vfprintf+0x71e>
   15c9d:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   15ca2:	c6 84 24 8b 00 00 00 	movb   $0x0,0x8b(%rsp)
   15ca9:	00 
   15caa:	e9 33 fe ff ff       	jmp    15ae2 <__vfprintf+0x712>
   15caf:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   15cb4:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   15cb9:	48 8b 8c 24 c8 00 00 	mov    0xc8(%rsp),%rcx
   15cc0:	00 
   15cc1:	8d 50 01             	lea    0x1(%rax),%edx
   15cc4:	f7 04 24 00 10 00 00 	testl  $0x1000,(%rsp)
   15ccb:	0f 84 d7 14 00 00    	je     171a8 <__vfprintf+0x1dd8>
   15cd1:	48 85 c9             	test   %rcx,%rcx
   15cd4:	0f 84 b8 20 00 00    	je     17d92 <__vfprintf+0x29c2>
   15cda:	48 c1 e0 04          	shl    $0x4,%rax
   15cde:	48 8b 04 01          	mov    (%rcx,%rax,1),%rax
   15ce2:	48 89 c1             	mov    %rax,%rcx
   15ce5:	48 85 c0             	test   %rax,%rax
   15ce8:	0f 88 bf 15 00 00    	js     172ad <__vfprintf+0x1edd>
   15cee:	45 85 db             	test   %r11d,%r11d
   15cf1:	0f 88 3c 11 00 00    	js     16e33 <__vfprintf+0x1a63>
   15cf7:	81 24 24 7f ff ff ff 	andl   $0xffffff7f,(%rsp)
   15cfe:	45 85 db             	test   %r11d,%r11d
   15d01:	0f 85 2c 11 00 00    	jne    16e33 <__vfprintf+0x1a63>
   15d07:	48 85 c9             	test   %rcx,%rcx
   15d0a:	0f 85 23 11 00 00    	jne    16e33 <__vfprintf+0x1a63>
   15d10:	89 54 24 38          	mov    %edx,0x38(%rsp)
   15d14:	0f 1f 40 00          	nopl   0x0(%rax)
   15d18:	c7 44 24 40 00 00 00 	movl   $0x0,0x40(%rsp)
   15d1f:	00 
   15d20:	31 db                	xor    %ebx,%ebx
   15d22:	45 31 db             	xor    %r11d,%r11d
   15d25:	0f b6 84 24 b3 00 00 	movzbl 0xb3(%rsp),%eax
   15d2c:	00 
   15d2d:	c7 44 24 48 00 00 00 	movl   $0x0,0x48(%rsp)
   15d34:	00 
   15d35:	0f b6 94 24 31 02 00 	movzbl 0x231(%rsp),%edx
   15d3c:	00 
   15d3d:	4c 8d 84 24 a4 02 00 	lea    0x2a4(%rsp),%r8
   15d44:	00 
   15d45:	e9 26 ff ff ff       	jmp    15c70 <__vfprintf+0x8a0>
   15d4a:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   15d51:	00 
   15d52:	3c 24                	cmp    $0x24,%al
   15d54:	0f 84 08 1f 00 00    	je     17c62 <__vfprintf+0x2892>
   15d5a:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   15d5f:	8d 48 01             	lea    0x1(%rax),%ecx
   15d62:	48 85 d2             	test   %rdx,%rdx
   15d65:	0f 84 ff 22 00 00    	je     1806a <__vfprintf+0x2c9a>
   15d6b:	48 c1 e0 04          	shl    $0x4,%rax
   15d6f:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   15d72:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   15d76:	44 8b 44 24 2c       	mov    0x2c(%rsp),%r8d
   15d7b:	45 85 c0             	test   %r8d,%r8d
   15d7e:	0f 89 eb 21 00 00    	jns    17f6f <__vfprintf+0x2b9f>
   15d84:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
   15d88:	3d 00 00 00 80       	cmp    $0x80000000,%eax
   15d8d:	0f 84 cd f8 ff ff    	je     15660 <__vfprintf+0x290>
   15d93:	f7 d8                	neg    %eax
   15d95:	89 4c 24 38          	mov    %ecx,0x38(%rsp)
   15d99:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   15d9d:	83 0c 24 04          	orl    $0x4,(%rsp)
   15da1:	41 0f be 1c 24       	movsbl (%r12),%ebx
   15da6:	e9 4e f8 ff ff       	jmp    155f9 <__vfprintf+0x229>
   15dab:	41 0f be 1c 24       	movsbl (%r12),%ebx
   15db0:	80 fb 6c             	cmp    $0x6c,%bl
   15db3:	0f 84 2e 1d 00 00    	je     17ae7 <__vfprintf+0x2717>
   15db9:	83 0c 24 10          	orl    $0x10,(%rsp)
   15dbd:	e9 37 f8 ff ff       	jmp    155f9 <__vfprintf+0x229>
   15dc2:	83 0c 24 10          	orl    $0x10,(%rsp)
   15dc6:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   15dcb:	e9 e4 fe ff ff       	jmp    15cb4 <__vfprintf+0x8e4>
   15dd0:	8b 44 24 38          	mov    0x38(%rsp),%eax
   15dd4:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   15dd9:	44 8d 60 01          	lea    0x1(%rax),%r12d
   15ddd:	f6 04 24 10          	testb  $0x10,(%rsp)
   15de1:	0f 84 0b 18 00 00    	je     175f2 <__vfprintf+0x2222>
   15de7:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   15dec:	48 85 ff             	test   %rdi,%rdi
   15def:	74 19                	je     15e0a <__vfprintf+0xa3a>
   15df1:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   15df6:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   15dfb:	e8 a0 c6 ff ff       	call   124a0 <dlfree>
   15e00:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   15e05:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   15e0a:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   15e11:	00 
   15e12:	48 85 d2             	test   %rdx,%rdx
   15e15:	0f 84 2c 21 00 00    	je     17f47 <__vfprintf+0x2b77>
   15e1b:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   15e20:	48 c1 e0 04          	shl    $0x4,%rax
   15e24:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   15e28:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   15e2d:	48 83 7c 24 60 00    	cmpq   $0x0,0x60(%rsp)
   15e33:	0f 84 96 1d 00 00    	je     17bcf <__vfprintf+0x27ff>
   15e39:	45 85 db             	test   %r11d,%r11d
   15e3c:	0f 88 2e 23 00 00    	js     18170 <__vfprintf+0x2da0>
   15e42:	4d 63 fb             	movslq %r11d,%r15
   15e45:	41 83 fb 7f          	cmp    $0x7f,%r11d
   15e49:	0f 8f 57 22 00 00    	jg     180a6 <__vfprintf+0x2cd6>
   15e4f:	49 8d 7f 01          	lea    0x1(%r15),%rdi
   15e53:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   15e58:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   15e5d:	e8 ce ab ff ff       	call   10a30 <dlmalloc>
   15e62:	48 85 c0             	test   %rax,%rax
   15e65:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   15e6a:	0f 84 e3 22 00 00    	je     18153 <__vfprintf+0x2d83>
   15e70:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   15e75:	48 8d 9c 24 10 01 00 	lea    0x110(%rsp),%rbx
   15e7c:	00 
   15e7d:	31 f6                	xor    %esi,%esi
   15e7f:	ba 08 00 00 00       	mov    $0x8,%edx
   15e84:	48 89 df             	mov    %rbx,%rdi
   15e87:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
   15e8e:	00 
   15e8f:	e8 7c db ff ff       	call   13a10 <memset>
   15e94:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
   15e99:	48 89 d9             	mov    %rbx,%rcx
   15e9c:	4c 89 fa             	mov    %r15,%rdx
   15e9f:	48 8d b4 24 d8 00 00 	lea    0xd8(%rsp),%rsi
   15ea6:	00 
   15ea7:	4c 89 c7             	mov    %r8,%rdi
   15eaa:	e8 71 59 00 00       	call   1b820 <wcsrtombs>
   15eaf:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
   15eb4:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   15eb9:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   15ebd:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   15ec2:	0f 84 1e 25 00 00    	je     183e6 <__vfprintf+0x3016>
   15ec8:	41 c6 04 00 00       	movb   $0x0,(%r8,%rax,1)
   15ecd:	4c 89 44 24 60       	mov    %r8,0x60(%rsp)
   15ed2:	e9 47 17 00 00       	jmp    1761e <__vfprintf+0x224e>
   15ed7:	81 0c 24 00 02 00 00 	orl    $0x200,(%rsp)
   15ede:	41 0f be 1c 24       	movsbl (%r12),%ebx
   15ee3:	e9 11 f7 ff ff       	jmp    155f9 <__vfprintf+0x229>
   15ee8:	8b 4c 24 38          	mov    0x38(%rsp),%ecx
   15eec:	48 8b 84 24 c8 00 00 	mov    0xc8(%rsp),%rax
   15ef3:	00 
   15ef4:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   15ef9:	8d 71 01             	lea    0x1(%rcx),%esi
   15efc:	48 85 c0             	test   %rax,%rax
   15eff:	0f 84 3f 1e 00 00    	je     17d44 <__vfprintf+0x2974>
   15f05:	48 63 d1             	movslq %ecx,%rdx
   15f08:	48 c1 e2 04          	shl    $0x4,%rdx
   15f0c:	48 8b 0c 10          	mov    (%rax,%rdx,1),%rcx
   15f10:	c6 84 24 31 02 00 00 	movb   $0x78,0x231(%rsp)
   15f17:	78 
   15f18:	48 8d 05 11 0e 01 00 	lea    0x10e11(%rip),%rax        # 26d30 <xdigs_lower.3362>
   15f1f:	89 74 24 38          	mov    %esi,0x38(%rsp)
   15f23:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   15f2a:	00 
   15f2b:	b8 02 00 00 00       	mov    $0x2,%eax
   15f30:	c6 84 24 b3 00 00 00 	movb   $0x0,0xb3(%rsp)
   15f37:	00 
   15f38:	45 85 db             	test   %r11d,%r11d
   15f3b:	78 1b                	js     15f58 <__vfprintf+0xb88>
   15f3d:	81 24 24 7f ff ff ff 	andl   $0xffffff7f,(%rsp)
   15f44:	48 85 c9             	test   %rcx,%rcx
   15f47:	75 0f                	jne    15f58 <__vfprintf+0xb88>
   15f49:	45 85 db             	test   %r11d,%r11d
   15f4c:	0f 84 c6 fd ff ff    	je     15d18 <__vfprintf+0x948>
   15f52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15f58:	83 f8 01             	cmp    $0x1,%eax
   15f5b:	0f 84 d6 0e 00 00    	je     16e37 <__vfprintf+0x1a67>
   15f61:	48 8d 9c 24 a4 02 00 	lea    0x2a4(%rsp),%rbx
   15f68:	00 
   15f69:	49 89 d8             	mov    %rbx,%r8
   15f6c:	83 f8 02             	cmp    $0x2,%eax
   15f6f:	75 5f                	jne    15fd0 <__vfprintf+0xc00>
   15f71:	48 8b 94 24 90 00 00 	mov    0x90(%rsp),%rdx
   15f78:	00 
   15f79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15f80:	48 89 c8             	mov    %rcx,%rax
   15f83:	49 83 e8 01          	sub    $0x1,%r8
   15f87:	83 e0 0f             	and    $0xf,%eax
   15f8a:	48 c1 e9 04          	shr    $0x4,%rcx
   15f8e:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
   15f92:	41 88 00             	mov    %al,(%r8)
   15f95:	75 e9                	jne    15f80 <__vfprintf+0xbb0>
   15f97:	4c 29 c3             	sub    %r8,%rbx
   15f9a:	89 5c 24 40          	mov    %ebx,0x40(%rsp)
   15f9e:	83 fb 64             	cmp    $0x64,%ebx
   15fa1:	0f 8f 7c 1b 00 00    	jg     17b23 <__vfprintf+0x2753>
   15fa7:	41 39 db             	cmp    %ebx,%r11d
   15faa:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   15faf:	0f b6 84 24 b3 00 00 	movzbl 0xb3(%rsp),%eax
   15fb6:	00 
   15fb7:	41 0f 4d db          	cmovge %r11d,%ebx
   15fbb:	0f b6 94 24 31 02 00 	movzbl 0x231(%rsp),%edx
   15fc2:	00 
   15fc3:	e9 a8 fc ff ff       	jmp    15c70 <__vfprintf+0x8a0>
   15fc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   15fcf:	00 
   15fd0:	89 c8                	mov    %ecx,%eax
   15fd2:	4c 89 c2             	mov    %r8,%rdx
   15fd5:	49 83 e8 01          	sub    $0x1,%r8
   15fd9:	83 e0 07             	and    $0x7,%eax
   15fdc:	83 c0 30             	add    $0x30,%eax
   15fdf:	48 c1 e9 03          	shr    $0x3,%rcx
   15fe3:	41 88 00             	mov    %al,(%r8)
   15fe6:	75 e8                	jne    15fd0 <__vfprintf+0xc00>
   15fe8:	3c 30                	cmp    $0x30,%al
   15fea:	74 ab                	je     15f97 <__vfprintf+0xbc7>
   15fec:	f6 04 24 01          	testb  $0x1,(%rsp)
   15ff0:	74 a5                	je     15f97 <__vfprintf+0xbc7>
   15ff2:	41 c6 40 ff 30       	movb   $0x30,-0x1(%r8)
   15ff7:	4c 8d 42 fe          	lea    -0x2(%rdx),%r8
   15ffb:	eb 9a                	jmp    15f97 <__vfprintf+0xbc7>
   15ffd:	83 0c 24 20          	orl    $0x20,(%rsp)
   16001:	41 0f be 1c 24       	movsbl (%r12),%ebx
   16006:	e9 ee f5 ff ff       	jmp    155f9 <__vfprintf+0x229>
   1600b:	8b 44 24 38          	mov    0x38(%rsp),%eax
   1600f:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   16014:	44 8d 78 01          	lea    0x1(%rax),%r15d
   16018:	f6 04 24 10          	testb  $0x10,(%rsp)
   1601c:	0f 85 64 1c 00 00    	jne    17c86 <__vfprintf+0x28b6>
   16022:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   16029:	00 
   1602a:	48 85 d2             	test   %rdx,%rdx
   1602d:	0f 84 22 1e 00 00    	je     17e55 <__vfprintf+0x2a85>
   16033:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   16038:	48 c1 e0 04          	shl    $0x4,%rax
   1603c:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
   16040:	88 84 24 40 02 00 00 	mov    %al,0x240(%rsp)
   16047:	bb 01 00 00 00       	mov    $0x1,%ebx
   1604c:	4c 8d a4 24 40 02 00 	lea    0x240(%rsp),%r12
   16053:	00 
   16054:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
   1605b:	00 
   1605c:	c6 84 24 b3 00 00 00 	movb   $0x0,0xb3(%rsp)
   16063:	00 
   16064:	4d 89 e0             	mov    %r12,%r8
   16067:	44 89 7c 24 38       	mov    %r15d,0x38(%rsp)
   1606c:	e9 3c f7 ff ff       	jmp    157ad <__vfprintf+0x3dd>
   16071:	81 0c 24 00 04 00 00 	orl    $0x400,(%rsp)
   16078:	41 0f be 1c 24       	movsbl (%r12),%ebx
   1607d:	e9 77 f5 ff ff       	jmp    155f9 <__vfprintf+0x229>
   16082:	81 0c 24 00 10 00 00 	orl    $0x1000,(%rsp)
   16089:	41 0f be 1c 24       	movsbl (%r12),%ebx
   1608e:	e9 66 f5 ff ff       	jmp    155f9 <__vfprintf+0x229>
   16093:	80 bc 24 b3 00 00 00 	cmpb   $0x0,0xb3(%rsp)
   1609a:	00 
   1609b:	41 0f be 1c 24       	movsbl (%r12),%ebx
   160a0:	0f 85 53 f5 ff ff    	jne    155f9 <__vfprintf+0x229>
   160a6:	c6 84 24 b3 00 00 00 	movb   $0x20,0xb3(%rsp)
   160ad:	20 
   160ae:	e9 46 f5 ff ff       	jmp    155f9 <__vfprintf+0x229>
   160b3:	83 0c 24 01          	orl    $0x1,(%rsp)
   160b7:	41 0f be 1c 24       	movsbl (%r12),%ebx
   160bc:	e9 38 f5 ff ff       	jmp    155f9 <__vfprintf+0x229>
   160c1:	41 0f be 1c 24       	movsbl (%r12),%ebx
   160c6:	e9 2e f5 ff ff       	jmp    155f9 <__vfprintf+0x229>
   160cb:	41 0f be 14 24       	movsbl (%r12),%edx
   160d0:	4d 89 e7             	mov    %r12,%r15
   160d3:	31 db                	xor    %ebx,%ebx
   160d5:	8d 4a d0             	lea    -0x30(%rdx),%ecx
   160d8:	89 d0                	mov    %edx,%eax
   160da:	83 f9 09             	cmp    $0x9,%ecx
   160dd:	76 2f                	jbe    1610e <__vfprintf+0xd3e>
   160df:	e9 66 fc ff ff       	jmp    15d4a <__vfprintf+0x97a>
   160e4:	0f 1f 40 00          	nopl   0x0(%rax)
   160e8:	49 83 c7 01          	add    $0x1,%r15
   160ec:	8d 5c 02 d0          	lea    -0x30(%rdx,%rax,1),%ebx
   160f0:	41 0f be 17          	movsbl (%r15),%edx
   160f4:	8d 4a d0             	lea    -0x30(%rdx),%ecx
   160f7:	89 d0                	mov    %edx,%eax
   160f9:	83 f9 09             	cmp    $0x9,%ecx
   160fc:	0f 87 48 fc ff ff    	ja     15d4a <__vfprintf+0x97a>
   16102:	81 fb cc cc cc 0c    	cmp    $0xccccccc,%ebx
   16108:	0f 8f 52 f5 ff ff    	jg     15660 <__vfprintf+0x290>
   1610e:	8d 04 9b             	lea    (%rbx,%rbx,4),%eax
   16111:	b9 2f 00 00 80       	mov    $0x8000002f,%ecx
   16116:	01 c0                	add    %eax,%eax
   16118:	29 d1                	sub    %edx,%ecx
   1611a:	39 c1                	cmp    %eax,%ecx
   1611c:	7d ca                	jge    160e8 <__vfprintf+0xd18>
   1611e:	e9 3d f5 ff ff       	jmp    15660 <__vfprintf+0x290>
   16123:	41 0f be 1c 24       	movsbl (%r12),%ebx
   16128:	4d 8d 7c 24 01       	lea    0x1(%r12),%r15
   1612d:	83 fb 2a             	cmp    $0x2a,%ebx
   16130:	0f 84 7a 23 00 00    	je     184b0 <__vfprintf+0x30e0>
   16136:	8d 43 d0             	lea    -0x30(%rbx),%eax
   16139:	83 f8 09             	cmp    $0x9,%eax
   1613c:	0f 87 b3 21 00 00    	ja     182f5 <__vfprintf+0x2f25>
   16142:	b8 2f 00 00 80       	mov    $0x8000002f,%eax
   16147:	39 d8                	cmp    %ebx,%eax
   16149:	0f 88 11 f5 ff ff    	js     15660 <__vfprintf+0x290>
   1614f:	31 c0                	xor    %eax,%eax
   16151:	eb 27                	jmp    1617a <__vfprintf+0xdaa>
   16153:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16158:	41 81 fc cc cc cc 0c 	cmp    $0xccccccc,%r12d
   1615f:	0f 8f fb f4 ff ff    	jg     15660 <__vfprintf+0x290>
   16165:	43 8d 04 a4          	lea    (%r12,%r12,4),%eax
   16169:	ba 2f 00 00 80       	mov    $0x8000002f,%edx
   1616e:	01 c0                	add    %eax,%eax
   16170:	29 da                	sub    %ebx,%edx
   16172:	39 c2                	cmp    %eax,%edx
   16174:	0f 8c e6 f4 ff ff    	jl     15660 <__vfprintf+0x290>
   1617a:	49 83 c7 01          	add    $0x1,%r15
   1617e:	44 8d 64 03 d0       	lea    -0x30(%rbx,%rax,1),%r12d
   16183:	41 0f be 5f ff       	movsbl -0x1(%r15),%ebx
   16188:	8d 43 d0             	lea    -0x30(%rbx),%eax
   1618b:	83 f8 09             	cmp    $0x9,%eax
   1618e:	76 c8                	jbe    16158 <__vfprintf+0xd88>
   16190:	83 fb 24             	cmp    $0x24,%ebx
   16193:	0f 84 f0 23 00 00    	je     18589 <__vfprintf+0x31b9>
   16199:	45 89 e3             	mov    %r12d,%r11d
   1619c:	4d 89 fc             	mov    %r15,%r12
   1619f:	e9 59 f4 ff ff       	jmp    155fd <__vfprintf+0x22d>
   161a4:	81 0c 24 80 00 00 00 	orl    $0x80,(%rsp)
   161ab:	41 0f be 1c 24       	movsbl (%r12),%ebx
   161b0:	e9 44 f4 ff ff       	jmp    155f9 <__vfprintf+0x229>
   161b5:	41 0f be 1c 24       	movsbl (%r12),%ebx
   161ba:	80 fb 68             	cmp    $0x68,%bl
   161bd:	0f 84 4a 19 00 00    	je     17b0d <__vfprintf+0x273d>
   161c3:	83 0c 24 40          	orl    $0x40,(%rsp)
   161c7:	e9 2d f4 ff ff       	jmp    155f9 <__vfprintf+0x229>
   161cc:	83 0c 24 08          	orl    $0x8,(%rsp)
   161d0:	41 0f be 1c 24       	movsbl (%r12),%ebx
   161d5:	e9 1f f4 ff ff       	jmp    155f9 <__vfprintf+0x229>
   161da:	c6 84 24 b3 00 00 00 	movb   $0x2b,0xb3(%rsp)
   161e1:	2b 
   161e2:	41 0f be 1c 24       	movsbl (%r12),%ebx
   161e7:	e9 0d f4 ff ff       	jmp    155f9 <__vfprintf+0x229>
   161ec:	83 0c 24 10          	orl    $0x10,(%rsp)
   161f0:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   161f5:	8b 74 24 38          	mov    0x38(%rsp),%esi
   161f9:	48 8b 8c 24 c8 00 00 	mov    0xc8(%rsp),%rcx
   16200:	00 
   16201:	8d 46 01             	lea    0x1(%rsi),%eax
   16204:	f7 04 24 00 10 00 00 	testl  $0x1000,(%rsp)
   1620b:	0f 84 37 0f 00 00    	je     17148 <__vfprintf+0x1d78>
   16211:	48 85 c9             	test   %rcx,%rcx
   16214:	0f 84 bf 16 00 00    	je     178d9 <__vfprintf+0x2509>
   1621a:	48 63 d6             	movslq %esi,%rdx
   1621d:	48 c1 e2 04          	shl    $0x4,%rdx
   16221:	48 8b 0c 11          	mov    (%rcx,%rdx,1),%rcx
   16225:	89 44 24 38          	mov    %eax,0x38(%rsp)
   16229:	31 c0                	xor    %eax,%eax
   1622b:	e9 00 fd ff ff       	jmp    15f30 <__vfprintf+0xb60>
   16230:	83 0c 24 10          	orl    $0x10,(%rsp)
   16234:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   16239:	8b 74 24 38          	mov    0x38(%rsp),%esi
   1623d:	48 8b 8c 24 c8 00 00 	mov    0xc8(%rsp),%rcx
   16244:	00 
   16245:	8d 46 01             	lea    0x1(%rsi),%eax
   16248:	f7 04 24 00 10 00 00 	testl  $0x1000,(%rsp)
   1624f:	0f 84 ab 0f 00 00    	je     17200 <__vfprintf+0x1e30>
   16255:	48 85 c9             	test   %rcx,%rcx
   16258:	0f 84 ad 16 00 00    	je     1790b <__vfprintf+0x253b>
   1625e:	48 63 d6             	movslq %esi,%rdx
   16261:	48 c1 e2 04          	shl    $0x4,%rdx
   16265:	48 8b 0c 11          	mov    (%rcx,%rdx,1),%rcx
   16269:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1626d:	b8 01 00 00 00       	mov    $0x1,%eax
   16272:	e9 b9 fc ff ff       	jmp    15f30 <__vfprintf+0xb60>
   16277:	48 8d 05 b2 0a 01 00 	lea    0x10ab2(%rip),%rax        # 26d30 <xdigs_lower.3362>
   1627e:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   16283:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   1628a:	00 
   1628b:	8b 74 24 38          	mov    0x38(%rsp),%esi
   1628f:	48 8b 8c 24 c8 00 00 	mov    0xc8(%rsp),%rcx
   16296:	00 
   16297:	8d 46 01             	lea    0x1(%rsi),%eax
   1629a:	f7 04 24 00 10 00 00 	testl  $0x1000,(%rsp)
   162a1:	0f 84 4a 0e 00 00    	je     170f1 <__vfprintf+0x1d21>
   162a7:	48 85 c9             	test   %rcx,%rcx
   162aa:	0f 84 90 16 00 00    	je     17940 <__vfprintf+0x2570>
   162b0:	48 63 d6             	movslq %esi,%rdx
   162b3:	48 c1 e2 04          	shl    $0x4,%rdx
   162b7:	48 8b 0c 11          	mov    (%rcx,%rdx,1),%rcx
   162bb:	f6 04 24 01          	testb  $0x1,(%rsp)
   162bf:	0f 84 87 0c 00 00    	je     16f4c <__vfprintf+0x1b7c>
   162c5:	48 85 c9             	test   %rcx,%rcx
   162c8:	0f 84 7e 0c 00 00    	je     16f4c <__vfprintf+0x1b7c>
   162ce:	89 44 24 38          	mov    %eax,0x38(%rsp)
   162d2:	b8 02 00 00 00       	mov    $0x2,%eax
   162d7:	88 9c 24 31 02 00 00 	mov    %bl,0x231(%rsp)
   162de:	e9 4d fc ff ff       	jmp    15f30 <__vfprintf+0xb60>
   162e3:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   162e8:	e9 08 ff ff ff       	jmp    161f5 <__vfprintf+0xe25>
   162ed:	48 8d 05 2c 0a 01 00 	lea    0x10a2c(%rip),%rax        # 26d20 <xdigs_upper.3363>
   162f4:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   162f9:	48 89 84 24 90 00 00 	mov    %rax,0x90(%rsp)
   16300:	00 
   16301:	eb 88                	jmp    1628b <__vfprintf+0xebb>
   16303:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   16308:	e9 2c ff ff ff       	jmp    16239 <__vfprintf+0xe69>
   1630d:	0f 1f 00             	nopl   (%rax)
   16310:	80 bc 24 8b 00 00 00 	cmpb   $0x0,0x8b(%rsp)
   16317:	00 
   16318:	0f 85 02 05 00 00    	jne    16820 <__vfprintf+0x1450>
   1631e:	8b 8c 24 bc 00 00 00 	mov    0xbc(%rsp),%ecx
   16325:	85 c9                	test   %ecx,%ecx
   16327:	0f 8e 2d 0c 00 00    	jle    16f5a <__vfprintf+0x1b8a>
   1632d:	48 8b ac 24 c0 00 00 	mov    0xc0(%rsp),%rbp
   16334:	00 
   16335:	8b 84 24 8c 00 00 00 	mov    0x8c(%rsp),%eax
   1633c:	4c 29 c5             	sub    %r8,%rbp
   1633f:	39 e8                	cmp    %ebp,%eax
   16341:	0f 4e e8             	cmovle %eax,%ebp
   16344:	85 ed                	test   %ebp,%ebp
   16346:	7e 50                	jle    16398 <__vfprintf+0xfc8>
   16348:	48 63 c5             	movslq %ebp,%rax
   1634b:	8b 94 24 fc 00 00 00 	mov    0xfc(%rsp),%edx
   16352:	4d 89 02             	mov    %r8,(%r10)
   16355:	49 83 c2 10          	add    $0x10,%r10
   16359:	49 89 42 f8          	mov    %rax,-0x8(%r10)
   1635d:	8b 84 24 f8 00 00 00 	mov    0xf8(%rsp),%eax
   16364:	01 ea                	add    %ebp,%edx
   16366:	83 c0 01             	add    $0x1,%eax
   16369:	89 94 24 fc 00 00 00 	mov    %edx,0xfc(%rsp)
   16370:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
   16377:	83 f8 07             	cmp    $0x7,%eax
   1637a:	7e 1c                	jle    16398 <__vfprintf+0xfc8>
   1637c:	85 d2                	test   %edx,%edx
   1637e:	0f 85 ac 17 00 00    	jne    17b30 <__vfprintf+0x2760>
   16384:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   1638b:	00 00 00 00 
   1638f:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   16394:	0f 1f 40 00          	nopl   0x0(%rax)
   16398:	85 ed                	test   %ebp,%ebp
   1639a:	b8 00 00 00 00       	mov    $0x0,%eax
   1639f:	44 8b a4 24 8c 00 00 	mov    0x8c(%rsp),%r12d
   163a6:	00 
   163a7:	0f 48 e8             	cmovs  %eax,%ebp
   163aa:	41 29 ec             	sub    %ebp,%r12d
   163ad:	45 85 e4             	test   %r12d,%r12d
   163b0:	0f 8f 28 10 00 00    	jg     173de <__vfprintf+0x200e>
   163b6:	48 63 84 24 8c 00 00 	movslq 0x8c(%rsp),%rax
   163bd:	00 
   163be:	49 01 c0             	add    %rax,%r8
   163c1:	8b 04 24             	mov    (%rsp),%eax
   163c4:	83 e0 01             	and    $0x1,%eax
   163c7:	44 09 d8             	or     %r11d,%eax
   163ca:	0f 84 64 f5 ff ff    	je     15934 <__vfprintf+0x564>
   163d0:	48 8d 05 cc 07 01 00 	lea    0x107cc(%rip),%rax        # 26ba3 <g_dyn_entry_table+0xba3>
   163d7:	49 c7 42 08 01 00 00 	movq   $0x1,0x8(%r10)
   163de:	00 
   163df:	49 83 c2 10          	add    $0x10,%r10
   163e3:	49 89 42 f0          	mov    %rax,-0x10(%r10)
   163e7:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   163ee:	8d 50 01             	lea    0x1(%rax),%edx
   163f1:	8b 84 24 f8 00 00 00 	mov    0xf8(%rsp),%eax
   163f8:	89 94 24 fc 00 00 00 	mov    %edx,0xfc(%rsp)
   163ff:	83 c0 01             	add    $0x1,%eax
   16402:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
   16409:	83 f8 07             	cmp    $0x7,%eax
   1640c:	7e 22                	jle    16430 <__vfprintf+0x1060>
   1640e:	85 d2                	test   %edx,%edx
   16410:	0f 85 99 16 00 00    	jne    17aaf <__vfprintf+0x26df>
   16416:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   1641d:	00 00 00 00 
   16421:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   16426:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1642d:	00 00 00 
   16430:	48 8b ac 24 c0 00 00 	mov    0xc0(%rsp),%rbp
   16437:	00 
   16438:	4c 29 c5             	sub    %r8,%rbp
   1643b:	41 39 eb             	cmp    %ebp,%r11d
   1643e:	41 0f 4e eb          	cmovle %r11d,%ebp
   16442:	85 ed                	test   %ebp,%ebp
   16444:	7e 3b                	jle    16481 <__vfprintf+0x10b1>
   16446:	48 63 c5             	movslq %ebp,%rax
   16449:	8b 94 24 fc 00 00 00 	mov    0xfc(%rsp),%edx
   16450:	4d 89 02             	mov    %r8,(%r10)
   16453:	49 89 42 08          	mov    %rax,0x8(%r10)
   16457:	8b 84 24 f8 00 00 00 	mov    0xf8(%rsp),%eax
   1645e:	01 ea                	add    %ebp,%edx
   16460:	83 c0 01             	add    $0x1,%eax
   16463:	89 94 24 fc 00 00 00 	mov    %edx,0xfc(%rsp)
   1646a:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
   16471:	83 f8 07             	cmp    $0x7,%eax
   16474:	0f 8f e6 0d 00 00    	jg     17260 <__vfprintf+0x1e90>
   1647a:	49 83 c2 10          	add    $0x10,%r10
   1647e:	41 29 eb             	sub    %ebp,%r11d
   16481:	45 85 db             	test   %r11d,%r11d
   16484:	0f 8e aa f4 ff ff    	jle    15934 <__vfprintf+0x564>
   1648a:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   16491:	8b b4 24 f8 00 00 00 	mov    0xf8(%rsp),%esi
   16498:	41 83 fb 10          	cmp    $0x10,%r11d
   1649c:	0f 8e 5c 1d 00 00    	jle    181fe <__vfprintf+0x2e2e>
   164a2:	48 8d 2d 67 bc 01 00 	lea    0x1bc67(%rip),%rbp        # 32110 <zeroes.3361>
   164a9:	89 5c 24 40          	mov    %ebx,0x40(%rsp)
   164ad:	4c 8b 7c 24 20       	mov    0x20(%rsp),%r15
   164b2:	4c 8d a4 24 f0 00 00 	lea    0xf0(%rsp),%r12
   164b9:	00 
   164ba:	4c 89 6c 24 48       	mov    %r13,0x48(%rsp)
   164bf:	4c 89 e3             	mov    %r12,%rbx
   164c2:	49 89 ed             	mov    %rbp,%r13
   164c5:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
   164ca:	44 89 dd             	mov    %r11d,%ebp
   164cd:	eb 12                	jmp    164e1 <__vfprintf+0x1111>
   164cf:	90                   	nop
   164d0:	8d 7e 02             	lea    0x2(%rsi),%edi
   164d3:	49 83 c2 10          	add    $0x10,%r10
   164d7:	89 d6                	mov    %edx,%esi
   164d9:	83 ed 10             	sub    $0x10,%ebp
   164dc:	83 fd 10             	cmp    $0x10,%ebp
   164df:	7e 3e                	jle    1651f <__vfprintf+0x114f>
   164e1:	83 c0 10             	add    $0x10,%eax
   164e4:	8d 56 01             	lea    0x1(%rsi),%edx
   164e7:	4d 89 2a             	mov    %r13,(%r10)
   164ea:	49 c7 42 08 10 00 00 	movq   $0x10,0x8(%r10)
   164f1:	00 
   164f2:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   164f9:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   16500:	83 fa 07             	cmp    $0x7,%edx
   16503:	7e cb                	jle    164d0 <__vfprintf+0x1100>
   16505:	85 c0                	test   %eax,%eax
   16507:	0f 85 0b 08 00 00    	jne    16d18 <__vfprintf+0x1948>
   1650d:	83 ed 10             	sub    $0x10,%ebp
   16510:	31 f6                	xor    %esi,%esi
   16512:	bf 01 00 00 00       	mov    $0x1,%edi
   16517:	4d 89 fa             	mov    %r15,%r10
   1651a:	83 fd 10             	cmp    $0x10,%ebp
   1651d:	7f c2                	jg     164e1 <__vfprintf+0x1111>
   1651f:	41 89 eb             	mov    %ebp,%r11d
   16522:	8b 5c 24 40          	mov    0x40(%rsp),%ebx
   16526:	4c 89 ed             	mov    %r13,%rbp
   16529:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
   1652e:	49 63 d3             	movslq %r11d,%rdx
   16531:	44 01 d8             	add    %r11d,%eax
   16534:	49 89 2a             	mov    %rbp,(%r10)
   16537:	49 89 52 08          	mov    %rdx,0x8(%r10)
   1653b:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   16542:	89 bc 24 f8 00 00 00 	mov    %edi,0xf8(%rsp)
   16549:	83 ff 07             	cmp    $0x7,%edi
   1654c:	0f 8f b2 03 00 00    	jg     16904 <__vfprintf+0x1534>
   16552:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16558:	49 83 c2 10          	add    $0x10,%r10
   1655c:	e9 d3 f3 ff ff       	jmp    15934 <__vfprintf+0x564>
   16561:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16568:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   1656f:	8b bc 24 f8 00 00 00 	mov    0xf8(%rsp),%edi
   16576:	41 83 ff 10          	cmp    $0x10,%r15d
   1657a:	0f 8e 34 18 00 00    	jle    17db4 <__vfprintf+0x29e4>
   16580:	48 8d 2d 89 bb 01 00 	lea    0x1bb89(%rip),%rbp        # 32110 <zeroes.3361>
   16587:	89 5c 24 78          	mov    %ebx,0x78(%rsp)
   1658b:	44 89 fb             	mov    %r15d,%ebx
   1658e:	4d 89 ef             	mov    %r13,%r15
   16591:	4c 89 44 24 48       	mov    %r8,0x48(%rsp)
   16596:	49 89 ed             	mov    %rbp,%r13
   16599:	4c 8d a4 24 f0 00 00 	lea    0xf0(%rsp),%r12
   165a0:	00 
   165a1:	48 8b 6c 24 30       	mov    0x30(%rsp),%rbp
   165a6:	4c 89 b4 24 80 00 00 	mov    %r14,0x80(%rsp)
   165ad:	00 
   165ae:	4c 8b 74 24 20       	mov    0x20(%rsp),%r14
   165b3:	44 89 5c 24 70       	mov    %r11d,0x70(%rsp)
   165b8:	eb 17                	jmp    165d1 <__vfprintf+0x1201>
   165ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   165c0:	8d 77 02             	lea    0x2(%rdi),%esi
   165c3:	49 83 c2 10          	add    $0x10,%r10
   165c7:	89 d7                	mov    %edx,%edi
   165c9:	83 eb 10             	sub    $0x10,%ebx
   165cc:	83 fb 10             	cmp    $0x10,%ebx
   165cf:	7e 3a                	jle    1660b <__vfprintf+0x123b>
   165d1:	83 c0 10             	add    $0x10,%eax
   165d4:	8d 57 01             	lea    0x1(%rdi),%edx
   165d7:	4d 89 2a             	mov    %r13,(%r10)
   165da:	49 c7 42 08 10 00 00 	movq   $0x10,0x8(%r10)
   165e1:	00 
   165e2:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   165e9:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   165f0:	83 fa 07             	cmp    $0x7,%edx
   165f3:	7e cb                	jle    165c0 <__vfprintf+0x11f0>
   165f5:	85 c0                	test   %eax,%eax
   165f7:	75 77                	jne    16670 <__vfprintf+0x12a0>
   165f9:	83 eb 10             	sub    $0x10,%ebx
   165fc:	31 ff                	xor    %edi,%edi
   165fe:	be 01 00 00 00       	mov    $0x1,%esi
   16603:	4d 89 f2             	mov    %r14,%r10
   16606:	83 fb 10             	cmp    $0x10,%ebx
   16609:	7f c6                	jg     165d1 <__vfprintf+0x1201>
   1660b:	4c 89 ed             	mov    %r13,%rbp
   1660e:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
   16613:	4d 89 fd             	mov    %r15,%r13
   16616:	44 8b 5c 24 70       	mov    0x70(%rsp),%r11d
   1661b:	41 89 df             	mov    %ebx,%r15d
   1661e:	4c 8b b4 24 80 00 00 	mov    0x80(%rsp),%r14
   16625:	00 
   16626:	8b 5c 24 78          	mov    0x78(%rsp),%ebx
   1662a:	49 63 d7             	movslq %r15d,%rdx
   1662d:	44 01 f8             	add    %r15d,%eax
   16630:	49 89 2a             	mov    %rbp,(%r10)
   16633:	49 83 c2 10          	add    $0x10,%r10
   16637:	49 89 52 f8          	mov    %rdx,-0x8(%r10)
   1663b:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   16642:	89 b4 24 f8 00 00 00 	mov    %esi,0xf8(%rsp)
   16649:	83 fe 07             	cmp    $0x7,%esi
   1664c:	0f 8e 86 f2 ff ff    	jle    158d8 <__vfprintf+0x508>
   16652:	85 c0                	test   %eax,%eax
   16654:	0f 85 5f 0a 00 00    	jne    170b9 <__vfprintf+0x1ce9>
   1665a:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   16661:	00 00 00 00 
   16665:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1666a:	e9 69 f2 ff ff       	jmp    158d8 <__vfprintf+0x508>
   1666f:	90                   	nop
   16670:	4c 89 e6             	mov    %r12,%rsi
   16673:	48 89 ef             	mov    %rbp,%rdi
   16676:	e8 35 ed ff ff       	call   153b0 <__sprint.part.0>
   1667b:	85 c0                	test   %eax,%eax
   1667d:	0f 85 dd f0 ff ff    	jne    15760 <__vfprintf+0x390>
   16683:	8b bc 24 f8 00 00 00 	mov    0xf8(%rsp),%edi
   1668a:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   16691:	4d 89 f2             	mov    %r14,%r10
   16694:	8d 77 01             	lea    0x1(%rdi),%esi
   16697:	e9 2d ff ff ff       	jmp    165c9 <__vfprintf+0x11f9>
   1669c:	0f 1f 40 00          	nopl   0x0(%rax)
   166a0:	44 8b 7c 24 2c       	mov    0x2c(%rsp),%r15d
   166a5:	41 29 df             	sub    %ebx,%r15d
   166a8:	45 85 ff             	test   %r15d,%r15d
   166ab:	0f 8e 14 f2 ff ff    	jle    158c5 <__vfprintf+0x4f5>
   166b1:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   166b8:	8b bc 24 f8 00 00 00 	mov    0xf8(%rsp),%edi
   166bf:	41 83 ff 10          	cmp    $0x10,%r15d
   166c3:	0f 8e d9 18 00 00    	jle    17fa2 <__vfprintf+0x2bd2>
   166c9:	48 8d 2d 40 ba 01 00 	lea    0x1ba40(%rip),%rbp        # 32110 <zeroes.3361>
   166d0:	89 9c 24 80 00 00 00 	mov    %ebx,0x80(%rsp)
   166d7:	44 89 fb             	mov    %r15d,%ebx
   166da:	4d 89 ef             	mov    %r13,%r15
   166dd:	4c 89 44 24 70       	mov    %r8,0x70(%rsp)
   166e2:	49 89 ed             	mov    %rbp,%r13
   166e5:	4c 8d a4 24 f0 00 00 	lea    0xf0(%rsp),%r12
   166ec:	00 
   166ed:	48 8b 6c 24 30       	mov    0x30(%rsp),%rbp
   166f2:	4c 89 b4 24 a0 00 00 	mov    %r14,0xa0(%rsp)
   166f9:	00 
   166fa:	4c 8b 74 24 20       	mov    0x20(%rsp),%r14
   166ff:	44 89 5c 24 78       	mov    %r11d,0x78(%rsp)
   16704:	eb 1b                	jmp    16721 <__vfprintf+0x1351>
   16706:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1670d:	00 00 00 
   16710:	8d 77 02             	lea    0x2(%rdi),%esi
   16713:	49 83 c2 10          	add    $0x10,%r10
   16717:	89 d7                	mov    %edx,%edi
   16719:	83 eb 10             	sub    $0x10,%ebx
   1671c:	83 fb 10             	cmp    $0x10,%ebx
   1671f:	7e 3a                	jle    1675b <__vfprintf+0x138b>
   16721:	83 c0 10             	add    $0x10,%eax
   16724:	8d 57 01             	lea    0x1(%rdi),%edx
   16727:	4d 89 2a             	mov    %r13,(%r10)
   1672a:	49 c7 42 08 10 00 00 	movq   $0x10,0x8(%r10)
   16731:	00 
   16732:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   16739:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   16740:	83 fa 07             	cmp    $0x7,%edx
   16743:	7e cb                	jle    16710 <__vfprintf+0x1340>
   16745:	85 c0                	test   %eax,%eax
   16747:	75 7f                	jne    167c8 <__vfprintf+0x13f8>
   16749:	83 eb 10             	sub    $0x10,%ebx
   1674c:	31 ff                	xor    %edi,%edi
   1674e:	be 01 00 00 00       	mov    $0x1,%esi
   16753:	4d 89 f2             	mov    %r14,%r10
   16756:	83 fb 10             	cmp    $0x10,%ebx
   16759:	7f c6                	jg     16721 <__vfprintf+0x1351>
   1675b:	4c 89 ed             	mov    %r13,%rbp
   1675e:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
   16763:	4d 89 fd             	mov    %r15,%r13
   16766:	44 8b 5c 24 78       	mov    0x78(%rsp),%r11d
   1676b:	41 89 df             	mov    %ebx,%r15d
   1676e:	4c 8b b4 24 a0 00 00 	mov    0xa0(%rsp),%r14
   16775:	00 
   16776:	8b 9c 24 80 00 00 00 	mov    0x80(%rsp),%ebx
   1677d:	49 63 d7             	movslq %r15d,%rdx
   16780:	44 01 f8             	add    %r15d,%eax
   16783:	49 89 2a             	mov    %rbp,(%r10)
   16786:	49 83 c2 10          	add    $0x10,%r10
   1678a:	49 89 52 f8          	mov    %rdx,-0x8(%r10)
   1678e:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   16795:	89 b4 24 f8 00 00 00 	mov    %esi,0xf8(%rsp)
   1679c:	83 fe 07             	cmp    $0x7,%esi
   1679f:	0f 8e 20 f1 ff ff    	jle    158c5 <__vfprintf+0x4f5>
   167a5:	85 c0                	test   %eax,%eax
   167a7:	0f 85 5c 12 00 00    	jne    17a09 <__vfprintf+0x2639>
   167ad:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   167b4:	00 00 00 00 
   167b8:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   167bd:	e9 03 f1 ff ff       	jmp    158c5 <__vfprintf+0x4f5>
   167c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   167c8:	4c 89 e6             	mov    %r12,%rsi
   167cb:	48 89 ef             	mov    %rbp,%rdi
   167ce:	e8 dd eb ff ff       	call   153b0 <__sprint.part.0>
   167d3:	85 c0                	test   %eax,%eax
   167d5:	0f 85 85 ef ff ff    	jne    15760 <__vfprintf+0x390>
   167db:	8b bc 24 f8 00 00 00 	mov    0xf8(%rsp),%edi
   167e2:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   167e9:	4d 89 f2             	mov    %r14,%r10
   167ec:	8d 77 01             	lea    0x1(%rdi),%esi
   167ef:	e9 25 ff ff ff       	jmp    16719 <__vfprintf+0x1349>
   167f4:	0f 1f 40 00          	nopl   0x0(%rax)
   167f8:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   167fd:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   16804:	00 
   16805:	e8 a6 eb ff ff       	call   153b0 <__sprint.part.0>
   1680a:	85 c0                	test   %eax,%eax
   1680c:	0f 84 66 f1 ff ff    	je     15978 <__vfprintf+0x5a8>
   16812:	e9 49 ef ff ff       	jmp    15760 <__vfprintf+0x390>
   16817:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1681e:	00 00 
   16820:	8b b4 24 f8 00 00 00 	mov    0xf8(%rsp),%esi
   16827:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   1682e:	49 8d 4a 10          	lea    0x10(%r10),%rcx
   16832:	8d 56 01             	lea    0x1(%rsi),%edx
   16835:	41 83 fb 01          	cmp    $0x1,%r11d
   16839:	0f 8e 79 05 00 00    	jle    16db8 <__vfprintf+0x19e8>
   1683f:	41 0f b6 38          	movzbl (%r8),%edi
   16843:	83 c0 02             	add    $0x2,%eax
   16846:	4c 8d a4 24 40 02 00 	lea    0x240(%rsp),%r12
   1684d:	00 
   1684e:	c6 84 24 41 02 00 00 	movb   $0x2e,0x241(%rsp)
   16855:	2e 
   16856:	4d 89 22             	mov    %r12,(%r10)
   16859:	49 8d 68 01          	lea    0x1(%r8),%rbp
   1685d:	83 c6 02             	add    $0x2,%esi
   16860:	40 88 bc 24 40 02 00 	mov    %dil,0x240(%rsp)
   16867:	00 
   16868:	49 c7 42 08 02 00 00 	movq   $0x2,0x8(%r10)
   1686f:	00 
   16870:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   16877:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   1687e:	83 fa 07             	cmp    $0x7,%edx
   16881:	0f 8e 6f 03 00 00    	jle    16bf6 <__vfprintf+0x1826>
   16887:	85 c0                	test   %eax,%eax
   16889:	0f 85 2d 03 00 00    	jne    16bbc <__vfprintf+0x17ec>
   1688f:	8b 84 24 98 00 00 00 	mov    0x98(%rsp),%eax
   16896:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   1689b:	be 01 00 00 00       	mov    $0x1,%esi
   168a0:	48 89 ac 24 30 01 00 	mov    %rbp,0x130(%rsp)
   168a7:	00 
   168a8:	83 e8 01             	sub    $0x1,%eax
   168ab:	48 63 d0             	movslq %eax,%rdx
   168ae:	48 89 94 24 38 01 00 	mov    %rdx,0x138(%rsp)
   168b5:	00 
   168b6:	48 83 c1 10          	add    $0x10,%rcx
   168ba:	44 8d 46 01          	lea    0x1(%rsi),%r8d
   168be:	44 2b 9c 24 98 00 00 	sub    0x98(%rsp),%r11d
   168c5:	00 
   168c6:	45 89 dc             	mov    %r11d,%r12d
   168c9:	45 85 db             	test   %r11d,%r11d
   168cc:	0f 8f 7a 03 00 00    	jg     16c4c <__vfprintf+0x187c>
   168d2:	48 8d 94 24 38 02 00 	lea    0x238(%rsp),%rdx
   168d9:	00 
   168da:	44 89 84 24 f8 00 00 	mov    %r8d,0xf8(%rsp)
   168e1:	00 
   168e2:	48 89 11             	mov    %rdx,(%rcx)
   168e5:	48 63 94 24 9c 00 00 	movslq 0x9c(%rsp),%rdx
   168ec:	00 
   168ed:	01 d0                	add    %edx,%eax
   168ef:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   168f3:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   168fa:	41 83 f8 07          	cmp    $0x7,%r8d
   168fe:	0f 8e 26 05 00 00    	jle    16e2a <__vfprintf+0x1a5a>
   16904:	85 c0                	test   %eax,%eax
   16906:	0f 84 18 f0 ff ff    	je     15924 <__vfprintf+0x554>
   1690c:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   16911:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   16918:	00 
   16919:	e8 92 ea ff ff       	call   153b0 <__sprint.part.0>
   1691e:	85 c0                	test   %eax,%eax
   16920:	0f 85 3a ee ff ff    	jne    15760 <__vfprintf+0x390>
   16926:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1692b:	e9 04 f0 ff ff       	jmp    15934 <__vfprintf+0x564>
   16930:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   16937:	44 8b 8c 24 f8 00 00 	mov    0xf8(%rsp),%r9d
   1693e:	00 
   1693f:	83 fd 10             	cmp    $0x10,%ebp
   16942:	0f 8e 30 15 00 00    	jle    17e78 <__vfprintf+0x2aa8>
   16948:	4c 8d 3d d1 b7 01 00 	lea    0x1b7d1(%rip),%r15        # 32120 <blanks.3360>
   1694f:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   16956:	00 
   16957:	44 89 64 24 70       	mov    %r12d,0x70(%rsp)
   1695c:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
   16961:	89 9c 24 a0 00 00 00 	mov    %ebx,0xa0(%rsp)
   16968:	48 89 f3             	mov    %rsi,%rbx
   1696b:	4c 89 b4 24 a8 00 00 	mov    %r14,0xa8(%rsp)
   16972:	00 
   16973:	4d 89 fe             	mov    %r15,%r14
   16976:	4d 89 ef             	mov    %r13,%r15
   16979:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
   1697e:	4c 89 44 24 78       	mov    %r8,0x78(%rsp)
   16983:	44 89 9c 24 80 00 00 	mov    %r11d,0x80(%rsp)
   1698a:	00 
   1698b:	eb 16                	jmp    169a3 <__vfprintf+0x15d3>
   1698d:	0f 1f 00             	nopl   (%rax)
   16990:	41 8d 79 02          	lea    0x2(%r9),%edi
   16994:	49 83 c2 10          	add    $0x10,%r10
   16998:	41 89 d1             	mov    %edx,%r9d
   1699b:	83 ed 10             	sub    $0x10,%ebp
   1699e:	83 fd 10             	cmp    $0x10,%ebp
   169a1:	7e 40                	jle    169e3 <__vfprintf+0x1613>
   169a3:	83 c0 10             	add    $0x10,%eax
   169a6:	41 8d 51 01          	lea    0x1(%r9),%edx
   169aa:	4d 89 32             	mov    %r14,(%r10)
   169ad:	49 c7 42 08 10 00 00 	movq   $0x10,0x8(%r10)
   169b4:	00 
   169b5:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   169bc:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   169c3:	83 fa 07             	cmp    $0x7,%edx
   169c6:	7e c8                	jle    16990 <__vfprintf+0x15c0>
   169c8:	85 c0                	test   %eax,%eax
   169ca:	0f 85 80 00 00 00    	jne    16a50 <__vfprintf+0x1680>
   169d0:	83 ed 10             	sub    $0x10,%ebp
   169d3:	45 31 c9             	xor    %r9d,%r9d
   169d6:	bf 01 00 00 00       	mov    $0x1,%edi
   169db:	4d 89 ea             	mov    %r13,%r10
   169de:	83 fd 10             	cmp    $0x10,%ebp
   169e1:	7f c0                	jg     169a3 <__vfprintf+0x15d3>
   169e3:	4d 89 fd             	mov    %r15,%r13
   169e6:	44 8b 64 24 70       	mov    0x70(%rsp),%r12d
   169eb:	4d 89 f7             	mov    %r14,%r15
   169ee:	4c 8b 44 24 78       	mov    0x78(%rsp),%r8
   169f3:	44 8b 9c 24 80 00 00 	mov    0x80(%rsp),%r11d
   169fa:	00 
   169fb:	8b 9c 24 a0 00 00 00 	mov    0xa0(%rsp),%ebx
   16a02:	4c 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%r14
   16a09:	00 
   16a0a:	48 63 cd             	movslq %ebp,%rcx
   16a0d:	01 e8                	add    %ebp,%eax
   16a0f:	4d 89 3a             	mov    %r15,(%r10)
   16a12:	49 83 c2 10          	add    $0x10,%r10
   16a16:	49 89 4a f8          	mov    %rcx,-0x8(%r10)
   16a1a:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   16a21:	89 bc 24 f8 00 00 00 	mov    %edi,0xf8(%rsp)
   16a28:	83 ff 07             	cmp    $0x7,%edi
   16a2b:	0f 8e b2 ed ff ff    	jle    157e3 <__vfprintf+0x413>
   16a31:	85 c0                	test   %eax,%eax
   16a33:	0f 85 23 0b 00 00    	jne    1755c <__vfprintf+0x218c>
   16a39:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   16a40:	00 00 00 00 
   16a44:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   16a49:	e9 95 ed ff ff       	jmp    157e3 <__vfprintf+0x413>
   16a4e:	66 90                	xchg   %ax,%ax
   16a50:	48 89 de             	mov    %rbx,%rsi
   16a53:	4c 89 e7             	mov    %r12,%rdi
   16a56:	e8 55 e9 ff ff       	call   153b0 <__sprint.part.0>
   16a5b:	85 c0                	test   %eax,%eax
   16a5d:	0f 85 fd ec ff ff    	jne    15760 <__vfprintf+0x390>
   16a63:	44 8b 8c 24 f8 00 00 	mov    0xf8(%rsp),%r9d
   16a6a:	00 
   16a6b:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   16a72:	4d 89 ea             	mov    %r13,%r10
   16a75:	41 8d 79 01          	lea    0x1(%r9),%edi
   16a79:	e9 1d ff ff ff       	jmp    1699b <__vfprintf+0x15cb>
   16a7e:	66 90                	xchg   %ax,%ax
   16a80:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   16a87:	8b b4 24 f8 00 00 00 	mov    0xf8(%rsp),%esi
   16a8e:	41 83 fc 10          	cmp    $0x10,%r12d
   16a92:	0f 8e e5 14 00 00    	jle    17f7d <__vfprintf+0x2bad>
   16a98:	4c 8d 3d 81 b6 01 00 	lea    0x1b681(%rip),%r15        # 32120 <blanks.3360>
   16a9f:	48 8d ac 24 f0 00 00 	lea    0xf0(%rsp),%rbp
   16aa6:	00 
   16aa7:	89 1c 24             	mov    %ebx,(%rsp)
   16aaa:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   16aaf:	4c 89 74 24 40       	mov    %r14,0x40(%rsp)
   16ab4:	4d 89 fe             	mov    %r15,%r14
   16ab7:	4d 89 ef             	mov    %r13,%r15
   16aba:	45 89 e5             	mov    %r12d,%r13d
   16abd:	49 89 ec             	mov    %rbp,%r12
   16ac0:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
   16ac5:	eb 1c                	jmp    16ae3 <__vfprintf+0x1713>
   16ac7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   16ace:	00 00 
   16ad0:	8d 7e 02             	lea    0x2(%rsi),%edi
   16ad3:	49 83 c2 10          	add    $0x10,%r10
   16ad7:	89 d6                	mov    %edx,%esi
   16ad9:	41 83 ed 10          	sub    $0x10,%r13d
   16add:	41 83 fd 10          	cmp    $0x10,%r13d
   16ae1:	7e 40                	jle    16b23 <__vfprintf+0x1753>
   16ae3:	83 c0 10             	add    $0x10,%eax
   16ae6:	8d 56 01             	lea    0x1(%rsi),%edx
   16ae9:	4d 89 32             	mov    %r14,(%r10)
   16aec:	49 c7 42 08 10 00 00 	movq   $0x10,0x8(%r10)
   16af3:	00 
   16af4:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   16afb:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   16b02:	83 fa 07             	cmp    $0x7,%edx
   16b05:	7e c9                	jle    16ad0 <__vfprintf+0x1700>
   16b07:	85 c0                	test   %eax,%eax
   16b09:	0f 85 81 00 00 00    	jne    16b90 <__vfprintf+0x17c0>
   16b0f:	41 83 ed 10          	sub    $0x10,%r13d
   16b13:	31 f6                	xor    %esi,%esi
   16b15:	bf 01 00 00 00       	mov    $0x1,%edi
   16b1a:	49 89 ea             	mov    %rbp,%r10
   16b1d:	41 83 fd 10          	cmp    $0x10,%r13d
   16b21:	7f c0                	jg     16ae3 <__vfprintf+0x1713>
   16b23:	45 89 ec             	mov    %r13d,%r12d
   16b26:	8b 1c 24             	mov    (%rsp),%ebx
   16b29:	4d 89 fd             	mov    %r15,%r13
   16b2c:	4d 89 f7             	mov    %r14,%r15
   16b2f:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
   16b34:	49 63 d4             	movslq %r12d,%rdx
   16b37:	44 01 e0             	add    %r12d,%eax
   16b3a:	4d 89 3a             	mov    %r15,(%r10)
   16b3d:	49 89 52 08          	mov    %rdx,0x8(%r10)
   16b41:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   16b48:	89 bc 24 f8 00 00 00 	mov    %edi,0xf8(%rsp)
   16b4f:	83 ff 07             	cmp    $0x7,%edi
   16b52:	0f 8e f3 ed ff ff    	jle    1594b <__vfprintf+0x57b>
   16b58:	85 c0                	test   %eax,%eax
   16b5a:	0f 85 63 0c 00 00    	jne    177c3 <__vfprintf+0x23f3>
   16b60:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   16b67:	00 00 00 00 
   16b6b:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
   16b6f:	39 d8                	cmp    %ebx,%eax
   16b71:	0f 4d d8             	cmovge %eax,%ebx
   16b74:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
   16b79:	2b 44 24 28          	sub    0x28(%rsp),%eax
   16b7d:	39 d8                	cmp    %ebx,%eax
   16b7f:	0f 8c db ea ff ff    	jl     15660 <__vfprintf+0x290>
   16b85:	01 5c 24 28          	add    %ebx,0x28(%rsp)
   16b89:	e9 ea ed ff ff       	jmp    15978 <__vfprintf+0x5a8>
   16b8e:	66 90                	xchg   %ax,%ax
   16b90:	4c 89 e6             	mov    %r12,%rsi
   16b93:	48 89 df             	mov    %rbx,%rdi
   16b96:	e8 15 e8 ff ff       	call   153b0 <__sprint.part.0>
   16b9b:	85 c0                	test   %eax,%eax
   16b9d:	0f 85 bd eb ff ff    	jne    15760 <__vfprintf+0x390>
   16ba3:	8b b4 24 f8 00 00 00 	mov    0xf8(%rsp),%esi
   16baa:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   16bb1:	49 89 ea             	mov    %rbp,%r10
   16bb4:	8d 7e 01             	lea    0x1(%rsi),%edi
   16bb7:	e9 1d ff ff ff       	jmp    16ad9 <__vfprintf+0x1709>
   16bbc:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   16bc1:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   16bc8:	00 
   16bc9:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   16bce:	e8 dd e7 ff ff       	call   153b0 <__sprint.part.0>
   16bd3:	85 c0                	test   %eax,%eax
   16bd5:	0f 85 85 eb ff ff    	jne    15760 <__vfprintf+0x390>
   16bdb:	8b 8c 24 f8 00 00 00 	mov    0xf8(%rsp),%ecx
   16be2:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   16be9:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   16bee:	8d 71 01             	lea    0x1(%rcx),%esi
   16bf1:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   16bf6:	8b bc 24 98 00 00 00 	mov    0x98(%rsp),%edi
   16bfd:	48 89 29             	mov    %rbp,(%rcx)
   16c00:	89 b4 24 f8 00 00 00 	mov    %esi,0xf8(%rsp)
   16c07:	8d 57 ff             	lea    -0x1(%rdi),%edx
   16c0a:	48 63 fa             	movslq %edx,%rdi
   16c0d:	01 d0                	add    %edx,%eax
   16c0f:	48 89 79 08          	mov    %rdi,0x8(%rcx)
   16c13:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   16c1a:	83 fe 07             	cmp    $0x7,%esi
   16c1d:	0f 8e 93 fc ff ff    	jle    168b6 <__vfprintf+0x14e6>
   16c23:	85 c0                	test   %eax,%eax
   16c25:	0f 85 7e 08 00 00    	jne    174a9 <__vfprintf+0x20d9>
   16c2b:	44 2b 9c 24 98 00 00 	sub    0x98(%rsp),%r11d
   16c32:	00 
   16c33:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   16c38:	31 f6                	xor    %esi,%esi
   16c3a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   16c40:	45 89 dc             	mov    %r11d,%r12d
   16c43:	45 85 db             	test   %r11d,%r11d
   16c46:	0f 8e 86 fc ff ff    	jle    168d2 <__vfprintf+0x1502>
   16c4c:	48 8d 2d bd b4 01 00 	lea    0x1b4bd(%rip),%rbp        # 32110 <zeroes.3361>
   16c53:	41 83 fb 10          	cmp    $0x10,%r11d
   16c57:	0f 8e 81 00 00 00    	jle    16cde <__vfprintf+0x190e>
   16c5d:	4c 8d bc 24 f0 00 00 	lea    0xf0(%rsp),%r15
   16c64:	00 
   16c65:	89 5c 24 40          	mov    %ebx,0x40(%rsp)
   16c69:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
   16c6e:	4c 89 6c 24 48       	mov    %r13,0x48(%rsp)
   16c73:	4d 89 fd             	mov    %r15,%r13
   16c76:	4c 8b 7c 24 20       	mov    0x20(%rsp),%r15
   16c7b:	eb 17                	jmp    16c94 <__vfprintf+0x18c4>
   16c7d:	0f 1f 00             	nopl   (%rax)
   16c80:	44 8d 46 02          	lea    0x2(%rsi),%r8d
   16c84:	48 83 c1 10          	add    $0x10,%rcx
   16c88:	89 d6                	mov    %edx,%esi
   16c8a:	41 83 ec 10          	sub    $0x10,%r12d
   16c8e:	41 83 fc 10          	cmp    $0x10,%r12d
   16c92:	7e 41                	jle    16cd5 <__vfprintf+0x1905>
   16c94:	83 c0 10             	add    $0x10,%eax
   16c97:	8d 56 01             	lea    0x1(%rsi),%edx
   16c9a:	48 89 29             	mov    %rbp,(%rcx)
   16c9d:	48 c7 41 08 10 00 00 	movq   $0x10,0x8(%rcx)
   16ca4:	00 
   16ca5:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   16cac:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   16cb3:	83 fa 07             	cmp    $0x7,%edx
   16cb6:	7e c8                	jle    16c80 <__vfprintf+0x18b0>
   16cb8:	85 c0                	test   %eax,%eax
   16cba:	0f 85 c0 05 00 00    	jne    17280 <__vfprintf+0x1eb0>
   16cc0:	41 83 ec 10          	sub    $0x10,%r12d
   16cc4:	31 f6                	xor    %esi,%esi
   16cc6:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   16ccc:	4c 89 f9             	mov    %r15,%rcx
   16ccf:	41 83 fc 10          	cmp    $0x10,%r12d
   16cd3:	7f bf                	jg     16c94 <__vfprintf+0x18c4>
   16cd5:	8b 5c 24 40          	mov    0x40(%rsp),%ebx
   16cd9:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
   16cde:	49 63 d4             	movslq %r12d,%rdx
   16ce1:	44 01 e0             	add    %r12d,%eax
   16ce4:	48 89 29             	mov    %rbp,(%rcx)
   16ce7:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   16ceb:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   16cf2:	44 89 84 24 f8 00 00 	mov    %r8d,0xf8(%rsp)
   16cf9:	00 
   16cfa:	41 83 f8 07          	cmp    $0x7,%r8d
   16cfe:	0f 8f e7 00 00 00    	jg     16deb <__vfprintf+0x1a1b>
   16d04:	48 83 c1 10          	add    $0x10,%rcx
   16d08:	41 83 c0 01          	add    $0x1,%r8d
   16d0c:	e9 c1 fb ff ff       	jmp    168d2 <__vfprintf+0x1502>
   16d11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16d18:	48 89 de             	mov    %rbx,%rsi
   16d1b:	4c 89 e7             	mov    %r12,%rdi
   16d1e:	e8 8d e6 ff ff       	call   153b0 <__sprint.part.0>
   16d23:	85 c0                	test   %eax,%eax
   16d25:	0f 85 35 ea ff ff    	jne    15760 <__vfprintf+0x390>
   16d2b:	8b b4 24 f8 00 00 00 	mov    0xf8(%rsp),%esi
   16d32:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   16d39:	4d 89 fa             	mov    %r15,%r10
   16d3c:	8d 7e 01             	lea    0x1(%rsi),%edi
   16d3f:	e9 95 f7 ff ff       	jmp    164d9 <__vfprintf+0x1109>
   16d44:	0f 1f 40 00          	nopl   0x0(%rax)
   16d48:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   16d4d:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   16d54:	00 
   16d55:	4c 89 44 24 78       	mov    %r8,0x78(%rsp)
   16d5a:	44 89 5c 24 70       	mov    %r11d,0x70(%rsp)
   16d5f:	e8 4c e6 ff ff       	call   153b0 <__sprint.part.0>
   16d64:	85 c0                	test   %eax,%eax
   16d66:	0f 85 f4 e9 ff ff    	jne    15760 <__vfprintf+0x390>
   16d6c:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   16d71:	4c 8b 44 24 78       	mov    0x78(%rsp),%r8
   16d76:	44 8b 5c 24 70       	mov    0x70(%rsp),%r11d
   16d7b:	e9 c8 ea ff ff       	jmp    15848 <__vfprintf+0x478>
   16d80:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   16d85:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   16d8c:	00 
   16d8d:	4c 89 44 24 78       	mov    %r8,0x78(%rsp)
   16d92:	44 89 5c 24 70       	mov    %r11d,0x70(%rsp)
   16d97:	e8 14 e6 ff ff       	call   153b0 <__sprint.part.0>
   16d9c:	85 c0                	test   %eax,%eax
   16d9e:	0f 85 bc e9 ff ff    	jne    15760 <__vfprintf+0x390>
   16da4:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   16da9:	4c 8b 44 24 78       	mov    0x78(%rsp),%r8
   16dae:	44 8b 5c 24 70       	mov    0x70(%rsp),%r11d
   16db3:	e9 00 eb ff ff       	jmp    158b8 <__vfprintf+0x4e8>
   16db8:	f6 04 24 01          	testb  $0x1,(%rsp)
   16dbc:	0f 85 7d fa ff ff    	jne    1683f <__vfprintf+0x146f>
   16dc2:	83 c0 01             	add    $0x1,%eax
   16dc5:	4d 89 02             	mov    %r8,(%r10)
   16dc8:	44 8d 46 02          	lea    0x2(%rsi),%r8d
   16dcc:	49 c7 42 08 01 00 00 	movq   $0x1,0x8(%r10)
   16dd3:	00 
   16dd4:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   16ddb:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   16de2:	83 fa 07             	cmp    $0x7,%edx
   16de5:	0f 8e e7 fa ff ff    	jle    168d2 <__vfprintf+0x1502>
   16deb:	85 c0                	test   %eax,%eax
   16ded:	0f 85 4e 0c 00 00    	jne    17a41 <__vfprintf+0x2671>
   16df3:	48 8d 84 24 38 02 00 	lea    0x238(%rsp),%rax
   16dfa:	00 
   16dfb:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   16e00:	c7 84 24 f8 00 00 00 	movl   $0x1,0xf8(%rsp)
   16e07:	01 00 00 00 
   16e0b:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
   16e12:	00 
   16e13:	48 63 84 24 9c 00 00 	movslq 0x9c(%rsp),%rax
   16e1a:	00 
   16e1b:	48 89 84 24 38 01 00 	mov    %rax,0x138(%rsp)
   16e22:	00 
   16e23:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   16e2a:	4c 8d 51 10          	lea    0x10(%rcx),%r10
   16e2e:	e9 01 eb ff ff       	jmp    15934 <__vfprintf+0x564>
   16e33:	89 54 24 38          	mov    %edx,0x38(%rsp)
   16e37:	48 8d 9c 24 a4 02 00 	lea    0x2a4(%rsp),%rbx
   16e3e:	00 
   16e3f:	48 bf cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rdi
   16e46:	cc cc cc 
   16e49:	48 89 de             	mov    %rbx,%rsi
   16e4c:	48 83 f9 09          	cmp    $0x9,%rcx
   16e50:	76 35                	jbe    16e87 <__vfprintf+0x1ab7>
   16e52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16e58:	48 89 c8             	mov    %rcx,%rax
   16e5b:	49 89 c9             	mov    %rcx,%r9
   16e5e:	48 83 ee 01          	sub    $0x1,%rsi
   16e62:	48 f7 e7             	mul    %rdi
   16e65:	48 c1 ea 03          	shr    $0x3,%rdx
   16e69:	48 8d 04 92          	lea    (%rdx,%rdx,4),%rax
   16e6d:	48 01 c0             	add    %rax,%rax
   16e70:	49 29 c1             	sub    %rax,%r9
   16e73:	4c 89 c8             	mov    %r9,%rax
   16e76:	83 c0 30             	add    $0x30,%eax
   16e79:	88 06                	mov    %al,(%rsi)
   16e7b:	48 89 c8             	mov    %rcx,%rax
   16e7e:	48 89 d1             	mov    %rdx,%rcx
   16e81:	48 83 f8 63          	cmp    $0x63,%rax
   16e85:	77 d1                	ja     16e58 <__vfprintf+0x1a88>
   16e87:	83 c1 30             	add    $0x30,%ecx
   16e8a:	4c 8d 46 ff          	lea    -0x1(%rsi),%r8
   16e8e:	88 4e ff             	mov    %cl,-0x1(%rsi)
   16e91:	e9 01 f1 ff ff       	jmp    15f97 <__vfprintf+0xbc7>
   16e96:	48 85 c0             	test   %rax,%rax
   16e99:	0f 84 9e 09 00 00    	je     1783d <__vfprintf+0x246d>
   16e9f:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   16ea4:	48 c1 e2 04          	shl    $0x4,%rdx
   16ea8:	f2 0f 10 04 10       	movsd  (%rax,%rdx,1),%xmm0
   16ead:	31 ff                	xor    %edi,%edi
   16eaf:	44 89 de             	mov    %r11d,%esi
   16eb2:	80 bc 24 8b 00 00 00 	cmpb   $0x0,0x8b(%rsp)
   16eb9:	00 
   16eba:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   16ebf:	40 0f 94 c7          	sete   %dil
   16ec3:	4c 8d 84 24 c0 00 00 	lea    0xc0(%rsp),%r8
   16eca:	00 
   16ecb:	48 8d 8c 24 b8 00 00 	lea    0xb8(%rsp),%rcx
   16ed2:	00 
   16ed3:	44 89 5c 24 38       	mov    %r11d,0x38(%rsp)
   16ed8:	83 c7 02             	add    $0x2,%edi
   16edb:	48 8d 94 24 bc 00 00 	lea    0xbc(%rsp),%rdx
   16ee2:	00 
   16ee3:	f2 0f 11 84 24 e0 00 	movsd  %xmm0,0xe0(%rsp)
   16eea:	00 00 
   16eec:	e8 2f 1e 00 00       	call   18d20 <__dtoa>
   16ef1:	44 8b 5c 24 38       	mov    0x38(%rsp),%r11d
   16ef6:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   16efb:	48 85 c0             	test   %rax,%rax
   16efe:	49 89 c0             	mov    %rax,%r8
   16f01:	0f 84 a3 08 00 00    	je     177aa <__vfprintf+0x23da>
   16f07:	8b b4 24 bc 00 00 00 	mov    0xbc(%rsp),%esi
   16f0e:	0f b6 94 24 31 02 00 	movzbl 0x231(%rsp),%edx
   16f15:	00 
   16f16:	8b 84 24 b8 00 00 00 	mov    0xb8(%rsp),%eax
   16f1d:	81 fe 0f 27 00 00    	cmp    $0x270f,%esi
   16f23:	0f 85 8a ec ff ff    	jne    15bb3 <__vfprintf+0x7e3>
   16f29:	c7 84 24 bc 00 00 00 	movl   $0x7fffffff,0xbc(%rsp)
   16f30:	ff ff ff 7f 
   16f34:	89 6c 24 38          	mov    %ebp,0x38(%rsp)
   16f38:	85 c0                	test   %eax,%eax
   16f3a:	0f 84 29 01 00 00    	je     17069 <__vfprintf+0x1c99>
   16f40:	8b b4 24 bc 00 00 00 	mov    0xbc(%rsp),%esi
   16f47:	e9 6f ec ff ff       	jmp    15bbb <__vfprintf+0x7eb>
   16f4c:	89 44 24 38          	mov    %eax,0x38(%rsp)
   16f50:	b8 02 00 00 00       	mov    $0x2,%eax
   16f55:	e9 d6 ef ff ff       	jmp    15f30 <__vfprintf+0xb60>
   16f5a:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   16f61:	48 8d 2d a8 b1 01 00 	lea    0x1b1a8(%rip),%rbp        # 32110 <zeroes.3361>
   16f68:	49 c7 42 08 01 00 00 	movq   $0x1,0x8(%r10)
   16f6f:	00 
   16f70:	49 83 c2 10          	add    $0x10,%r10
   16f74:	49 89 6a f0          	mov    %rbp,-0x10(%r10)
   16f78:	8d 48 01             	lea    0x1(%rax),%ecx
   16f7b:	8b 84 24 f8 00 00 00 	mov    0xf8(%rsp),%eax
   16f82:	89 8c 24 fc 00 00 00 	mov    %ecx,0xfc(%rsp)
   16f89:	83 c0 01             	add    $0x1,%eax
   16f8c:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
   16f93:	83 f8 07             	cmp    $0x7,%eax
   16f96:	7e 18                	jle    16fb0 <__vfprintf+0x1be0>
   16f98:	85 c9                	test   %ecx,%ecx
   16f9a:	0f 85 d7 0a 00 00    	jne    17a77 <__vfprintf+0x26a7>
   16fa0:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   16fa7:	00 00 00 00 
   16fab:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   16fb0:	8b 04 24             	mov    (%rsp),%eax
   16fb3:	83 e0 01             	and    $0x1,%eax
   16fb6:	44 09 d8             	or     %r11d,%eax
   16fb9:	74 56                	je     17011 <__vfprintf+0x1c41>
   16fbb:	48 8d 05 e1 fb 00 00 	lea    0xfbe1(%rip),%rax        # 26ba3 <g_dyn_entry_table+0xba3>
   16fc2:	49 c7 42 08 01 00 00 	movq   $0x1,0x8(%r10)
   16fc9:	00 
   16fca:	49 83 c2 10          	add    $0x10,%r10
   16fce:	49 89 42 f0          	mov    %rax,-0x10(%r10)
   16fd2:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   16fd9:	8d 48 01             	lea    0x1(%rax),%ecx
   16fdc:	8b 84 24 f8 00 00 00 	mov    0xf8(%rsp),%eax
   16fe3:	89 8c 24 fc 00 00 00 	mov    %ecx,0xfc(%rsp)
   16fea:	83 c0 01             	add    $0x1,%eax
   16fed:	89 84 24 f8 00 00 00 	mov    %eax,0xf8(%rsp)
   16ff4:	83 f8 07             	cmp    $0x7,%eax
   16ff7:	7e 18                	jle    17011 <__vfprintf+0x1c41>
   16ff9:	85 c9                	test   %ecx,%ecx
   16ffb:	0f 85 67 0b 00 00    	jne    17b68 <__vfprintf+0x2798>
   17001:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   17008:	00 00 00 00 
   1700c:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   17011:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
   17018:	41 89 c4             	mov    %eax,%r12d
   1701b:	41 f7 dc             	neg    %r12d
   1701e:	45 85 e4             	test   %r12d,%r12d
   17021:	0f 8f 5e 06 00 00    	jg     17685 <__vfprintf+0x22b5>
   17027:	41 01 c3             	add    %eax,%r11d
   1702a:	e9 01 f4 ff ff       	jmp    16430 <__vfprintf+0x1060>
   1702f:	8d 4c 3b 01          	lea    0x1(%rbx,%rdi,1),%ecx
   17033:	bb 00 00 00 00       	mov    $0x0,%ebx
   17038:	44 89 24 24          	mov    %r12d,(%rsp)
   1703c:	41 89 fb             	mov    %edi,%r11d
   1703f:	85 c9                	test   %ecx,%ecx
   17041:	89 4c 24 40          	mov    %ecx,0x40(%rsp)
   17045:	4c 89 44 24 58       	mov    %r8,0x58(%rsp)
   1704a:	0f 49 d9             	cmovns %ecx,%ebx
   1704d:	89 b4 24 8c 00 00 00 	mov    %esi,0x8c(%rsp)
   17054:	c7 44 24 48 00 00 00 	movl   $0x0,0x48(%rsp)
   1705b:	00 
   1705c:	c6 84 24 8b 00 00 00 	movb   $0x0,0x8b(%rsp)
   17063:	00 
   17064:	e9 07 ec ff ff       	jmp    15c70 <__vfprintf+0x8a0>
   17069:	41 80 38 4e          	cmpb   $0x4e,(%r8)
   1706d:	0f 84 a6 07 00 00    	je     17819 <__vfprintf+0x2449>
   17073:	83 fb 60             	cmp    $0x60,%ebx
   17076:	48 8d 0d 17 fb 00 00 	lea    0xfb17(%rip),%rcx        # 26b94 <g_dyn_entry_table+0xb94>
   1707d:	48 8d 35 14 fb 00 00 	lea    0xfb14(%rip),%rsi        # 26b98 <g_dyn_entry_table+0xb98>
   17084:	0f b6 84 24 b3 00 00 	movzbl 0xb3(%rsp),%eax
   1708b:	00 
   1708c:	48 0f 4e ce          	cmovle %rsi,%rcx
   17090:	4c 89 44 24 58       	mov    %r8,0x58(%rsp)
   17095:	bb 03 00 00 00       	mov    $0x3,%ebx
   1709a:	49 89 c8             	mov    %rcx,%r8
   1709d:	81 24 24 7f ff ff ff 	andl   $0xffffff7f,(%rsp)
   170a4:	c7 44 24 40 03 00 00 	movl   $0x3,0x40(%rsp)
   170ab:	00 
   170ac:	c7 44 24 48 00 00 00 	movl   $0x0,0x48(%rsp)
   170b3:	00 
   170b4:	e9 b7 eb ff ff       	jmp    15c70 <__vfprintf+0x8a0>
   170b9:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   170be:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   170c5:	00 
   170c6:	4c 89 44 24 70       	mov    %r8,0x70(%rsp)
   170cb:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   170d0:	e8 db e2 ff ff       	call   153b0 <__sprint.part.0>
   170d5:	85 c0                	test   %eax,%eax
   170d7:	0f 85 83 e6 ff ff    	jne    15760 <__vfprintf+0x390>
   170dd:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   170e2:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
   170e7:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   170ec:	e9 e7 e7 ff ff       	jmp    158d8 <__vfprintf+0x508>
   170f1:	f6 04 24 20          	testb  $0x20,(%rsp)
   170f5:	0f 85 33 04 00 00    	jne    1752e <__vfprintf+0x215e>
   170fb:	f6 04 24 10          	testb  $0x10,(%rsp)
   170ff:	0f 85 32 08 00 00    	jne    17937 <__vfprintf+0x2567>
   17105:	f7 04 24 00 02 00 00 	testl  $0x200,(%rsp)
   1710c:	0f 85 1c 04 00 00    	jne    1752e <__vfprintf+0x215e>
   17112:	f7 04 24 00 04 00 00 	testl  $0x400,(%rsp)
   17119:	0f 85 18 08 00 00    	jne    17937 <__vfprintf+0x2567>
   1711f:	f6 04 24 40          	testb  $0x40,(%rsp)
   17123:	0f 84 a4 11 00 00    	je     182cd <__vfprintf+0x2efd>
   17129:	48 85 c9             	test   %rcx,%rcx
   1712c:	0f 84 e8 12 00 00    	je     1841a <__vfprintf+0x304a>
   17132:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   17137:	48 c1 e2 04          	shl    $0x4,%rdx
   1713b:	0f b7 0c 11          	movzwl (%rcx,%rdx,1),%ecx
   1713f:	e9 77 f1 ff ff       	jmp    162bb <__vfprintf+0xeeb>
   17144:	0f 1f 40 00          	nopl   0x0(%rax)
   17148:	f6 04 24 20          	testb  $0x20,(%rsp)
   1714c:	0f 85 bb 03 00 00    	jne    1750d <__vfprintf+0x213d>
   17152:	f6 04 24 10          	testb  $0x10,(%rsp)
   17156:	0f 85 74 07 00 00    	jne    178d0 <__vfprintf+0x2500>
   1715c:	f7 04 24 00 02 00 00 	testl  $0x200,(%rsp)
   17163:	0f 85 a4 03 00 00    	jne    1750d <__vfprintf+0x213d>
   17169:	f7 04 24 00 04 00 00 	testl  $0x400,(%rsp)
   17170:	0f 85 5a 07 00 00    	jne    178d0 <__vfprintf+0x2500>
   17176:	f6 04 24 40          	testb  $0x40,(%rsp)
   1717a:	0f 84 bd 11 00 00    	je     1833d <__vfprintf+0x2f6d>
   17180:	48 85 c9             	test   %rcx,%rcx
   17183:	0f 84 34 12 00 00    	je     183bd <__vfprintf+0x2fed>
   17189:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   1718e:	89 44 24 38          	mov    %eax,0x38(%rsp)
   17192:	31 c0                	xor    %eax,%eax
   17194:	48 c1 e2 04          	shl    $0x4,%rdx
   17198:	0f b7 0c 11          	movzwl (%rcx,%rdx,1),%ecx
   1719c:	e9 8f ed ff ff       	jmp    15f30 <__vfprintf+0xb60>
   171a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   171a8:	f6 04 24 20          	testb  $0x20,(%rsp)
   171ac:	0f 85 97 03 00 00    	jne    17549 <__vfprintf+0x2179>
   171b2:	f6 04 24 10          	testb  $0x10,(%rsp)
   171b6:	0f 85 e4 09 00 00    	jne    17ba0 <__vfprintf+0x27d0>
   171bc:	f7 04 24 00 02 00 00 	testl  $0x200,(%rsp)
   171c3:	0f 85 80 03 00 00    	jne    17549 <__vfprintf+0x2179>
   171c9:	f7 04 24 00 04 00 00 	testl  $0x400,(%rsp)
   171d0:	0f 85 ca 09 00 00    	jne    17ba0 <__vfprintf+0x27d0>
   171d6:	f6 04 24 40          	testb  $0x40,(%rsp)
   171da:	0f 84 2d 10 00 00    	je     1820d <__vfprintf+0x2e3d>
   171e0:	48 85 c9             	test   %rcx,%rcx
   171e3:	0f 84 0a 12 00 00    	je     183f3 <__vfprintf+0x3023>
   171e9:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   171ee:	48 c1 e0 04          	shl    $0x4,%rax
   171f2:	48 0f bf 0c 01       	movswq (%rcx,%rax,1),%rcx
   171f7:	48 89 c8             	mov    %rcx,%rax
   171fa:	e9 e6 ea ff ff       	jmp    15ce5 <__vfprintf+0x915>
   171ff:	90                   	nop
   17200:	f6 04 24 20          	testb  $0x20,(%rsp)
   17204:	0f 85 df 02 00 00    	jne    174e9 <__vfprintf+0x2119>
   1720a:	f6 04 24 10          	testb  $0x10,(%rsp)
   1720e:	0f 85 ee 06 00 00    	jne    17902 <__vfprintf+0x2532>
   17214:	f7 04 24 00 02 00 00 	testl  $0x200,(%rsp)
   1721b:	0f 85 c8 02 00 00    	jne    174e9 <__vfprintf+0x2119>
   17221:	f7 04 24 00 04 00 00 	testl  $0x400,(%rsp)
   17228:	0f 85 d4 06 00 00    	jne    17902 <__vfprintf+0x2532>
   1722e:	f6 04 24 40          	testb  $0x40,(%rsp)
   17232:	0f 84 d4 10 00 00    	je     1830c <__vfprintf+0x2f3c>
   17238:	48 85 c9             	test   %rcx,%rcx
   1723b:	0f 84 50 11 00 00    	je     18391 <__vfprintf+0x2fc1>
   17241:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   17246:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1724a:	b8 01 00 00 00       	mov    $0x1,%eax
   1724f:	48 c1 e2 04          	shl    $0x4,%rdx
   17253:	0f b7 0c 11          	movzwl (%rcx,%rdx,1),%ecx
   17257:	e9 d4 ec ff ff       	jmp    15f30 <__vfprintf+0xb60>
   1725c:	0f 1f 40 00          	nopl   0x0(%rax)
   17260:	85 d2                	test   %edx,%edx
   17262:	0f 85 80 05 00 00    	jne    177e8 <__vfprintf+0x2418>
   17268:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   1726f:	00 00 00 00 
   17273:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   17278:	41 29 eb             	sub    %ebp,%r11d
   1727b:	e9 01 f2 ff ff       	jmp    16481 <__vfprintf+0x10b1>
   17280:	4c 89 ee             	mov    %r13,%rsi
   17283:	48 89 df             	mov    %rbx,%rdi
   17286:	e8 25 e1 ff ff       	call   153b0 <__sprint.part.0>
   1728b:	85 c0                	test   %eax,%eax
   1728d:	0f 85 cd e4 ff ff    	jne    15760 <__vfprintf+0x390>
   17293:	8b b4 24 f8 00 00 00 	mov    0xf8(%rsp),%esi
   1729a:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   172a1:	4c 89 f9             	mov    %r15,%rcx
   172a4:	44 8d 46 01          	lea    0x1(%rsi),%r8d
   172a8:	e9 dd f9 ff ff       	jmp    16c8a <__vfprintf+0x18ba>
   172ad:	c6 84 24 b3 00 00 00 	movb   $0x2d,0xb3(%rsp)
   172b4:	2d 
   172b5:	48 f7 d9             	neg    %rcx
   172b8:	b8 01 00 00 00       	mov    $0x1,%eax
   172bd:	89 54 24 38          	mov    %edx,0x38(%rsp)
   172c1:	e9 72 ec ff ff       	jmp    15f38 <__vfprintf+0xb68>
   172c6:	0f b6 84 24 8b 00 00 	movzbl 0x8b(%rsp),%eax
   172cd:	00 
   172ce:	89 f1                	mov    %esi,%ecx
   172d0:	88 84 24 38 02 00 00 	mov    %al,0x238(%rsp)
   172d7:	b8 2b 00 00 00       	mov    $0x2b,%eax
   172dc:	83 e9 01             	sub    $0x1,%ecx
   172df:	79 0c                	jns    172ed <__vfprintf+0x1f1d>
   172e1:	b9 01 00 00 00       	mov    $0x1,%ecx
   172e6:	b8 2d 00 00 00       	mov    $0x2d,%eax
   172eb:	29 f1                	sub    %esi,%ecx
   172ed:	88 84 24 39 02 00 00 	mov    %al,0x239(%rsp)
   172f4:	83 f9 09             	cmp    $0x9,%ecx
   172f7:	0f 8e 66 06 00 00    	jle    17963 <__vfprintf+0x2593>
   172fd:	4c 8d 8c 24 38 02 00 	lea    0x238(%rsp),%r9
   17304:	00 
   17305:	4c 89 cf             	mov    %r9,%rdi
   17308:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1730f:	00 
   17310:	48 63 c1             	movslq %ecx,%rax
   17313:	89 cb                	mov    %ecx,%ebx
   17315:	41 89 cf             	mov    %ecx,%r15d
   17318:	48 89 fe             	mov    %rdi,%rsi
   1731b:	48 69 c0 67 66 66 66 	imul   $0x66666667,%rax,%rax
   17322:	c1 fb 1f             	sar    $0x1f,%ebx
   17325:	48 8d 7f ff          	lea    -0x1(%rdi),%rdi
   17329:	48 c1 f8 22          	sar    $0x22,%rax
   1732d:	29 d8                	sub    %ebx,%eax
   1732f:	8d 1c 80             	lea    (%rax,%rax,4),%ebx
   17332:	01 db                	add    %ebx,%ebx
   17334:	41 29 df             	sub    %ebx,%r15d
   17337:	44 89 fb             	mov    %r15d,%ebx
   1733a:	83 c3 30             	add    $0x30,%ebx
   1733d:	88 5e ff             	mov    %bl,-0x1(%rsi)
   17340:	89 cb                	mov    %ecx,%ebx
   17342:	89 c1                	mov    %eax,%ecx
   17344:	83 fb 63             	cmp    $0x63,%ebx
   17347:	7f c7                	jg     17310 <__vfprintf+0x1f40>
   17349:	83 c1 30             	add    $0x30,%ecx
   1734c:	48 8d 46 fe          	lea    -0x2(%rsi),%rax
   17350:	88 4f ff             	mov    %cl,-0x1(%rdi)
   17353:	4c 39 c8             	cmp    %r9,%rax
   17356:	0f 83 0f 10 00 00    	jae    1836b <__vfprintf+0x2f9b>
   1735c:	48 8d 9c 24 3a 02 00 	lea    0x23a(%rsp),%rbx
   17363:	00 
   17364:	48 89 df             	mov    %rbx,%rdi
   17367:	eb 0a                	jmp    17373 <__vfprintf+0x1fa3>
   17369:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17370:	0f b6 08             	movzbl (%rax),%ecx
   17373:	48 83 c0 01          	add    $0x1,%rax
   17377:	48 83 c7 01          	add    $0x1,%rdi
   1737b:	88 4f ff             	mov    %cl,-0x1(%rdi)
   1737e:	4c 39 c8             	cmp    %r9,%rax
   17381:	75 ed                	jne    17370 <__vfprintf+0x1fa0>
   17383:	48 89 d9             	mov    %rbx,%rcx
   17386:	48 29 f1             	sub    %rsi,%rcx
   17389:	48 01 cb             	add    %rcx,%rbx
   1738c:	89 d9                	mov    %ebx,%ecx
   1738e:	29 c1                	sub    %eax,%ecx
   17390:	89 8c 24 9c 00 00 00 	mov    %ecx,0x9c(%rsp)
   17397:	8b 84 24 9c 00 00 00 	mov    0x9c(%rsp),%eax
   1739e:	44 01 d8             	add    %r11d,%eax
   173a1:	89 44 24 40          	mov    %eax,0x40(%rsp)
   173a5:	0f b6 84 24 b3 00 00 	movzbl 0xb3(%rsp),%eax
   173ac:	00 
   173ad:	41 83 fb 01          	cmp    $0x1,%r11d
   173b1:	0f 8e b0 09 00 00    	jle    17d67 <__vfprintf+0x2997>
   173b7:	83 44 24 40 01       	addl   $0x1,0x40(%rsp)
   173bc:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
   173c0:	bb 00 00 00 00       	mov    $0x0,%ebx
   173c5:	4c 89 44 24 58       	mov    %r8,0x58(%rsp)
   173ca:	44 89 24 24          	mov    %r12d,(%rsp)
   173ce:	c7 44 24 48 00 00 00 	movl   $0x0,0x48(%rsp)
   173d5:	00 
   173d6:	0f 49 d9             	cmovns %ecx,%ebx
   173d9:	e9 92 e8 ff ff       	jmp    15c70 <__vfprintf+0x8a0>
   173de:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   173e5:	8b bc 24 f8 00 00 00 	mov    0xf8(%rsp),%edi
   173ec:	41 83 fc 10          	cmp    $0x10,%r12d
   173f0:	0f 8e 43 0e 00 00    	jle    18239 <__vfprintf+0x2e69>
   173f6:	48 8d 2d 13 ad 01 00 	lea    0x1ad13(%rip),%rbp        # 32110 <zeroes.3361>
   173fd:	89 5c 24 70          	mov    %ebx,0x70(%rsp)
   17401:	44 89 e3             	mov    %r12d,%ebx
   17404:	4c 8d bc 24 f0 00 00 	lea    0xf0(%rsp),%r15
   1740b:	00 
   1740c:	4c 89 6c 24 78       	mov    %r13,0x78(%rsp)
   17411:	49 89 ec             	mov    %rbp,%r12
   17414:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
   17419:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   1741e:	48 8b 6c 24 30       	mov    0x30(%rsp),%rbp
   17423:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   17428:	eb 1b                	jmp    17445 <__vfprintf+0x2075>
   1742a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   17430:	8d 77 02             	lea    0x2(%rdi),%esi
   17433:	49 83 c2 10          	add    $0x10,%r10
   17437:	89 d7                	mov    %edx,%edi
   17439:	83 eb 10             	sub    $0x10,%ebx
   1743c:	83 fb 10             	cmp    $0x10,%ebx
   1743f:	0f 8e 4f 01 00 00    	jle    17594 <__vfprintf+0x21c4>
   17445:	83 c0 10             	add    $0x10,%eax
   17448:	8d 57 01             	lea    0x1(%rdi),%edx
   1744b:	4d 89 22             	mov    %r12,(%r10)
   1744e:	49 c7 42 08 10 00 00 	movq   $0x10,0x8(%r10)
   17455:	00 
   17456:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   1745d:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   17464:	83 fa 07             	cmp    $0x7,%edx
   17467:	7e c7                	jle    17430 <__vfprintf+0x2060>
   17469:	85 c0                	test   %eax,%eax
   1746b:	75 13                	jne    17480 <__vfprintf+0x20b0>
   1746d:	31 ff                	xor    %edi,%edi
   1746f:	be 01 00 00 00       	mov    $0x1,%esi
   17474:	4d 89 ea             	mov    %r13,%r10
   17477:	eb c0                	jmp    17439 <__vfprintf+0x2069>
   17479:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17480:	4c 89 fe             	mov    %r15,%rsi
   17483:	48 89 ef             	mov    %rbp,%rdi
   17486:	e8 25 df ff ff       	call   153b0 <__sprint.part.0>
   1748b:	85 c0                	test   %eax,%eax
   1748d:	0f 85 cd e2 ff ff    	jne    15760 <__vfprintf+0x390>
   17493:	8b bc 24 f8 00 00 00 	mov    0xf8(%rsp),%edi
   1749a:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   174a1:	4d 89 ea             	mov    %r13,%r10
   174a4:	8d 77 01             	lea    0x1(%rdi),%esi
   174a7:	eb 90                	jmp    17439 <__vfprintf+0x2069>
   174a9:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   174ae:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   174b5:	00 
   174b6:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   174bb:	e8 f0 de ff ff       	call   153b0 <__sprint.part.0>
   174c0:	85 c0                	test   %eax,%eax
   174c2:	0f 85 98 e2 ff ff    	jne    15760 <__vfprintf+0x390>
   174c8:	8b b4 24 f8 00 00 00 	mov    0xf8(%rsp),%esi
   174cf:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   174d6:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   174db:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   174e0:	44 8d 46 01          	lea    0x1(%rsi),%r8d
   174e4:	e9 d5 f3 ff ff       	jmp    168be <__vfprintf+0x14ee>
   174e9:	48 85 c9             	test   %rcx,%rcx
   174ec:	0f 84 21 09 00 00    	je     17e13 <__vfprintf+0x2a43>
   174f2:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   174f7:	48 c1 e2 04          	shl    $0x4,%rdx
   174fb:	48 8b 0c 11          	mov    (%rcx,%rdx,1),%rcx
   174ff:	89 44 24 38          	mov    %eax,0x38(%rsp)
   17503:	b8 01 00 00 00       	mov    $0x1,%eax
   17508:	e9 23 ea ff ff       	jmp    15f30 <__vfprintf+0xb60>
   1750d:	48 85 c9             	test   %rcx,%rcx
   17510:	0f 84 dd 08 00 00    	je     17df3 <__vfprintf+0x2a23>
   17516:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   1751b:	48 c1 e2 04          	shl    $0x4,%rdx
   1751f:	48 8b 0c 11          	mov    (%rcx,%rdx,1),%rcx
   17523:	89 44 24 38          	mov    %eax,0x38(%rsp)
   17527:	31 c0                	xor    %eax,%eax
   17529:	e9 02 ea ff ff       	jmp    15f30 <__vfprintf+0xb60>
   1752e:	48 85 c9             	test   %rcx,%rcx
   17531:	0f 84 9c 08 00 00    	je     17dd3 <__vfprintf+0x2a03>
   17537:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   1753c:	48 c1 e2 04          	shl    $0x4,%rdx
   17540:	48 8b 0c 11          	mov    (%rcx,%rdx,1),%rcx
   17544:	e9 72 ed ff ff       	jmp    162bb <__vfprintf+0xeeb>
   17549:	48 85 c9             	test   %rcx,%rcx
   1754c:	0f 84 e1 08 00 00    	je     17e33 <__vfprintf+0x2a63>
   17552:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   17557:	e9 7e e7 ff ff       	jmp    15cda <__vfprintf+0x90a>
   1755c:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   17561:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   17568:	00 
   17569:	4c 89 44 24 78       	mov    %r8,0x78(%rsp)
   1756e:	44 89 5c 24 70       	mov    %r11d,0x70(%rsp)
   17573:	e8 38 de ff ff       	call   153b0 <__sprint.part.0>
   17578:	85 c0                	test   %eax,%eax
   1757a:	0f 85 e0 e1 ff ff    	jne    15760 <__vfprintf+0x390>
   17580:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   17585:	4c 8b 44 24 78       	mov    0x78(%rsp),%r8
   1758a:	44 8b 5c 24 70       	mov    0x70(%rsp),%r11d
   1758f:	e9 4f e2 ff ff       	jmp    157e3 <__vfprintf+0x413>
   17594:	4c 89 e5             	mov    %r12,%rbp
   17597:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
   1759c:	41 89 dc             	mov    %ebx,%r12d
   1759f:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   175a4:	8b 5c 24 70          	mov    0x70(%rsp),%ebx
   175a8:	4c 8b 6c 24 78       	mov    0x78(%rsp),%r13
   175ad:	49 63 d4             	movslq %r12d,%rdx
   175b0:	44 01 e0             	add    %r12d,%eax
   175b3:	49 89 2a             	mov    %rbp,(%r10)
   175b6:	49 83 c2 10          	add    $0x10,%r10
   175ba:	49 89 52 f8          	mov    %rdx,-0x8(%r10)
   175be:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   175c5:	89 b4 24 f8 00 00 00 	mov    %esi,0xf8(%rsp)
   175cc:	83 fe 07             	cmp    $0x7,%esi
   175cf:	0f 8e e1 ed ff ff    	jle    163b6 <__vfprintf+0xfe6>
   175d5:	85 c0                	test   %eax,%eax
   175d7:	0f 85 e6 08 00 00    	jne    17ec3 <__vfprintf+0x2af3>
   175dd:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   175e4:	00 00 00 00 
   175e8:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   175ed:	e9 c4 ed ff ff       	jmp    163b6 <__vfprintf+0xfe6>
   175f2:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   175f9:	00 
   175fa:	48 85 d2             	test   %rdx,%rdx
   175fd:	0f 84 f8 08 00 00    	je     17efb <__vfprintf+0x2b2b>
   17603:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   17608:	48 c1 e0 04          	shl    $0x4,%rax
   1760c:	4c 8b 04 02          	mov    (%rdx,%rax,1),%r8
   17610:	4d 85 c0             	test   %r8,%r8
   17613:	48 8d 05 82 f5 00 00 	lea    0xf582(%rip),%rax        # 26b9c <g_dyn_entry_table+0xb9c>
   1761a:	4c 0f 44 c0          	cmove  %rax,%r8
   1761e:	45 85 db             	test   %r11d,%r11d
   17621:	0f 88 6e 02 00 00    	js     17895 <__vfprintf+0x24c5>
   17627:	49 63 d3             	movslq %r11d,%rdx
   1762a:	31 f6                	xor    %esi,%esi
   1762c:	4c 89 c7             	mov    %r8,%rdi
   1762f:	4c 89 54 24 48       	mov    %r10,0x48(%rsp)
   17634:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   17639:	4c 89 44 24 38       	mov    %r8,0x38(%rsp)
   1763e:	e8 4d 14 00 00       	call   18a90 <memchr>
   17643:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
   17648:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   1764d:	48 89 c5             	mov    %rax,%rbp
   17650:	4c 8b 54 24 48       	mov    0x48(%rsp),%r10
   17655:	4c 29 c5             	sub    %r8,%rbp
   17658:	48 85 c0             	test   %rax,%rax
   1765b:	89 e8                	mov    %ebp,%eax
   1765d:	41 0f 44 c3          	cmove  %r11d,%eax
   17661:	89 44 24 40          	mov    %eax,0x40(%rsp)
   17665:	8b 44 24 40          	mov    0x40(%rsp),%eax
   17669:	bb 00 00 00 00       	mov    $0x0,%ebx
   1766e:	44 89 64 24 38       	mov    %r12d,0x38(%rsp)
   17673:	c6 84 24 b3 00 00 00 	movb   $0x0,0xb3(%rsp)
   1767a:	00 
   1767b:	85 c0                	test   %eax,%eax
   1767d:	0f 49 d8             	cmovns %eax,%ebx
   17680:	e9 28 e1 ff ff       	jmp    157ad <__vfprintf+0x3dd>
   17685:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   1768c:	8b bc 24 f8 00 00 00 	mov    0xf8(%rsp),%edi
   17693:	41 83 fc 10          	cmp    $0x10,%r12d
   17697:	0f 8e 28 0c 00 00    	jle    182c5 <__vfprintf+0x2ef5>
   1769d:	4c 8d bc 24 f0 00 00 	lea    0xf0(%rsp),%r15
   176a4:	00 
   176a5:	89 5c 24 70          	mov    %ebx,0x70(%rsp)
   176a9:	44 89 e3             	mov    %r12d,%ebx
   176ac:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
   176b1:	4c 89 6c 24 78       	mov    %r13,0x78(%rsp)
   176b6:	4d 89 fd             	mov    %r15,%r13
   176b9:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
   176be:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
   176c3:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   176c8:	eb 1b                	jmp    176e5 <__vfprintf+0x2315>
   176ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   176d0:	8d 77 02             	lea    0x2(%rdi),%esi
   176d3:	49 83 c2 10          	add    $0x10,%r10
   176d7:	89 d7                	mov    %edx,%edi
   176d9:	83 eb 10             	sub    $0x10,%ebx
   176dc:	83 fb 10             	cmp    $0x10,%ebx
   176df:	0f 8e c6 02 00 00    	jle    179ab <__vfprintf+0x25db>
   176e5:	83 c0 10             	add    $0x10,%eax
   176e8:	8d 57 01             	lea    0x1(%rdi),%edx
   176eb:	49 89 2a             	mov    %rbp,(%r10)
   176ee:	49 c7 42 08 10 00 00 	movq   $0x10,0x8(%r10)
   176f5:	00 
   176f6:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   176fd:	89 94 24 f8 00 00 00 	mov    %edx,0xf8(%rsp)
   17704:	83 fa 07             	cmp    $0x7,%edx
   17707:	7e c7                	jle    176d0 <__vfprintf+0x2300>
   17709:	85 c0                	test   %eax,%eax
   1770b:	75 0c                	jne    17719 <__vfprintf+0x2349>
   1770d:	31 ff                	xor    %edi,%edi
   1770f:	be 01 00 00 00       	mov    $0x1,%esi
   17714:	4d 89 e2             	mov    %r12,%r10
   17717:	eb c0                	jmp    176d9 <__vfprintf+0x2309>
   17719:	4c 89 ee             	mov    %r13,%rsi
   1771c:	4c 89 ff             	mov    %r15,%rdi
   1771f:	e8 8c dc ff ff       	call   153b0 <__sprint.part.0>
   17724:	85 c0                	test   %eax,%eax
   17726:	0f 85 34 e0 ff ff    	jne    15760 <__vfprintf+0x390>
   1772c:	8b bc 24 f8 00 00 00 	mov    0xf8(%rsp),%edi
   17733:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   1773a:	4d 89 e2             	mov    %r12,%r10
   1773d:	8d 77 01             	lea    0x1(%rdi),%esi
   17740:	eb 97                	jmp    176d9 <__vfprintf+0x2309>
   17742:	48 85 c0             	test   %rax,%rax
   17745:	0f 84 d3 07 00 00    	je     17f1e <__vfprintf+0x2b4e>
   1774b:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   17750:	48 c1 e2 04          	shl    $0x4,%rdx
   17754:	f2 0f 10 04 10       	movsd  (%rax,%rdx,1),%xmm0
   17759:	48 8b bc 24 90 00 00 	mov    0x90(%rsp),%rdi
   17760:	00 
   17761:	44 89 de             	mov    %r11d,%esi
   17764:	4c 8d 84 24 c0 00 00 	lea    0xc0(%rsp),%r8
   1776b:	00 
   1776c:	48 8d 8c 24 b8 00 00 	lea    0xb8(%rsp),%rcx
   17773:	00 
   17774:	48 8d 94 24 bc 00 00 	lea    0xbc(%rsp),%rdx
   1777b:	00 
   1777c:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   17781:	44 89 5c 24 38       	mov    %r11d,0x38(%rsp)
   17786:	f2 0f 11 84 24 e0 00 	movsd  %xmm0,0xe0(%rsp)
   1778d:	00 00 
   1778f:	e8 bc 2a 00 00       	call   1a250 <__hdtoa>
   17794:	44 8b 5c 24 38       	mov    0x38(%rsp),%r11d
   17799:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   1779e:	48 85 c0             	test   %rax,%rax
   177a1:	49 89 c0             	mov    %rax,%r8
   177a4:	0f 85 dc e2 ff ff    	jne    15a86 <__vfprintf+0x6b6>
   177aa:	e8 b1 cc ff ff       	call   14460 <__errno>
   177af:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   177b5:	48 c7 44 24 58 00 00 	movq   $0x0,0x58(%rsp)
   177bc:	00 00 
   177be:	e9 9d df ff ff       	jmp    15760 <__vfprintf+0x390>
   177c3:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   177c8:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   177cf:	00 
   177d0:	e8 db db ff ff       	call   153b0 <__sprint.part.0>
   177d5:	85 c0                	test   %eax,%eax
   177d7:	0f 84 6e e1 ff ff    	je     1594b <__vfprintf+0x57b>
   177dd:	e9 7e df ff ff       	jmp    15760 <__vfprintf+0x390>
   177e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   177e8:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   177ed:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   177f4:	00 
   177f5:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   177fa:	e8 b1 db ff ff       	call   153b0 <__sprint.part.0>
   177ff:	85 c0                	test   %eax,%eax
   17801:	0f 85 59 df ff ff    	jne    15760 <__vfprintf+0x390>
   17807:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   1780c:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   17811:	41 29 eb             	sub    %ebp,%r11d
   17814:	e9 68 ec ff ff       	jmp    16481 <__vfprintf+0x10b1>
   17819:	83 fb 60             	cmp    $0x60,%ebx
   1781c:	48 8d 05 6d f3 00 00 	lea    0xf36d(%rip),%rax        # 26b90 <g_dyn_entry_table+0xb90>
   17823:	48 8d 0d 62 f3 00 00 	lea    0xf362(%rip),%rcx        # 26b8c <g_dyn_entry_table+0xb8c>
   1782a:	c6 84 24 b3 00 00 00 	movb   $0x0,0xb3(%rsp)
   17831:	00 
   17832:	48 0f 4e c8          	cmovle %rax,%rcx
   17836:	31 c0                	xor    %eax,%eax
   17838:	e9 53 f8 ff ff       	jmp    17090 <__vfprintf+0x1cc0>
   1783d:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   17842:	8b 41 04             	mov    0x4(%rcx),%eax
   17845:	3d af 00 00 00       	cmp    $0xaf,%eax
   1784a:	0f 87 8b 03 00 00    	ja     17bdb <__vfprintf+0x280b>
   17850:	89 c2                	mov    %eax,%edx
   17852:	83 c0 10             	add    $0x10,%eax
   17855:	48 03 51 10          	add    0x10(%rcx),%rdx
   17859:	89 41 04             	mov    %eax,0x4(%rcx)
   1785c:	f2 0f 10 02          	movsd  (%rdx),%xmm0
   17860:	e9 48 f6 ff ff       	jmp    16ead <__vfprintf+0x1add>
   17865:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   1786a:	48 8b 41 08          	mov    0x8(%rcx),%rax
   1786e:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   17873:	48 83 c0 0f          	add    $0xf,%rax
   17877:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   1787b:	48 8d 50 10          	lea    0x10(%rax),%rdx
   1787f:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   17883:	db 28                	fldt   (%rax)
   17885:	e9 b3 e2 ff ff       	jmp    15b3d <__vfprintf+0x76d>
   1788a:	41 bb 07 00 00 00    	mov    $0x7,%r11d
   17890:	e9 59 e2 ff ff       	jmp    15aee <__vfprintf+0x71e>
   17895:	4c 89 c7             	mov    %r8,%rdi
   17898:	44 89 5c 24 70       	mov    %r11d,0x70(%rsp)
   1789d:	4c 89 54 24 48       	mov    %r10,0x48(%rsp)
   178a2:	4c 89 44 24 38       	mov    %r8,0x38(%rsp)
   178a7:	e8 e4 c1 ff ff       	call   13a90 <strlen>
   178ac:	48 3d ff ff ff 7f    	cmp    $0x7fffffff,%rax
   178b2:	0f 87 a8 dd ff ff    	ja     15660 <__vfprintf+0x290>
   178b8:	44 8b 5c 24 70       	mov    0x70(%rsp),%r11d
   178bd:	4c 8b 54 24 48       	mov    0x48(%rsp),%r10
   178c2:	89 44 24 40          	mov    %eax,0x40(%rsp)
   178c6:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8
   178cb:	e9 95 fd ff ff       	jmp    17665 <__vfprintf+0x2295>
   178d0:	48 85 c9             	test   %rcx,%rcx
   178d3:	0f 85 3d fc ff ff    	jne    17516 <__vfprintf+0x2146>
   178d9:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   178de:	8b 0f                	mov    (%rdi),%ecx
   178e0:	83 f9 2f             	cmp    $0x2f,%ecx
   178e3:	0f 87 44 03 00 00    	ja     17c2d <__vfprintf+0x285d>
   178e9:	89 ca                	mov    %ecx,%edx
   178eb:	83 c1 08             	add    $0x8,%ecx
   178ee:	48 03 57 10          	add    0x10(%rdi),%rdx
   178f2:	89 0f                	mov    %ecx,(%rdi)
   178f4:	48 8b 0a             	mov    (%rdx),%rcx
   178f7:	89 44 24 38          	mov    %eax,0x38(%rsp)
   178fb:	31 c0                	xor    %eax,%eax
   178fd:	e9 2e e6 ff ff       	jmp    15f30 <__vfprintf+0xb60>
   17902:	48 85 c9             	test   %rcx,%rcx
   17905:	0f 85 e7 fb ff ff    	jne    174f2 <__vfprintf+0x2122>
   1790b:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   17910:	8b 0f                	mov    (%rdi),%ecx
   17912:	83 f9 2f             	cmp    $0x2f,%ecx
   17915:	0f 87 fc 02 00 00    	ja     17c17 <__vfprintf+0x2847>
   1791b:	89 ca                	mov    %ecx,%edx
   1791d:	83 c1 08             	add    $0x8,%ecx
   17920:	48 03 57 10          	add    0x10(%rdi),%rdx
   17924:	89 0f                	mov    %ecx,(%rdi)
   17926:	48 8b 0a             	mov    (%rdx),%rcx
   17929:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1792d:	b8 01 00 00 00       	mov    $0x1,%eax
   17932:	e9 f9 e5 ff ff       	jmp    15f30 <__vfprintf+0xb60>
   17937:	48 85 c9             	test   %rcx,%rcx
   1793a:	0f 85 f7 fb ff ff    	jne    17537 <__vfprintf+0x2167>
   17940:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   17945:	8b 0f                	mov    (%rdi),%ecx
   17947:	83 f9 2f             	cmp    $0x2f,%ecx
   1794a:	0f 87 b1 02 00 00    	ja     17c01 <__vfprintf+0x2831>
   17950:	89 ca                	mov    %ecx,%edx
   17952:	83 c1 08             	add    $0x8,%ecx
   17955:	48 03 57 10          	add    0x10(%rdi),%rdx
   17959:	89 0f                	mov    %ecx,(%rdi)
   1795b:	48 8b 0a             	mov    (%rdx),%rcx
   1795e:	e9 58 e9 ff ff       	jmp    162bb <__vfprintf+0xeeb>
   17963:	0f b6 b4 24 8b 00 00 	movzbl 0x8b(%rsp),%esi
   1796a:	00 
   1796b:	48 8d 84 24 3a 02 00 	lea    0x23a(%rsp),%rax
   17972:	00 
   17973:	83 e6 df             	and    $0xffffffdf,%esi
   17976:	40 80 fe 45          	cmp    $0x45,%sil
   1797a:	75 10                	jne    1798c <__vfprintf+0x25bc>
   1797c:	c6 84 24 3a 02 00 00 	movb   $0x30,0x23a(%rsp)
   17983:	30 
   17984:	48 8d 84 24 3b 02 00 	lea    0x23b(%rsp),%rax
   1798b:	00 
   1798c:	83 c1 30             	add    $0x30,%ecx
   1798f:	88 08                	mov    %cl,(%rax)
   17991:	48 8d 8c 24 b0 02 00 	lea    0x2b0(%rsp),%rcx
   17998:	00 
   17999:	48 29 c8             	sub    %rcx,%rax
   1799c:	83 c0 79             	add    $0x79,%eax
   1799f:	89 84 24 9c 00 00 00 	mov    %eax,0x9c(%rsp)
   179a6:	e9 ec f9 ff ff       	jmp    17397 <__vfprintf+0x1fc7>
   179ab:	41 89 dc             	mov    %ebx,%r12d
   179ae:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
   179b3:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   179b8:	8b 5c 24 70          	mov    0x70(%rsp),%ebx
   179bc:	4c 8b 6c 24 78       	mov    0x78(%rsp),%r13
   179c1:	49 63 d4             	movslq %r12d,%rdx
   179c4:	44 01 e0             	add    %r12d,%eax
   179c7:	49 89 2a             	mov    %rbp,(%r10)
   179ca:	49 89 52 08          	mov    %rdx,0x8(%r10)
   179ce:	89 84 24 fc 00 00 00 	mov    %eax,0xfc(%rsp)
   179d5:	89 b4 24 f8 00 00 00 	mov    %esi,0xf8(%rsp)
   179dc:	83 fe 07             	cmp    $0x7,%esi
   179df:	0f 8e 0c 02 00 00    	jle    17bf1 <__vfprintf+0x2821>
   179e5:	85 c0                	test   %eax,%eax
   179e7:	0f 85 12 06 00 00    	jne    17fff <__vfprintf+0x2c2f>
   179ed:	c7 84 24 f8 00 00 00 	movl   $0x0,0xf8(%rsp)
   179f4:	00 00 00 00 
   179f8:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
   179ff:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   17a04:	e9 1e f6 ff ff       	jmp    17027 <__vfprintf+0x1c57>
   17a09:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   17a0e:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   17a15:	00 
   17a16:	4c 89 44 24 78       	mov    %r8,0x78(%rsp)
   17a1b:	44 89 5c 24 70       	mov    %r11d,0x70(%rsp)
   17a20:	e8 8b d9 ff ff       	call   153b0 <__sprint.part.0>
   17a25:	85 c0                	test   %eax,%eax
   17a27:	0f 85 33 dd ff ff    	jne    15760 <__vfprintf+0x390>
   17a2d:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   17a32:	4c 8b 44 24 78       	mov    0x78(%rsp),%r8
   17a37:	44 8b 5c 24 70       	mov    0x70(%rsp),%r11d
   17a3c:	e9 84 de ff ff       	jmp    158c5 <__vfprintf+0x4f5>
   17a41:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   17a46:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   17a4d:	00 
   17a4e:	e8 5d d9 ff ff       	call   153b0 <__sprint.part.0>
   17a53:	85 c0                	test   %eax,%eax
   17a55:	0f 85 05 dd ff ff    	jne    15760 <__vfprintf+0x390>
   17a5b:	8b 8c 24 f8 00 00 00 	mov    0xf8(%rsp),%ecx
   17a62:	8b 84 24 fc 00 00 00 	mov    0xfc(%rsp),%eax
   17a69:	44 8d 41 01          	lea    0x1(%rcx),%r8d
   17a6d:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
   17a72:	e9 5b ee ff ff       	jmp    168d2 <__vfprintf+0x1502>
   17a77:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   17a7c:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   17a83:	00 
   17a84:	4c 89 44 24 48       	mov    %r8,0x48(%rsp)
   17a89:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   17a8e:	e8 1d d9 ff ff       	call   153b0 <__sprint.part.0>
   17a93:	85 c0                	test   %eax,%eax
   17a95:	0f 85 c5 dc ff ff    	jne    15760 <__vfprintf+0x390>
   17a9b:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   17aa0:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
   17aa5:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   17aaa:	e9 01 f5 ff ff       	jmp    16fb0 <__vfprintf+0x1be0>
   17aaf:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   17ab4:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   17abb:	00 
   17abc:	4c 89 44 24 48       	mov    %r8,0x48(%rsp)
   17ac1:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   17ac6:	e8 e5 d8 ff ff       	call   153b0 <__sprint.part.0>
   17acb:	85 c0                	test   %eax,%eax
   17acd:	0f 85 8d dc ff ff    	jne    15760 <__vfprintf+0x390>
   17ad3:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   17ad8:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
   17add:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   17ae2:	e9 49 e9 ff ff       	jmp    16430 <__vfprintf+0x1060>
   17ae7:	41 0f be 5c 24 01    	movsbl 0x1(%r12),%ebx
   17aed:	83 0c 24 20          	orl    $0x20,(%rsp)
   17af1:	49 83 c4 01          	add    $0x1,%r12
   17af5:	e9 ff da ff ff       	jmp    155f9 <__vfprintf+0x229>
   17afa:	c6 84 24 31 02 00 00 	movb   $0x0,0x231(%rsp)
   17b01:	00 
   17b02:	31 d2                	xor    %edx,%edx
   17b04:	89 6c 24 38          	mov    %ebp,0x38(%rsp)
   17b08:	e9 2b f4 ff ff       	jmp    16f38 <__vfprintf+0x1b68>
   17b0d:	41 0f be 5c 24 01    	movsbl 0x1(%r12),%ebx
   17b13:	81 0c 24 00 08 00 00 	orl    $0x800,(%rsp)
   17b1a:	49 83 c4 01          	add    $0x1,%r12
   17b1e:	e9 d6 da ff ff       	jmp    155f9 <__vfprintf+0x229>
   17b23:	e8 0f e2 00 00       	call   25d37 <abort>
   17b28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   17b2f:	00 
   17b30:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   17b35:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   17b3c:	00 
   17b3d:	4c 89 44 24 48       	mov    %r8,0x48(%rsp)
   17b42:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   17b47:	e8 64 d8 ff ff       	call   153b0 <__sprint.part.0>
   17b4c:	85 c0                	test   %eax,%eax
   17b4e:	0f 85 0c dc ff ff    	jne    15760 <__vfprintf+0x390>
   17b54:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   17b59:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
   17b5e:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   17b63:	e9 30 e8 ff ff       	jmp    16398 <__vfprintf+0xfc8>
   17b68:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   17b6d:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   17b74:	00 
   17b75:	4c 89 44 24 48       	mov    %r8,0x48(%rsp)
   17b7a:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   17b7f:	e8 2c d8 ff ff       	call   153b0 <__sprint.part.0>
   17b84:	85 c0                	test   %eax,%eax
   17b86:	0f 85 d4 db ff ff    	jne    15760 <__vfprintf+0x390>
   17b8c:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   17b91:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
   17b96:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   17b9b:	e9 71 f4 ff ff       	jmp    17011 <__vfprintf+0x1c41>
   17ba0:	48 85 c9             	test   %rcx,%rcx
   17ba3:	0f 85 a9 f9 ff ff    	jne    17552 <__vfprintf+0x2182>
   17ba9:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   17bae:	8b 0f                	mov    (%rdi),%ecx
   17bb0:	83 f9 2f             	cmp    $0x2f,%ecx
   17bb3:	0f 87 e5 01 00 00    	ja     17d9e <__vfprintf+0x29ce>
   17bb9:	89 c8                	mov    %ecx,%eax
   17bbb:	83 c1 08             	add    $0x8,%ecx
   17bbe:	48 03 47 10          	add    0x10(%rdi),%rax
   17bc2:	89 0f                	mov    %ecx,(%rdi)
   17bc4:	48 8b 00             	mov    (%rax),%rax
   17bc7:	48 89 c1             	mov    %rax,%rcx
   17bca:	e9 16 e1 ff ff       	jmp    15ce5 <__vfprintf+0x915>
   17bcf:	4c 8d 05 c6 ef 00 00 	lea    0xefc6(%rip),%r8        # 26b9c <g_dyn_entry_table+0xb9c>
   17bd6:	e9 43 fa ff ff       	jmp    1761e <__vfprintf+0x224e>
   17bdb:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   17be0:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   17be4:	48 8d 42 08          	lea    0x8(%rdx),%rax
   17be8:	48 89 41 08          	mov    %rax,0x8(%rcx)
   17bec:	e9 6b fc ff ff       	jmp    1785c <__vfprintf+0x248c>
   17bf1:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
   17bf8:	49 83 c2 10          	add    $0x10,%r10
   17bfc:	e9 26 f4 ff ff       	jmp    17027 <__vfprintf+0x1c57>
   17c01:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   17c06:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   17c0a:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   17c0e:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   17c12:	e9 44 fd ff ff       	jmp    1795b <__vfprintf+0x258b>
   17c17:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   17c1c:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   17c20:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   17c24:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   17c28:	e9 f9 fc ff ff       	jmp    17926 <__vfprintf+0x2556>
   17c2d:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   17c32:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   17c36:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   17c3a:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   17c3e:	e9 b1 fc ff ff       	jmp    178f4 <__vfprintf+0x2524>
   17c43:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   17c48:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   17c4f:	00 
   17c50:	e8 5b d7 ff ff       	call   153b0 <__sprint.part.0>
   17c55:	85 c0                	test   %eax,%eax
   17c57:	0f 84 ef da ff ff    	je     1574c <__vfprintf+0x37c>
   17c5d:	e9 fe da ff ff       	jmp    15760 <__vfprintf+0x390>
   17c62:	48 85 d2             	test   %rdx,%rdx
   17c65:	0f 84 dd 05 00 00    	je     18248 <__vfprintf+0x2e78>
   17c6b:	48 63 c3             	movslq %ebx,%rax
   17c6e:	48 c1 e0 04          	shl    $0x4,%rax
   17c72:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   17c75:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   17c79:	8b 4c 24 38          	mov    0x38(%rsp),%ecx
   17c7d:	4d 8d 67 01          	lea    0x1(%r15),%r12
   17c81:	e9 f0 e0 ff ff       	jmp    15d76 <__vfprintf+0x9a6>
   17c86:	48 8d ac 24 10 01 00 	lea    0x110(%rsp),%rbp
   17c8d:	00 
   17c8e:	ba 08 00 00 00       	mov    $0x8,%edx
   17c93:	31 f6                	xor    %esi,%esi
   17c95:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   17c9a:	48 89 ef             	mov    %rbp,%rdi
   17c9d:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   17ca2:	e8 69 bd ff ff       	call   13a10 <memset>
   17ca7:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   17cac:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   17cb1:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   17cb8:	00 
   17cb9:	48 85 d2             	test   %rdx,%rdx
   17cbc:	0f 84 ef 02 00 00    	je     17fb1 <__vfprintf+0x2be1>
   17cc2:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   17cc7:	48 c1 e0 04          	shl    $0x4,%rax
   17ccb:	8b 34 02             	mov    (%rdx,%rax,1),%esi
   17cce:	4c 8d a4 24 40 02 00 	lea    0x240(%rsp),%r12
   17cd5:	00 
   17cd6:	48 89 ea             	mov    %rbp,%rdx
   17cd9:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   17cde:	4c 89 e7             	mov    %r12,%rdi
   17ce1:	4c 89 54 24 38       	mov    %r10,0x38(%rsp)
   17ce6:	e8 15 3a 00 00       	call   1b700 <wcrtomb>
   17ceb:	4c 8b 54 24 38       	mov    0x38(%rsp),%r10
   17cf0:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   17cf5:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   17cf9:	48 89 c3             	mov    %rax,%rbx
   17cfc:	0f 84 f0 0a 00 00    	je     187f2 <__vfprintf+0x3422>
   17d02:	85 c0                	test   %eax,%eax
   17d04:	89 44 24 40          	mov    %eax,0x40(%rsp)
   17d08:	b8 00 00 00 00       	mov    $0x0,%eax
   17d0d:	0f 48 d8             	cmovs  %eax,%ebx
   17d10:	e9 47 e3 ff ff       	jmp    1605c <__vfprintf+0xc8c>
   17d15:	83 fb 24             	cmp    $0x24,%ebx
   17d18:	0f 84 a1 08 00 00    	je     185bf <__vfprintf+0x31ef>
   17d1e:	44 89 44 24 2c       	mov    %r8d,0x2c(%rsp)
   17d23:	e9 74 e4 ff ff       	jmp    1619c <__vfprintf+0xdcc>
   17d28:	89 c7                	mov    %eax,%edi
   17d2a:	41 29 f3             	sub    %esi,%r11d
   17d2d:	b8 00 00 00 00       	mov    $0x0,%eax
   17d32:	29 f7                	sub    %esi,%edi
   17d34:	85 c9                	test   %ecx,%ecx
   17d36:	41 0f 45 fb          	cmovne %r11d,%edi
   17d3a:	85 ff                	test   %edi,%edi
   17d3c:	0f 48 f8             	cmovs  %eax,%edi
   17d3f:	e9 e4 de ff ff       	jmp    15c28 <__vfprintf+0x858>
   17d44:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   17d49:	8b 11                	mov    (%rcx),%edx
   17d4b:	83 fa 2f             	cmp    $0x2f,%edx
   17d4e:	0f 87 59 01 00 00    	ja     17ead <__vfprintf+0x2add>
   17d54:	89 d0                	mov    %edx,%eax
   17d56:	83 c2 08             	add    $0x8,%edx
   17d59:	48 03 41 10          	add    0x10(%rcx),%rax
   17d5d:	89 11                	mov    %edx,(%rcx)
   17d5f:	48 8b 08             	mov    (%rax),%rcx
   17d62:	e9 a9 e1 ff ff       	jmp    15f10 <__vfprintf+0xb40>
   17d67:	8b 0c 24             	mov    (%rsp),%ecx
   17d6a:	83 e1 01             	and    $0x1,%ecx
   17d6d:	89 4c 24 48          	mov    %ecx,0x48(%rsp)
   17d71:	0f 85 40 f6 ff ff    	jne    173b7 <__vfprintf+0x1fe7>
   17d77:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
   17d7b:	8b 5c 24 48          	mov    0x48(%rsp),%ebx
   17d7f:	4c 89 44 24 58       	mov    %r8,0x58(%rsp)
   17d84:	44 89 24 24          	mov    %r12d,(%rsp)
   17d88:	85 c9                	test   %ecx,%ecx
   17d8a:	0f 49 d9             	cmovns %ecx,%ebx
   17d8d:	e9 de de ff ff       	jmp    15c70 <__vfprintf+0x8a0>
   17d92:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   17d97:	8b 0e                	mov    (%rsi),%ecx
   17d99:	83 f9 2f             	cmp    $0x2f,%ecx
   17d9c:	76 25                	jbe    17dc3 <__vfprintf+0x29f3>
   17d9e:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   17da3:	48 8b 47 08          	mov    0x8(%rdi),%rax
   17da7:	48 8d 48 08          	lea    0x8(%rax),%rcx
   17dab:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   17daf:	e9 10 fe ff ff       	jmp    17bc4 <__vfprintf+0x27f4>
   17db4:	8d 77 01             	lea    0x1(%rdi),%esi
   17db7:	48 8d 2d 52 a3 01 00 	lea    0x1a352(%rip),%rbp        # 32110 <zeroes.3361>
   17dbe:	e9 67 e8 ff ff       	jmp    1662a <__vfprintf+0x125a>
   17dc3:	89 c8                	mov    %ecx,%eax
   17dc5:	83 c1 08             	add    $0x8,%ecx
   17dc8:	48 03 46 10          	add    0x10(%rsi),%rax
   17dcc:	89 0e                	mov    %ecx,(%rsi)
   17dce:	e9 f1 fd ff ff       	jmp    17bc4 <__vfprintf+0x27f4>
   17dd3:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   17dd8:	8b 0e                	mov    (%rsi),%ecx
   17dda:	83 f9 2f             	cmp    $0x2f,%ecx
   17ddd:	0f 87 06 02 00 00    	ja     17fe9 <__vfprintf+0x2c19>
   17de3:	89 ca                	mov    %ecx,%edx
   17de5:	83 c1 08             	add    $0x8,%ecx
   17de8:	48 03 56 10          	add    0x10(%rsi),%rdx
   17dec:	89 0e                	mov    %ecx,(%rsi)
   17dee:	e9 68 fb ff ff       	jmp    1795b <__vfprintf+0x258b>
   17df3:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   17df8:	8b 0e                	mov    (%rsi),%ecx
   17dfa:	83 f9 2f             	cmp    $0x2f,%ecx
   17dfd:	0f 87 3b 02 00 00    	ja     1803e <__vfprintf+0x2c6e>
   17e03:	89 ca                	mov    %ecx,%edx
   17e05:	83 c1 08             	add    $0x8,%ecx
   17e08:	48 03 56 10          	add    0x10(%rsi),%rdx
   17e0c:	89 0e                	mov    %ecx,(%rsi)
   17e0e:	e9 e1 fa ff ff       	jmp    178f4 <__vfprintf+0x2524>
   17e13:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   17e18:	8b 0e                	mov    (%rsi),%ecx
   17e1a:	83 f9 2f             	cmp    $0x2f,%ecx
   17e1d:	0f 87 b0 01 00 00    	ja     17fd3 <__vfprintf+0x2c03>
   17e23:	89 ca                	mov    %ecx,%edx
   17e25:	83 c1 08             	add    $0x8,%ecx
   17e28:	48 03 56 10          	add    0x10(%rsi),%rdx
   17e2c:	89 0e                	mov    %ecx,(%rsi)
   17e2e:	e9 f3 fa ff ff       	jmp    17926 <__vfprintf+0x2556>
   17e33:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   17e38:	8b 0e                	mov    (%rsi),%ecx
   17e3a:	83 f9 2f             	cmp    $0x2f,%ecx
   17e3d:	76 84                	jbe    17dc3 <__vfprintf+0x29f3>
   17e3f:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   17e44:	48 8b 46 08          	mov    0x8(%rsi),%rax
   17e48:	48 8d 48 08          	lea    0x8(%rax),%rcx
   17e4c:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   17e50:	e9 6f fd ff ff       	jmp    17bc4 <__vfprintf+0x27f4>
   17e55:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   17e5a:	8b 11                	mov    (%rcx),%edx
   17e5c:	83 fa 2f             	cmp    $0x2f,%edx
   17e5f:	0f 87 27 01 00 00    	ja     17f8c <__vfprintf+0x2bbc>
   17e65:	89 d0                	mov    %edx,%eax
   17e67:	83 c2 08             	add    $0x8,%edx
   17e6a:	48 03 41 10          	add    0x10(%rcx),%rax
   17e6e:	89 11                	mov    %edx,(%rcx)
   17e70:	0f b6 00             	movzbl (%rax),%eax
   17e73:	e9 c8 e1 ff ff       	jmp    16040 <__vfprintf+0xc70>
   17e78:	41 8d 79 01          	lea    0x1(%r9),%edi
   17e7c:	4c 8d 3d 9d a2 01 00 	lea    0x1a29d(%rip),%r15        # 32120 <blanks.3360>
   17e83:	e9 82 eb ff ff       	jmp    16a0a <__vfprintf+0x163a>
   17e88:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   17e8d:	48 8b 41 08          	mov    0x8(%rcx),%rax
   17e91:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   17e96:	48 83 c0 0f          	add    $0xf,%rax
   17e9a:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   17e9e:	48 8d 50 10          	lea    0x10(%rax),%rdx
   17ea2:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   17ea6:	db 28                	fldt   (%rax)
   17ea8:	e9 7f db ff ff       	jmp    15a2c <__vfprintf+0x65c>
   17ead:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   17eb2:	48 8b 41 08          	mov    0x8(%rcx),%rax
   17eb6:	48 8d 50 08          	lea    0x8(%rax),%rdx
   17eba:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   17ebe:	e9 9c fe ff ff       	jmp    17d5f <__vfprintf+0x298f>
   17ec3:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   17ec8:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   17ecf:	00 
   17ed0:	4c 89 44 24 48       	mov    %r8,0x48(%rsp)
   17ed5:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   17eda:	e8 d1 d4 ff ff       	call   153b0 <__sprint.part.0>
   17edf:	85 c0                	test   %eax,%eax
   17ee1:	0f 85 79 d8 ff ff    	jne    15760 <__vfprintf+0x390>
   17ee7:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   17eec:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
   17ef1:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   17ef6:	e9 bb e4 ff ff       	jmp    163b6 <__vfprintf+0xfe6>
   17efb:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   17f00:	8b 11                	mov    (%rcx),%edx
   17f02:	83 fa 2f             	cmp    $0x2f,%edx
   17f05:	0f 87 49 01 00 00    	ja     18054 <__vfprintf+0x2c84>
   17f0b:	89 d0                	mov    %edx,%eax
   17f0d:	83 c2 08             	add    $0x8,%edx
   17f10:	48 03 41 10          	add    0x10(%rcx),%rax
   17f14:	89 11                	mov    %edx,(%rcx)
   17f16:	4c 8b 00             	mov    (%rax),%r8
   17f19:	e9 f2 f6 ff ff       	jmp    17610 <__vfprintf+0x2240>
   17f1e:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   17f23:	8b 51 04             	mov    0x4(%rcx),%edx
   17f26:	81 fa af 00 00 00    	cmp    $0xaf,%edx
   17f2c:	0f 87 9e 02 00 00    	ja     181d0 <__vfprintf+0x2e00>
   17f32:	89 d0                	mov    %edx,%eax
   17f34:	83 c2 10             	add    $0x10,%edx
   17f37:	48 03 41 10          	add    0x10(%rcx),%rax
   17f3b:	89 51 04             	mov    %edx,0x4(%rcx)
   17f3e:	f2 0f 10 00          	movsd  (%rax),%xmm0
   17f42:	e9 12 f8 ff ff       	jmp    17759 <__vfprintf+0x2389>
   17f47:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   17f4c:	8b 11                	mov    (%rcx),%edx
   17f4e:	83 fa 2f             	cmp    $0x2f,%edx
   17f51:	0f 87 39 01 00 00    	ja     18090 <__vfprintf+0x2cc0>
   17f57:	89 d0                	mov    %edx,%eax
   17f59:	83 c2 08             	add    $0x8,%edx
   17f5c:	48 03 41 10          	add    0x10(%rcx),%rax
   17f60:	89 11                	mov    %edx,(%rcx)
   17f62:	48 8b 00             	mov    (%rax),%rax
   17f65:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
   17f6a:	e9 be de ff ff       	jmp    15e2d <__vfprintf+0xa5d>
   17f6f:	89 4c 24 38          	mov    %ecx,0x38(%rsp)
   17f73:	41 0f be 1c 24       	movsbl (%r12),%ebx
   17f78:	e9 7c d6 ff ff       	jmp    155f9 <__vfprintf+0x229>
   17f7d:	8d 7e 01             	lea    0x1(%rsi),%edi
   17f80:	4c 8d 3d 99 a1 01 00 	lea    0x1a199(%rip),%r15        # 32120 <blanks.3360>
   17f87:	e9 a8 eb ff ff       	jmp    16b34 <__vfprintf+0x1764>
   17f8c:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   17f91:	48 8b 41 08          	mov    0x8(%rcx),%rax
   17f95:	48 8d 50 08          	lea    0x8(%rax),%rdx
   17f99:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   17f9d:	e9 ce fe ff ff       	jmp    17e70 <__vfprintf+0x2aa0>
   17fa2:	8d 77 01             	lea    0x1(%rdi),%esi
   17fa5:	48 8d 2d 64 a1 01 00 	lea    0x1a164(%rip),%rbp        # 32110 <zeroes.3361>
   17fac:	e9 cc e7 ff ff       	jmp    1677d <__vfprintf+0x13ad>
   17fb1:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   17fb6:	8b 11                	mov    (%rcx),%edx
   17fb8:	83 fa 2f             	cmp    $0x2f,%edx
   17fbb:	0f 87 25 02 00 00    	ja     181e6 <__vfprintf+0x2e16>
   17fc1:	89 d0                	mov    %edx,%eax
   17fc3:	83 c2 08             	add    $0x8,%edx
   17fc6:	48 03 41 10          	add    0x10(%rcx),%rax
   17fca:	89 11                	mov    %edx,(%rcx)
   17fcc:	8b 30                	mov    (%rax),%esi
   17fce:	e9 fb fc ff ff       	jmp    17cce <__vfprintf+0x28fe>
   17fd3:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   17fd8:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   17fdc:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   17fe0:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   17fe4:	e9 3d f9 ff ff       	jmp    17926 <__vfprintf+0x2556>
   17fe9:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   17fee:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   17ff2:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   17ff6:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   17ffa:	e9 5c f9 ff ff       	jmp    1795b <__vfprintf+0x258b>
   17fff:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
   18004:	48 8d b4 24 f0 00 00 	lea    0xf0(%rsp),%rsi
   1800b:	00 
   1800c:	4c 89 44 24 48       	mov    %r8,0x48(%rsp)
   18011:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   18016:	e8 95 d3 ff ff       	call   153b0 <__sprint.part.0>
   1801b:	85 c0                	test   %eax,%eax
   1801d:	0f 85 3d d7 ff ff    	jne    15760 <__vfprintf+0x390>
   18023:	8b 84 24 bc 00 00 00 	mov    0xbc(%rsp),%eax
   1802a:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1802f:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
   18034:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   18039:	e9 e9 ef ff ff       	jmp    17027 <__vfprintf+0x1c57>
   1803e:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   18043:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   18047:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   1804b:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   1804f:	e9 a0 f8 ff ff       	jmp    178f4 <__vfprintf+0x2524>
   18054:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   18059:	48 8b 41 08          	mov    0x8(%rcx),%rax
   1805d:	48 8d 50 08          	lea    0x8(%rax),%rdx
   18061:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   18065:	e9 ac fe ff ff       	jmp    17f16 <__vfprintf+0x2b46>
   1806a:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   1806f:	8b 16                	mov    (%rsi),%edx
   18071:	83 fa 2f             	cmp    $0x2f,%edx
   18074:	0f 87 01 03 00 00    	ja     1837b <__vfprintf+0x2fab>
   1807a:	89 d0                	mov    %edx,%eax
   1807c:	83 c2 08             	add    $0x8,%edx
   1807f:	48 03 46 10          	add    0x10(%rsi),%rax
   18083:	89 16                	mov    %edx,(%rsi)
   18085:	8b 00                	mov    (%rax),%eax
   18087:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   1808b:	e9 e6 dc ff ff       	jmp    15d76 <__vfprintf+0x9a6>
   18090:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   18095:	48 8b 41 08          	mov    0x8(%rcx),%rax
   18099:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1809d:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   180a1:	e9 bc fe ff ff       	jmp    17f62 <__vfprintf+0x2b92>
   180a6:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   180ab:	ba 08 00 00 00       	mov    $0x8,%edx
   180b0:	31 f6                	xor    %esi,%esi
   180b2:	45 31 ff             	xor    %r15d,%r15d
   180b5:	48 8d ac 24 10 01 00 	lea    0x110(%rsp),%rbp
   180bc:	00 
   180bd:	44 89 5c 24 38       	mov    %r11d,0x38(%rsp)
   180c2:	48 8d 9c 24 32 02 00 	lea    0x232(%rsp),%rbx
   180c9:	00 
   180ca:	48 89 ef             	mov    %rbp,%rdi
   180cd:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   180d2:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
   180d9:	00 
   180da:	e8 31 b9 ff ff       	call   13a10 <memset>
   180df:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   180e4:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   180e9:	89 44 24 48          	mov    %eax,0x48(%rsp)
   180ed:	48 89 d8             	mov    %rbx,%rax
   180f0:	48 89 eb             	mov    %rbp,%rbx
   180f3:	48 89 c5             	mov    %rax,%rbp
   180f6:	eb 11                	jmp    18109 <__vfprintf+0x2d39>
   180f8:	4c 01 f8             	add    %r15,%rax
   180fb:	48 3b 44 24 38       	cmp    0x38(%rsp),%rax
   18100:	0f 87 f7 01 00 00    	ja     182fd <__vfprintf+0x2f2d>
   18106:	49 89 c7             	mov    %rax,%r15
   18109:	48 8b 84 24 d8 00 00 	mov    0xd8(%rsp),%rax
   18110:	00 
   18111:	48 89 da             	mov    %rbx,%rdx
   18114:	48 89 ef             	mov    %rbp,%rdi
   18117:	48 8d 70 04          	lea    0x4(%rax),%rsi
   1811b:	48 89 b4 24 d8 00 00 	mov    %rsi,0xd8(%rsp)
   18122:	00 
   18123:	8b 30                	mov    (%rax),%esi
   18125:	e8 d6 35 00 00       	call   1b700 <wcrtomb>
   1812a:	48 8d 70 ff          	lea    -0x1(%rax),%rsi
   1812e:	48 83 fe fd          	cmp    $0xfffffffffffffffd,%rsi
   18132:	76 c4                	jbe    180f8 <__vfprintf+0x2d28>
   18134:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   18139:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   1813e:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   18142:	0f 85 07 dd ff ff    	jne    15e4f <__vfprintf+0xa7f>
   18148:	e8 13 c3 ff ff       	call   14460 <__errno>
   1814d:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   18153:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   18158:	c7 44 24 28 ff ff ff 	movl   $0xffffffff,0x28(%rsp)
   1815f:	ff 
   18160:	66 c7 40 10 40 00    	movw   $0x40,0x10(%rax)
   18166:	e9 1a d5 ff ff       	jmp    15685 <__vfprintf+0x2b5>
   1816b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   18170:	4c 8d bc 24 10 01 00 	lea    0x110(%rsp),%r15
   18177:	00 
   18178:	31 f6                	xor    %esi,%esi
   1817a:	ba 08 00 00 00       	mov    $0x8,%edx
   1817f:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   18184:	4c 89 ff             	mov    %r15,%rdi
   18187:	4c 89 54 24 38       	mov    %r10,0x38(%rsp)
   1818c:	e8 7f b8 ff ff       	call   13a10 <memset>
   18191:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
   18196:	4c 89 f9             	mov    %r15,%rcx
   18199:	31 d2                	xor    %edx,%edx
   1819b:	31 ff                	xor    %edi,%edi
   1819d:	48 8d b4 24 d8 00 00 	lea    0xd8(%rsp),%rsi
   181a4:	00 
   181a5:	48 89 84 24 d8 00 00 	mov    %rax,0xd8(%rsp)
   181ac:	00 
   181ad:	e8 6e 36 00 00       	call   1b820 <wcsrtombs>
   181b2:	4c 8b 54 24 38       	mov    0x38(%rsp),%r10
   181b7:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   181bc:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   181c0:	49 89 c7             	mov    %rax,%r15
   181c3:	0f 85 86 dc ff ff    	jne    15e4f <__vfprintf+0xa7f>
   181c9:	e9 7a ff ff ff       	jmp    18148 <__vfprintf+0x2d78>
   181ce:	66 90                	xchg   %ax,%ax
   181d0:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   181d5:	48 8b 41 08          	mov    0x8(%rcx),%rax
   181d9:	48 8d 50 08          	lea    0x8(%rax),%rdx
   181dd:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   181e1:	e9 58 fd ff ff       	jmp    17f3e <__vfprintf+0x2b6e>
   181e6:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   181eb:	48 8b 41 08          	mov    0x8(%rcx),%rax
   181ef:	48 8d 50 08          	lea    0x8(%rax),%rdx
   181f3:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   181f7:	8b 30                	mov    (%rax),%esi
   181f9:	e9 d0 fa ff ff       	jmp    17cce <__vfprintf+0x28fe>
   181fe:	8d 7e 01             	lea    0x1(%rsi),%edi
   18201:	48 8d 2d 08 9f 01 00 	lea    0x19f08(%rip),%rbp        # 32110 <zeroes.3361>
   18208:	e9 21 e3 ff ff       	jmp    1652e <__vfprintf+0x115e>
   1820d:	f7 04 24 00 08 00 00 	testl  $0x800,(%rsp)
   18214:	0f 84 23 02 00 00    	je     1843d <__vfprintf+0x306d>
   1821a:	48 85 c9             	test   %rcx,%rcx
   1821d:	0f 84 a4 04 00 00    	je     186c7 <__vfprintf+0x32f7>
   18223:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   18228:	48 c1 e0 04          	shl    $0x4,%rax
   1822c:	48 0f be 0c 01       	movsbq (%rcx,%rax,1),%rcx
   18231:	48 89 c8             	mov    %rcx,%rax
   18234:	e9 ac da ff ff       	jmp    15ce5 <__vfprintf+0x915>
   18239:	8d 77 01             	lea    0x1(%rdi),%esi
   1823c:	48 8d 2d cd 9e 01 00 	lea    0x19ecd(%rip),%rbp        # 32110 <zeroes.3361>
   18243:	e9 65 f3 ff ff       	jmp    175ad <__vfprintf+0x21dd>
   18248:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
   1824d:	48 8d 84 24 b0 01 00 	lea    0x1b0(%rsp),%rax
   18254:	00 
   18255:	48 8d 94 24 c8 00 00 	lea    0xc8(%rsp),%rdx
   1825c:	00 
   1825d:	44 89 5c 24 2c       	mov    %r11d,0x2c(%rsp)
   18262:	48 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%rcx
   18269:	00 
   1826a:	48 8d b4 24 18 01 00 	lea    0x118(%rsp),%rsi
   18271:	00 
   18272:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   18277:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   1827e:	00 
   1827f:	e8 9c c2 ff ff       	call   14520 <__find_arguments>
   18284:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   18289:	44 8b 5c 24 2c       	mov    0x2c(%rsp),%r11d
   1828e:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   18295:	00 
   18296:	48 85 d2             	test   %rdx,%rdx
   18299:	0f 85 cc f9 ff ff    	jne    17c6b <__vfprintf+0x289b>
   1829f:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   182a4:	8b 11                	mov    (%rcx),%edx
   182a6:	83 fa 2f             	cmp    $0x2f,%edx
   182a9:	0f 87 59 02 00 00    	ja     18508 <__vfprintf+0x3138>
   182af:	89 d0                	mov    %edx,%eax
   182b1:	83 c2 08             	add    $0x8,%edx
   182b4:	48 03 41 10          	add    0x10(%rcx),%rax
   182b8:	89 11                	mov    %edx,(%rcx)
   182ba:	8b 00                	mov    (%rax),%eax
   182bc:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   182c0:	e9 b4 f9 ff ff       	jmp    17c79 <__vfprintf+0x28a9>
   182c5:	8d 77 01             	lea    0x1(%rdi),%esi
   182c8:	e9 f4 f6 ff ff       	jmp    179c1 <__vfprintf+0x25f1>
   182cd:	f7 04 24 00 08 00 00 	testl  $0x800,(%rsp)
   182d4:	0f 84 81 01 00 00    	je     1845b <__vfprintf+0x308b>
   182da:	48 85 c9             	test   %rcx,%rcx
   182dd:	0f 84 ec 04 00 00    	je     187cf <__vfprintf+0x33ff>
   182e3:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   182e8:	48 c1 e2 04          	shl    $0x4,%rdx
   182ec:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
   182f0:	e9 c6 df ff ff       	jmp    162bb <__vfprintf+0xeeb>
   182f5:	45 31 e4             	xor    %r12d,%r12d
   182f8:	e9 93 de ff ff       	jmp    16190 <__vfprintf+0xdc0>
   182fd:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   18302:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   18307:	e9 43 db ff ff       	jmp    15e4f <__vfprintf+0xa7f>
   1830c:	f7 04 24 00 08 00 00 	testl  $0x800,(%rsp)
   18313:	0f 84 5c 01 00 00    	je     18475 <__vfprintf+0x30a5>
   18319:	48 85 c9             	test   %rcx,%rcx
   1831c:	0f 84 34 03 00 00    	je     18656 <__vfprintf+0x3286>
   18322:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   18327:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1832b:	b8 01 00 00 00       	mov    $0x1,%eax
   18330:	48 c1 e2 04          	shl    $0x4,%rdx
   18334:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
   18338:	e9 f3 db ff ff       	jmp    15f30 <__vfprintf+0xb60>
   1833d:	f7 04 24 00 08 00 00 	testl  $0x800,(%rsp)
   18344:	0f 84 d4 01 00 00    	je     1851e <__vfprintf+0x314e>
   1834a:	48 85 c9             	test   %rcx,%rcx
   1834d:	0f 84 b9 04 00 00    	je     1880c <__vfprintf+0x343c>
   18353:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   18358:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1835c:	31 c0                	xor    %eax,%eax
   1835e:	48 c1 e2 04          	shl    $0x4,%rdx
   18362:	0f b6 0c 11          	movzbl (%rcx,%rdx,1),%ecx
   18366:	e9 c5 db ff ff       	jmp    15f30 <__vfprintf+0xb60>
   1836b:	c7 84 24 9c 00 00 00 	movl   $0x2,0x9c(%rsp)
   18372:	02 00 00 00 
   18376:	e9 1c f0 ff ff       	jmp    17397 <__vfprintf+0x1fc7>
   1837b:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   18380:	48 8b 47 08          	mov    0x8(%rdi),%rax
   18384:	48 8d 50 08          	lea    0x8(%rax),%rdx
   18388:	48 89 57 08          	mov    %rdx,0x8(%rdi)
   1838c:	e9 f4 fc ff ff       	jmp    18085 <__vfprintf+0x2cb5>
   18391:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   18396:	8b 0e                	mov    (%rsi),%ecx
   18398:	83 f9 2f             	cmp    $0x2f,%ecx
   1839b:	0f 87 08 02 00 00    	ja     185a9 <__vfprintf+0x31d9>
   183a1:	89 ca                	mov    %ecx,%edx
   183a3:	83 c1 08             	add    $0x8,%ecx
   183a6:	48 03 56 10          	add    0x10(%rsi),%rdx
   183aa:	89 0e                	mov    %ecx,(%rsi)
   183ac:	89 44 24 38          	mov    %eax,0x38(%rsp)
   183b0:	0f b7 0a             	movzwl (%rdx),%ecx
   183b3:	b8 01 00 00 00       	mov    $0x1,%eax
   183b8:	e9 73 db ff ff       	jmp    15f30 <__vfprintf+0xb60>
   183bd:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   183c2:	8b 0e                	mov    (%rsi),%ecx
   183c4:	83 f9 2f             	cmp    $0x2f,%ecx
   183c7:	0f 87 10 02 00 00    	ja     185dd <__vfprintf+0x320d>
   183cd:	89 ca                	mov    %ecx,%edx
   183cf:	83 c1 08             	add    $0x8,%ecx
   183d2:	48 03 56 10          	add    0x10(%rsi),%rdx
   183d6:	89 0e                	mov    %ecx,(%rsi)
   183d8:	89 44 24 38          	mov    %eax,0x38(%rsp)
   183dc:	0f b7 0a             	movzwl (%rdx),%ecx
   183df:	31 c0                	xor    %eax,%eax
   183e1:	e9 4a db ff ff       	jmp    15f30 <__vfprintf+0xb60>
   183e6:	4c 89 c7             	mov    %r8,%rdi
   183e9:	e8 b2 a0 ff ff       	call   124a0 <dlfree>
   183ee:	e9 55 fd ff ff       	jmp    18148 <__vfprintf+0x2d78>
   183f3:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   183f8:	8b 0e                	mov    (%rsi),%ecx
   183fa:	83 f9 2f             	cmp    $0x2f,%ecx
   183fd:	0f 87 c3 04 00 00    	ja     188c6 <__vfprintf+0x34f6>
   18403:	89 c8                	mov    %ecx,%eax
   18405:	83 c1 08             	add    $0x8,%ecx
   18408:	48 03 46 10          	add    0x10(%rsi),%rax
   1840c:	89 0e                	mov    %ecx,(%rsi)
   1840e:	48 0f bf 08          	movswq (%rax),%rcx
   18412:	48 89 c8             	mov    %rcx,%rax
   18415:	e9 cb d8 ff ff       	jmp    15ce5 <__vfprintf+0x915>
   1841a:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   1841f:	8b 0e                	mov    (%rsi),%ecx
   18421:	83 f9 2f             	cmp    $0x2f,%ecx
   18424:	0f 87 c0 02 00 00    	ja     186ea <__vfprintf+0x331a>
   1842a:	89 ca                	mov    %ecx,%edx
   1842c:	83 c1 08             	add    $0x8,%ecx
   1842f:	48 03 56 10          	add    0x10(%rsi),%rdx
   18433:	89 0e                	mov    %ecx,(%rsi)
   18435:	0f b7 0a             	movzwl (%rdx),%ecx
   18438:	e9 7e de ff ff       	jmp    162bb <__vfprintf+0xeeb>
   1843d:	48 85 c9             	test   %rcx,%rcx
   18440:	0f 84 35 04 00 00    	je     1887b <__vfprintf+0x34ab>
   18446:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   1844b:	48 c1 e0 04          	shl    $0x4,%rax
   1844f:	48 63 0c 01          	movslq (%rcx,%rax,1),%rcx
   18453:	48 89 c8             	mov    %rcx,%rax
   18456:	e9 8a d8 ff ff       	jmp    15ce5 <__vfprintf+0x915>
   1845b:	48 85 c9             	test   %rcx,%rcx
   1845e:	0f 84 1a 02 00 00    	je     1867e <__vfprintf+0x32ae>
   18464:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   18469:	48 c1 e2 04          	shl    $0x4,%rdx
   1846d:	8b 0c 11             	mov    (%rcx,%rdx,1),%ecx
   18470:	e9 46 de ff ff       	jmp    162bb <__vfprintf+0xeeb>
   18475:	48 85 c9             	test   %rcx,%rcx
   18478:	0f 84 b5 04 00 00    	je     18933 <__vfprintf+0x3563>
   1847e:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   18483:	89 44 24 38          	mov    %eax,0x38(%rsp)
   18487:	b8 01 00 00 00       	mov    $0x1,%eax
   1848c:	48 c1 e2 04          	shl    $0x4,%rdx
   18490:	8b 0c 11             	mov    (%rcx,%rdx,1),%ecx
   18493:	e9 98 da ff ff       	jmp    15f30 <__vfprintf+0xb60>
   18498:	e8 c3 bf ff ff       	call   14460 <__errno>
   1849d:	c7 44 24 28 ff ff ff 	movl   $0xffffffff,0x28(%rsp)
   184a4:	ff 
   184a5:	c7 00 09 00 00 00    	movl   $0x9,(%rax)
   184ab:	e9 06 d2 ff ff       	jmp    156b6 <__vfprintf+0x2e6>
   184b0:	41 0f be 44 24 01    	movsbl 0x1(%r12),%eax
   184b6:	31 db                	xor    %ebx,%ebx
   184b8:	4d 89 fc             	mov    %r15,%r12
   184bb:	8d 50 d0             	lea    -0x30(%rax),%edx
   184be:	89 c1                	mov    %eax,%ecx
   184c0:	83 fa 09             	cmp    $0x9,%edx
   184c3:	76 2e                	jbe    184f3 <__vfprintf+0x3123>
   184c5:	eb 77                	jmp    1853e <__vfprintf+0x316e>
   184c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   184ce:	00 00 
   184d0:	49 83 c4 01          	add    $0x1,%r12
   184d4:	8d 5c 10 d0          	lea    -0x30(%rax,%rdx,1),%ebx
   184d8:	41 0f be 04 24       	movsbl (%r12),%eax
   184dd:	8d 50 d0             	lea    -0x30(%rax),%edx
   184e0:	89 c1                	mov    %eax,%ecx
   184e2:	83 fa 09             	cmp    $0x9,%edx
   184e5:	77 57                	ja     1853e <__vfprintf+0x316e>
   184e7:	81 fb cc cc cc 0c    	cmp    $0xccccccc,%ebx
   184ed:	0f 8f 6d d1 ff ff    	jg     15660 <__vfprintf+0x290>
   184f3:	8d 14 9b             	lea    (%rbx,%rbx,4),%edx
   184f6:	b9 2f 00 00 80       	mov    $0x8000002f,%ecx
   184fb:	01 d2                	add    %edx,%edx
   184fd:	29 c1                	sub    %eax,%ecx
   184ff:	39 d1                	cmp    %edx,%ecx
   18501:	7d cd                	jge    184d0 <__vfprintf+0x3100>
   18503:	e9 58 d1 ff ff       	jmp    15660 <__vfprintf+0x290>
   18508:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   1850d:	48 8b 41 08          	mov    0x8(%rcx),%rax
   18511:	48 8d 50 08          	lea    0x8(%rax),%rdx
   18515:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   18519:	e9 9c fd ff ff       	jmp    182ba <__vfprintf+0x2eea>
   1851e:	48 85 c9             	test   %rcx,%rcx
   18521:	0f 84 0a 03 00 00    	je     18831 <__vfprintf+0x3461>
   18527:	48 63 54 24 38       	movslq 0x38(%rsp),%rdx
   1852c:	89 44 24 38          	mov    %eax,0x38(%rsp)
   18530:	31 c0                	xor    %eax,%eax
   18532:	48 c1 e2 04          	shl    $0x4,%rdx
   18536:	8b 0c 11             	mov    (%rcx,%rdx,1),%ecx
   18539:	e9 f2 d9 ff ff       	jmp    15f30 <__vfprintf+0xb60>
   1853e:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   18545:	00 
   18546:	80 f9 24             	cmp    $0x24,%cl
   18549:	0f 84 e3 01 00 00    	je     18732 <__vfprintf+0x3362>
   1854f:	48 63 44 24 38       	movslq 0x38(%rsp),%rax
   18554:	8d 48 01             	lea    0x1(%rax),%ecx
   18557:	48 85 d2             	test   %rdx,%rdx
   1855a:	0f 84 b3 01 00 00    	je     18713 <__vfprintf+0x3343>
   18560:	48 c1 e0 04          	shl    $0x4,%rax
   18564:	44 8b 1c 02          	mov    (%rdx,%rax,1),%r11d
   18568:	45 85 db             	test   %r11d,%r11d
   1856b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   18570:	89 4c 24 38          	mov    %ecx,0x38(%rsp)
   18574:	41 0f be 1f          	movsbl (%r15),%ebx
   18578:	44 0f 48 d8          	cmovs  %eax,%r11d
   1857c:	4d 89 fc             	mov    %r15,%r12
   1857f:	e9 75 d0 ff ff       	jmp    155f9 <__vfprintf+0x229>
   18584:	e8 b7 b5 ff ff       	call   13b40 <__stack_chk_fail>
   18589:	48 83 bc 24 c8 00 00 	cmpq   $0x0,0xc8(%rsp)
   18590:	00 00 
   18592:	0f 84 44 03 00 00    	je     188dc <__vfprintf+0x350c>
   18598:	44 89 64 24 38       	mov    %r12d,0x38(%rsp)
   1859d:	41 0f be 1f          	movsbl (%r15),%ebx
   185a1:	4d 89 fc             	mov    %r15,%r12
   185a4:	e9 50 d0 ff ff       	jmp    155f9 <__vfprintf+0x229>
   185a9:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   185ae:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   185b2:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   185b6:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   185ba:	e9 ed fd ff ff       	jmp    183ac <__vfprintf+0x2fdc>
   185bf:	48 83 bc 24 c8 00 00 	cmpq   $0x0,0xc8(%rsp)
   185c6:	00 00 
   185c8:	74 29                	je     185f3 <__vfprintf+0x3223>
   185ca:	41 0f be 5c 24 01    	movsbl 0x1(%r12),%ebx
   185d0:	44 89 44 24 38       	mov    %r8d,0x38(%rsp)
   185d5:	4d 89 fc             	mov    %r15,%r12
   185d8:	e9 1c d0 ff ff       	jmp    155f9 <__vfprintf+0x229>
   185dd:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   185e2:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   185e6:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   185ea:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   185ee:	e9 e5 fd ff ff       	jmp    183d8 <__vfprintf+0x3008>
   185f3:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
   185f8:	48 8d 84 24 b0 01 00 	lea    0x1b0(%rsp),%rax
   185ff:	00 
   18600:	48 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%rcx
   18607:	00 
   18608:	44 89 5c 24 48       	mov    %r11d,0x48(%rsp)
   1860d:	48 8d 94 24 c8 00 00 	lea    0xc8(%rsp),%rdx
   18614:	00 
   18615:	48 8d b4 24 18 01 00 	lea    0x118(%rsp),%rsi
   1861c:	00 
   1861d:	4c 89 54 24 40       	mov    %r10,0x40(%rsp)
   18622:	44 89 44 24 18       	mov    %r8d,0x18(%rsp)
   18627:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   1862e:	00 
   1862f:	e8 ec be ff ff       	call   14520 <__find_arguments>
   18634:	44 8b 44 24 18       	mov    0x18(%rsp),%r8d
   18639:	41 0f be 5c 24 01    	movsbl 0x1(%r12),%ebx
   1863f:	4d 89 fc             	mov    %r15,%r12
   18642:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   18647:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
   1864c:	44 89 44 24 38       	mov    %r8d,0x38(%rsp)
   18651:	e9 a3 cf ff ff       	jmp    155f9 <__vfprintf+0x229>
   18656:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   1865b:	8b 0f                	mov    (%rdi),%ecx
   1865d:	83 f9 2f             	cmp    $0x2f,%ecx
   18660:	77 3a                	ja     1869c <__vfprintf+0x32cc>
   18662:	89 ca                	mov    %ecx,%edx
   18664:	83 c1 08             	add    $0x8,%ecx
   18667:	48 03 57 10          	add    0x10(%rdi),%rdx
   1866b:	89 0f                	mov    %ecx,(%rdi)
   1866d:	89 44 24 38          	mov    %eax,0x38(%rsp)
   18671:	0f b6 0a             	movzbl (%rdx),%ecx
   18674:	b8 01 00 00 00       	mov    $0x1,%eax
   18679:	e9 b2 d8 ff ff       	jmp    15f30 <__vfprintf+0xb60>
   1867e:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   18683:	8b 0e                	mov    (%rsi),%ecx
   18685:	83 f9 2f             	cmp    $0x2f,%ecx
   18688:	77 25                	ja     186af <__vfprintf+0x32df>
   1868a:	89 ca                	mov    %ecx,%edx
   1868c:	83 c1 08             	add    $0x8,%ecx
   1868f:	48 03 56 10          	add    0x10(%rsi),%rdx
   18693:	89 0e                	mov    %ecx,(%rsi)
   18695:	8b 0a                	mov    (%rdx),%ecx
   18697:	e9 1f dc ff ff       	jmp    162bb <__vfprintf+0xeeb>
   1869c:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   186a1:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   186a5:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   186a9:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   186ad:	eb be                	jmp    1866d <__vfprintf+0x329d>
   186af:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   186b4:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   186b8:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   186bc:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   186c0:	8b 0a                	mov    (%rdx),%ecx
   186c2:	e9 f4 db ff ff       	jmp    162bb <__vfprintf+0xeeb>
   186c7:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   186cc:	8b 0f                	mov    (%rdi),%ecx
   186ce:	83 f9 2f             	cmp    $0x2f,%ecx
   186d1:	77 2d                	ja     18700 <__vfprintf+0x3330>
   186d3:	89 c8                	mov    %ecx,%eax
   186d5:	83 c1 08             	add    $0x8,%ecx
   186d8:	48 03 47 10          	add    0x10(%rdi),%rax
   186dc:	89 0f                	mov    %ecx,(%rdi)
   186de:	48 0f be 08          	movsbq (%rax),%rcx
   186e2:	48 89 c8             	mov    %rcx,%rax
   186e5:	e9 fb d5 ff ff       	jmp    15ce5 <__vfprintf+0x915>
   186ea:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   186ef:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   186f3:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   186f7:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   186fb:	e9 35 fd ff ff       	jmp    18435 <__vfprintf+0x3065>
   18700:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   18705:	48 8b 47 08          	mov    0x8(%rdi),%rax
   18709:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1870d:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   18711:	eb cb                	jmp    186de <__vfprintf+0x330e>
   18713:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   18718:	8b 16                	mov    (%rsi),%edx
   1871a:	83 fa 2f             	cmp    $0x2f,%edx
   1871d:	77 31                	ja     18750 <__vfprintf+0x3380>
   1871f:	89 d0                	mov    %edx,%eax
   18721:	83 c2 08             	add    $0x8,%edx
   18724:	48 03 46 10          	add    0x10(%rsi),%rax
   18728:	89 16                	mov    %edx,(%rsi)
   1872a:	44 8b 18             	mov    (%rax),%r11d
   1872d:	e9 36 fe ff ff       	jmp    18568 <__vfprintf+0x3198>
   18732:	48 85 d2             	test   %rdx,%rdx
   18735:	74 2c                	je     18763 <__vfprintf+0x3393>
   18737:	48 63 c3             	movslq %ebx,%rax
   1873a:	48 c1 e0 04          	shl    $0x4,%rax
   1873e:	44 8b 1c 02          	mov    (%rdx,%rax,1),%r11d
   18742:	8b 4c 24 38          	mov    0x38(%rsp),%ecx
   18746:	4d 8d 7c 24 01       	lea    0x1(%r12),%r15
   1874b:	e9 18 fe ff ff       	jmp    18568 <__vfprintf+0x3198>
   18750:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   18755:	48 8b 46 08          	mov    0x8(%rsi),%rax
   18759:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1875d:	48 89 56 08          	mov    %rdx,0x8(%rsi)
   18761:	eb c7                	jmp    1872a <__vfprintf+0x335a>
   18763:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
   18768:	48 8d 84 24 b0 01 00 	lea    0x1b0(%rsp),%rax
   1876f:	00 
   18770:	48 8d 94 24 c8 00 00 	lea    0xc8(%rsp),%rdx
   18777:	00 
   18778:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   1877d:	48 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%rcx
   18784:	00 
   18785:	48 8d b4 24 18 01 00 	lea    0x118(%rsp),%rsi
   1878c:	00 
   1878d:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   18794:	00 
   18795:	e8 86 bd ff ff       	call   14520 <__find_arguments>
   1879a:	48 8b 94 24 c8 00 00 	mov    0xc8(%rsp),%rdx
   187a1:	00 
   187a2:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   187a7:	48 85 d2             	test   %rdx,%rdx
   187aa:	75 8b                	jne    18737 <__vfprintf+0x3367>
   187ac:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   187b1:	8b 11                	mov    (%rcx),%edx
   187b3:	83 fa 2f             	cmp    $0x2f,%edx
   187b6:	0f 87 e1 00 00 00    	ja     1889d <__vfprintf+0x34cd>
   187bc:	89 d0                	mov    %edx,%eax
   187be:	83 c2 08             	add    $0x8,%edx
   187c1:	48 03 41 10          	add    0x10(%rcx),%rax
   187c5:	89 11                	mov    %edx,(%rcx)
   187c7:	44 8b 18             	mov    (%rax),%r11d
   187ca:	e9 73 ff ff ff       	jmp    18742 <__vfprintf+0x3372>
   187cf:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   187d4:	8b 0f                	mov    (%rdi),%ecx
   187d6:	83 f9 2f             	cmp    $0x2f,%ecx
   187d9:	0f 87 7b 01 00 00    	ja     1895a <__vfprintf+0x358a>
   187df:	89 ca                	mov    %ecx,%edx
   187e1:	83 c1 08             	add    $0x8,%ecx
   187e4:	48 03 57 10          	add    0x10(%rdi),%rdx
   187e8:	89 0f                	mov    %ecx,(%rdi)
   187ea:	0f b6 0a             	movzbl (%rdx),%ecx
   187ed:	e9 c9 da ff ff       	jmp    162bb <__vfprintf+0xeeb>
   187f2:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   187f7:	66 83 48 10 40       	orw    $0x40,0x10(%rax)
   187fc:	e8 5f bc ff ff       	call   14460 <__errno>
   18801:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   18807:	e9 54 cf ff ff       	jmp    15760 <__vfprintf+0x390>
   1880c:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   18811:	8b 0f                	mov    (%rdi),%ecx
   18813:	83 f9 2f             	cmp    $0x2f,%ecx
   18816:	77 3d                	ja     18855 <__vfprintf+0x3485>
   18818:	89 ca                	mov    %ecx,%edx
   1881a:	83 c1 08             	add    $0x8,%ecx
   1881d:	48 03 57 10          	add    0x10(%rdi),%rdx
   18821:	89 0f                	mov    %ecx,(%rdi)
   18823:	89 44 24 38          	mov    %eax,0x38(%rsp)
   18827:	0f b6 0a             	movzbl (%rdx),%ecx
   1882a:	31 c0                	xor    %eax,%eax
   1882c:	e9 ff d6 ff ff       	jmp    15f30 <__vfprintf+0xb60>
   18831:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   18836:	8b 0e                	mov    (%rsi),%ecx
   18838:	83 f9 2f             	cmp    $0x2f,%ecx
   1883b:	77 2b                	ja     18868 <__vfprintf+0x3498>
   1883d:	89 ca                	mov    %ecx,%edx
   1883f:	83 c1 08             	add    $0x8,%ecx
   18842:	48 03 56 10          	add    0x10(%rsi),%rdx
   18846:	89 0e                	mov    %ecx,(%rsi)
   18848:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1884c:	8b 0a                	mov    (%rdx),%ecx
   1884e:	31 c0                	xor    %eax,%eax
   18850:	e9 db d6 ff ff       	jmp    15f30 <__vfprintf+0xb60>
   18855:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   1885a:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   1885e:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   18862:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   18866:	eb bb                	jmp    18823 <__vfprintf+0x3453>
   18868:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   1886d:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   18871:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   18875:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   18879:	eb cd                	jmp    18848 <__vfprintf+0x3478>
   1887b:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   18880:	8b 0e                	mov    (%rsi),%ecx
   18882:	83 f9 2f             	cmp    $0x2f,%ecx
   18885:	77 2c                	ja     188b3 <__vfprintf+0x34e3>
   18887:	89 c8                	mov    %ecx,%eax
   18889:	83 c1 08             	add    $0x8,%ecx
   1888c:	48 03 46 10          	add    0x10(%rsi),%rax
   18890:	89 0e                	mov    %ecx,(%rsi)
   18892:	48 63 08             	movslq (%rax),%rcx
   18895:	48 89 c8             	mov    %rcx,%rax
   18898:	e9 48 d4 ff ff       	jmp    15ce5 <__vfprintf+0x915>
   1889d:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
   188a2:	48 8b 41 08          	mov    0x8(%rcx),%rax
   188a6:	48 8d 50 08          	lea    0x8(%rax),%rdx
   188aa:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   188ae:	e9 14 ff ff ff       	jmp    187c7 <__vfprintf+0x33f7>
   188b3:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   188b8:	48 8b 46 08          	mov    0x8(%rsi),%rax
   188bc:	48 8d 48 08          	lea    0x8(%rax),%rcx
   188c0:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   188c4:	eb cc                	jmp    18892 <__vfprintf+0x34c2>
   188c6:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   188cb:	48 8b 46 08          	mov    0x8(%rsi),%rax
   188cf:	48 8d 48 08          	lea    0x8(%rax),%rcx
   188d3:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   188d7:	e9 32 fb ff ff       	jmp    1840e <__vfprintf+0x303e>
   188dc:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
   188e1:	48 8d 84 24 b0 01 00 	lea    0x1b0(%rsp),%rax
   188e8:	00 
   188e9:	48 8d 8c 24 d0 00 00 	lea    0xd0(%rsp),%rcx
   188f0:	00 
   188f1:	44 89 5c 24 40       	mov    %r11d,0x40(%rsp)
   188f6:	48 8d 94 24 c8 00 00 	lea    0xc8(%rsp),%rdx
   188fd:	00 
   188fe:	48 8d b4 24 18 01 00 	lea    0x118(%rsp),%rsi
   18905:	00 
   18906:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   1890b:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
   18912:	00 
   18913:	e8 08 bc ff ff       	call   14520 <__find_arguments>
   18918:	44 89 64 24 38       	mov    %r12d,0x38(%rsp)
   1891d:	41 0f be 1f          	movsbl (%r15),%ebx
   18921:	4d 89 fc             	mov    %r15,%r12
   18924:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   18929:	44 8b 5c 24 40       	mov    0x40(%rsp),%r11d
   1892e:	e9 c6 cc ff ff       	jmp    155f9 <__vfprintf+0x229>
   18933:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   18938:	8b 0e                	mov    (%rsi),%ecx
   1893a:	83 f9 2f             	cmp    $0x2f,%ecx
   1893d:	77 31                	ja     18970 <__vfprintf+0x35a0>
   1893f:	89 ca                	mov    %ecx,%edx
   18941:	83 c1 08             	add    $0x8,%ecx
   18944:	48 03 56 10          	add    0x10(%rsi),%rdx
   18948:	89 0e                	mov    %ecx,(%rsi)
   1894a:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1894e:	8b 0a                	mov    (%rdx),%ecx
   18950:	b8 01 00 00 00       	mov    $0x1,%eax
   18955:	e9 d6 d5 ff ff       	jmp    15f30 <__vfprintf+0xb60>
   1895a:	48 8b 7c 24 50       	mov    0x50(%rsp),%rdi
   1895f:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   18963:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   18967:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
   1896b:	e9 7a fe ff ff       	jmp    187ea <__vfprintf+0x341a>
   18970:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
   18975:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   18979:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
   1897d:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
   18981:	eb c7                	jmp    1894a <__vfprintf+0x357a>
   18983:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1898a:	00 00 00 
   1898d:	0f 1f 00             	nopl   (%rax)

0000000000018990 <__memcpy_verw>:
   18990:	8a 06                	mov    (%rsi),%al
   18992:	48 83 ec 08          	sub    $0x8,%rsp
   18996:	8c 1c 24             	mov    %ds,(%rsp)
   18999:	0f 00 2c 24          	verw   (%rsp)
   1899d:	88 07                	mov    %al,(%rdi)
   1899f:	0f ae f0             	mfence 
   189a2:	0f ae e8             	lfence 
   189a5:	48 83 c4 08          	add    $0x8,%rsp
   189a9:	48 89 f8             	mov    %rdi,%rax
   189ac:	c3                   	ret    
   189ad:	cc                   	int3   
   189ae:	cc                   	int3   
   189af:	cc                   	int3   

00000000000189b0 <__memcpy_8a>:
   189b0:	48 8b 06             	mov    (%rsi),%rax
   189b3:	48 89 07             	mov    %rax,(%rdi)
   189b6:	48 89 f8             	mov    %rdi,%rax
   189b9:	c3                   	ret    
   189ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000189c0 <__memset>:
   189c0:	48 89 f0             	mov    %rsi,%rax
   189c3:	48 25 ff 00 00 00    	and    $0xff,%rax
   189c9:	48 89 d1             	mov    %rdx,%rcx
   189cc:	49 89 fb             	mov    %rdi,%r11
   189cf:	fc                   	cld    
   189d0:	48 83 f9 0f          	cmp    $0xf,%rcx
   189d4:	7e 38                	jle    18a0e <L1>
   189d6:	88 c4                	mov    %al,%ah
   189d8:	89 c2                	mov    %eax,%edx
   189da:	c1 e0 10             	shl    $0x10,%eax
   189dd:	09 d0                	or     %edx,%eax
   189df:	89 c2                	mov    %eax,%edx
   189e1:	48 c1 e0 20          	shl    $0x20,%rax
   189e5:	48 09 d0             	or     %rdx,%rax
   189e8:	48 89 fa             	mov    %rdi,%rdx
   189eb:	48 f7 da             	neg    %rdx
   189ee:	48 83 e2 07          	and    $0x7,%rdx
   189f2:	49 89 c8             	mov    %rcx,%r8
   189f5:	49 29 d0             	sub    %rdx,%r8
   189f8:	48 89 d1             	mov    %rdx,%rcx
   189fb:	f3 aa                	rep stos %al,%es:(%rdi)
   189fd:	4c 89 c1             	mov    %r8,%rcx
   18a00:	48 c1 e9 03          	shr    $0x3,%rcx
   18a04:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   18a07:	4c 89 c1             	mov    %r8,%rcx
   18a0a:	48 83 e1 07          	and    $0x7,%rcx

0000000000018a0e <L1>:
   18a0e:	f3 aa                	rep stos %al,%es:(%rdi)
   18a10:	4c 89 d8             	mov    %r11,%rax
   18a13:	c3                   	ret    
   18a14:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   18a1b:	00 00 00 
   18a1e:	66 90                	xchg   %ax,%ax

0000000000018a20 <_libc__strlen>:
   18a20:	49 b8 01 01 01 01 01 	movabs $0x101010101010101,%r8
   18a27:	01 01 01 
   18a2a:	40 f6 c7 07          	test   $0x7,%dil
   18a2e:	48 89 f8             	mov    %rdi,%rax
   18a31:	49 b9 80 80 80 80 80 	movabs $0x8080808080808080,%r9
   18a38:	80 80 80 
   18a3b:	75 33                	jne    18a70 <_libc__strlen+0x50>
   18a3d:	0f 1f 00             	nopl   (%rax)
   18a40:	48 8b 10             	mov    (%rax),%rdx
   18a43:	48 83 c0 08          	add    $0x8,%rax
   18a47:	48 89 d1             	mov    %rdx,%rcx
   18a4a:	4c 29 c2             	sub    %r8,%rdx
   18a4d:	48 f7 d1             	not    %rcx
   18a50:	4c 21 ca             	and    %r9,%rdx
   18a53:	74 eb                	je     18a40 <_libc__strlen+0x20>
   18a55:	48 21 ca             	and    %rcx,%rdx
   18a58:	74 e6                	je     18a40 <_libc__strlen+0x20>
   18a5a:	48 29 f8             	sub    %rdi,%rax
   18a5d:	48 0f bc d2          	bsf    %rdx,%rdx
   18a61:	48 c1 ea 03          	shr    $0x3,%rdx
   18a65:	48 8d 44 10 f8       	lea    -0x8(%rax,%rdx,1),%rax
   18a6a:	c3                   	ret    
   18a6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   18a70:	88 c1                	mov    %al,%cl
   18a72:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
   18a79:	80 e1 07             	and    $0x7,%cl
   18a7c:	24 f8                	and    $0xf8,%al
   18a7e:	c0 e1 03             	shl    $0x3,%cl
   18a81:	48 8b 10             	mov    (%rax),%rdx
   18a84:	48 d3 e6             	shl    %cl,%rsi
   18a87:	48 ff ce             	dec    %rsi
   18a8a:	48 09 f2             	or     %rsi,%rdx
   18a8d:	eb b4                	jmp    18a43 <_libc__strlen+0x23>
   18a8f:	90                   	nop

0000000000018a90 <memchr>:
   18a90:	f3 0f 1e fa          	endbr64 
   18a94:	e9 57 30 00 00       	jmp    1baf0 <_libc__memchr>
   18a99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000018aa0 <memmove>:
   18aa0:	f3 0f 1e fa          	endbr64 
   18aa4:	e9 77 30 00 00       	jmp    1bb20 <__memmove>
   18aa9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000018ab0 <__rv_alloc_D2A>:
   18ab0:	f3 0f 1e fa          	endbr64 
   18ab4:	48 63 ff             	movslq %edi,%rdi
   18ab7:	53                   	push   %rbx
   18ab8:	31 db                	xor    %ebx,%ebx
   18aba:	48 83 ff 1b          	cmp    $0x1b,%rdi
   18abe:	76 19                	jbe    18ad9 <__rv_alloc_D2A+0x29>
   18ac0:	ba 04 00 00 00       	mov    $0x4,%edx
   18ac5:	0f 1f 00             	nopl   (%rax)
   18ac8:	01 d2                	add    %edx,%edx
   18aca:	83 c3 01             	add    $0x1,%ebx
   18acd:	48 63 c2             	movslq %edx,%rax
   18ad0:	48 83 c0 18          	add    $0x18,%rax
   18ad4:	48 39 f8             	cmp    %rdi,%rax
   18ad7:	76 ef                	jbe    18ac8 <__rv_alloc_D2A+0x18>
   18ad9:	89 df                	mov    %ebx,%edi
   18adb:	e8 10 1e 00 00       	call   1a8f0 <__Balloc_D2A>
   18ae0:	48 85 c0             	test   %rax,%rax
   18ae3:	74 06                	je     18aeb <__rv_alloc_D2A+0x3b>
   18ae5:	89 18                	mov    %ebx,(%rax)
   18ae7:	48 83 c0 04          	add    $0x4,%rax
   18aeb:	5b                   	pop    %rbx
   18aec:	c3                   	ret    
   18aed:	0f 1f 00             	nopl   (%rax)

0000000000018af0 <__nrv_alloc_D2A>:
   18af0:	f3 0f 1e fa          	endbr64 
   18af4:	55                   	push   %rbp
   18af5:	48 89 f5             	mov    %rsi,%rbp
   18af8:	53                   	push   %rbx
   18af9:	48 89 fb             	mov    %rdi,%rbx
   18afc:	89 d7                	mov    %edx,%edi
   18afe:	48 83 ec 08          	sub    $0x8,%rsp
   18b02:	e8 a9 ff ff ff       	call   18ab0 <__rv_alloc_D2A>
   18b07:	48 85 c0             	test   %rax,%rax
   18b0a:	74 30                	je     18b3c <__nrv_alloc_D2A+0x4c>
   18b0c:	0f b6 13             	movzbl (%rbx),%edx
   18b0f:	48 8d 4b 01          	lea    0x1(%rbx),%rcx
   18b13:	84 d2                	test   %dl,%dl
   18b15:	88 10                	mov    %dl,(%rax)
   18b17:	48 89 c2             	mov    %rax,%rdx
   18b1a:	74 17                	je     18b33 <__nrv_alloc_D2A+0x43>
   18b1c:	0f 1f 40 00          	nopl   0x0(%rax)
   18b20:	0f b6 39             	movzbl (%rcx),%edi
   18b23:	48 83 c2 01          	add    $0x1,%rdx
   18b27:	48 83 c1 01          	add    $0x1,%rcx
   18b2b:	40 88 3a             	mov    %dil,(%rdx)
   18b2e:	40 84 ff             	test   %dil,%dil
   18b31:	75 ed                	jne    18b20 <__nrv_alloc_D2A+0x30>
   18b33:	48 85 ed             	test   %rbp,%rbp
   18b36:	74 04                	je     18b3c <__nrv_alloc_D2A+0x4c>
   18b38:	48 89 55 00          	mov    %rdx,0x0(%rbp)
   18b3c:	48 83 c4 08          	add    $0x8,%rsp
   18b40:	5b                   	pop    %rbx
   18b41:	5d                   	pop    %rbp
   18b42:	c3                   	ret    
   18b43:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   18b4a:	00 00 00 
   18b4d:	0f 1f 00             	nopl   (%rax)

0000000000018b50 <__freedtoa>:
   18b50:	f3 0f 1e fa          	endbr64 
   18b54:	8b 4f fc             	mov    -0x4(%rdi),%ecx
   18b57:	b8 01 00 00 00       	mov    $0x1,%eax
   18b5c:	48 83 ef 04          	sub    $0x4,%rdi
   18b60:	d3 e0                	shl    %cl,%eax
   18b62:	89 4f 08             	mov    %ecx,0x8(%rdi)
   18b65:	89 47 0c             	mov    %eax,0xc(%rdi)
   18b68:	e9 73 1e 00 00       	jmp    1a9e0 <__Bfree_D2A>
   18b6d:	0f 1f 00             	nopl   (%rax)

0000000000018b70 <__quorem_D2A>:
   18b70:	f3 0f 1e fa          	endbr64 
   18b74:	41 57                	push   %r15
   18b76:	31 c0                	xor    %eax,%eax
   18b78:	41 56                	push   %r14
   18b7a:	41 55                	push   %r13
   18b7c:	41 54                	push   %r12
   18b7e:	55                   	push   %rbp
   18b7f:	53                   	push   %rbx
   18b80:	48 83 ec 18          	sub    $0x18,%rsp
   18b84:	8b 6e 14             	mov    0x14(%rsi),%ebp
   18b87:	39 6f 14             	cmp    %ebp,0x14(%rdi)
   18b8a:	0f 8c 5f 01 00 00    	jl     18cef <__quorem_D2A+0x17f>
   18b90:	83 ed 01             	sub    $0x1,%ebp
   18b93:	48 8d 5e 18          	lea    0x18(%rsi),%rbx
   18b97:	4c 8d 77 18          	lea    0x18(%rdi),%r14
   18b9b:	49 89 ff             	mov    %rdi,%r15
   18b9e:	48 63 c5             	movslq %ebp,%rax
   18ba1:	31 d2                	xor    %edx,%edx
   18ba3:	48 c1 e0 02          	shl    $0x2,%rax
   18ba7:	4c 8d 24 03          	lea    (%rbx,%rax,1),%r12
   18bab:	4c 01 f0             	add    %r14,%rax
   18bae:	41 8b 3c 24          	mov    (%r12),%edi
   18bb2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   18bb7:	8b 00                	mov    (%rax),%eax
   18bb9:	8d 4f 01             	lea    0x1(%rdi),%ecx
   18bbc:	89 44 24 04          	mov    %eax,0x4(%rsp)
   18bc0:	89 c7                	mov    %eax,%edi
   18bc2:	f7 f1                	div    %ecx
   18bc4:	89 04 24             	mov    %eax,(%rsp)
   18bc7:	41 89 c5             	mov    %eax,%r13d
   18bca:	39 cf                	cmp    %ecx,%edi
   18bcc:	0f 82 ac 00 00 00    	jb     18c7e <__quorem_D2A+0x10e>
   18bd2:	48 89 df             	mov    %rbx,%rdi
   18bd5:	4d 89 f1             	mov    %r14,%r9
   18bd8:	45 31 db             	xor    %r11d,%r11d
   18bdb:	31 d2                	xor    %edx,%edx
   18bdd:	0f 1f 00             	nopl   (%rax)
   18be0:	8b 07                	mov    (%rdi),%eax
   18be2:	48 83 c7 04          	add    $0x4,%rdi
   18be6:	49 83 c1 04          	add    $0x4,%r9
   18bea:	0f b7 c8             	movzwl %ax,%ecx
   18bed:	c1 e8 10             	shr    $0x10,%eax
   18bf0:	41 0f af cd          	imul   %r13d,%ecx
   18bf4:	41 0f af c5          	imul   %r13d,%eax
   18bf8:	44 01 d9             	add    %r11d,%ecx
   18bfb:	41 89 c8             	mov    %ecx,%r8d
   18bfe:	0f b7 c9             	movzwl %cx,%ecx
   18c01:	41 c1 e8 10          	shr    $0x10,%r8d
   18c05:	01 ca                	add    %ecx,%edx
   18c07:	44 01 c0             	add    %r8d,%eax
   18c0a:	45 8b 41 fc          	mov    -0x4(%r9),%r8d
   18c0e:	41 89 c3             	mov    %eax,%r11d
   18c11:	0f b7 c0             	movzwl %ax,%eax
   18c14:	45 0f b7 d0          	movzwl %r8w,%r10d
   18c18:	41 c1 e8 10          	shr    $0x10,%r8d
   18c1c:	41 29 d2             	sub    %edx,%r10d
   18c1f:	41 29 c0             	sub    %eax,%r8d
   18c22:	41 c1 eb 10          	shr    $0x10,%r11d
   18c26:	44 89 d2             	mov    %r10d,%edx
   18c29:	44 89 c0             	mov    %r8d,%eax
   18c2c:	66 45 89 51 fc       	mov    %r10w,-0x4(%r9)
   18c31:	c1 ea 10             	shr    $0x10,%edx
   18c34:	83 e2 01             	and    $0x1,%edx
   18c37:	29 d0                	sub    %edx,%eax
   18c39:	89 c2                	mov    %eax,%edx
   18c3b:	66 41 89 41 fe       	mov    %ax,-0x2(%r9)
   18c40:	c1 ea 10             	shr    $0x10,%edx
   18c43:	83 e2 01             	and    $0x1,%edx
   18c46:	49 39 fc             	cmp    %rdi,%r12
   18c49:	73 95                	jae    18be0 <__quorem_D2A+0x70>
   18c4b:	44 8b 44 24 04       	mov    0x4(%rsp),%r8d
   18c50:	45 85 c0             	test   %r8d,%r8d
   18c53:	75 29                	jne    18c7e <__quorem_D2A+0x10e>
   18c55:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   18c5a:	48 83 e8 04          	sub    $0x4,%rax
   18c5e:	49 39 c6             	cmp    %rax,%r14
   18c61:	72 11                	jb     18c74 <__quorem_D2A+0x104>
   18c63:	eb 15                	jmp    18c7a <__quorem_D2A+0x10a>
   18c65:	0f 1f 00             	nopl   (%rax)
   18c68:	48 83 e8 04          	sub    $0x4,%rax
   18c6c:	83 ed 01             	sub    $0x1,%ebp
   18c6f:	49 39 c6             	cmp    %rax,%r14
   18c72:	73 06                	jae    18c7a <__quorem_D2A+0x10a>
   18c74:	8b 38                	mov    (%rax),%edi
   18c76:	85 ff                	test   %edi,%edi
   18c78:	74 ee                	je     18c68 <__quorem_D2A+0xf8>
   18c7a:	41 89 6f 14          	mov    %ebp,0x14(%r15)
   18c7e:	4c 89 ff             	mov    %r15,%rdi
   18c81:	e8 8a 24 00 00       	call   1b110 <__cmp_D2A>
   18c86:	85 c0                	test   %eax,%eax
   18c88:	78 62                	js     18cec <__quorem_D2A+0x17c>
   18c8a:	41 8d 45 01          	lea    0x1(%r13),%eax
   18c8e:	4c 89 f6             	mov    %r14,%rsi
   18c91:	31 d2                	xor    %edx,%edx
   18c93:	89 04 24             	mov    %eax,(%rsp)
   18c96:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   18c9d:	00 00 00 
   18ca0:	8b 3b                	mov    (%rbx),%edi
   18ca2:	8b 06                	mov    (%rsi),%eax
   18ca4:	48 83 c3 04          	add    $0x4,%rbx
   18ca8:	48 83 c6 04          	add    $0x4,%rsi
   18cac:	44 0f b7 c7          	movzwl %di,%r8d
   18cb0:	0f b7 c8             	movzwl %ax,%ecx
   18cb3:	c1 ef 10             	shr    $0x10,%edi
   18cb6:	44 01 c2             	add    %r8d,%edx
   18cb9:	c1 e8 10             	shr    $0x10,%eax
   18cbc:	29 d1                	sub    %edx,%ecx
   18cbe:	29 f8                	sub    %edi,%eax
   18cc0:	89 ca                	mov    %ecx,%edx
   18cc2:	66 89 4e fc          	mov    %cx,-0x4(%rsi)
   18cc6:	c1 ea 10             	shr    $0x10,%edx
   18cc9:	83 e2 01             	and    $0x1,%edx
   18ccc:	29 d0                	sub    %edx,%eax
   18cce:	89 c2                	mov    %eax,%edx
   18cd0:	66 89 46 fe          	mov    %ax,-0x2(%rsi)
   18cd4:	c1 ea 10             	shr    $0x10,%edx
   18cd7:	83 e2 01             	and    $0x1,%edx
   18cda:	49 39 dc             	cmp    %rbx,%r12
   18cdd:	73 c1                	jae    18ca0 <__quorem_D2A+0x130>
   18cdf:	48 63 c5             	movslq %ebp,%rax
   18ce2:	49 8d 04 86          	lea    (%r14,%rax,4),%rax
   18ce6:	8b 08                	mov    (%rax),%ecx
   18ce8:	85 c9                	test   %ecx,%ecx
   18cea:	74 1d                	je     18d09 <__quorem_D2A+0x199>
   18cec:	8b 04 24             	mov    (%rsp),%eax
   18cef:	48 83 c4 18          	add    $0x18,%rsp
   18cf3:	5b                   	pop    %rbx
   18cf4:	5d                   	pop    %rbp
   18cf5:	41 5c                	pop    %r12
   18cf7:	41 5d                	pop    %r13
   18cf9:	41 5e                	pop    %r14
   18cfb:	41 5f                	pop    %r15
   18cfd:	c3                   	ret    
   18cfe:	66 90                	xchg   %ax,%ax
   18d00:	8b 10                	mov    (%rax),%edx
   18d02:	85 d2                	test   %edx,%edx
   18d04:	75 0c                	jne    18d12 <__quorem_D2A+0x1a2>
   18d06:	83 ed 01             	sub    $0x1,%ebp
   18d09:	48 83 e8 04          	sub    $0x4,%rax
   18d0d:	49 39 c6             	cmp    %rax,%r14
   18d10:	72 ee                	jb     18d00 <__quorem_D2A+0x190>
   18d12:	41 89 6f 14          	mov    %ebp,0x14(%r15)
   18d16:	eb d4                	jmp    18cec <__quorem_D2A+0x17c>
   18d18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   18d1f:	00 

0000000000018d20 <__dtoa>:
   18d20:	f3 0f 1e fa          	endbr64 
   18d24:	41 57                	push   %r15
   18d26:	41 56                	push   %r14
   18d28:	66 49 0f 7e c6       	movq   %xmm0,%r14
   18d2d:	41 55                	push   %r13
   18d2f:	41 54                	push   %r12
   18d31:	55                   	push   %rbp
   18d32:	53                   	push   %rbx
   18d33:	66 48 0f 7e c3       	movq   %xmm0,%rbx
   18d38:	48 83 ec 68          	sub    $0x68,%rsp
   18d3c:	89 7c 24 20          	mov    %edi,0x20(%rsp)
   18d40:	89 74 24 10          	mov    %esi,0x10(%rsp)
   18d44:	48 89 14 24          	mov    %rdx,(%rsp)
   18d48:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   18d4d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   18d54:	00 00 
   18d56:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   18d5b:	31 c0                	xor    %eax,%eax
   18d5d:	66 48 0f 7e c0       	movq   %xmm0,%rax
   18d62:	48 c1 e8 20          	shr    $0x20,%rax
   18d66:	89 c5                	mov    %eax,%ebp
   18d68:	85 c0                	test   %eax,%eax
   18d6a:	0f 88 30 04 00 00    	js     191a0 <__dtoa+0x480>
   18d70:	89 e8                	mov    %ebp,%eax
   18d72:	c7 01 00 00 00 00    	movl   $0x0,(%rcx)
   18d78:	66 0f 28 c8          	movapd %xmm0,%xmm1
   18d7c:	25 00 00 f0 7f       	and    $0x7ff00000,%eax
   18d81:	3d 00 00 f0 7f       	cmp    $0x7ff00000,%eax
   18d86:	0f 84 46 04 00 00    	je     191d2 <__dtoa+0x4b2>
   18d8c:	66 0f ef f6          	pxor   %xmm6,%xmm6
   18d90:	66 0f 2e ce          	ucomisd %xmm6,%xmm1
   18d94:	0f 8b b6 03 00 00    	jnp    19150 <__dtoa+0x430>
   18d9a:	66 0f 28 c1          	movapd %xmm1,%xmm0
   18d9e:	48 8d 74 24 50       	lea    0x50(%rsp),%rsi
   18da3:	48 8d 7c 24 54       	lea    0x54(%rsp),%rdi
   18da8:	f2 0f 11 4c 24 18    	movsd  %xmm1,0x18(%rsp)
   18dae:	e8 fd 26 00 00       	call   1b4b0 <__d2b_D2A>
   18db3:	f2 0f 10 4c 24 18    	movsd  0x18(%rsp),%xmm1
   18db9:	48 85 c0             	test   %rax,%rax
   18dbc:	49 89 c7             	mov    %rax,%r15
   18dbf:	0f 84 db 07 00 00    	je     195a0 <__dtoa+0x880>
   18dc5:	89 ef                	mov    %ebp,%edi
   18dc7:	8b 74 24 50          	mov    0x50(%rsp),%esi
   18dcb:	c1 ef 14             	shr    $0x14,%edi
   18dce:	0f 85 3c 04 00 00    	jne    19210 <__dtoa+0x4f0>
   18dd4:	8b 7c 24 54          	mov    0x54(%rsp),%edi
   18dd8:	48 89 da             	mov    %rbx,%rdx
   18ddb:	01 f7                	add    %esi,%edi
   18ddd:	44 8d 8f 32 04 00 00 	lea    0x432(%rdi),%r9d
   18de4:	41 83 f9 20          	cmp    $0x20,%r9d
   18de8:	0f 8e 02 0a 00 00    	jle    197f0 <__dtoa+0xad0>
   18dee:	b9 40 00 00 00       	mov    $0x40,%ecx
   18df3:	89 e8                	mov    %ebp,%eax
   18df5:	44 29 c9             	sub    %r9d,%ecx
   18df8:	d3 e0                	shl    %cl,%eax
   18dfa:	8d 8f 12 04 00 00    	lea    0x412(%rdi),%ecx
   18e00:	d3 ea                	shr    %cl,%edx
   18e02:	09 d0                	or     %edx,%eax
   18e04:	89 c2                	mov    %eax,%edx
   18e06:	66 0f ef e4          	pxor   %xmm4,%xmm4
   18e0a:	c7 44 24 44 01 00 00 	movl   $0x1,0x44(%rsp)
   18e11:	00 
   18e12:	83 ef 01             	sub    $0x1,%edi
   18e15:	f2 48 0f 2a e2       	cvtsi2sd %rdx,%xmm4
   18e1a:	66 48 0f 7e e0       	movq   %xmm4,%rax
   18e1f:	66 48 0f 7e e2       	movq   %xmm4,%rdx
   18e24:	48 c1 e8 20          	shr    $0x20,%rax
   18e28:	89 d2                	mov    %edx,%edx
   18e2a:	2d 00 00 f0 01       	sub    $0x1f00000,%eax
   18e2f:	48 c1 e0 20          	shl    $0x20,%rax
   18e33:	48 09 c2             	or     %rax,%rdx
   18e36:	66 0f ef d2          	pxor   %xmm2,%xmm2
   18e3a:	66 48 0f 6e c2       	movq   %rdx,%xmm0
   18e3f:	66 0f ef ff          	pxor   %xmm7,%xmm7
   18e43:	f2 0f 2a d7          	cvtsi2sd %edi,%xmm2
   18e47:	f2 0f 59 15 19 df 00 	mulsd  0xdf19(%rip),%xmm2        # 26d68 <xdigs_lower.3362+0x38>
   18e4e:	00 
   18e4f:	f2 0f 5c 05 f9 de 00 	subsd  0xdef9(%rip),%xmm0        # 26d50 <xdigs_lower.3362+0x20>
   18e56:	00 
   18e57:	f2 0f 59 05 f9 de 00 	mulsd  0xdef9(%rip),%xmm0        # 26d58 <xdigs_lower.3362+0x28>
   18e5e:	00 
   18e5f:	f2 0f 58 05 f9 de 00 	addsd  0xdef9(%rip),%xmm0        # 26d60 <xdigs_lower.3362+0x30>
   18e66:	00 
   18e67:	f2 0f 58 c2          	addsd  %xmm2,%xmm0
   18e6b:	66 0f 2f f8          	comisd %xmm0,%xmm7
   18e6f:	f2 0f 2c d8          	cvttsd2si %xmm0,%ebx
   18e73:	0f 87 67 07 00 00    	ja     195e0 <__dtoa+0x8c0>
   18e79:	44 8d 4e ff          	lea    -0x1(%rsi),%r9d
   18e7d:	41 29 f9             	sub    %edi,%r9d
   18e80:	45 89 cd             	mov    %r9d,%r13d
   18e83:	83 fb 16             	cmp    $0x16,%ebx
   18e86:	0f 87 24 07 00 00    	ja     195b0 <__dtoa+0x890>
   18e8c:	48 63 c3             	movslq %ebx,%rax
   18e8f:	48 8d 15 8a df 00 00 	lea    0xdf8a(%rip),%rdx        # 26e20 <__tens_D2A>
   18e96:	f2 0f 10 04 c2       	movsd  (%rdx,%rax,8),%xmm0
   18e9b:	66 0f 2f c1          	comisd %xmm1,%xmm0
   18e9f:	0f 86 cb 03 00 00    	jbe    19270 <__dtoa+0x550>
   18ea5:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%rsp)
   18eac:	00 
   18ead:	83 eb 01             	sub    $0x1,%ebx
   18eb0:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%rsp)
   18eb7:	00 
   18eb8:	45 85 ed             	test   %r13d,%r13d
   18ebb:	0f 88 08 07 00 00    	js     195c9 <__dtoa+0x8a9>
   18ec1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   18ec8:	85 db                	test   %ebx,%ebx
   18eca:	0f 89 b9 03 00 00    	jns    19289 <__dtoa+0x569>
   18ed0:	8b 44 24 20          	mov    0x20(%rsp),%eax
   18ed4:	41 89 dc             	mov    %ebx,%r12d
   18ed7:	29 5c 24 24          	sub    %ebx,0x24(%rsp)
   18edb:	89 5c 24 28          	mov    %ebx,0x28(%rsp)
   18edf:	41 f7 dc             	neg    %r12d
   18ee2:	31 db                	xor    %ebx,%ebx
   18ee4:	83 f8 09             	cmp    $0x9,%eax
   18ee7:	0f 87 b3 03 00 00    	ja     192a0 <__dtoa+0x580>
   18eed:	bd 01 00 00 00       	mov    $0x1,%ebp
   18ef2:	83 f8 05             	cmp    $0x5,%eax
   18ef5:	7e 09                	jle    18f00 <__dtoa+0x1e0>
   18ef7:	83 e8 04             	sub    $0x4,%eax
   18efa:	31 ed                	xor    %ebp,%ebp
   18efc:	89 44 24 20          	mov    %eax,0x20(%rsp)
   18f00:	8b 44 24 20          	mov    0x20(%rsp),%eax
   18f04:	83 f8 04             	cmp    $0x4,%eax
   18f07:	0f 84 63 0e 00 00    	je     19d70 <__dtoa+0x1050>
   18f0d:	83 f8 05             	cmp    $0x5,%eax
   18f10:	0f 84 8a 09 00 00    	je     198a0 <__dtoa+0xb80>
   18f16:	83 f8 02             	cmp    $0x2,%eax
   18f19:	0f 84 e9 08 00 00    	je     19808 <__dtoa+0xae8>
   18f1f:	83 f8 03             	cmp    $0x3,%eax
   18f22:	0f 85 80 03 00 00    	jne    192a8 <__dtoa+0x588>
   18f28:	c7 44 24 40 00 00 00 	movl   $0x0,0x40(%rsp)
   18f2f:	00 
   18f30:	8b 44 24 10          	mov    0x10(%rsp),%eax
   18f34:	03 44 24 28          	add    0x28(%rsp),%eax
   18f38:	bf 01 00 00 00       	mov    $0x1,%edi
   18f3d:	89 44 24 48          	mov    %eax,0x48(%rsp)
   18f41:	83 c0 01             	add    $0x1,%eax
   18f44:	85 c0                	test   %eax,%eax
   18f46:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   18f4a:	0f 4f f8             	cmovg  %eax,%edi
   18f4d:	f2 0f 11 4c 24 38    	movsd  %xmm1,0x38(%rsp)
   18f53:	e8 58 fb ff ff       	call   18ab0 <__rv_alloc_D2A>
   18f58:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   18f5d:	48 85 c0             	test   %rax,%rax
   18f60:	0f 84 3a 06 00 00    	je     195a0 <__dtoa+0x880>
   18f66:	83 7c 24 2c 0e       	cmpl   $0xe,0x2c(%rsp)
   18f6b:	0f 96 c0             	setbe  %al
   18f6e:	40 20 e8             	and    %bpl,%al
   18f71:	89 c1                	mov    %eax,%ecx
   18f73:	0f 84 e6 06 00 00    	je     1965f <__dtoa+0x93f>
   18f79:	8b 44 24 28          	mov    0x28(%rsp),%eax
   18f7d:	f2 0f 10 4c 24 38    	movsd  0x38(%rsp),%xmm1
   18f83:	85 c0                	test   %eax,%eax
   18f85:	0f 8e a5 08 00 00    	jle    19830 <__dtoa+0xb10>
   18f8b:	89 c2                	mov    %eax,%edx
   18f8d:	89 c1                	mov    %eax,%ecx
   18f8f:	48 8d 05 8a de 00 00 	lea    0xde8a(%rip),%rax        # 26e20 <__tens_D2A>
   18f96:	83 e2 0f             	and    $0xf,%edx
   18f99:	f2 0f 10 14 d0       	movsd  (%rax,%rdx,8),%xmm2
   18f9e:	89 ca                	mov    %ecx,%edx
   18fa0:	c1 fa 04             	sar    $0x4,%edx
   18fa3:	80 e5 01             	and    $0x1,%ch
   18fa6:	0f 84 bc 09 00 00    	je     19968 <__dtoa+0xc48>
   18fac:	83 e2 0f             	and    $0xf,%edx
   18faf:	b8 03 00 00 00       	mov    $0x3,%eax
   18fb4:	66 0f 28 c1          	movapd %xmm1,%xmm0
   18fb8:	f2 0f 5e 05 40 df 00 	divsd  0xdf40(%rip),%xmm0        # 26f00 <__bigtens_D2A+0x20>
   18fbf:	00 
   18fc0:	85 d2                	test   %edx,%edx
   18fc2:	74 24                	je     18fe8 <__dtoa+0x2c8>
   18fc4:	31 f6                	xor    %esi,%esi
   18fc6:	4c 8d 15 13 df 00 00 	lea    0xdf13(%rip),%r10        # 26ee0 <__bigtens_D2A>
   18fcd:	0f 1f 00             	nopl   (%rax)
   18fd0:	f6 c2 01             	test   $0x1,%dl
   18fd3:	74 0c                	je     18fe1 <__dtoa+0x2c1>
   18fd5:	48 63 ce             	movslq %esi,%rcx
   18fd8:	83 c0 01             	add    $0x1,%eax
   18fdb:	f2 41 0f 59 14 ca    	mulsd  (%r10,%rcx,8),%xmm2
   18fe1:	83 c6 01             	add    $0x1,%esi
   18fe4:	d1 fa                	sar    %edx
   18fe6:	75 e8                	jne    18fd0 <__dtoa+0x2b0>
   18fe8:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
   18fec:	44 8b 54 24 30       	mov    0x30(%rsp),%r10d
   18ff1:	45 85 d2             	test   %r10d,%r10d
   18ff4:	74 12                	je     19008 <__dtoa+0x2e8>
   18ff6:	f2 0f 10 2d 72 dd 00 	movsd  0xdd72(%rip),%xmm5        # 26d70 <xdigs_lower.3362+0x40>
   18ffd:	00 
   18ffe:	66 0f 2f e8          	comisd %xmm0,%xmm5
   19002:	0f 87 38 0e 00 00    	ja     19e40 <__dtoa+0x1120>
   19008:	66 0f ef d2          	pxor   %xmm2,%xmm2
   1900c:	44 8b 44 24 2c       	mov    0x2c(%rsp),%r8d
   19011:	f2 0f 2a d0          	cvtsi2sd %eax,%xmm2
   19015:	f2 0f 59 d0          	mulsd  %xmm0,%xmm2
   19019:	f2 0f 58 15 5f dd 00 	addsd  0xdd5f(%rip),%xmm2        # 26d80 <xdigs_lower.3362+0x50>
   19020:	00 
   19021:	66 48 0f 7e d2       	movq   %xmm2,%rdx
   19026:	66 48 0f 7e d0       	movq   %xmm2,%rax
   1902b:	48 c1 ea 20          	shr    $0x20,%rdx
   1902f:	89 c0                	mov    %eax,%eax
   19031:	81 ea 00 00 40 03    	sub    $0x3400000,%edx
   19037:	48 c1 e2 20          	shl    $0x20,%rdx
   1903b:	48 09 d0             	or     %rdx,%rax
   1903e:	45 85 c0             	test   %r8d,%r8d
   19041:	0f 84 ea 05 00 00    	je     19631 <__dtoa+0x911>
   19047:	8b 74 24 28          	mov    0x28(%rsp),%esi
   1904b:	89 74 24 38          	mov    %esi,0x38(%rsp)
   1904f:	8b 74 24 2c          	mov    0x2c(%rsp),%esi
   19053:	f2 0f 2c f8          	cvttsd2si %xmm0,%edi
   19057:	66 0f ef d2          	pxor   %xmm2,%xmm2
   1905b:	66 48 0f 6e d8       	movq   %rax,%xmm3
   19060:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   19065:	8d 46 ff             	lea    -0x1(%rsi),%eax
   19068:	48 8d 15 b1 dd 00 00 	lea    0xddb1(%rip),%rdx        # 26e20 <__tens_D2A>
   1906f:	48 98                	cltq   
   19071:	f2 0f 10 24 c2       	movsd  (%rdx,%rax,8),%xmm4
   19076:	48 8d 51 01          	lea    0x1(%rcx),%rdx
   1907a:	f2 0f 2a d7          	cvtsi2sd %edi,%xmm2
   1907e:	8d 47 30             	lea    0x30(%rdi),%eax
   19081:	8b 7c 24 40          	mov    0x40(%rsp),%edi
   19085:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
   19089:	85 ff                	test   %edi,%edi
   1908b:	0f 84 2f 09 00 00    	je     199c0 <__dtoa+0xca0>
   19091:	f2 0f 10 15 f7 dc 00 	movsd  0xdcf7(%rip),%xmm2        # 26d90 <xdigs_lower.3362+0x60>
   19098:	00 
   19099:	88 01                	mov    %al,(%rcx)
   1909b:	f2 0f 5e d4          	divsd  %xmm4,%xmm2
   1909f:	f2 0f 5c d3          	subsd  %xmm3,%xmm2
   190a3:	66 0f 2f d0          	comisd %xmm0,%xmm2
   190a7:	0f 87 bb 0e 00 00    	ja     19f68 <__dtoa+0x1248>
   190ad:	bf 01 00 00 00       	mov    $0x1,%edi
   190b2:	f2 0f 10 2d b6 dc 00 	movsd  0xdcb6(%rip),%xmm5        # 26d70 <xdigs_lower.3362+0x40>
   190b9:	00 
   190ba:	f2 0f 10 25 b6 dc 00 	movsd  0xdcb6(%rip),%xmm4        # 26d78 <xdigs_lower.3362+0x48>
   190c1:	00 
   190c2:	29 d7                	sub    %edx,%edi
   190c4:	eb 41                	jmp    19107 <__dtoa+0x3e7>
   190c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   190cd:	00 00 00 
   190d0:	8d 04 17             	lea    (%rdi,%rdx,1),%eax
   190d3:	39 f0                	cmp    %esi,%eax
   190d5:	0f 8d 7f 05 00 00    	jge    1965a <__dtoa+0x93a>
   190db:	f2 0f 59 c4          	mulsd  %xmm4,%xmm0
   190df:	66 0f ef db          	pxor   %xmm3,%xmm3
   190e3:	48 83 c2 01          	add    $0x1,%rdx
   190e7:	f2 0f 59 d4          	mulsd  %xmm4,%xmm2
   190eb:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   190ef:	f2 0f 2a d8          	cvtsi2sd %eax,%xmm3
   190f3:	83 c0 30             	add    $0x30,%eax
   190f6:	88 42 ff             	mov    %al,-0x1(%rdx)
   190f9:	f2 0f 5c c3          	subsd  %xmm3,%xmm0
   190fd:	66 0f 2f d0          	comisd %xmm0,%xmm2
   19101:	0f 87 61 0e 00 00    	ja     19f68 <__dtoa+0x1248>
   19107:	66 0f 28 dd          	movapd %xmm5,%xmm3
   1910b:	f2 0f 5c d8          	subsd  %xmm0,%xmm3
   1910f:	66 0f 2f d3          	comisd %xmm3,%xmm2
   19113:	76 bb                	jbe    190d0 <__dtoa+0x3b0>
   19115:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   1911a:	eb 0d                	jmp    19129 <__dtoa+0x409>
   1911c:	0f 1f 40 00          	nopl   0x0(%rax)
   19120:	48 39 f2             	cmp    %rsi,%rdx
   19123:	0f 84 27 0e 00 00    	je     19f50 <__dtoa+0x1230>
   19129:	48 89 d1             	mov    %rdx,%rcx
   1912c:	0f b6 42 ff          	movzbl -0x1(%rdx),%eax
   19130:	48 83 ea 01          	sub    $0x1,%rdx
   19134:	3c 39                	cmp    $0x39,%al
   19136:	74 e8                	je     19120 <__dtoa+0x400>
   19138:	83 c0 01             	add    $0x1,%eax
   1913b:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   19140:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   19145:	88 02                	mov    %al,(%rdx)
   19147:	e9 2d 09 00 00       	jmp    19a79 <__dtoa+0xd59>
   1914c:	0f 1f 40 00          	nopl   0x0(%rax)
   19150:	0f 85 44 fc ff ff    	jne    18d9a <__dtoa+0x7a>
   19156:	48 8b 04 24          	mov    (%rsp),%rax
   1915a:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1915f:	ba 01 00 00 00       	mov    $0x1,%edx
   19164:	48 8d 3d e2 db 00 00 	lea    0xdbe2(%rip),%rdi        # 26d4d <xdigs_lower.3362+0x1d>
   1916b:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   19171:	e8 7a f9 ff ff       	call   18af0 <__nrv_alloc_D2A>
   19176:	49 89 c6             	mov    %rax,%r14
   19179:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
   1917e:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   19185:	00 00 
   19187:	0f 85 cb 0f 00 00    	jne    1a158 <__dtoa+0x1438>
   1918d:	48 83 c4 68          	add    $0x68,%rsp
   19191:	4c 89 f0             	mov    %r14,%rax
   19194:	5b                   	pop    %rbx
   19195:	5d                   	pop    %rbp
   19196:	41 5c                	pop    %r12
   19198:	41 5d                	pop    %r13
   1919a:	41 5e                	pop    %r14
   1919c:	41 5f                	pop    %r15
   1919e:	c3                   	ret    
   1919f:	90                   	nop
   191a0:	81 e5 ff ff ff 7f    	and    $0x7fffffff,%ebp
   191a6:	89 da                	mov    %ebx,%edx
   191a8:	c7 01 01 00 00 00    	movl   $0x1,(%rcx)
   191ae:	48 89 e8             	mov    %rbp,%rax
   191b1:	48 c1 e0 20          	shl    $0x20,%rax
   191b5:	48 09 c2             	or     %rax,%rdx
   191b8:	89 e8                	mov    %ebp,%eax
   191ba:	25 00 00 f0 7f       	and    $0x7ff00000,%eax
   191bf:	49 89 d6             	mov    %rdx,%r14
   191c2:	66 48 0f 6e ca       	movq   %rdx,%xmm1
   191c7:	3d 00 00 f0 7f       	cmp    $0x7ff00000,%eax
   191cc:	0f 85 ba fb ff ff    	jne    18d8c <__dtoa+0x6c>
   191d2:	48 8b 04 24          	mov    (%rsp),%rax
   191d6:	66 48 0f 7e cb       	movq   %xmm1,%rbx
   191db:	c7 00 0f 27 00 00    	movl   $0x270f,(%rax)
   191e1:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffff,%rax
   191e8:	ff 0f 00 
   191eb:	48 85 d8             	test   %rbx,%rax
   191ee:	75 58                	jne    19248 <__dtoa+0x528>
   191f0:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   191f5:	ba 08 00 00 00       	mov    $0x8,%edx
   191fa:	48 8d 3d 3f db 00 00 	lea    0xdb3f(%rip),%rdi        # 26d40 <xdigs_lower.3362+0x10>
   19201:	e8 ea f8 ff ff       	call   18af0 <__nrv_alloc_D2A>
   19206:	49 89 c6             	mov    %rax,%r14
   19209:	e9 6b ff ff ff       	jmp    19179 <__dtoa+0x459>
   1920e:	66 90                	xchg   %ax,%ax
   19210:	66 48 0f 7e c8       	movq   %xmm1,%rax
   19215:	66 48 0f 7e ca       	movq   %xmm1,%rdx
   1921a:	c7 44 24 44 00 00 00 	movl   $0x0,0x44(%rsp)
   19221:	00 
   19222:	81 ef ff 03 00 00    	sub    $0x3ff,%edi
   19228:	48 c1 e8 20          	shr    $0x20,%rax
   1922c:	89 d2                	mov    %edx,%edx
   1922e:	25 ff ff 0f 00       	and    $0xfffff,%eax
   19233:	48 0d 00 00 f0 3f    	or     $0x3ff00000,%rax
   19239:	48 c1 e0 20          	shl    $0x20,%rax
   1923d:	48 09 c2             	or     %rax,%rdx
   19240:	e9 f1 fb ff ff       	jmp    18e36 <__dtoa+0x116>
   19245:	0f 1f 00             	nopl   (%rax)
   19248:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1924d:	ba 03 00 00 00       	mov    $0x3,%edx
   19252:	48 8d 3d f0 da 00 00 	lea    0xdaf0(%rip),%rdi        # 26d49 <xdigs_lower.3362+0x19>
   19259:	e8 92 f8 ff ff       	call   18af0 <__nrv_alloc_D2A>
   1925e:	49 89 c6             	mov    %rax,%r14
   19261:	e9 13 ff ff ff       	jmp    19179 <__dtoa+0x459>
   19266:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1926d:	00 00 00 
   19270:	c7 44 24 30 00 00 00 	movl   $0x0,0x30(%rsp)
   19277:	00 
   19278:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%rsp)
   1927f:	00 
   19280:	45 85 c9             	test   %r9d,%r9d
   19283:	0f 88 40 03 00 00    	js     195c9 <__dtoa+0x8a9>
   19289:	8b 44 24 20          	mov    0x20(%rsp),%eax
   1928d:	89 5c 24 28          	mov    %ebx,0x28(%rsp)
   19291:	41 01 dd             	add    %ebx,%r13d
   19294:	45 31 e4             	xor    %r12d,%r12d
   19297:	83 f8 09             	cmp    $0x9,%eax
   1929a:	0f 86 4d fc ff ff    	jbe    18eed <__dtoa+0x1cd>
   192a0:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%rsp)
   192a7:	00 
   192a8:	bf 12 00 00 00       	mov    $0x12,%edi
   192ad:	f2 0f 11 4c 24 10    	movsd  %xmm1,0x10(%rsp)
   192b3:	e8 f8 f7 ff ff       	call   18ab0 <__rv_alloc_D2A>
   192b8:	f2 0f 10 4c 24 10    	movsd  0x10(%rsp),%xmm1
   192be:	48 85 c0             	test   %rax,%rax
   192c1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   192c6:	0f 84 d4 02 00 00    	je     195a0 <__dtoa+0x880>
   192cc:	8b 44 24 54          	mov    0x54(%rsp),%eax
   192d0:	85 c0                	test   %eax,%eax
   192d2:	78 0b                	js     192df <__dtoa+0x5bf>
   192d4:	83 7c 24 28 0e       	cmpl   $0xe,0x28(%rsp)
   192d9:	0f 8e d1 07 00 00    	jle    19ab0 <__dtoa+0xd90>
   192df:	c7 44 24 48 ff ff ff 	movl   $0xffffffff,0x48(%rsp)
   192e6:	ff 
   192e7:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
   192ee:	00 
   192ef:	c7 44 24 2c ff ff ff 	movl   $0xffffffff,0x2c(%rsp)
   192f6:	ff 
   192f7:	8b 54 24 44          	mov    0x44(%rsp),%edx
   192fb:	05 33 04 00 00       	add    $0x433,%eax
   19300:	85 d2                	test   %edx,%edx
   19302:	0f 84 28 07 00 00    	je     19a30 <__dtoa+0xd10>
   19308:	8b 4c 24 24          	mov    0x24(%rsp),%ecx
   1930c:	bf 01 00 00 00       	mov    $0x1,%edi
   19311:	41 01 c5             	add    %eax,%r13d
   19314:	8d 34 01             	lea    (%rcx,%rax,1),%esi
   19317:	89 74 24 38          	mov    %esi,0x38(%rsp)
   1931b:	e8 e0 18 00 00       	call   1ac00 <__i2b_D2A>
   19320:	48 89 c5             	mov    %rax,%rbp
   19323:	48 85 c0             	test   %rax,%rax
   19326:	0f 84 74 02 00 00    	je     195a0 <__dtoa+0x880>
   1932c:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
   19333:	00 
   19334:	8b 4c 24 24          	mov    0x24(%rsp),%ecx
   19338:	85 c9                	test   %ecx,%ecx
   1933a:	7e 1b                	jle    19357 <__dtoa+0x637>
   1933c:	45 85 ed             	test   %r13d,%r13d
   1933f:	7e 16                	jle    19357 <__dtoa+0x637>
   19341:	44 39 e9             	cmp    %r13d,%ecx
   19344:	89 c8                	mov    %ecx,%eax
   19346:	41 0f 4f c5          	cmovg  %r13d,%eax
   1934a:	29 44 24 38          	sub    %eax,0x38(%rsp)
   1934e:	29 c1                	sub    %eax,%ecx
   19350:	41 29 c5             	sub    %eax,%r13d
   19353:	89 4c 24 24          	mov    %ecx,0x24(%rsp)
   19357:	45 85 e4             	test   %r12d,%r12d
   1935a:	7e 47                	jle    193a3 <__dtoa+0x683>
   1935c:	44 89 e6             	mov    %r12d,%esi
   1935f:	44 8b 64 24 40       	mov    0x40(%rsp),%r12d
   19364:	45 85 e4             	test   %r12d,%r12d
   19367:	0f 84 5b 05 00 00    	je     198c8 <__dtoa+0xba8>
   1936d:	48 89 ef             	mov    %rbp,%rdi
   19370:	e8 eb 1a 00 00       	call   1ae60 <__pow5mult_D2A>
   19375:	48 89 c5             	mov    %rax,%rbp
   19378:	48 85 c0             	test   %rax,%rax
   1937b:	0f 84 1f 02 00 00    	je     195a0 <__dtoa+0x880>
   19381:	4c 89 fe             	mov    %r15,%rsi
   19384:	48 89 c7             	mov    %rax,%rdi
   19387:	e8 a4 18 00 00       	call   1ac30 <__mult_D2A>
   1938c:	49 89 c4             	mov    %rax,%r12
   1938f:	48 85 c0             	test   %rax,%rax
   19392:	0f 84 08 02 00 00    	je     195a0 <__dtoa+0x880>
   19398:	4c 89 ff             	mov    %r15,%rdi
   1939b:	4d 89 e7             	mov    %r12,%r15
   1939e:	e8 3d 16 00 00       	call   1a9e0 <__Bfree_D2A>
   193a3:	bf 01 00 00 00       	mov    $0x1,%edi
   193a8:	e8 53 18 00 00       	call   1ac00 <__i2b_D2A>
   193ad:	49 89 c4             	mov    %rax,%r12
   193b0:	48 85 c0             	test   %rax,%rax
   193b3:	0f 84 e7 01 00 00    	je     195a0 <__dtoa+0x880>
   193b9:	85 db                	test   %ebx,%ebx
   193bb:	0f 85 27 05 00 00    	jne    198e8 <__dtoa+0xbc8>
   193c1:	83 7c 24 20 01       	cmpl   $0x1,0x20(%rsp)
   193c6:	0f 8e d4 07 00 00    	jle    19ba0 <__dtoa+0xe80>
   193cc:	8b 44 24 40          	mov    0x40(%rsp),%eax
   193d0:	85 c0                	test   %eax,%eax
   193d2:	0f 85 c8 07 00 00    	jne    19ba0 <__dtoa+0xe80>
   193d8:	b8 01 00 00 00       	mov    $0x1,%eax
   193dd:	44 01 e8             	add    %r13d,%eax
   193e0:	83 e0 1f             	and    $0x1f,%eax
   193e3:	0f 84 c7 04 00 00    	je     198b0 <__dtoa+0xb90>
   193e9:	ba 20 00 00 00       	mov    $0x20,%edx
   193ee:	29 c2                	sub    %eax,%edx
   193f0:	83 fa 04             	cmp    $0x4,%edx
   193f3:	0f 8e 82 0d 00 00    	jle    1a17b <__dtoa+0x145b>
   193f9:	ba 1c 00 00 00       	mov    $0x1c,%edx
   193fe:	29 c2                	sub    %eax,%edx
   19400:	01 54 24 38          	add    %edx,0x38(%rsp)
   19404:	01 54 24 24          	add    %edx,0x24(%rsp)
   19408:	41 01 d5             	add    %edx,%r13d
   1940b:	8b 44 24 38          	mov    0x38(%rsp),%eax
   1940f:	85 c0                	test   %eax,%eax
   19411:	0f 8f 69 05 00 00    	jg     19980 <__dtoa+0xc60>
   19417:	45 85 ed             	test   %r13d,%r13d
   1941a:	0f 8f 80 05 00 00    	jg     199a0 <__dtoa+0xc80>
   19420:	44 8b 5c 24 30       	mov    0x30(%rsp),%r11d
   19425:	45 85 db             	test   %r11d,%r11d
   19428:	0f 85 62 02 00 00    	jne    19690 <__dtoa+0x970>
   1942e:	44 8b 4c 24 2c       	mov    0x2c(%rsp),%r9d
   19433:	45 85 c9             	test   %r9d,%r9d
   19436:	0f 8e 44 09 00 00    	jle    19d80 <__dtoa+0x1060>
   1943c:	8b 7c 24 40          	mov    0x40(%rsp),%edi
   19440:	85 ff                	test   %edi,%edi
   19442:	0f 84 a0 02 00 00    	je     196e8 <__dtoa+0x9c8>
   19448:	8b 44 24 24          	mov    0x24(%rsp),%eax
   1944c:	85 c0                	test   %eax,%eax
   1944e:	0f 8f 2c 07 00 00    	jg     19b80 <__dtoa+0xe60>
   19454:	49 89 ed             	mov    %rbp,%r13
   19457:	85 db                	test   %ebx,%ebx
   19459:	0f 85 81 07 00 00    	jne    19be0 <__dtoa+0xec0>
   1945f:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
   19463:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   19468:	4c 89 74 24 48       	mov    %r14,0x48(%rsp)
   1946d:	83 e8 01             	sub    $0x1,%eax
   19470:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   19475:	48 8d 5c 01 01       	lea    0x1(%rcx,%rax,1),%rbx
   1947a:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
   1947f:	90                   	nop
   19480:	4c 89 e6             	mov    %r12,%rsi
   19483:	4c 89 ff             	mov    %r15,%rdi
   19486:	e8 e5 f6 ff ff       	call   18b70 <__quorem_D2A>
   1948b:	48 89 ee             	mov    %rbp,%rsi
   1948e:	4c 89 ff             	mov    %r15,%rdi
   19491:	89 44 24 44          	mov    %eax,0x44(%rsp)
   19495:	44 8d 70 30          	lea    0x30(%rax),%r14d
   19499:	e8 72 1c 00 00       	call   1b110 <__cmp_D2A>
   1949e:	4c 89 ee             	mov    %r13,%rsi
   194a1:	4c 89 e7             	mov    %r12,%rdi
   194a4:	89 c3                	mov    %eax,%ebx
   194a6:	e8 b5 1c 00 00       	call   1b160 <__diff_D2A>
   194ab:	48 85 c0             	test   %rax,%rax
   194ae:	0f 84 ec 00 00 00    	je     195a0 <__dtoa+0x880>
   194b4:	8b 48 10             	mov    0x10(%rax),%ecx
   194b7:	83 7c 24 20 01       	cmpl   $0x1,0x20(%rsp)
   194bc:	0f 95 c2             	setne  %dl
   194bf:	85 c9                	test   %ecx,%ecx
   194c1:	88 54 24 24          	mov    %dl,0x24(%rsp)
   194c5:	89 4c 24 2c          	mov    %ecx,0x2c(%rsp)
   194c9:	0f 85 91 07 00 00    	jne    19c60 <__dtoa+0xf40>
   194cf:	48 89 c6             	mov    %rax,%rsi
   194d2:	4c 89 ff             	mov    %r15,%rdi
   194d5:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   194da:	e8 31 1c 00 00       	call   1b110 <__cmp_D2A>
   194df:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9
   194e4:	89 44 24 40          	mov    %eax,0x40(%rsp)
   194e8:	4c 89 cf             	mov    %r9,%rdi
   194eb:	e8 f0 14 00 00       	call   1a9e0 <__Bfree_D2A>
   194f0:	8b 44 24 40          	mov    0x40(%rsp),%eax
   194f4:	85 c0                	test   %eax,%eax
   194f6:	0f 85 d4 07 00 00    	jne    19cd0 <__dtoa+0xfb0>
   194fc:	0f b6 54 24 24       	movzbl 0x24(%rsp),%edx
   19501:	84 d2                	test   %dl,%dl
   19503:	0f 84 c7 07 00 00    	je     19cd0 <__dtoa+0xfb0>
   19509:	8b 44 24 48          	mov    0x48(%rsp),%eax
   1950d:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
   19511:	83 e0 01             	and    $0x1,%eax
   19514:	0f 84 64 0b 00 00    	je     1a07e <__dtoa+0x135e>
   1951a:	85 db                	test   %ebx,%ebx
   1951c:	0f 88 24 0b 00 00    	js     1a046 <__dtoa+0x1326>
   19522:	09 d8                	or     %ebx,%eax
   19524:	0f 84 b5 0b 00 00    	je     1a0df <__dtoa+0x13bf>
   1952a:	48 83 44 24 10 01    	addq   $0x1,0x10(%rsp)
   19530:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   19535:	44 88 70 ff          	mov    %r14b,-0x1(%rax)
   19539:	48 39 44 24 38       	cmp    %rax,0x38(%rsp)
   1953e:	0f 84 ef 0a 00 00    	je     1a033 <__dtoa+0x1313>
   19544:	4c 89 ff             	mov    %r15,%rdi
   19547:	31 d2                	xor    %edx,%edx
   19549:	be 0a 00 00 00       	mov    $0xa,%esi
   1954e:	e8 7d 15 00 00       	call   1aad0 <__multadd_D2A>
   19553:	49 89 c7             	mov    %rax,%r15
   19556:	48 85 c0             	test   %rax,%rax
   19559:	74 45                	je     195a0 <__dtoa+0x880>
   1955b:	31 d2                	xor    %edx,%edx
   1955d:	be 0a 00 00 00       	mov    $0xa,%esi
   19562:	48 89 ef             	mov    %rbp,%rdi
   19565:	4c 39 ed             	cmp    %r13,%rbp
   19568:	0f 84 42 07 00 00    	je     19cb0 <__dtoa+0xf90>
   1956e:	e8 5d 15 00 00       	call   1aad0 <__multadd_D2A>
   19573:	48 89 c5             	mov    %rax,%rbp
   19576:	48 85 c0             	test   %rax,%rax
   19579:	74 25                	je     195a0 <__dtoa+0x880>
   1957b:	4c 89 ef             	mov    %r13,%rdi
   1957e:	31 d2                	xor    %edx,%edx
   19580:	be 0a 00 00 00       	mov    $0xa,%esi
   19585:	e8 46 15 00 00       	call   1aad0 <__multadd_D2A>
   1958a:	49 89 c5             	mov    %rax,%r13
   1958d:	48 85 c0             	test   %rax,%rax
   19590:	0f 85 ea fe ff ff    	jne    19480 <__dtoa+0x760>
   19596:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1959d:	00 00 00 
   195a0:	45 31 f6             	xor    %r14d,%r14d
   195a3:	e9 d1 fb ff ff       	jmp    19179 <__dtoa+0x459>
   195a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   195af:	00 
   195b0:	c7 44 24 30 01 00 00 	movl   $0x1,0x30(%rsp)
   195b7:	00 
   195b8:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%rsp)
   195bf:	00 
   195c0:	45 85 ed             	test   %r13d,%r13d
   195c3:	0f 89 ff f8 ff ff    	jns    18ec8 <__dtoa+0x1a8>
   195c9:	29 f7                	sub    %esi,%edi
   195cb:	45 31 ed             	xor    %r13d,%r13d
   195ce:	8d 47 01             	lea    0x1(%rdi),%eax
   195d1:	89 44 24 24          	mov    %eax,0x24(%rsp)
   195d5:	e9 ee f8 ff ff       	jmp    18ec8 <__dtoa+0x1a8>
   195da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   195e0:	66 0f ef d2          	pxor   %xmm2,%xmm2
   195e4:	f2 0f 2a d3          	cvtsi2sd %ebx,%xmm2
   195e8:	66 0f 2e d0          	ucomisd %xmm0,%xmm2
   195ec:	7a 06                	jp     195f4 <__dtoa+0x8d4>
   195ee:	0f 84 85 f8 ff ff    	je     18e79 <__dtoa+0x159>
   195f4:	83 eb 01             	sub    $0x1,%ebx
   195f7:	e9 7d f8 ff ff       	jmp    18e79 <__dtoa+0x159>
   195fc:	0f 1f 40 00          	nopl   0x0(%rax)
   19600:	66 0f ef d2          	pxor   %xmm2,%xmm2
   19604:	f2 0f 2a d0          	cvtsi2sd %eax,%xmm2
   19608:	f2 0f 59 d0          	mulsd  %xmm0,%xmm2
   1960c:	f2 0f 58 15 6c d7 00 	addsd  0xd76c(%rip),%xmm2        # 26d80 <xdigs_lower.3362+0x50>
   19613:	00 
   19614:	66 48 0f 7e d2       	movq   %xmm2,%rdx
   19619:	66 48 0f 7e d0       	movq   %xmm2,%rax
   1961e:	48 c1 ea 20          	shr    $0x20,%rdx
   19622:	89 c0                	mov    %eax,%eax
   19624:	81 ea 00 00 40 03    	sub    $0x3400000,%edx
   1962a:	48 c1 e2 20          	shl    $0x20,%rdx
   1962e:	48 09 d0             	or     %rdx,%rax
   19631:	f2 0f 5c 05 4f d7 00 	subsd  0xd74f(%rip),%xmm0        # 26d88 <xdigs_lower.3362+0x58>
   19638:	00 
   19639:	66 48 0f 6e d0       	movq   %rax,%xmm2
   1963e:	66 0f 2f c2          	comisd %xmm2,%xmm0
   19642:	0f 87 68 08 00 00    	ja     19eb0 <__dtoa+0x1190>
   19648:	66 0f 57 15 50 d7 00 	xorpd  0xd750(%rip),%xmm2        # 26da0 <xdigs_lower.3362+0x70>
   1964f:	00 
   19650:	66 0f 2f d0          	comisd %xmm0,%xmm2
   19654:	0f 87 f6 03 00 00    	ja     19a50 <__dtoa+0xd30>
   1965a:	66 49 0f 7e ce       	movq   %xmm1,%r14
   1965f:	8b 4c 24 28          	mov    0x28(%rsp),%ecx
   19663:	8b 44 24 54          	mov    0x54(%rsp),%eax
   19667:	83 f9 0e             	cmp    $0xe,%ecx
   1966a:	7f 08                	jg     19674 <__dtoa+0x954>
   1966c:	85 c0                	test   %eax,%eax
   1966e:	0f 89 8c 06 00 00    	jns    19d00 <__dtoa+0xfe0>
   19674:	8b 74 24 24          	mov    0x24(%rsp),%esi
   19678:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
   1967c:	31 ed                	xor    %ebp,%ebp
   1967e:	89 74 24 38          	mov    %esi,0x38(%rsp)
   19682:	85 c9                	test   %ecx,%ecx
   19684:	0f 84 aa fc ff ff    	je     19334 <__dtoa+0x614>
   1968a:	e9 68 fc ff ff       	jmp    192f7 <__dtoa+0x5d7>
   1968f:	90                   	nop
   19690:	4c 89 e6             	mov    %r12,%rsi
   19693:	4c 89 ff             	mov    %r15,%rdi
   19696:	e8 75 1a 00 00       	call   1b110 <__cmp_D2A>
   1969b:	85 c0                	test   %eax,%eax
   1969d:	0f 89 8b fd ff ff    	jns    1942e <__dtoa+0x70e>
   196a3:	4c 89 ff             	mov    %r15,%rdi
   196a6:	31 d2                	xor    %edx,%edx
   196a8:	be 0a 00 00 00       	mov    $0xa,%esi
   196ad:	83 6c 24 28 01       	subl   $0x1,0x28(%rsp)
   196b2:	e8 19 14 00 00       	call   1aad0 <__multadd_D2A>
   196b7:	49 89 c7             	mov    %rax,%r15
   196ba:	48 85 c0             	test   %rax,%rax
   196bd:	0f 84 dd fe ff ff    	je     195a0 <__dtoa+0x880>
   196c3:	44 8b 54 24 40       	mov    0x40(%rsp),%r10d
   196c8:	45 85 d2             	test   %r10d,%r10d
   196cb:	0f 85 e2 09 00 00    	jne    1a0b3 <__dtoa+0x1393>
   196d1:	8b 44 24 48          	mov    0x48(%rsp),%eax
   196d5:	85 c0                	test   %eax,%eax
   196d7:	0f 8e 1b 0a 00 00    	jle    1a0f8 <__dtoa+0x13d8>
   196dd:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   196e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   196e8:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   196ed:	44 8b 6c 24 2c       	mov    0x2c(%rsp),%r13d
   196f2:	4c 89 f3             	mov    %r14,%rbx
   196f5:	eb 24                	jmp    1971b <__dtoa+0x9fb>
   196f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   196fe:	00 00 
   19700:	4c 89 ff             	mov    %r15,%rdi
   19703:	31 d2                	xor    %edx,%edx
   19705:	be 0a 00 00 00       	mov    $0xa,%esi
   1970a:	e8 c1 13 00 00       	call   1aad0 <__multadd_D2A>
   1970f:	49 89 c7             	mov    %rax,%r15
   19712:	48 85 c0             	test   %rax,%rax
   19715:	0f 84 85 fe ff ff    	je     195a0 <__dtoa+0x880>
   1971b:	4c 89 e6             	mov    %r12,%rsi
   1971e:	4c 89 ff             	mov    %r15,%rdi
   19721:	48 83 c3 01          	add    $0x1,%rbx
   19725:	e8 46 f4 ff ff       	call   18b70 <__quorem_D2A>
   1972a:	8d 50 30             	lea    0x30(%rax),%edx
   1972d:	88 53 ff             	mov    %dl,-0x1(%rbx)
   19730:	41 8b 4f 18          	mov    0x18(%r15),%ecx
   19734:	85 c9                	test   %ecx,%ecx
   19736:	75 0b                	jne    19743 <__dtoa+0xa23>
   19738:	41 83 7f 14 01       	cmpl   $0x1,0x14(%r15)
   1973d:	0f 8e 75 08 00 00    	jle    19fb8 <__dtoa+0x1298>
   19743:	89 d8                	mov    %ebx,%eax
   19745:	44 29 f0             	sub    %r14d,%eax
   19748:	41 39 c5             	cmp    %eax,%r13d
   1974b:	7f b3                	jg     19700 <__dtoa+0x9e0>
   1974d:	45 31 f6             	xor    %r14d,%r14d
   19750:	4c 89 ff             	mov    %r15,%rdi
   19753:	be 01 00 00 00       	mov    $0x1,%esi
   19758:	89 54 24 20          	mov    %edx,0x20(%rsp)
   1975c:	e8 6f 18 00 00       	call   1afd0 <__lshift_D2A>
   19761:	49 89 c7             	mov    %rax,%r15
   19764:	48 85 c0             	test   %rax,%rax
   19767:	0f 84 33 fe ff ff    	je     195a0 <__dtoa+0x880>
   1976d:	4c 89 e6             	mov    %r12,%rsi
   19770:	48 89 c7             	mov    %rax,%rdi
   19773:	e8 98 19 00 00       	call   1b110 <__cmp_D2A>
   19778:	0f b6 4b ff          	movzbl -0x1(%rbx),%ecx
   1977c:	85 c0                	test   %eax,%eax
   1977e:	0f 8e 63 08 00 00    	jle    19fe7 <__dtoa+0x12c7>
   19784:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   19789:	eb 15                	jmp    197a0 <__dtoa+0xa80>
   1978b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19790:	48 39 d0             	cmp    %rdx,%rax
   19793:	0f 84 36 08 00 00    	je     19fcf <__dtoa+0x12af>
   19799:	0f b6 48 ff          	movzbl -0x1(%rax),%ecx
   1979d:	48 89 c3             	mov    %rax,%rbx
   197a0:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
   197a4:	80 f9 39             	cmp    $0x39,%cl
   197a7:	74 e7                	je     19790 <__dtoa+0xa70>
   197a9:	83 c1 01             	add    $0x1,%ecx
   197ac:	88 08                	mov    %cl,(%rax)
   197ae:	8b 44 24 28          	mov    0x28(%rsp),%eax
   197b2:	89 44 24 38          	mov    %eax,0x38(%rsp)
   197b6:	4c 89 e7             	mov    %r12,%rdi
   197b9:	e8 22 12 00 00       	call   1a9e0 <__Bfree_D2A>
   197be:	48 85 ed             	test   %rbp,%rbp
   197c1:	0f 84 96 09 00 00    	je     1a15d <__dtoa+0x143d>
   197c7:	4d 85 f6             	test   %r14,%r14
   197ca:	0f 84 9c 09 00 00    	je     1a16c <__dtoa+0x144c>
   197d0:	49 39 ee             	cmp    %rbp,%r14
   197d3:	0f 84 93 09 00 00    	je     1a16c <__dtoa+0x144c>
   197d9:	4c 89 f7             	mov    %r14,%rdi
   197dc:	e8 ff 11 00 00       	call   1a9e0 <__Bfree_D2A>
   197e1:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   197e6:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   197eb:	e9 81 02 00 00       	jmp    19a71 <__dtoa+0xd51>
   197f0:	b9 20 00 00 00       	mov    $0x20,%ecx
   197f5:	89 d8                	mov    %ebx,%eax
   197f7:	44 29 c9             	sub    %r9d,%ecx
   197fa:	d3 e0                	shl    %cl,%eax
   197fc:	e9 03 f6 ff ff       	jmp    18e04 <__dtoa+0xe4>
   19801:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   19808:	c7 44 24 40 00 00 00 	movl   $0x0,0x40(%rsp)
   1980f:	00 
   19810:	44 8b 5c 24 10       	mov    0x10(%rsp),%r11d
   19815:	45 85 db             	test   %r11d,%r11d
   19818:	0f 8e 22 01 00 00    	jle    19940 <__dtoa+0xc20>
   1981e:	8b 7c 24 10          	mov    0x10(%rsp),%edi
   19822:	89 7c 24 48          	mov    %edi,0x48(%rsp)
   19826:	89 7c 24 2c          	mov    %edi,0x2c(%rsp)
   1982a:	e9 1e f7 ff ff       	jmp    18f4d <__dtoa+0x22d>
   1982f:	90                   	nop
   19830:	8b 74 24 28          	mov    0x28(%rsp),%esi
   19834:	f7 de                	neg    %esi
   19836:	0f 84 04 02 00 00    	je     19a40 <__dtoa+0xd20>
   1983c:	89 f2                	mov    %esi,%edx
   1983e:	48 8d 05 db d5 00 00 	lea    0xd5db(%rip),%rax        # 26e20 <__tens_D2A>
   19845:	83 e2 0f             	and    $0xf,%edx
   19848:	c1 fe 04             	sar    $0x4,%esi
   1984b:	f2 0f 10 14 d0       	movsd  (%rax,%rdx,8),%xmm2
   19850:	f2 0f 59 d1          	mulsd  %xmm1,%xmm2
   19854:	66 0f 28 c2          	movapd %xmm2,%xmm0
   19858:	0f 84 16 08 00 00    	je     1a074 <__dtoa+0x1354>
   1985e:	31 d2                	xor    %edx,%edx
   19860:	b8 02 00 00 00       	mov    $0x2,%eax
   19865:	4c 8d 15 74 d6 00 00 	lea    0xd674(%rip),%r10        # 26ee0 <__bigtens_D2A>
   1986c:	31 ff                	xor    %edi,%edi
   1986e:	66 90                	xchg   %ax,%ax
   19870:	40 f6 c6 01          	test   $0x1,%sil
   19874:	74 0e                	je     19884 <__dtoa+0xb64>
   19876:	48 63 d7             	movslq %edi,%rdx
   19879:	83 c0 01             	add    $0x1,%eax
   1987c:	f2 41 0f 59 04 d2    	mulsd  (%r10,%rdx,8),%xmm0
   19882:	89 ca                	mov    %ecx,%edx
   19884:	83 c7 01             	add    $0x1,%edi
   19887:	d1 fe                	sar    %esi
   19889:	75 e5                	jne    19870 <__dtoa+0xb50>
   1988b:	84 d2                	test   %dl,%dl
   1988d:	0f 85 59 f7 ff ff    	jne    18fec <__dtoa+0x2cc>
   19893:	66 0f 28 c2          	movapd %xmm2,%xmm0
   19897:	e9 50 f7 ff ff       	jmp    18fec <__dtoa+0x2cc>
   1989c:	0f 1f 40 00          	nopl   0x0(%rax)
   198a0:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
   198a7:	00 
   198a8:	e9 83 f6 ff ff       	jmp    18f30 <__dtoa+0x210>
   198ad:	0f 1f 00             	nopl   (%rax)
   198b0:	b8 1c 00 00 00       	mov    $0x1c,%eax
   198b5:	01 44 24 38          	add    %eax,0x38(%rsp)
   198b9:	41 01 c5             	add    %eax,%r13d
   198bc:	01 44 24 24          	add    %eax,0x24(%rsp)
   198c0:	e9 46 fb ff ff       	jmp    1940b <__dtoa+0x6eb>
   198c5:	0f 1f 00             	nopl   (%rax)
   198c8:	4c 89 ff             	mov    %r15,%rdi
   198cb:	e8 90 15 00 00       	call   1ae60 <__pow5mult_D2A>
   198d0:	49 89 c7             	mov    %rax,%r15
   198d3:	48 85 c0             	test   %rax,%rax
   198d6:	0f 85 c7 fa ff ff    	jne    193a3 <__dtoa+0x683>
   198dc:	e9 bf fc ff ff       	jmp    195a0 <__dtoa+0x880>
   198e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   198e8:	89 de                	mov    %ebx,%esi
   198ea:	48 89 c7             	mov    %rax,%rdi
   198ed:	e8 6e 15 00 00       	call   1ae60 <__pow5mult_D2A>
   198f2:	49 89 c4             	mov    %rax,%r12
   198f5:	48 85 c0             	test   %rax,%rax
   198f8:	0f 84 a2 fc ff ff    	je     195a0 <__dtoa+0x880>
   198fe:	83 7c 24 20 01       	cmpl   $0x1,0x20(%rsp)
   19903:	0f 8e 27 03 00 00    	jle    19c30 <__dtoa+0xf10>
   19909:	8b 54 24 40          	mov    0x40(%rsp),%edx
   1990d:	85 d2                	test   %edx,%edx
   1990f:	0f 85 1b 03 00 00    	jne    19c30 <__dtoa+0xf10>
   19915:	31 db                	xor    %ebx,%ebx
   19917:	41 8b 44 24 14       	mov    0x14(%r12),%eax
   1991c:	83 e8 01             	sub    $0x1,%eax
   1991f:	48 98                	cltq   
   19921:	41 8b 7c 84 18       	mov    0x18(%r12,%rax,4),%edi
   19926:	e8 75 12 00 00       	call   1aba0 <__hi0bits_D2A>
   1992b:	41 89 c2             	mov    %eax,%r10d
   1992e:	b8 20 00 00 00       	mov    $0x20,%eax
   19933:	44 29 d0             	sub    %r10d,%eax
   19936:	e9 a2 fa ff ff       	jmp    193dd <__dtoa+0x6bd>
   1993b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19940:	c7 44 24 48 01 00 00 	movl   $0x1,0x48(%rsp)
   19947:	00 
   19948:	bf 01 00 00 00       	mov    $0x1,%edi
   1994d:	c7 44 24 2c 01 00 00 	movl   $0x1,0x2c(%rsp)
   19954:	00 
   19955:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%rsp)
   1995c:	00 
   1995d:	e9 eb f5 ff ff       	jmp    18f4d <__dtoa+0x22d>
   19962:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   19968:	66 0f 28 c1          	movapd %xmm1,%xmm0
   1996c:	b8 02 00 00 00       	mov    $0x2,%eax
   19971:	e9 4a f6 ff ff       	jmp    18fc0 <__dtoa+0x2a0>
   19976:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1997d:	00 00 00 
   19980:	4c 89 ff             	mov    %r15,%rdi
   19983:	89 c6                	mov    %eax,%esi
   19985:	e8 46 16 00 00       	call   1afd0 <__lshift_D2A>
   1998a:	49 89 c7             	mov    %rax,%r15
   1998d:	48 85 c0             	test   %rax,%rax
   19990:	0f 85 81 fa ff ff    	jne    19417 <__dtoa+0x6f7>
   19996:	e9 05 fc ff ff       	jmp    195a0 <__dtoa+0x880>
   1999b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   199a0:	4c 89 e7             	mov    %r12,%rdi
   199a3:	44 89 ee             	mov    %r13d,%esi
   199a6:	e8 25 16 00 00       	call   1afd0 <__lshift_D2A>
   199ab:	49 89 c4             	mov    %rax,%r12
   199ae:	48 85 c0             	test   %rax,%rax
   199b1:	0f 85 69 fa ff ff    	jne    19420 <__dtoa+0x700>
   199b7:	e9 e4 fb ff ff       	jmp    195a0 <__dtoa+0x880>
   199bc:	0f 1f 40 00          	nopl   0x0(%rax)
   199c0:	f2 0f 59 e3          	mulsd  %xmm3,%xmm4
   199c4:	66 0f ef ff          	pxor   %xmm7,%xmm7
   199c8:	66 0f 2e c7          	ucomisd %xmm7,%xmm0
   199cc:	0f 8a fe 03 00 00    	jp     19dd0 <__dtoa+0x10b0>
   199d2:	0f 85 f8 03 00 00    	jne    19dd0 <__dtoa+0x10b0>
   199d8:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   199dd:	0f 1f 00             	nopl   (%rax)
   199e0:	88 06                	mov    %al,(%rsi)
   199e2:	f2 0f 10 15 a6 d3 00 	movsd  0xd3a6(%rip),%xmm2        # 26d90 <xdigs_lower.3362+0x60>
   199e9:	00 
   199ea:	66 0f 28 dc          	movapd %xmm4,%xmm3
   199ee:	f2 0f 58 da          	addsd  %xmm2,%xmm3
   199f2:	66 0f 2f c3          	comisd %xmm3,%xmm0
   199f6:	0f 87 19 f7 ff ff    	ja     19115 <__dtoa+0x3f5>
   199fc:	f2 0f 5c d4          	subsd  %xmm4,%xmm2
   19a00:	66 0f 2f d0          	comisd %xmm0,%xmm2
   19a04:	0f 86 50 fc ff ff    	jbe    1965a <__dtoa+0x93a>
   19a0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   19a10:	48 89 d0             	mov    %rdx,%rax
   19a13:	48 83 ea 01          	sub    $0x1,%rdx
   19a17:	80 3a 30             	cmpb   $0x30,(%rdx)
   19a1a:	74 f4                	je     19a10 <__dtoa+0xcf0>
   19a1c:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   19a21:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   19a26:	eb 51                	jmp    19a79 <__dtoa+0xd59>
   19a28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   19a2f:	00 
   19a30:	b8 36 00 00 00       	mov    $0x36,%eax
   19a35:	2b 44 24 50          	sub    0x50(%rsp),%eax
   19a39:	e9 ca f8 ff ff       	jmp    19308 <__dtoa+0x5e8>
   19a3e:	66 90                	xchg   %ax,%ax
   19a40:	66 0f 28 c1          	movapd %xmm1,%xmm0
   19a44:	b8 02 00 00 00       	mov    $0x2,%eax
   19a49:	e9 9e f5 ff ff       	jmp    18fec <__dtoa+0x2cc>
   19a4e:	66 90                	xchg   %ax,%ax
   19a50:	45 31 e4             	xor    %r12d,%r12d
   19a53:	31 ed                	xor    %ebp,%ebp
   19a55:	8b 44 24 10          	mov    0x10(%rsp),%eax
   19a59:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   19a5e:	f7 d0                	not    %eax
   19a60:	89 44 24 38          	mov    %eax,0x38(%rsp)
   19a64:	4c 89 e7             	mov    %r12,%rdi
   19a67:	e8 74 0f 00 00       	call   1a9e0 <__Bfree_D2A>
   19a6c:	48 85 ed             	test   %rbp,%rbp
   19a6f:	74 08                	je     19a79 <__dtoa+0xd59>
   19a71:	48 89 ef             	mov    %rbp,%rdi
   19a74:	e8 67 0f 00 00       	call   1a9e0 <__Bfree_D2A>
   19a79:	4c 89 ff             	mov    %r15,%rdi
   19a7c:	e8 5f 0f 00 00       	call   1a9e0 <__Bfree_D2A>
   19a81:	44 8b 6c 24 38       	mov    0x38(%rsp),%r13d
   19a86:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   19a8b:	48 8b 0c 24          	mov    (%rsp),%rcx
   19a8f:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   19a94:	41 83 c5 01          	add    $0x1,%r13d
   19a98:	c6 00 00             	movb   $0x0,(%rax)
   19a9b:	44 89 29             	mov    %r13d,(%rcx)
   19a9e:	48 85 db             	test   %rbx,%rbx
   19aa1:	0f 84 d2 f6 ff ff    	je     19179 <__dtoa+0x459>
   19aa7:	48 89 03             	mov    %rax,(%rbx)
   19aaa:	e9 ca f6 ff ff       	jmp    19179 <__dtoa+0x459>
   19aaf:	90                   	nop
   19ab0:	48 63 44 24 28       	movslq 0x28(%rsp),%rax
   19ab5:	48 8d 15 64 d3 00 00 	lea    0xd364(%rip),%rdx        # 26e20 <__tens_D2A>
   19abc:	66 0f 28 c1          	movapd %xmm1,%xmm0
   19ac0:	66 0f ef f6          	pxor   %xmm6,%xmm6
   19ac4:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   19ac9:	f2 0f 10 14 c2       	movsd  (%rdx,%rax,8),%xmm2
   19ace:	48 8d 4b 01          	lea    0x1(%rbx),%rcx
   19ad2:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
   19ad6:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   19ada:	66 0f ef c0          	pxor   %xmm0,%xmm0
   19ade:	f2 0f 2a c0          	cvtsi2sd %eax,%xmm0
   19ae2:	83 c0 30             	add    $0x30,%eax
   19ae5:	88 03                	mov    %al,(%rbx)
   19ae7:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
   19aeb:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
   19aef:	66 0f 2e ce          	ucomisd %xmm6,%xmm1
   19af3:	0f 8b ee 05 00 00    	jnp    1a0e7 <__dtoa+0x13c7>
   19af9:	c7 44 24 2c ff ff ff 	movl   $0xffffffff,0x2c(%rsp)
   19b00:	ff 
   19b01:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
   19b05:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   19b0a:	f2 0f 10 1d 66 d2 00 	movsd  0xd266(%rip),%xmm3        # 26d78 <xdigs_lower.3362+0x48>
   19b11:	00 
   19b12:	83 e8 02             	sub    $0x2,%eax
   19b15:	48 8d 54 03 02       	lea    0x2(%rbx,%rax,1),%rdx
   19b1a:	eb 0d                	jmp    19b29 <__dtoa+0xe09>
   19b1c:	0f 1f 40 00          	nopl   0x0(%rax)
   19b20:	48 39 d1             	cmp    %rdx,%rcx
   19b23:	0f 84 57 04 00 00    	je     19f80 <__dtoa+0x1260>
   19b29:	f2 0f 59 cb          	mulsd  %xmm3,%xmm1
   19b2d:	66 0f ef ff          	pxor   %xmm7,%xmm7
   19b31:	48 83 c1 01          	add    $0x1,%rcx
   19b35:	66 0f 28 c1          	movapd %xmm1,%xmm0
   19b39:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
   19b3d:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   19b41:	66 0f ef c0          	pxor   %xmm0,%xmm0
   19b45:	f2 0f 2a c0          	cvtsi2sd %eax,%xmm0
   19b49:	8d 70 30             	lea    0x30(%rax),%esi
   19b4c:	40 88 71 ff          	mov    %sil,-0x1(%rcx)
   19b50:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
   19b54:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
   19b58:	66 0f 2e cf          	ucomisd %xmm7,%xmm1
   19b5c:	7a c2                	jp     19b20 <__dtoa+0xe00>
   19b5e:	75 c0                	jne    19b20 <__dtoa+0xe00>
   19b60:	8b 44 24 28          	mov    0x28(%rsp),%eax
   19b64:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   19b69:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
   19b6e:	89 44 24 38          	mov    %eax,0x38(%rsp)
   19b72:	e9 02 ff ff ff       	jmp    19a79 <__dtoa+0xd59>
   19b77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   19b7e:	00 00 
   19b80:	48 89 ef             	mov    %rbp,%rdi
   19b83:	89 c6                	mov    %eax,%esi
   19b85:	e8 46 14 00 00       	call   1afd0 <__lshift_D2A>
   19b8a:	48 89 c5             	mov    %rax,%rbp
   19b8d:	48 85 c0             	test   %rax,%rax
   19b90:	0f 85 be f8 ff ff    	jne    19454 <__dtoa+0x734>
   19b96:	e9 05 fa ff ff       	jmp    195a0 <__dtoa+0x880>
   19b9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19ba0:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffff,%rax
   19ba7:	ff 0f 00 
   19baa:	49 85 c6             	test   %rax,%r14
   19bad:	0f 85 25 f8 ff ff    	jne    193d8 <__dtoa+0x6b8>
   19bb3:	4c 89 f0             	mov    %r14,%rax
   19bb6:	48 c1 e8 20          	shr    $0x20,%rax
   19bba:	a9 00 00 e0 7f       	test   $0x7fe00000,%eax
   19bbf:	0f 84 13 f8 ff ff    	je     193d8 <__dtoa+0x6b8>
   19bc5:	83 44 24 38 01       	addl   $0x1,0x38(%rsp)
   19bca:	41 83 c5 01          	add    $0x1,%r13d
   19bce:	85 db                	test   %ebx,%ebx
   19bd0:	bb 01 00 00 00       	mov    $0x1,%ebx
   19bd5:	0f 84 fd f7 ff ff    	je     193d8 <__dtoa+0x6b8>
   19bdb:	e9 37 fd ff ff       	jmp    19917 <__dtoa+0xbf7>
   19be0:	8b 7d 08             	mov    0x8(%rbp),%edi
   19be3:	e8 08 0d 00 00       	call   1a8f0 <__Balloc_D2A>
   19be8:	49 89 c5             	mov    %rax,%r13
   19beb:	48 85 c0             	test   %rax,%rax
   19bee:	0f 84 ac f9 ff ff    	je     195a0 <__dtoa+0x880>
   19bf4:	48 63 45 14          	movslq 0x14(%rbp),%rax
   19bf8:	49 8d 7d 10          	lea    0x10(%r13),%rdi
   19bfc:	48 8d 75 10          	lea    0x10(%rbp),%rsi
   19c00:	48 8d 14 85 08 00 00 	lea    0x8(,%rax,4),%rdx
   19c07:	00 
   19c08:	e8 e3 9b ff ff       	call   137f0 <memcpy>
   19c0d:	4c 89 ef             	mov    %r13,%rdi
   19c10:	be 01 00 00 00       	mov    $0x1,%esi
   19c15:	e8 b6 13 00 00       	call   1afd0 <__lshift_D2A>
   19c1a:	49 89 c5             	mov    %rax,%r13
   19c1d:	48 85 c0             	test   %rax,%rax
   19c20:	0f 85 39 f8 ff ff    	jne    1945f <__dtoa+0x73f>
   19c26:	e9 75 f9 ff ff       	jmp    195a0 <__dtoa+0x880>
   19c2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19c30:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffff,%rax
   19c37:	ff 0f 00 
   19c3a:	49 85 c6             	test   %rax,%r14
   19c3d:	0f 85 d2 fc ff ff    	jne    19915 <__dtoa+0xbf5>
   19c43:	4c 89 f0             	mov    %r14,%rax
   19c46:	48 c1 e8 20          	shr    $0x20,%rax
   19c4a:	a9 00 00 e0 7f       	test   $0x7fe00000,%eax
   19c4f:	0f 85 70 ff ff ff    	jne    19bc5 <__dtoa+0xea5>
   19c55:	e9 bb fc ff ff       	jmp    19915 <__dtoa+0xbf5>
   19c5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   19c60:	48 89 c7             	mov    %rax,%rdi
   19c63:	e8 78 0d 00 00       	call   1a9e0 <__Bfree_D2A>
   19c68:	85 db                	test   %ebx,%ebx
   19c6a:	0f 88 9d 04 00 00    	js     1a10d <__dtoa+0x13ed>
   19c70:	83 7c 24 20 01       	cmpl   $0x1,0x20(%rsp)
   19c75:	0f 85 45 02 00 00    	jne    19ec0 <__dtoa+0x11a0>
   19c7b:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   19c80:	44 89 f2             	mov    %r14d,%edx
   19c83:	48 8d 58 01          	lea    0x1(%rax),%rbx
   19c87:	83 fa 39             	cmp    $0x39,%edx
   19c8a:	0f 84 c7 03 00 00    	je     1a057 <__dtoa+0x1337>
   19c90:	83 c2 01             	add    $0x1,%edx
   19c93:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   19c98:	49 89 ee             	mov    %rbp,%r14
   19c9b:	4c 89 ed             	mov    %r13,%rbp
   19c9e:	88 10                	mov    %dl,(%rax)
   19ca0:	8b 44 24 28          	mov    0x28(%rsp),%eax
   19ca4:	89 44 24 38          	mov    %eax,0x38(%rsp)
   19ca8:	e9 09 fb ff ff       	jmp    197b6 <__dtoa+0xa96>
   19cad:	0f 1f 00             	nopl   (%rax)
   19cb0:	e8 1b 0e 00 00       	call   1aad0 <__multadd_D2A>
   19cb5:	48 89 c5             	mov    %rax,%rbp
   19cb8:	48 85 c0             	test   %rax,%rax
   19cbb:	0f 84 df f8 ff ff    	je     195a0 <__dtoa+0x880>
   19cc1:	49 89 c5             	mov    %rax,%r13
   19cc4:	e9 b7 f7 ff ff       	jmp    19480 <__dtoa+0x760>
   19cc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   19cd0:	85 db                	test   %ebx,%ebx
   19cd2:	0f 88 fc 01 00 00    	js     19ed4 <__dtoa+0x11b4>
   19cd8:	83 7c 24 20 01       	cmpl   $0x1,0x20(%rsp)
   19cdd:	0f 85 e2 01 00 00    	jne    19ec5 <__dtoa+0x11a5>
   19ce3:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   19ce8:	48 8d 4b 01          	lea    0x1(%rbx),%rcx
   19cec:	85 c0                	test   %eax,%eax
   19cee:	0f 8f 3a 04 00 00    	jg     1a12e <__dtoa+0x140e>
   19cf4:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
   19cf9:	e9 32 f8 ff ff       	jmp    19530 <__dtoa+0x810>
   19cfe:	66 90                	xchg   %ax,%ax
   19d00:	8b 74 24 10          	mov    0x10(%rsp),%esi
   19d04:	48 63 c1             	movslq %ecx,%rax
   19d07:	48 8d 15 12 d1 00 00 	lea    0xd112(%rip),%rdx        # 26e20 <__tens_D2A>
   19d0e:	f2 0f 10 14 c2       	movsd  (%rdx,%rax,8),%xmm2
   19d13:	85 f6                	test   %esi,%esi
   19d15:	0f 89 74 04 00 00    	jns    1a18f <__dtoa+0x146f>
   19d1b:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
   19d1f:	85 c0                	test   %eax,%eax
   19d21:	0f 8f 68 04 00 00    	jg     1a18f <__dtoa+0x146f>
   19d27:	0f 85 23 fd ff ff    	jne    19a50 <__dtoa+0xd30>
   19d2d:	f2 0f 59 15 53 d0 00 	mulsd  0xd053(%rip),%xmm2        # 26d88 <xdigs_lower.3362+0x58>
   19d34:	00 
   19d35:	66 49 0f 6e fe       	movq   %r14,%xmm7
   19d3a:	45 31 e4             	xor    %r12d,%r12d
   19d3d:	31 ed                	xor    %ebp,%ebp
   19d3f:	66 0f 2f d7          	comisd %xmm7,%xmm2
   19d43:	0f 83 0c fd ff ff    	jae    19a55 <__dtoa+0xd35>
   19d49:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   19d4e:	8b 5c 24 28          	mov    0x28(%rsp),%ebx
   19d52:	c6 00 31             	movb   $0x31,(%rax)
   19d55:	83 c3 01             	add    $0x1,%ebx
   19d58:	49 89 c6             	mov    %rax,%r14
   19d5b:	48 83 c0 01          	add    $0x1,%rax
   19d5f:	89 5c 24 38          	mov    %ebx,0x38(%rsp)
   19d63:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   19d68:	e9 f7 fc ff ff       	jmp    19a64 <__dtoa+0xd44>
   19d6d:	0f 1f 00             	nopl   (%rax)
   19d70:	c7 44 24 40 01 00 00 	movl   $0x1,0x40(%rsp)
   19d77:	00 
   19d78:	e9 93 fa ff ff       	jmp    19810 <__dtoa+0xaf0>
   19d7d:	0f 1f 00             	nopl   (%rax)
   19d80:	8b 44 24 20          	mov    0x20(%rsp),%eax
   19d84:	83 e8 03             	sub    $0x3,%eax
   19d87:	83 e0 fd             	and    $0xfffffffd,%eax
   19d8a:	0f 85 ac f6 ff ff    	jne    1943c <__dtoa+0x71c>
   19d90:	4c 89 e7             	mov    %r12,%rdi
   19d93:	31 d2                	xor    %edx,%edx
   19d95:	be 05 00 00 00       	mov    $0x5,%esi
   19d9a:	e8 31 0d 00 00       	call   1aad0 <__multadd_D2A>
   19d9f:	49 89 c4             	mov    %rax,%r12
   19da2:	48 85 c0             	test   %rax,%rax
   19da5:	0f 84 f5 f7 ff ff    	je     195a0 <__dtoa+0x880>
   19dab:	44 8b 44 24 2c       	mov    0x2c(%rsp),%r8d
   19db0:	45 85 c0             	test   %r8d,%r8d
   19db3:	0f 85 9c fc ff ff    	jne    19a55 <__dtoa+0xd35>
   19db9:	48 89 c6             	mov    %rax,%rsi
   19dbc:	4c 89 ff             	mov    %r15,%rdi
   19dbf:	e8 4c 13 00 00       	call   1b110 <__cmp_D2A>
   19dc4:	85 c0                	test   %eax,%eax
   19dc6:	7f 81                	jg     19d49 <__dtoa+0x1029>
   19dc8:	e9 88 fc ff ff       	jmp    19a55 <__dtoa+0xd35>
   19dcd:	0f 1f 00             	nopl   (%rax)
   19dd0:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
   19dd5:	88 01                	mov    %al,(%rcx)
   19dd7:	83 fe 01             	cmp    $0x1,%esi
   19dda:	0f 84 02 fc ff ff    	je     199e2 <__dtoa+0xcc2>
   19de0:	8d 46 fe             	lea    -0x2(%rsi),%eax
   19de3:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   19de8:	f2 0f 10 1d 88 cf 00 	movsd  0xcf88(%rip),%xmm3        # 26d78 <xdigs_lower.3362+0x48>
   19def:	00 
   19df0:	48 8d 7c 06 02       	lea    0x2(%rsi,%rax,1),%rdi
   19df5:	eb 15                	jmp    19e0c <__dtoa+0x10ec>
   19df7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   19dfe:	00 00 
   19e00:	88 42 ff             	mov    %al,-0x1(%rdx)
   19e03:	48 39 d7             	cmp    %rdx,%rdi
   19e06:	0f 84 d6 fb ff ff    	je     199e2 <__dtoa+0xcc2>
   19e0c:	f2 0f 59 c3          	mulsd  %xmm3,%xmm0
   19e10:	66 0f ef d2          	pxor   %xmm2,%xmm2
   19e14:	66 0f ef ed          	pxor   %xmm5,%xmm5
   19e18:	48 89 d6             	mov    %rdx,%rsi
   19e1b:	48 83 c2 01          	add    $0x1,%rdx
   19e1f:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   19e23:	f2 0f 2a d0          	cvtsi2sd %eax,%xmm2
   19e27:	83 c0 30             	add    $0x30,%eax
   19e2a:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
   19e2e:	66 0f 2e c5          	ucomisd %xmm5,%xmm0
   19e32:	7a cc                	jp     19e00 <__dtoa+0x10e0>
   19e34:	0f 84 a6 fb ff ff    	je     199e0 <__dtoa+0xcc0>
   19e3a:	eb c4                	jmp    19e00 <__dtoa+0x10e0>
   19e3c:	0f 1f 40 00          	nopl   0x0(%rax)
   19e40:	44 8b 4c 24 2c       	mov    0x2c(%rsp),%r9d
   19e45:	45 85 c9             	test   %r9d,%r9d
   19e48:	0f 84 b2 f7 ff ff    	je     19600 <__dtoa+0x8e0>
   19e4e:	8b 74 24 48          	mov    0x48(%rsp),%esi
   19e52:	85 f6                	test   %esi,%esi
   19e54:	0f 8e 00 f8 ff ff    	jle    1965a <__dtoa+0x93a>
   19e5a:	f2 0f 10 1d 16 cf 00 	movsd  0xcf16(%rip),%xmm3        # 26d78 <xdigs_lower.3362+0x48>
   19e61:	00 
   19e62:	83 c0 01             	add    $0x1,%eax
   19e65:	66 0f ef d2          	pxor   %xmm2,%xmm2
   19e69:	8b 4c 24 28          	mov    0x28(%rsp),%ecx
   19e6d:	f2 0f 2a d0          	cvtsi2sd %eax,%xmm2
   19e71:	f2 0f 59 c3          	mulsd  %xmm3,%xmm0
   19e75:	83 e9 01             	sub    $0x1,%ecx
   19e78:	89 4c 24 38          	mov    %ecx,0x38(%rsp)
   19e7c:	f2 0f 59 d0          	mulsd  %xmm0,%xmm2
   19e80:	f2 0f 58 15 f8 ce 00 	addsd  0xcef8(%rip),%xmm2        # 26d80 <xdigs_lower.3362+0x50>
   19e87:	00 
   19e88:	66 48 0f 7e d2       	movq   %xmm2,%rdx
   19e8d:	66 48 0f 7e d0       	movq   %xmm2,%rax
   19e92:	48 c1 ea 20          	shr    $0x20,%rdx
   19e96:	89 c0                	mov    %eax,%eax
   19e98:	81 ea 00 00 40 03    	sub    $0x3400000,%edx
   19e9e:	48 c1 e2 20          	shl    $0x20,%rdx
   19ea2:	48 09 d0             	or     %rdx,%rax
   19ea5:	e9 a9 f1 ff ff       	jmp    19053 <__dtoa+0x333>
   19eaa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   19eb0:	45 31 e4             	xor    %r12d,%r12d
   19eb3:	31 ed                	xor    %ebp,%ebp
   19eb5:	e9 8f fe ff ff       	jmp    19d49 <__dtoa+0x1029>
   19eba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   19ec0:	b8 01 00 00 00       	mov    $0x1,%eax
   19ec5:	8b 54 24 48          	mov    0x48(%rsp),%edx
   19ec9:	83 e2 01             	and    $0x1,%edx
   19ecc:	09 da                	or     %ebx,%edx
   19ece:	0f 85 0f fe ff ff    	jne    19ce3 <__dtoa+0xfc3>
   19ed4:	44 89 f2             	mov    %r14d,%edx
   19ed7:	89 c1                	mov    %eax,%ecx
   19ed9:	41 8b 77 18          	mov    0x18(%r15),%esi
   19edd:	85 f6                	test   %esi,%esi
   19edf:	75 0b                	jne    19eec <__dtoa+0x11cc>
   19ee1:	41 83 7f 14 01       	cmpl   $0x1,0x14(%r15)
   19ee6:	0f 8e 5d 01 00 00    	jle    1a049 <__dtoa+0x1329>
   19eec:	85 c9                	test   %ecx,%ecx
   19eee:	0f 8e 55 01 00 00    	jle    1a049 <__dtoa+0x1329>
   19ef4:	4c 89 ff             	mov    %r15,%rdi
   19ef7:	be 01 00 00 00       	mov    $0x1,%esi
   19efc:	89 54 24 20          	mov    %edx,0x20(%rsp)
   19f00:	e8 cb 10 00 00       	call   1afd0 <__lshift_D2A>
   19f05:	49 89 c7             	mov    %rax,%r15
   19f08:	48 85 c0             	test   %rax,%rax
   19f0b:	0f 84 8f f6 ff ff    	je     195a0 <__dtoa+0x880>
   19f11:	4c 89 e6             	mov    %r12,%rsi
   19f14:	48 89 c7             	mov    %rax,%rdi
   19f17:	e8 f4 11 00 00       	call   1b110 <__cmp_D2A>
   19f1c:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   19f21:	8b 54 24 20          	mov    0x20(%rsp),%edx
   19f25:	48 83 c3 01          	add    $0x1,%rbx
   19f29:	85 c0                	test   %eax,%eax
   19f2b:	0f 8e e9 01 00 00    	jle    1a11a <__dtoa+0x13fa>
   19f31:	83 fa 39             	cmp    $0x39,%edx
   19f34:	0f 84 1d 01 00 00    	je     1a057 <__dtoa+0x1337>
   19f3a:	f3 0f 1e fa          	endbr64 
   19f3e:	8b 54 24 44          	mov    0x44(%rsp),%edx
   19f42:	83 c2 31             	add    $0x31,%edx
   19f45:	e9 49 fd ff ff       	jmp    19c93 <__dtoa+0xf73>
   19f4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   19f50:	c6 02 30             	movb   $0x30,(%rdx)
   19f53:	0f b6 41 ff          	movzbl -0x1(%rcx),%eax
   19f57:	83 44 24 38 01       	addl   $0x1,0x38(%rsp)
   19f5c:	e9 d7 f1 ff ff       	jmp    19138 <__dtoa+0x418>
   19f61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   19f68:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   19f6d:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   19f72:	e9 02 fb ff ff       	jmp    19a79 <__dtoa+0xd59>
   19f77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   19f7e:	00 00 
   19f80:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
   19f84:	66 0f 2f ca          	comisd %xmm2,%xmm1
   19f88:	0f 87 8f 00 00 00    	ja     1a01d <__dtoa+0x12fd>
   19f8e:	66 0f 2e ca          	ucomisd %xmm2,%xmm1
   19f92:	7a 0a                	jp     19f9e <__dtoa+0x127e>
   19f94:	75 08                	jne    19f9e <__dtoa+0x127e>
   19f96:	a8 01                	test   $0x1,%al
   19f98:	0f 85 7f 00 00 00    	jne    1a01d <__dtoa+0x12fd>
   19f9e:	8b 44 24 28          	mov    0x28(%rsp),%eax
   19fa2:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   19fa7:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   19fac:	89 44 24 38          	mov    %eax,0x38(%rsp)
   19fb0:	e9 c4 fa ff ff       	jmp    19a79 <__dtoa+0xd59>
   19fb5:	0f 1f 00             	nopl   (%rax)
   19fb8:	8b 44 24 28          	mov    0x28(%rsp),%eax
   19fbc:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   19fc1:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   19fc6:	89 44 24 38          	mov    %eax,0x38(%rsp)
   19fca:	e9 95 fa ff ff       	jmp    19a64 <__dtoa+0xd44>
   19fcf:	8b 44 24 28          	mov    0x28(%rsp),%eax
   19fd3:	83 c0 01             	add    $0x1,%eax
   19fd6:	89 44 24 38          	mov    %eax,0x38(%rsp)
   19fda:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   19fdf:	c6 00 31             	movb   $0x31,(%rax)
   19fe2:	e9 cf f7 ff ff       	jmp    197b6 <__dtoa+0xa96>
   19fe7:	75 1e                	jne    1a007 <__dtoa+0x12e7>
   19fe9:	8b 54 24 20          	mov    0x20(%rsp),%edx
   19fed:	83 e2 01             	and    $0x1,%edx
   19ff0:	0f 85 8e f7 ff ff    	jne    19784 <__dtoa+0xa64>
   19ff6:	eb 0f                	jmp    1a007 <__dtoa+0x12e7>
   19ff8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   19fff:	00 
   1a000:	0f b6 4b fe          	movzbl -0x2(%rbx),%ecx
   1a004:	48 89 c3             	mov    %rax,%rbx
   1a007:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
   1a00b:	80 f9 30             	cmp    $0x30,%cl
   1a00e:	74 f0                	je     1a000 <__dtoa+0x12e0>
   1a010:	8b 44 24 28          	mov    0x28(%rsp),%eax
   1a014:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1a018:	e9 99 f7 ff ff       	jmp    197b6 <__dtoa+0xa96>
   1a01d:	f3 0f 1e fa          	endbr64 
   1a021:	8b 44 24 28          	mov    0x28(%rsp),%eax
   1a025:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
   1a02a:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1a02e:	e9 f6 f0 ff ff       	jmp    19129 <__dtoa+0x409>
   1a033:	44 89 f2             	mov    %r14d,%edx
   1a036:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   1a03b:	49 89 ee             	mov    %rbp,%r14
   1a03e:	4c 89 ed             	mov    %r13,%rbp
   1a041:	e9 0a f7 ff ff       	jmp    19750 <__dtoa+0xa30>
   1a046:	44 89 f2             	mov    %r14d,%edx
   1a049:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1a04e:	48 8d 58 01          	lea    0x1(%rax),%rbx
   1a052:	e9 3c fc ff ff       	jmp    19c93 <__dtoa+0xf73>
   1a057:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1a05c:	49 89 ee             	mov    %rbp,%r14
   1a05f:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   1a064:	4c 89 ed             	mov    %r13,%rbp
   1a067:	b9 39 00 00 00       	mov    $0x39,%ecx
   1a06c:	c6 00 39             	movb   $0x39,(%rax)
   1a06f:	e9 2c f7 ff ff       	jmp    197a0 <__dtoa+0xa80>
   1a074:	b8 02 00 00 00       	mov    $0x2,%eax
   1a079:	e9 6e ef ff ff       	jmp    18fec <__dtoa+0x2cc>
   1a07e:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
   1a083:	89 de                	mov    %ebx,%esi
   1a085:	44 89 f2             	mov    %r14d,%edx
   1a088:	48 8d 59 01          	lea    0x1(%rcx),%rbx
   1a08c:	41 83 fe 39          	cmp    $0x39,%r14d
   1a090:	74 c5                	je     1a057 <__dtoa+0x1337>
   1a092:	8b 44 24 44          	mov    0x44(%rsp),%eax
   1a096:	49 89 ee             	mov    %rbp,%r14
   1a099:	4c 89 ed             	mov    %r13,%rbp
   1a09c:	83 c0 31             	add    $0x31,%eax
   1a09f:	85 f6                	test   %esi,%esi
   1a0a1:	0f 4f d0             	cmovg  %eax,%edx
   1a0a4:	8b 44 24 28          	mov    0x28(%rsp),%eax
   1a0a8:	88 11                	mov    %dl,(%rcx)
   1a0aa:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1a0ae:	e9 03 f7 ff ff       	jmp    197b6 <__dtoa+0xa96>
   1a0b3:	48 89 ef             	mov    %rbp,%rdi
   1a0b6:	31 d2                	xor    %edx,%edx
   1a0b8:	be 0a 00 00 00       	mov    $0xa,%esi
   1a0bd:	e8 0e 0a 00 00       	call   1aad0 <__multadd_D2A>
   1a0c2:	48 89 c5             	mov    %rax,%rbp
   1a0c5:	48 85 c0             	test   %rax,%rax
   1a0c8:	0f 84 d2 f4 ff ff    	je     195a0 <__dtoa+0x880>
   1a0ce:	8b 44 24 48          	mov    0x48(%rsp),%eax
   1a0d2:	85 c0                	test   %eax,%eax
   1a0d4:	7e 63                	jle    1a139 <__dtoa+0x1419>
   1a0d6:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   1a0da:	e9 69 f3 ff ff       	jmp    19448 <__dtoa+0x728>
   1a0df:	44 89 f2             	mov    %r14d,%edx
   1a0e2:	e9 f2 fd ff ff       	jmp    19ed9 <__dtoa+0x11b9>
   1a0e7:	0f 84 73 fa ff ff    	je     19b60 <__dtoa+0xe40>
   1a0ed:	e9 07 fa ff ff       	jmp    19af9 <__dtoa+0xdd9>
   1a0f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1a0f8:	8b 44 24 20          	mov    0x20(%rsp),%eax
   1a0fc:	83 e8 03             	sub    $0x3,%eax
   1a0ff:	83 e0 fd             	and    $0xfffffffd,%eax
   1a102:	74 47                	je     1a14b <__dtoa+0x142b>
   1a104:	8b 44 24 48          	mov    0x48(%rsp),%eax
   1a108:	e9 d0 f5 ff ff       	jmp    196dd <__dtoa+0x9bd>
   1a10d:	44 89 f2             	mov    %r14d,%edx
   1a110:	b9 01 00 00 00       	mov    $0x1,%ecx
   1a115:	e9 bf fd ff ff       	jmp    19ed9 <__dtoa+0x11b9>
   1a11a:	0f 85 73 fb ff ff    	jne    19c93 <__dtoa+0xf73>
   1a120:	f6 c2 01             	test   $0x1,%dl
   1a123:	0f 85 08 fe ff ff    	jne    19f31 <__dtoa+0x1211>
   1a129:	e9 65 fb ff ff       	jmp    19c93 <__dtoa+0xf73>
   1a12e:	44 89 f2             	mov    %r14d,%edx
   1a131:	48 89 cb             	mov    %rcx,%rbx
   1a134:	e9 4e fb ff ff       	jmp    19c87 <__dtoa+0xf67>
   1a139:	8b 44 24 20          	mov    0x20(%rsp),%eax
   1a13d:	83 e8 03             	sub    $0x3,%eax
   1a140:	83 e0 fd             	and    $0xfffffffd,%eax
   1a143:	74 06                	je     1a14b <__dtoa+0x142b>
   1a145:	8b 44 24 48          	mov    0x48(%rsp),%eax
   1a149:	eb 8b                	jmp    1a0d6 <__dtoa+0x13b6>
   1a14b:	8b 44 24 48          	mov    0x48(%rsp),%eax
   1a14f:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
   1a153:	e9 38 fc ff ff       	jmp    19d90 <__dtoa+0x1070>
   1a158:	e8 e3 99 ff ff       	call   13b40 <__stack_chk_fail>
   1a15d:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   1a162:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   1a167:	e9 0d f9 ff ff       	jmp    19a79 <__dtoa+0xd59>
   1a16c:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
   1a171:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
   1a176:	e9 f6 f8 ff ff       	jmp    19a71 <__dtoa+0xd51>
   1a17b:	0f 84 8a f2 ff ff    	je     1940b <__dtoa+0x6eb>
   1a181:	ba 3c 00 00 00       	mov    $0x3c,%edx
   1a186:	29 c2                	sub    %eax,%edx
   1a188:	89 d0                	mov    %edx,%eax
   1a18a:	e9 26 f7 ff ff       	jmp    198b5 <__dtoa+0xb95>
   1a18f:	66 49 0f 6e c6       	movq   %r14,%xmm0
   1a194:	66 49 0f 6e ce       	movq   %r14,%xmm1
   1a199:	66 0f ef ed          	pxor   %xmm5,%xmm5
   1a19d:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
   1a1a2:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
   1a1a6:	48 8d 53 01          	lea    0x1(%rbx),%rdx
   1a1aa:	f2 0f 2c c0          	cvttsd2si %xmm0,%eax
   1a1ae:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1a1b2:	f2 0f 2a c0          	cvtsi2sd %eax,%xmm0
   1a1b6:	8d 48 30             	lea    0x30(%rax),%ecx
   1a1b9:	88 0b                	mov    %cl,(%rbx)
   1a1bb:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
   1a1bf:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
   1a1c3:	66 0f 2e cd          	ucomisd %xmm5,%xmm1
   1a1c7:	7b 13                	jnp    1a1dc <__dtoa+0x14bc>
   1a1c9:	83 7c 24 2c 01       	cmpl   $0x1,0x2c(%rsp)
   1a1ce:	0f 84 ac fd ff ff    	je     19f80 <__dtoa+0x1260>
   1a1d4:	48 89 d1             	mov    %rdx,%rcx
   1a1d7:	e9 25 f9 ff ff       	jmp    19b01 <__dtoa+0xde1>
   1a1dc:	0f 84 bc fd ff ff    	je     19f9e <__dtoa+0x127e>
   1a1e2:	eb e5                	jmp    1a1c9 <__dtoa+0x14a9>
   1a1e4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1a1eb:	00 00 00 
   1a1ee:	66 90                	xchg   %ax,%ax

000000000001a1f0 <dorounding.isra.0>:
   1a1f0:	48 63 c6             	movslq %esi,%rax
   1a1f3:	80 3c 07 08          	cmpb   $0x8,(%rdi,%rax,1)
   1a1f7:	7f 17                	jg     1a210 <dorounding.isra.0+0x20>
   1a1f9:	74 05                	je     1a200 <dorounding.isra.0+0x10>
   1a1fb:	c3                   	ret    
   1a1fc:	0f 1f 40 00          	nopl   0x0(%rax)
   1a200:	83 c6 01             	add    $0x1,%esi
   1a203:	48 63 f6             	movslq %esi,%rsi
   1a206:	f6 04 37 01          	testb  $0x1,(%rdi,%rsi,1)
   1a20a:	74 ef                	je     1a1fb <dorounding.isra.0+0xb>
   1a20c:	0f 1f 40 00          	nopl   0x0(%rax)
   1a210:	48 8d 44 07 ff       	lea    -0x1(%rdi,%rax,1),%rax
   1a215:	0f b6 08             	movzbl (%rax),%ecx
   1a218:	80 f9 0f             	cmp    $0xf,%cl
   1a21b:	74 13                	je     1a230 <dorounding.isra.0+0x40>
   1a21d:	eb 21                	jmp    1a240 <dorounding.isra.0+0x50>
   1a21f:	90                   	nop
   1a220:	c6 00 00             	movb   $0x0,(%rax)
   1a223:	0f b6 48 ff          	movzbl -0x1(%rax),%ecx
   1a227:	48 83 e8 01          	sub    $0x1,%rax
   1a22b:	80 f9 0f             	cmp    $0xf,%cl
   1a22e:	75 10                	jne    1a240 <dorounding.isra.0+0x50>
   1a230:	48 39 c7             	cmp    %rax,%rdi
   1a233:	75 eb                	jne    1a220 <dorounding.isra.0+0x30>
   1a235:	c6 00 01             	movb   $0x1,(%rax)
   1a238:	83 02 04             	addl   $0x4,(%rdx)
   1a23b:	c3                   	ret    
   1a23c:	0f 1f 40 00          	nopl   0x0(%rax)
   1a240:	83 c1 01             	add    $0x1,%ecx
   1a243:	88 08                	mov    %cl,(%rax)
   1a245:	c3                   	ret    
   1a246:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1a24d:	00 00 00 

000000000001a250 <__hdtoa>:
   1a250:	f3 0f 1e fa          	endbr64 
   1a254:	41 56                	push   %r14
   1a256:	41 55                	push   %r13
   1a258:	4c 63 ee             	movslq %esi,%r13
   1a25b:	41 54                	push   %r12
   1a25d:	49 89 d4             	mov    %rdx,%r12
   1a260:	55                   	push   %rbp
   1a261:	4c 89 c5             	mov    %r8,%rbp
   1a264:	53                   	push   %rbx
   1a265:	48 89 fb             	mov    %rdi,%rbx
   1a268:	48 83 ec 10          	sub    $0x10,%rsp
   1a26c:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
   1a272:	0f b6 44 24 0f       	movzbl 0xf(%rsp),%eax
   1a277:	f2 0f 11 04 24       	movsd  %xmm0,(%rsp)
   1a27c:	c0 e8 07             	shr    $0x7,%al
   1a27f:	0f b6 c0             	movzbl %al,%eax
   1a282:	89 01                	mov    %eax,(%rcx)
   1a284:	e8 77 13 00 00       	call   1b600 <__fpclassify>
   1a289:	83 f8 04             	cmp    $0x4,%eax
   1a28c:	0f 87 61 02 00 00    	ja     1a4f3 <__hdtoa+0x2a3>
   1a292:	48 8d 15 17 cb 00 00 	lea    0xcb17(%rip),%rdx        # 26db0 <xdigs_lower.3362+0x80>
   1a299:	89 c0                	mov    %eax,%eax
   1a29b:	f2 0f 10 04 24       	movsd  (%rsp),%xmm0
   1a2a0:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   1a2a4:	48 01 d0             	add    %rdx,%rax
   1a2a7:	3e ff e0             	notrack jmp *%rax
   1a2aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1a2b0:	f2 0f 59 05 20 cb 00 	mulsd  0xcb20(%rip),%xmm0        # 26dd8 <xdigs_lower.3362+0xa8>
   1a2b7:	00 
   1a2b8:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
   1a2be:	0f b7 44 24 0e       	movzwl 0xe(%rsp),%eax
   1a2c3:	66 c1 e8 04          	shr    $0x4,%ax
   1a2c7:	25 ff 07 00 00       	and    $0x7ff,%eax
   1a2cc:	2d 00 06 00 00       	sub    $0x600,%eax
   1a2d1:	41 89 04 24          	mov    %eax,(%r12)
   1a2d5:	45 85 ed             	test   %r13d,%r13d
   1a2d8:	0f 84 32 01 00 00    	je     1a410 <__hdtoa+0x1c0>
   1a2de:	41 83 fd 0e          	cmp    $0xe,%r13d
   1a2e2:	41 be 0e 00 00 00    	mov    $0xe,%r14d
   1a2e8:	4d 0f 4d f5          	cmovge %r13,%r14
   1a2ec:	44 89 f7             	mov    %r14d,%edi
   1a2ef:	e8 bc e7 ff ff       	call   18ab0 <__rv_alloc_D2A>
   1a2f4:	48 85 c0             	test   %rax,%rax
   1a2f7:	0f 84 47 01 00 00    	je     1a444 <__hdtoa+0x1f4>
   1a2fd:	4a 8d 54 30 ff       	lea    -0x1(%rax,%r14,1),%rdx
   1a302:	48 8d 48 0d          	lea    0xd(%rax),%rcx
   1a306:	48 39 ca             	cmp    %rcx,%rdx
   1a309:	76 11                	jbe    1a31c <__hdtoa+0xcc>
   1a30b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a310:	c6 02 00             	movb   $0x0,(%rdx)
   1a313:	48 83 ea 01          	sub    $0x1,%rdx
   1a317:	48 39 ca             	cmp    %rcx,%rdx
   1a31a:	75 f4                	jne    1a310 <__hdtoa+0xc0>
   1a31c:	48 8d 78 05          	lea    0x5(%rax),%rdi
   1a320:	48 39 d0             	cmp    %rdx,%rax
   1a323:	73 29                	jae    1a34e <__hdtoa+0xfe>
   1a325:	48 39 d7             	cmp    %rdx,%rdi
   1a328:	73 24                	jae    1a34e <__hdtoa+0xfe>
   1a32a:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
   1a32e:	eb 05                	jmp    1a335 <__hdtoa+0xe5>
   1a330:	48 39 d0             	cmp    %rdx,%rax
   1a333:	73 15                	jae    1a34a <__hdtoa+0xfa>
   1a335:	89 ce                	mov    %ecx,%esi
   1a337:	48 83 ea 01          	sub    $0x1,%rdx
   1a33b:	c1 e9 04             	shr    $0x4,%ecx
   1a33e:	83 e6 0f             	and    $0xf,%esi
   1a341:	40 88 72 01          	mov    %sil,0x1(%rdx)
   1a345:	48 39 fa             	cmp    %rdi,%rdx
   1a348:	77 e6                	ja     1a330 <__hdtoa+0xe0>
   1a34a:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
   1a34e:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   1a352:	81 e1 ff ff 0f 00    	and    $0xfffff,%ecx
   1a358:	48 39 d0             	cmp    %rdx,%rax
   1a35b:	73 2e                	jae    1a38b <__hdtoa+0x13b>
   1a35d:	0f 1f 00             	nopl   (%rax)
   1a360:	89 ce                	mov    %ecx,%esi
   1a362:	48 83 ea 01          	sub    $0x1,%rdx
   1a366:	c1 f9 04             	sar    $0x4,%ecx
   1a369:	83 e6 0f             	and    $0xf,%esi
   1a36c:	81 e1 ff ff 0f 00    	and    $0xfffff,%ecx
   1a372:	40 88 72 01          	mov    %sil,0x1(%rdx)
   1a376:	48 39 d0             	cmp    %rdx,%rax
   1a379:	75 e5                	jne    1a360 <__hdtoa+0x110>
   1a37b:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   1a37f:	81 e6 00 00 f0 ff    	and    $0xfff00000,%esi
   1a385:	09 ce                	or     %ecx,%esi
   1a387:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   1a38b:	83 c9 01             	or     $0x1,%ecx
   1a38e:	88 0a                	mov    %cl,(%rdx)
   1a390:	45 85 ed             	test   %r13d,%r13d
   1a393:	0f 88 1f 01 00 00    	js     1a4b8 <__hdtoa+0x268>
   1a399:	4d 63 c5             	movslq %r13d,%r8
   1a39c:	49 01 c0             	add    %rax,%r8
   1a39f:	41 83 fd 0d          	cmp    $0xd,%r13d
   1a3a3:	7f 0a                	jg     1a3af <__hdtoa+0x15f>
   1a3a5:	41 80 38 00          	cmpb   $0x0,(%r8)
   1a3a9:	0f 85 29 01 00 00    	jne    1a4d8 <__hdtoa+0x288>
   1a3af:	48 85 ed             	test   %rbp,%rbp
   1a3b2:	74 04                	je     1a3b8 <__hdtoa+0x168>
   1a3b4:	4c 89 45 00          	mov    %r8,0x0(%rbp)
   1a3b8:	49 8d 50 ff          	lea    -0x1(%r8),%rdx
   1a3bc:	41 c6 00 00          	movb   $0x0,(%r8)
   1a3c0:	48 39 d0             	cmp    %rdx,%rax
   1a3c3:	77 7f                	ja     1a444 <__hdtoa+0x1f4>
   1a3c5:	48 8d 70 ff          	lea    -0x1(%rax),%rsi
   1a3c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a3d0:	0f be 0a             	movsbl (%rdx),%ecx
   1a3d3:	48 83 ea 01          	sub    $0x1,%rdx
   1a3d7:	0f b6 0c 0b          	movzbl (%rbx,%rcx,1),%ecx
   1a3db:	88 4a 01             	mov    %cl,0x1(%rdx)
   1a3de:	48 39 f2             	cmp    %rsi,%rdx
   1a3e1:	75 ed                	jne    1a3d0 <__hdtoa+0x180>
   1a3e3:	48 83 c4 10          	add    $0x10,%rsp
   1a3e7:	5b                   	pop    %rbx
   1a3e8:	5d                   	pop    %rbp
   1a3e9:	41 5c                	pop    %r12
   1a3eb:	41 5d                	pop    %r13
   1a3ed:	41 5e                	pop    %r14
   1a3ef:	c3                   	ret    
   1a3f0:	0f b7 44 24 0e       	movzwl 0xe(%rsp),%eax
   1a3f5:	66 c1 e8 04          	shr    $0x4,%ax
   1a3f9:	25 ff 07 00 00       	and    $0x7ff,%eax
   1a3fe:	2d fe 03 00 00       	sub    $0x3fe,%eax
   1a403:	41 89 04 24          	mov    %eax,(%r12)
   1a407:	45 85 ed             	test   %r13d,%r13d
   1a40a:	0f 85 ce fe ff ff    	jne    1a2de <__hdtoa+0x8e>
   1a410:	41 be 0e 00 00 00    	mov    $0xe,%r14d
   1a416:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   1a41c:	e9 cb fe ff ff       	jmp    1a2ec <__hdtoa+0x9c>
   1a421:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a428:	41 c7 04 24 ff ff ff 	movl   $0x7fffffff,(%r12)
   1a42f:	7f 
   1a430:	ba 03 00 00 00       	mov    $0x3,%edx
   1a435:	48 89 ee             	mov    %rbp,%rsi
   1a438:	48 8d 3d 0a c9 00 00 	lea    0xc90a(%rip),%rdi        # 26d49 <xdigs_lower.3362+0x19>
   1a43f:	e8 ac e6 ff ff       	call   18af0 <__nrv_alloc_D2A>
   1a444:	48 83 c4 10          	add    $0x10,%rsp
   1a448:	5b                   	pop    %rbx
   1a449:	5d                   	pop    %rbp
   1a44a:	41 5c                	pop    %r12
   1a44c:	41 5d                	pop    %r13
   1a44e:	41 5e                	pop    %r14
   1a450:	c3                   	ret    
   1a451:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a458:	41 c7 04 24 ff ff ff 	movl   $0x7fffffff,(%r12)
   1a45f:	7f 
   1a460:	48 89 ee             	mov    %rbp,%rsi
   1a463:	ba 08 00 00 00       	mov    $0x8,%edx
   1a468:	48 8d 3d d1 c8 00 00 	lea    0xc8d1(%rip),%rdi        # 26d40 <xdigs_lower.3362+0x10>
   1a46f:	e8 7c e6 ff ff       	call   18af0 <__nrv_alloc_D2A>
   1a474:	48 83 c4 10          	add    $0x10,%rsp
   1a478:	5b                   	pop    %rbx
   1a479:	5d                   	pop    %rbp
   1a47a:	41 5c                	pop    %r12
   1a47c:	41 5d                	pop    %r13
   1a47e:	41 5e                	pop    %r14
   1a480:	c3                   	ret    
   1a481:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a488:	41 c7 04 24 01 00 00 	movl   $0x1,(%r12)
   1a48f:	00 
   1a490:	48 89 ee             	mov    %rbp,%rsi
   1a493:	ba 01 00 00 00       	mov    $0x1,%edx
   1a498:	48 8d 3d ae c8 00 00 	lea    0xc8ae(%rip),%rdi        # 26d4d <xdigs_lower.3362+0x1d>
   1a49f:	e8 4c e6 ff ff       	call   18af0 <__nrv_alloc_D2A>
   1a4a4:	48 83 c4 10          	add    $0x10,%rsp
   1a4a8:	5b                   	pop    %rbx
   1a4a9:	5d                   	pop    %rbp
   1a4aa:	41 5c                	pop    %r12
   1a4ac:	41 5d                	pop    %r13
   1a4ae:	41 5e                	pop    %r14
   1a4b0:	c3                   	ret    
   1a4b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a4b8:	ba 0e 00 00 00       	mov    $0xe,%edx
   1a4bd:	0f 1f 00             	nopl   (%rax)
   1a4c0:	41 89 d5             	mov    %edx,%r13d
   1a4c3:	83 ea 01             	sub    $0x1,%edx
   1a4c6:	48 63 ca             	movslq %edx,%rcx
   1a4c9:	80 3c 08 00          	cmpb   $0x0,(%rax,%rcx,1)
   1a4cd:	74 f1                	je     1a4c0 <__hdtoa+0x270>
   1a4cf:	e9 c5 fe ff ff       	jmp    1a399 <__hdtoa+0x149>
   1a4d4:	0f 1f 40 00          	nopl   0x0(%rax)
   1a4d8:	48 89 c7             	mov    %rax,%rdi
   1a4db:	4c 89 e2             	mov    %r12,%rdx
   1a4de:	44 89 ee             	mov    %r13d,%esi
   1a4e1:	48 89 04 24          	mov    %rax,(%rsp)
   1a4e5:	e8 06 fd ff ff       	call   1a1f0 <dorounding.isra.0>
   1a4ea:	48 8b 04 24          	mov    (%rsp),%rax
   1a4ee:	e9 bc fe ff ff       	jmp    1a3af <__hdtoa+0x15f>
   1a4f3:	e8 3f b8 00 00       	call   25d37 <abort>
   1a4f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1a4ff:	00 

000000000001a500 <__hldtoa>:
   1a500:	f3 0f 1e fa          	endbr64 
   1a504:	41 56                	push   %r14
   1a506:	41 55                	push   %r13
   1a508:	4c 63 ee             	movslq %esi,%r13
   1a50b:	41 54                	push   %r12
   1a50d:	49 89 d4             	mov    %rdx,%r12
   1a510:	55                   	push   %rbp
   1a511:	4c 89 c5             	mov    %r8,%rbp
   1a514:	53                   	push   %rbx
   1a515:	48 89 fb             	mov    %rdi,%rbx
   1a518:	48 83 ec 20          	sub    $0x20,%rsp
   1a51c:	0f b6 44 24 59       	movzbl 0x59(%rsp),%eax
   1a521:	db 6c 24 50          	fldt   0x50(%rsp)
   1a525:	c0 e8 07             	shr    $0x7,%al
   1a528:	0f b6 c0             	movzbl %al,%eax
   1a52b:	89 01                	mov    %eax,(%rcx)
   1a52d:	d9 c0                	fld    %st(0)
   1a52f:	db 3c 24             	fstpt  (%rsp)
   1a532:	db 7c 24 10          	fstpt  0x10(%rsp)
   1a536:	e8 25 11 00 00       	call   1b660 <__fpclassifyl>
   1a53b:	5a                   	pop    %rdx
   1a53c:	59                   	pop    %rcx
   1a53d:	83 f8 04             	cmp    $0x4,%eax
   1a540:	0f 87 45 02 00 00    	ja     1a78b <__hldtoa+0x28b>
   1a546:	48 8d 15 77 c8 00 00 	lea    0xc877(%rip),%rdx        # 26dc4 <xdigs_lower.3362+0x94>
   1a54d:	db 2c 24             	fldt   (%rsp)
   1a550:	89 c0                	mov    %eax,%eax
   1a552:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   1a556:	48 01 d0             	add    %rdx,%rax
   1a559:	3e ff e0             	notrack jmp *%rax
   1a55c:	0f 1f 40 00          	nopl   0x0(%rax)
   1a560:	dc 0d 72 c8 00 00    	fmull  0xc872(%rip)        # 26dd8 <xdigs_lower.3362+0xa8>
   1a566:	db 7c 24 40          	fstpt  0x40(%rsp)
   1a56a:	0f b7 44 24 48       	movzwl 0x48(%rsp),%eax
   1a56f:	25 ff 7f 00 00       	and    $0x7fff,%eax
   1a574:	2d 03 42 00 00       	sub    $0x4203,%eax
   1a579:	41 89 04 24          	mov    %eax,(%r12)
   1a57d:	45 85 ed             	test   %r13d,%r13d
   1a580:	0f 84 28 01 00 00    	je     1a6ae <__hldtoa+0x1ae>
   1a586:	41 83 fd 10          	cmp    $0x10,%r13d
   1a58a:	41 be 10 00 00 00    	mov    $0x10,%r14d
   1a590:	4d 0f 4d f5          	cmovge %r13,%r14
   1a594:	44 89 f7             	mov    %r14d,%edi
   1a597:	e8 14 e5 ff ff       	call   18ab0 <__rv_alloc_D2A>
   1a59c:	48 85 c0             	test   %rax,%rax
   1a59f:	0f 84 39 01 00 00    	je     1a6de <__hldtoa+0x1de>
   1a5a5:	4a 8d 54 30 ff       	lea    -0x1(%rax,%r14,1),%rdx
   1a5aa:	48 8d 48 0f          	lea    0xf(%rax),%rcx
   1a5ae:	48 39 ca             	cmp    %rcx,%rdx
   1a5b1:	76 11                	jbe    1a5c4 <__hldtoa+0xc4>
   1a5b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a5b8:	c6 02 00             	movb   $0x0,(%rdx)
   1a5bb:	48 83 ea 01          	sub    $0x1,%rdx
   1a5bf:	48 39 ca             	cmp    %rcx,%rdx
   1a5c2:	75 f4                	jne    1a5b8 <__hldtoa+0xb8>
   1a5c4:	48 8d 78 07          	lea    0x7(%rax),%rdi
   1a5c8:	48 39 d0             	cmp    %rdx,%rax
   1a5cb:	73 31                	jae    1a5fe <__hldtoa+0xfe>
   1a5cd:	48 39 d7             	cmp    %rdx,%rdi
   1a5d0:	73 2c                	jae    1a5fe <__hldtoa+0xfe>
   1a5d2:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
   1a5d6:	eb 0d                	jmp    1a5e5 <__hldtoa+0xe5>
   1a5d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1a5df:	00 
   1a5e0:	48 39 d0             	cmp    %rdx,%rax
   1a5e3:	73 15                	jae    1a5fa <__hldtoa+0xfa>
   1a5e5:	89 ce                	mov    %ecx,%esi
   1a5e7:	48 83 ea 01          	sub    $0x1,%rdx
   1a5eb:	c1 e9 04             	shr    $0x4,%ecx
   1a5ee:	83 e6 0f             	and    $0xf,%esi
   1a5f1:	40 88 72 01          	mov    %sil,0x1(%rdx)
   1a5f5:	48 39 fa             	cmp    %rdi,%rdx
   1a5f8:	77 e6                	ja     1a5e0 <__hldtoa+0xe0>
   1a5fa:	89 4c 24 40          	mov    %ecx,0x40(%rsp)
   1a5fe:	8b 4c 24 44          	mov    0x44(%rsp),%ecx
   1a602:	48 39 d0             	cmp    %rdx,%rax
   1a605:	73 22                	jae    1a629 <__hldtoa+0x129>
   1a607:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1a60e:	00 00 
   1a610:	89 ce                	mov    %ecx,%esi
   1a612:	48 83 ea 01          	sub    $0x1,%rdx
   1a616:	c1 e9 04             	shr    $0x4,%ecx
   1a619:	83 e6 0f             	and    $0xf,%esi
   1a61c:	40 88 72 01          	mov    %sil,0x1(%rdx)
   1a620:	48 39 d0             	cmp    %rdx,%rax
   1a623:	75 eb                	jne    1a610 <__hldtoa+0x110>
   1a625:	89 4c 24 44          	mov    %ecx,0x44(%rsp)
   1a629:	83 c9 08             	or     $0x8,%ecx
   1a62c:	88 0a                	mov    %cl,(%rdx)
   1a62e:	45 85 ed             	test   %r13d,%r13d
   1a631:	0f 88 19 01 00 00    	js     1a750 <__hldtoa+0x250>
   1a637:	4d 63 c5             	movslq %r13d,%r8
   1a63a:	49 01 c0             	add    %rax,%r8
   1a63d:	41 83 fd 0f          	cmp    $0xf,%r13d
   1a641:	7f 0a                	jg     1a64d <__hldtoa+0x14d>
   1a643:	41 80 38 00          	cmpb   $0x0,(%r8)
   1a647:	0f 85 23 01 00 00    	jne    1a770 <__hldtoa+0x270>
   1a64d:	48 85 ed             	test   %rbp,%rbp
   1a650:	74 04                	je     1a656 <__hldtoa+0x156>
   1a652:	4c 89 45 00          	mov    %r8,0x0(%rbp)
   1a656:	49 8d 50 ff          	lea    -0x1(%r8),%rdx
   1a65a:	41 c6 00 00          	movb   $0x0,(%r8)
   1a65e:	48 39 d0             	cmp    %rdx,%rax
   1a661:	77 7b                	ja     1a6de <__hldtoa+0x1de>
   1a663:	48 8d 70 ff          	lea    -0x1(%rax),%rsi
   1a667:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1a66e:	00 00 
   1a670:	0f be 0a             	movsbl (%rdx),%ecx
   1a673:	48 83 ea 01          	sub    $0x1,%rdx
   1a677:	0f b6 0c 0b          	movzbl (%rbx,%rcx,1),%ecx
   1a67b:	88 4a 01             	mov    %cl,0x1(%rdx)
   1a67e:	48 39 f2             	cmp    %rsi,%rdx
   1a681:	75 ed                	jne    1a670 <__hldtoa+0x170>
   1a683:	48 83 c4 10          	add    $0x10,%rsp
   1a687:	5b                   	pop    %rbx
   1a688:	5d                   	pop    %rbp
   1a689:	41 5c                	pop    %r12
   1a68b:	41 5d                	pop    %r13
   1a68d:	41 5e                	pop    %r14
   1a68f:	c3                   	ret    
   1a690:	dd d8                	fstp   %st(0)
   1a692:	0f b7 44 24 48       	movzwl 0x48(%rsp),%eax
   1a697:	25 ff 7f 00 00       	and    $0x7fff,%eax
   1a69c:	2d 01 40 00 00       	sub    $0x4001,%eax
   1a6a1:	41 89 04 24          	mov    %eax,(%r12)
   1a6a5:	45 85 ed             	test   %r13d,%r13d
   1a6a8:	0f 85 d8 fe ff ff    	jne    1a586 <__hldtoa+0x86>
   1a6ae:	41 be 10 00 00 00    	mov    $0x10,%r14d
   1a6b4:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   1a6ba:	e9 d5 fe ff ff       	jmp    1a594 <__hldtoa+0x94>
   1a6bf:	90                   	nop
   1a6c0:	dd d8                	fstp   %st(0)
   1a6c2:	41 c7 04 24 ff ff ff 	movl   $0x7fffffff,(%r12)
   1a6c9:	7f 
   1a6ca:	ba 03 00 00 00       	mov    $0x3,%edx
   1a6cf:	48 89 ee             	mov    %rbp,%rsi
   1a6d2:	48 8d 3d 70 c6 00 00 	lea    0xc670(%rip),%rdi        # 26d49 <xdigs_lower.3362+0x19>
   1a6d9:	e8 12 e4 ff ff       	call   18af0 <__nrv_alloc_D2A>
   1a6de:	48 83 c4 10          	add    $0x10,%rsp
   1a6e2:	5b                   	pop    %rbx
   1a6e3:	5d                   	pop    %rbp
   1a6e4:	41 5c                	pop    %r12
   1a6e6:	41 5d                	pop    %r13
   1a6e8:	41 5e                	pop    %r14
   1a6ea:	c3                   	ret    
   1a6eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a6f0:	dd d8                	fstp   %st(0)
   1a6f2:	41 c7 04 24 ff ff ff 	movl   $0x7fffffff,(%r12)
   1a6f9:	7f 
   1a6fa:	48 89 ee             	mov    %rbp,%rsi
   1a6fd:	ba 08 00 00 00       	mov    $0x8,%edx
   1a702:	48 8d 3d 37 c6 00 00 	lea    0xc637(%rip),%rdi        # 26d40 <xdigs_lower.3362+0x10>
   1a709:	e8 e2 e3 ff ff       	call   18af0 <__nrv_alloc_D2A>
   1a70e:	48 83 c4 10          	add    $0x10,%rsp
   1a712:	5b                   	pop    %rbx
   1a713:	5d                   	pop    %rbp
   1a714:	41 5c                	pop    %r12
   1a716:	41 5d                	pop    %r13
   1a718:	41 5e                	pop    %r14
   1a71a:	c3                   	ret    
   1a71b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a720:	dd d8                	fstp   %st(0)
   1a722:	41 c7 04 24 01 00 00 	movl   $0x1,(%r12)
   1a729:	00 
   1a72a:	48 89 ee             	mov    %rbp,%rsi
   1a72d:	ba 01 00 00 00       	mov    $0x1,%edx
   1a732:	48 8d 3d 14 c6 00 00 	lea    0xc614(%rip),%rdi        # 26d4d <xdigs_lower.3362+0x1d>
   1a739:	e8 b2 e3 ff ff       	call   18af0 <__nrv_alloc_D2A>
   1a73e:	48 83 c4 10          	add    $0x10,%rsp
   1a742:	5b                   	pop    %rbx
   1a743:	5d                   	pop    %rbp
   1a744:	41 5c                	pop    %r12
   1a746:	41 5d                	pop    %r13
   1a748:	41 5e                	pop    %r14
   1a74a:	c3                   	ret    
   1a74b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a750:	ba 10 00 00 00       	mov    $0x10,%edx
   1a755:	0f 1f 00             	nopl   (%rax)
   1a758:	41 89 d5             	mov    %edx,%r13d
   1a75b:	83 ea 01             	sub    $0x1,%edx
   1a75e:	48 63 ca             	movslq %edx,%rcx
   1a761:	80 3c 08 00          	cmpb   $0x0,(%rax,%rcx,1)
   1a765:	74 f1                	je     1a758 <__hldtoa+0x258>
   1a767:	e9 cb fe ff ff       	jmp    1a637 <__hldtoa+0x137>
   1a76c:	0f 1f 40 00          	nopl   0x0(%rax)
   1a770:	48 89 c7             	mov    %rax,%rdi
   1a773:	4c 89 e2             	mov    %r12,%rdx
   1a776:	44 89 ee             	mov    %r13d,%esi
   1a779:	48 89 04 24          	mov    %rax,(%rsp)
   1a77d:	e8 6e fa ff ff       	call   1a1f0 <dorounding.isra.0>
   1a782:	48 8b 04 24          	mov    (%rsp),%rax
   1a786:	e9 c2 fe ff ff       	jmp    1a64d <__hldtoa+0x14d>
   1a78b:	e8 a7 b5 00 00       	call   25d37 <abort>

000000000001a790 <__ldtoa>:
   1a790:	f3 0f 1e fa          	endbr64 
   1a794:	41 57                	push   %r15
   1a796:	41 56                	push   %r14
   1a798:	41 89 d6             	mov    %edx,%r14d
   1a79b:	41 55                	push   %r13
   1a79d:	41 89 f5             	mov    %esi,%r13d
   1a7a0:	41 54                	push   %r12
   1a7a2:	4d 89 cc             	mov    %r9,%r12
   1a7a5:	55                   	push   %rbp
   1a7a6:	53                   	push   %rbx
   1a7a7:	48 89 cb             	mov    %rcx,%rbx
   1a7aa:	48 83 ec 48          	sub    $0x48,%rsp
   1a7ae:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1a7b5:	00 00 
   1a7b7:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1a7bc:	31 c0                	xor    %eax,%eax
   1a7be:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%rsp)
   1a7c5:	00 
   1a7c6:	48 b8 40 00 00 00 c3 	movabs $0xffffbfc300000040,%rax
   1a7cd:	bf ff ff 
   1a7d0:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1a7d5:	48 b8 c0 3f 00 00 01 	movabs $0x100003fc0,%rax
   1a7dc:	00 00 00 
   1a7df:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1a7e4:	0f b6 47 09          	movzbl 0x9(%rdi),%eax
   1a7e8:	c0 e8 07             	shr    $0x7,%al
   1a7eb:	0f b6 c0             	movzbl %al,%eax
   1a7ee:	41 89 00             	mov    %eax,(%r8)
   1a7f1:	48 8b 07             	mov    (%rdi),%rax
   1a7f4:	0f b7 6f 08          	movzwl 0x8(%rdi),%ebp
   1a7f8:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1a7fd:	ff 77 08             	push   0x8(%rdi)
   1a800:	81 e5 ff 7f 00 00    	and    $0x7fff,%ebp
   1a806:	ff 37                	push   (%rdi)
   1a808:	e8 53 0e 00 00       	call   1b660 <__fpclassifyl>
   1a80d:	5e                   	pop    %rsi
   1a80e:	5f                   	pop    %rdi
   1a80f:	83 f8 04             	cmp    $0x4,%eax
   1a812:	0f 87 c5 00 00 00    	ja     1a8dd <__ldtoa+0x14d>
   1a818:	48 8d 15 c1 c5 00 00 	lea    0xc5c1(%rip),%rdx        # 26de0 <xdigs_lower.3362+0xb0>
   1a81f:	89 c0                	mov    %eax,%eax
   1a821:	44 8d bd c2 bf ff ff 	lea    -0x403e(%rbp),%r15d
   1a828:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   1a82c:	48 01 d0             	add    %rdx,%rax
   1a82f:	3e ff e0             	notrack jmp *%rax
   1a832:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1a838:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%rsp)
   1a83f:	00 
   1a840:	44 8d bd c3 bf ff ff 	lea    -0x403d(%rbp),%r15d
   1a847:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
   1a84c:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
   1a851:	45 89 f1             	mov    %r14d,%r9d
   1a854:	45 89 e8             	mov    %r13d,%r8d
   1a857:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
   1a85c:	41 54                	push   %r12
   1a85e:	44 89 fe             	mov    %r15d,%esi
   1a861:	53                   	push   %rbx
   1a862:	e8 19 13 00 00       	call   1bb80 <__gdtoa>
   1a867:	81 3b 00 80 ff ff    	cmpl   $0xffff8000,(%rbx)
   1a86d:	5a                   	pop    %rdx
   1a86e:	59                   	pop    %rcx
   1a86f:	75 06                	jne    1a877 <__ldtoa+0xe7>
   1a871:	c7 03 ff ff ff 7f    	movl   $0x7fffffff,(%rbx)
   1a877:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   1a87c:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   1a883:	00 00 
   1a885:	75 5b                	jne    1a8e2 <__ldtoa+0x152>
   1a887:	48 83 c4 48          	add    $0x48,%rsp
   1a88b:	5b                   	pop    %rbx
   1a88c:	5d                   	pop    %rbp
   1a88d:	41 5c                	pop    %r12
   1a88f:	41 5d                	pop    %r13
   1a891:	41 5e                	pop    %r14
   1a893:	41 5f                	pop    %r15
   1a895:	c3                   	ret    
   1a896:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1a89d:	00 00 00 
   1a8a0:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%rsp)
   1a8a7:	00 
   1a8a8:	eb 9d                	jmp    1a847 <__ldtoa+0xb7>
   1a8aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1a8b0:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%rsp)
   1a8b7:	00 
   1a8b8:	eb 8d                	jmp    1a847 <__ldtoa+0xb7>
   1a8ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1a8c0:	c7 44 24 0c 03 00 00 	movl   $0x3,0xc(%rsp)
   1a8c7:	00 
   1a8c8:	e9 7a ff ff ff       	jmp    1a847 <__ldtoa+0xb7>
   1a8cd:	0f 1f 00             	nopl   (%rax)
   1a8d0:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
   1a8d7:	00 
   1a8d8:	e9 6a ff ff ff       	jmp    1a847 <__ldtoa+0xb7>
   1a8dd:	e8 55 b4 00 00       	call   25d37 <abort>
   1a8e2:	e8 59 92 ff ff       	call   13b40 <__stack_chk_fail>
   1a8e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1a8ee:	00 00 

000000000001a8f0 <__Balloc_D2A>:
   1a8f0:	f3 0f 1e fa          	endbr64 
   1a8f4:	41 54                	push   %r12
   1a8f6:	55                   	push   %rbp
   1a8f7:	53                   	push   %rbx
   1a8f8:	89 fb                	mov    %edi,%ebx
   1a8fa:	48 8d 3d 2f 8f 02 00 	lea    0x28f2f(%rip),%rdi        # 43830 <__dtoa_locks>
   1a901:	e8 6a 57 ff ff       	call   10070 <sgx_spin_lock>
   1a906:	83 fb 09             	cmp    $0x9,%ebx
   1a909:	7e 5d                	jle    1a968 <__Balloc_D2A+0x78>
   1a90b:	89 d9                	mov    %ebx,%ecx
   1a90d:	bd 01 00 00 00       	mov    $0x1,%ebp
   1a912:	d3 e5                	shl    %cl,%ebp
   1a914:	8d 45 ff             	lea    -0x1(%rbp),%eax
   1a917:	48 98                	cltq   
   1a919:	48 8d 3c 85 27 00 00 	lea    0x27(,%rax,4),%rdi
   1a920:	00 
   1a921:	48 b8 f8 ff ff ff 07 	movabs $0x7fffffff8,%rax
   1a928:	00 00 00 
   1a92b:	48 21 c7             	and    %rax,%rdi
   1a92e:	e8 fd 60 ff ff       	call   10a30 <dlmalloc>
   1a933:	49 89 c4             	mov    %rax,%r12
   1a936:	48 85 c0             	test   %rax,%rax
   1a939:	74 1f                	je     1a95a <__Balloc_D2A+0x6a>
   1a93b:	41 89 5c 24 08       	mov    %ebx,0x8(%r12)
   1a940:	41 89 6c 24 0c       	mov    %ebp,0xc(%r12)
   1a945:	48 8d 3d e4 8e 02 00 	lea    0x28ee4(%rip),%rdi        # 43830 <__dtoa_locks>
   1a94c:	e8 bf 57 ff ff       	call   10110 <sgx_spin_unlock>
   1a951:	49 c7 44 24 10 00 00 	movq   $0x0,0x10(%r12)
   1a958:	00 00 
   1a95a:	4c 89 e0             	mov    %r12,%rax
   1a95d:	5b                   	pop    %rbx
   1a95e:	5d                   	pop    %rbp
   1a95f:	41 5c                	pop    %r12
   1a961:	c3                   	ret    
   1a962:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1a968:	48 8d 05 71 8e 02 00 	lea    0x28e71(%rip),%rax        # 437e0 <freelist>
   1a96f:	48 63 d3             	movslq %ebx,%rdx
   1a972:	4c 8b 24 d0          	mov    (%rax,%rdx,8),%r12
   1a976:	4d 85 e4             	test   %r12,%r12
   1a979:	74 0d                	je     1a988 <__Balloc_D2A+0x98>
   1a97b:	49 8b 0c 24          	mov    (%r12),%rcx
   1a97f:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
   1a983:	eb c0                	jmp    1a945 <__Balloc_D2A+0x55>
   1a985:	0f 1f 00             	nopl   (%rax)
   1a988:	bd 01 00 00 00       	mov    $0x1,%ebp
   1a98d:	89 d9                	mov    %ebx,%ecx
   1a98f:	4c 8b 25 9a 77 01 00 	mov    0x1779a(%rip),%r12        # 32130 <pmem_next>
   1a996:	48 8d 15 43 85 02 00 	lea    0x28543(%rip),%rdx        # 42ee0 <private_mem>
   1a99d:	d3 e5                	shl    %cl,%ebp
   1a99f:	8d 45 ff             	lea    -0x1(%rbp),%eax
   1a9a2:	4c 89 e6             	mov    %r12,%rsi
   1a9a5:	48 98                	cltq   
   1a9a7:	48 29 d6             	sub    %rdx,%rsi
   1a9aa:	48 8d 04 85 27 00 00 	lea    0x27(,%rax,4),%rax
   1a9b1:	00 
   1a9b2:	48 89 f2             	mov    %rsi,%rdx
   1a9b5:	48 c1 e8 03          	shr    $0x3,%rax
   1a9b9:	48 c1 fa 03          	sar    $0x3,%rdx
   1a9bd:	89 c0                	mov    %eax,%eax
   1a9bf:	48 01 c2             	add    %rax,%rdx
   1a9c2:	48 81 fa 20 01 00 00 	cmp    $0x120,%rdx
   1a9c9:	0f 87 3c ff ff ff    	ja     1a90b <__Balloc_D2A+0x1b>
   1a9cf:	49 8d 04 c4          	lea    (%r12,%rax,8),%rax
   1a9d3:	48 89 05 56 77 01 00 	mov    %rax,0x17756(%rip)        # 32130 <pmem_next>
   1a9da:	e9 5c ff ff ff       	jmp    1a93b <__Balloc_D2A+0x4b>
   1a9df:	90                   	nop

000000000001a9e0 <__Bfree_D2A>:
   1a9e0:	f3 0f 1e fa          	endbr64 
   1a9e4:	48 85 ff             	test   %rdi,%rdi
   1a9e7:	74 47                	je     1aa30 <__Bfree_D2A+0x50>
   1a9e9:	55                   	push   %rbp
   1a9ea:	83 7f 08 09          	cmpl   $0x9,0x8(%rdi)
   1a9ee:	48 89 fd             	mov    %rdi,%rbp
   1a9f1:	7e 0d                	jle    1aa00 <__Bfree_D2A+0x20>
   1a9f3:	5d                   	pop    %rbp
   1a9f4:	e9 a7 7a ff ff       	jmp    124a0 <dlfree>
   1a9f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1aa00:	48 8d 3d 29 8e 02 00 	lea    0x28e29(%rip),%rdi        # 43830 <__dtoa_locks>
   1aa07:	e8 64 56 ff ff       	call   10070 <sgx_spin_lock>
   1aa0c:	48 63 55 08          	movslq 0x8(%rbp),%rdx
   1aa10:	48 8d 05 c9 8d 02 00 	lea    0x28dc9(%rip),%rax        # 437e0 <freelist>
   1aa17:	48 8d 3d 12 8e 02 00 	lea    0x28e12(%rip),%rdi        # 43830 <__dtoa_locks>
   1aa1e:	48 8b 0c d0          	mov    (%rax,%rdx,8),%rcx
   1aa22:	48 89 2c d0          	mov    %rbp,(%rax,%rdx,8)
   1aa26:	48 89 4d 00          	mov    %rcx,0x0(%rbp)
   1aa2a:	5d                   	pop    %rbp
   1aa2b:	e9 e0 56 ff ff       	jmp    10110 <sgx_spin_unlock>
   1aa30:	c3                   	ret    
   1aa31:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1aa38:	00 00 00 
   1aa3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001aa40 <__lo0bits_D2A>:
   1aa40:	f3 0f 1e fa          	endbr64 
   1aa44:	8b 07                	mov    (%rdi),%eax
   1aa46:	45 31 c0             	xor    %r8d,%r8d
   1aa49:	a8 07                	test   $0x7,%al
   1aa4b:	74 1b                	je     1aa68 <__lo0bits_D2A+0x28>
   1aa4d:	a8 01                	test   $0x1,%al
   1aa4f:	75 0e                	jne    1aa5f <__lo0bits_D2A+0x1f>
   1aa51:	a8 02                	test   $0x2,%al
   1aa53:	74 6b                	je     1aac0 <__lo0bits_D2A+0x80>
   1aa55:	d1 e8                	shr    %eax
   1aa57:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   1aa5d:	89 07                	mov    %eax,(%rdi)
   1aa5f:	44 89 c0             	mov    %r8d,%eax
   1aa62:	c3                   	ret    
   1aa63:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1aa68:	66 85 c0             	test   %ax,%ax
   1aa6b:	75 09                	jne    1aa76 <__lo0bits_D2A+0x36>
   1aa6d:	c1 e8 10             	shr    $0x10,%eax
   1aa70:	41 b8 10 00 00 00    	mov    $0x10,%r8d
   1aa76:	84 c0                	test   %al,%al
   1aa78:	75 07                	jne    1aa81 <__lo0bits_D2A+0x41>
   1aa7a:	41 83 c0 08          	add    $0x8,%r8d
   1aa7e:	c1 e8 08             	shr    $0x8,%eax
   1aa81:	a8 0f                	test   $0xf,%al
   1aa83:	75 07                	jne    1aa8c <__lo0bits_D2A+0x4c>
   1aa85:	41 83 c0 04          	add    $0x4,%r8d
   1aa89:	c1 e8 04             	shr    $0x4,%eax
   1aa8c:	a8 03                	test   $0x3,%al
   1aa8e:	75 07                	jne    1aa97 <__lo0bits_D2A+0x57>
   1aa90:	41 83 c0 02          	add    $0x2,%r8d
   1aa94:	c1 e8 02             	shr    $0x2,%eax
   1aa97:	a8 01                	test   $0x1,%al
   1aa99:	75 08                	jne    1aaa3 <__lo0bits_D2A+0x63>
   1aa9b:	41 83 c0 01          	add    $0x1,%r8d
   1aa9f:	d1 e8                	shr    %eax
   1aaa1:	74 0d                	je     1aab0 <__lo0bits_D2A+0x70>
   1aaa3:	89 07                	mov    %eax,(%rdi)
   1aaa5:	44 89 c0             	mov    %r8d,%eax
   1aaa8:	c3                   	ret    
   1aaa9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1aab0:	41 b8 20 00 00 00    	mov    $0x20,%r8d
   1aab6:	eb a7                	jmp    1aa5f <__lo0bits_D2A+0x1f>
   1aab8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1aabf:	00 
   1aac0:	c1 e8 02             	shr    $0x2,%eax
   1aac3:	41 b8 02 00 00 00    	mov    $0x2,%r8d
   1aac9:	89 07                	mov    %eax,(%rdi)
   1aacb:	44 89 c0             	mov    %r8d,%eax
   1aace:	c3                   	ret    
   1aacf:	90                   	nop

000000000001aad0 <__multadd_D2A>:
   1aad0:	f3 0f 1e fa          	endbr64 
   1aad4:	41 55                	push   %r13
   1aad6:	31 c9                	xor    %ecx,%ecx
   1aad8:	41 54                	push   %r12
   1aada:	41 89 d4             	mov    %edx,%r12d
   1aadd:	55                   	push   %rbp
   1aade:	48 89 fd             	mov    %rdi,%rbp
   1aae1:	53                   	push   %rbx
   1aae2:	48 83 ec 08          	sub    $0x8,%rsp
   1aae6:	8b 5f 14             	mov    0x14(%rdi),%ebx
   1aae9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1aaf0:	8b 44 8d 18          	mov    0x18(%rbp,%rcx,4),%eax
   1aaf4:	0f b7 d0             	movzwl %ax,%edx
   1aaf7:	c1 e8 10             	shr    $0x10,%eax
   1aafa:	0f af d6             	imul   %esi,%edx
   1aafd:	0f af c6             	imul   %esi,%eax
   1ab00:	44 01 e2             	add    %r12d,%edx
   1ab03:	89 d7                	mov    %edx,%edi
   1ab05:	0f b7 d2             	movzwl %dx,%edx
   1ab08:	c1 ef 10             	shr    $0x10,%edi
   1ab0b:	01 f8                	add    %edi,%eax
   1ab0d:	41 89 c4             	mov    %eax,%r12d
   1ab10:	c1 e0 10             	shl    $0x10,%eax
   1ab13:	01 d0                	add    %edx,%eax
   1ab15:	41 c1 ec 10          	shr    $0x10,%r12d
   1ab19:	89 44 8d 18          	mov    %eax,0x18(%rbp,%rcx,4)
   1ab1d:	48 83 c1 01          	add    $0x1,%rcx
   1ab21:	39 cb                	cmp    %ecx,%ebx
   1ab23:	7f cb                	jg     1aaf0 <__multadd_D2A+0x20>
   1ab25:	49 89 ed             	mov    %rbp,%r13
   1ab28:	45 85 e4             	test   %r12d,%r12d
   1ab2b:	74 16                	je     1ab43 <__multadd_D2A+0x73>
   1ab2d:	39 5d 0c             	cmp    %ebx,0xc(%rbp)
   1ab30:	7e 26                	jle    1ab58 <__multadd_D2A+0x88>
   1ab32:	48 63 c3             	movslq %ebx,%rax
   1ab35:	83 c3 01             	add    $0x1,%ebx
   1ab38:	49 89 ed             	mov    %rbp,%r13
   1ab3b:	44 89 64 85 18       	mov    %r12d,0x18(%rbp,%rax,4)
   1ab40:	89 5d 14             	mov    %ebx,0x14(%rbp)
   1ab43:	48 83 c4 08          	add    $0x8,%rsp
   1ab47:	4c 89 e8             	mov    %r13,%rax
   1ab4a:	5b                   	pop    %rbx
   1ab4b:	5d                   	pop    %rbp
   1ab4c:	41 5c                	pop    %r12
   1ab4e:	41 5d                	pop    %r13
   1ab50:	c3                   	ret    
   1ab51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1ab58:	8b 45 08             	mov    0x8(%rbp),%eax
   1ab5b:	8d 78 01             	lea    0x1(%rax),%edi
   1ab5e:	e8 8d fd ff ff       	call   1a8f0 <__Balloc_D2A>
   1ab63:	49 89 c5             	mov    %rax,%r13
   1ab66:	48 85 c0             	test   %rax,%rax
   1ab69:	74 d8                	je     1ab43 <__multadd_D2A+0x73>
   1ab6b:	48 63 45 14          	movslq 0x14(%rbp),%rax
   1ab6f:	48 8d 75 10          	lea    0x10(%rbp),%rsi
   1ab73:	49 8d 7d 10          	lea    0x10(%r13),%rdi
   1ab77:	48 8d 14 85 08 00 00 	lea    0x8(,%rax,4),%rdx
   1ab7e:	00 
   1ab7f:	e8 6c 8c ff ff       	call   137f0 <memcpy>
   1ab84:	48 89 ef             	mov    %rbp,%rdi
   1ab87:	4c 89 ed             	mov    %r13,%rbp
   1ab8a:	e8 51 fe ff ff       	call   1a9e0 <__Bfree_D2A>
   1ab8f:	eb a1                	jmp    1ab32 <__multadd_D2A+0x62>
   1ab91:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1ab98:	00 00 00 
   1ab9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001aba0 <__hi0bits_D2A>:
   1aba0:	f3 0f 1e fa          	endbr64 
   1aba4:	31 c0                	xor    %eax,%eax
   1aba6:	f7 c7 00 00 ff ff    	test   $0xffff0000,%edi
   1abac:	75 08                	jne    1abb6 <__hi0bits_D2A+0x16>
   1abae:	c1 e7 10             	shl    $0x10,%edi
   1abb1:	b8 10 00 00 00       	mov    $0x10,%eax
   1abb6:	f7 c7 00 00 00 ff    	test   $0xff000000,%edi
   1abbc:	75 06                	jne    1abc4 <__hi0bits_D2A+0x24>
   1abbe:	83 c0 08             	add    $0x8,%eax
   1abc1:	c1 e7 08             	shl    $0x8,%edi
   1abc4:	f7 c7 00 00 00 f0    	test   $0xf0000000,%edi
   1abca:	75 06                	jne    1abd2 <__hi0bits_D2A+0x32>
   1abcc:	83 c0 04             	add    $0x4,%eax
   1abcf:	c1 e7 04             	shl    $0x4,%edi
   1abd2:	f7 c7 00 00 00 c0    	test   $0xc0000000,%edi
   1abd8:	75 06                	jne    1abe0 <__hi0bits_D2A+0x40>
   1abda:	83 c0 02             	add    $0x2,%eax
   1abdd:	c1 e7 02             	shl    $0x2,%edi
   1abe0:	85 ff                	test   %edi,%edi
   1abe2:	78 11                	js     1abf5 <__hi0bits_D2A+0x55>
   1abe4:	83 c0 01             	add    $0x1,%eax
   1abe7:	ba 20 00 00 00       	mov    $0x20,%edx
   1abec:	81 e7 00 00 00 40    	and    $0x40000000,%edi
   1abf2:	0f 44 c2             	cmove  %edx,%eax
   1abf5:	c3                   	ret    
   1abf6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1abfd:	00 00 00 

000000000001ac00 <__i2b_D2A>:
   1ac00:	f3 0f 1e fa          	endbr64 
   1ac04:	53                   	push   %rbx
   1ac05:	89 fb                	mov    %edi,%ebx
   1ac07:	bf 01 00 00 00       	mov    $0x1,%edi
   1ac0c:	e8 df fc ff ff       	call   1a8f0 <__Balloc_D2A>
   1ac11:	48 85 c0             	test   %rax,%rax
   1ac14:	74 0a                	je     1ac20 <__i2b_D2A+0x20>
   1ac16:	89 58 18             	mov    %ebx,0x18(%rax)
   1ac19:	c7 40 14 01 00 00 00 	movl   $0x1,0x14(%rax)
   1ac20:	5b                   	pop    %rbx
   1ac21:	c3                   	ret    
   1ac22:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1ac29:	00 00 00 
   1ac2c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001ac30 <__mult_D2A>:
   1ac30:	f3 0f 1e fa          	endbr64 
   1ac34:	41 57                	push   %r15
   1ac36:	49 89 fa             	mov    %rdi,%r10
   1ac39:	41 56                	push   %r14
   1ac3b:	49 89 f6             	mov    %rsi,%r14
   1ac3e:	41 55                	push   %r13
   1ac40:	41 54                	push   %r12
   1ac42:	55                   	push   %rbp
   1ac43:	53                   	push   %rbx
   1ac44:	48 83 ec 18          	sub    $0x18,%rsp
   1ac48:	4c 63 67 14          	movslq 0x14(%rdi),%r12
   1ac4c:	4c 63 7e 14          	movslq 0x14(%rsi),%r15
   1ac50:	45 39 fc             	cmp    %r15d,%r12d
   1ac53:	7c 0f                	jl     1ac64 <__mult_D2A+0x34>
   1ac55:	44 89 f8             	mov    %r15d,%eax
   1ac58:	49 89 fe             	mov    %rdi,%r14
   1ac5b:	4d 63 fc             	movslq %r12d,%r15
   1ac5e:	49 89 f2             	mov    %rsi,%r10
   1ac61:	4c 63 e0             	movslq %eax,%r12
   1ac64:	31 ff                	xor    %edi,%edi
   1ac66:	43 8d 2c 27          	lea    (%r15,%r12,1),%ebp
   1ac6a:	41 39 6e 0c          	cmp    %ebp,0xc(%r14)
   1ac6e:	4c 89 14 24          	mov    %r10,(%rsp)
   1ac72:	40 0f 9c c7          	setl   %dil
   1ac76:	41 03 7e 08          	add    0x8(%r14),%edi
   1ac7a:	e8 71 fc ff ff       	call   1a8f0 <__Balloc_D2A>
   1ac7f:	49 89 c5             	mov    %rax,%r13
   1ac82:	48 85 c0             	test   %rax,%rax
   1ac85:	0f 84 49 01 00 00    	je     1add4 <__mult_D2A+0x1a4>
   1ac8b:	48 8d 58 18          	lea    0x18(%rax),%rbx
   1ac8f:	48 63 c5             	movslq %ebp,%rax
   1ac92:	4c 8b 14 24          	mov    (%rsp),%r10
   1ac96:	48 8d 04 83          	lea    (%rbx,%rax,4),%rax
   1ac9a:	48 89 da             	mov    %rbx,%rdx
   1ac9d:	48 39 c3             	cmp    %rax,%rbx
   1aca0:	73 15                	jae    1acb7 <__mult_D2A+0x87>
   1aca2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1aca8:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
   1acae:	48 83 c2 04          	add    $0x4,%rdx
   1acb2:	48 39 d0             	cmp    %rdx,%rax
   1acb5:	77 f1                	ja     1aca8 <__mult_D2A+0x78>
   1acb7:	49 83 c2 18          	add    $0x18,%r10
   1acbb:	49 8d 76 18          	lea    0x18(%r14),%rsi
   1acbf:	4f 8d 24 a2          	lea    (%r10,%r12,4),%r12
   1acc3:	48 89 f7             	mov    %rsi,%rdi
   1acc6:	4e 8d 1c be          	lea    (%rsi,%r15,4),%r11
   1acca:	4d 39 e2             	cmp    %r12,%r10
   1accd:	0f 83 df 00 00 00    	jae    1adb2 <__mult_D2A+0x182>
   1acd3:	4c 89 da             	mov    %r11,%rdx
   1acd6:	48 89 04 24          	mov    %rax,(%rsp)
   1acda:	48 89 f8             	mov    %rdi,%rax
   1acdd:	4c 29 f2             	sub    %r14,%rdx
   1ace0:	49 83 c6 19          	add    $0x19,%r14
   1ace4:	89 6c 24 0c          	mov    %ebp,0xc(%rsp)
   1ace8:	48 83 ea 19          	sub    $0x19,%rdx
   1acec:	48 c1 ea 02          	shr    $0x2,%rdx
   1acf0:	4d 39 f3             	cmp    %r14,%r11
   1acf3:	48 8d 0c 95 04 00 00 	lea    0x4(,%rdx,4),%rcx
   1acfa:	00 
   1acfb:	ba 04 00 00 00       	mov    $0x4,%edx
   1ad00:	48 89 d6             	mov    %rdx,%rsi
   1ad03:	48 0f 43 f1          	cmovae %rcx,%rsi
   1ad07:	48 89 f5             	mov    %rsi,%rbp
   1ad0a:	eb 15                	jmp    1ad21 <__mult_D2A+0xf1>
   1ad0c:	0f 1f 40 00          	nopl   0x0(%rax)
   1ad10:	49 83 c2 04          	add    $0x4,%r10
   1ad14:	48 83 c3 04          	add    $0x4,%rbx
   1ad18:	4d 39 d4             	cmp    %r10,%r12
   1ad1b:	0f 86 89 00 00 00    	jbe    1adaa <__mult_D2A+0x17a>
   1ad21:	45 8b 32             	mov    (%r10),%r14d
   1ad24:	45 89 f1             	mov    %r14d,%r9d
   1ad27:	41 81 e1 ff ff 00 00 	and    $0xffff,%r9d
   1ad2e:	0f 85 bc 00 00 00    	jne    1adf0 <__mult_D2A+0x1c0>
   1ad34:	41 c1 ee 10          	shr    $0x10,%r14d
   1ad38:	74 d6                	je     1ad10 <__mult_D2A+0xe0>
   1ad3a:	8b 33                	mov    (%rbx),%esi
   1ad3c:	31 d2                	xor    %edx,%edx
   1ad3e:	49 89 d8             	mov    %rbx,%r8
   1ad41:	49 89 c7             	mov    %rax,%r15
   1ad44:	89 d7                	mov    %edx,%edi
   1ad46:	41 89 f1             	mov    %esi,%r9d
   1ad49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1ad50:	41 8b 0f             	mov    (%r15),%ecx
   1ad53:	41 c1 e9 10          	shr    $0x10,%r9d
   1ad57:	66 41 89 30          	mov    %si,(%r8)
   1ad5b:	49 83 c0 04          	add    $0x4,%r8
   1ad5f:	49 83 c7 04          	add    $0x4,%r15
   1ad63:	0f b7 d1             	movzwl %cx,%edx
   1ad66:	c1 e9 10             	shr    $0x10,%ecx
   1ad69:	41 0f af d6          	imul   %r14d,%edx
   1ad6d:	41 0f af ce          	imul   %r14d,%ecx
   1ad71:	41 01 d1             	add    %edx,%r9d
   1ad74:	41 8d 14 39          	lea    (%r9,%rdi,1),%edx
   1ad78:	66 41 89 50 fe       	mov    %dx,-0x2(%r8)
   1ad7d:	45 8b 08             	mov    (%r8),%r9d
   1ad80:	c1 ea 10             	shr    $0x10,%edx
   1ad83:	41 0f b7 f1          	movzwl %r9w,%esi
   1ad87:	01 f1                	add    %esi,%ecx
   1ad89:	8d 34 11             	lea    (%rcx,%rdx,1),%esi
   1ad8c:	89 f7                	mov    %esi,%edi
   1ad8e:	c1 ef 10             	shr    $0x10,%edi
   1ad91:	4d 39 fb             	cmp    %r15,%r11
   1ad94:	77 ba                	ja     1ad50 <__mult_D2A+0x120>
   1ad96:	49 83 c2 04          	add    $0x4,%r10
   1ad9a:	89 34 2b             	mov    %esi,(%rbx,%rbp,1)
   1ad9d:	48 83 c3 04          	add    $0x4,%rbx
   1ada1:	4d 39 d4             	cmp    %r10,%r12
   1ada4:	0f 87 77 ff ff ff    	ja     1ad21 <__mult_D2A+0xf1>
   1adaa:	48 8b 04 24          	mov    (%rsp),%rax
   1adae:	8b 6c 24 0c          	mov    0xc(%rsp),%ebp
   1adb2:	85 ed                	test   %ebp,%ebp
   1adb4:	7f 0f                	jg     1adc5 <__mult_D2A+0x195>
   1adb6:	eb 18                	jmp    1add0 <__mult_D2A+0x1a0>
   1adb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1adbf:	00 
   1adc0:	83 ed 01             	sub    $0x1,%ebp
   1adc3:	74 0b                	je     1add0 <__mult_D2A+0x1a0>
   1adc5:	8b 50 fc             	mov    -0x4(%rax),%edx
   1adc8:	48 83 e8 04          	sub    $0x4,%rax
   1adcc:	85 d2                	test   %edx,%edx
   1adce:	74 f0                	je     1adc0 <__mult_D2A+0x190>
   1add0:	41 89 6d 14          	mov    %ebp,0x14(%r13)
   1add4:	48 83 c4 18          	add    $0x18,%rsp
   1add8:	4c 89 e8             	mov    %r13,%rax
   1addb:	5b                   	pop    %rbx
   1addc:	5d                   	pop    %rbp
   1addd:	41 5c                	pop    %r12
   1addf:	41 5d                	pop    %r13
   1ade1:	41 5e                	pop    %r14
   1ade3:	41 5f                	pop    %r15
   1ade5:	c3                   	ret    
   1ade6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1aded:	00 00 00 
   1adf0:	48 89 de             	mov    %rbx,%rsi
   1adf3:	49 89 c0             	mov    %rax,%r8
   1adf6:	45 31 f6             	xor    %r14d,%r14d
   1adf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1ae00:	41 8b 08             	mov    (%r8),%ecx
   1ae03:	8b 16                	mov    (%rsi),%edx
   1ae05:	49 83 c0 04          	add    $0x4,%r8
   1ae09:	48 83 c6 04          	add    $0x4,%rsi
   1ae0d:	0f b7 f9             	movzwl %cx,%edi
   1ae10:	c1 e9 10             	shr    $0x10,%ecx
   1ae13:	44 0f b7 fa          	movzwl %dx,%r15d
   1ae17:	41 0f af f9          	imul   %r9d,%edi
   1ae1b:	c1 ea 10             	shr    $0x10,%edx
   1ae1e:	41 0f af c9          	imul   %r9d,%ecx
   1ae22:	44 01 ff             	add    %r15d,%edi
   1ae25:	44 01 f7             	add    %r14d,%edi
   1ae28:	01 ca                	add    %ecx,%edx
   1ae2a:	89 f9                	mov    %edi,%ecx
   1ae2c:	66 89 7e fc          	mov    %di,-0x4(%rsi)
   1ae30:	c1 e9 10             	shr    $0x10,%ecx
   1ae33:	01 ca                	add    %ecx,%edx
   1ae35:	41 89 d6             	mov    %edx,%r14d
   1ae38:	66 89 56 fe          	mov    %dx,-0x2(%rsi)
   1ae3c:	41 c1 ee 10          	shr    $0x10,%r14d
   1ae40:	4d 39 c3             	cmp    %r8,%r11
   1ae43:	77 bb                	ja     1ae00 <__mult_D2A+0x1d0>
   1ae45:	44 89 34 2b          	mov    %r14d,(%rbx,%rbp,1)
   1ae49:	45 8b 32             	mov    (%r10),%r14d
   1ae4c:	e9 e3 fe ff ff       	jmp    1ad34 <__mult_D2A+0x104>
   1ae51:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1ae58:	00 00 00 
   1ae5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001ae60 <__pow5mult_D2A>:
   1ae60:	f3 0f 1e fa          	endbr64 
   1ae64:	89 f0                	mov    %esi,%eax
   1ae66:	41 56                	push   %r14
   1ae68:	41 55                	push   %r13
   1ae6a:	41 54                	push   %r12
   1ae6c:	55                   	push   %rbp
   1ae6d:	48 89 fd             	mov    %rdi,%rbp
   1ae70:	53                   	push   %rbx
   1ae71:	89 f3                	mov    %esi,%ebx
   1ae73:	83 e0 03             	and    $0x3,%eax
   1ae76:	0f 85 b4 00 00 00    	jne    1af30 <__pow5mult_D2A+0xd0>
   1ae7c:	c1 fb 02             	sar    $0x2,%ebx
   1ae7f:	49 89 ee             	mov    %rbp,%r14
   1ae82:	74 57                	je     1aedb <__pow5mult_D2A+0x7b>
   1ae84:	4c 8b 25 35 80 02 00 	mov    0x28035(%rip),%r12        # 42ec0 <p5s>
   1ae8b:	4d 85 e4             	test   %r12,%r12
   1ae8e:	0f 84 cd 00 00 00    	je     1af61 <__pow5mult_D2A+0x101>
   1ae94:	49 89 ee             	mov    %rbp,%r14
   1ae97:	4c 8d 2d 96 89 02 00 	lea    0x28996(%rip),%r13        # 43834 <__dtoa_locks+0x4>
   1ae9e:	eb 10                	jmp    1aeb0 <__pow5mult_D2A+0x50>
   1aea0:	d1 fb                	sar    %ebx
   1aea2:	74 37                	je     1aedb <__pow5mult_D2A+0x7b>
   1aea4:	49 8b 2c 24          	mov    (%r12),%rbp
   1aea8:	48 85 ed             	test   %rbp,%rbp
   1aeab:	74 43                	je     1aef0 <__pow5mult_D2A+0x90>
   1aead:	49 89 ec             	mov    %rbp,%r12
   1aeb0:	f6 c3 01             	test   $0x1,%bl
   1aeb3:	74 eb                	je     1aea0 <__pow5mult_D2A+0x40>
   1aeb5:	4c 89 e6             	mov    %r12,%rsi
   1aeb8:	4c 89 f7             	mov    %r14,%rdi
   1aebb:	e8 70 fd ff ff       	call   1ac30 <__mult_D2A>
   1aec0:	48 89 c5             	mov    %rax,%rbp
   1aec3:	48 85 c0             	test   %rax,%rax
   1aec6:	0f 84 86 00 00 00    	je     1af52 <__pow5mult_D2A+0xf2>
   1aecc:	4c 89 f7             	mov    %r14,%rdi
   1aecf:	49 89 ee             	mov    %rbp,%r14
   1aed2:	e8 09 fb ff ff       	call   1a9e0 <__Bfree_D2A>
   1aed7:	d1 fb                	sar    %ebx
   1aed9:	75 c9                	jne    1aea4 <__pow5mult_D2A+0x44>
   1aedb:	5b                   	pop    %rbx
   1aedc:	4c 89 f0             	mov    %r14,%rax
   1aedf:	5d                   	pop    %rbp
   1aee0:	41 5c                	pop    %r12
   1aee2:	41 5d                	pop    %r13
   1aee4:	41 5e                	pop    %r14
   1aee6:	c3                   	ret    
   1aee7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1aeee:	00 00 
   1aef0:	4c 89 ef             	mov    %r13,%rdi
   1aef3:	e8 78 51 ff ff       	call   10070 <sgx_spin_lock>
   1aef8:	49 8b 2c 24          	mov    (%r12),%rbp
   1aefc:	48 85 ed             	test   %rbp,%rbp
   1aeff:	74 0f                	je     1af10 <__pow5mult_D2A+0xb0>
   1af01:	4c 89 ef             	mov    %r13,%rdi
   1af04:	e8 07 52 ff ff       	call   10110 <sgx_spin_unlock>
   1af09:	eb a2                	jmp    1aead <__pow5mult_D2A+0x4d>
   1af0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1af10:	4c 89 e6             	mov    %r12,%rsi
   1af13:	4c 89 e7             	mov    %r12,%rdi
   1af16:	e8 15 fd ff ff       	call   1ac30 <__mult_D2A>
   1af1b:	49 89 04 24          	mov    %rax,(%r12)
   1af1f:	48 89 c5             	mov    %rax,%rbp
   1af22:	48 85 c0             	test   %rax,%rax
   1af25:	74 2b                	je     1af52 <__pow5mult_D2A+0xf2>
   1af27:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1af2e:	eb d1                	jmp    1af01 <__pow5mult_D2A+0xa1>
   1af30:	83 e8 01             	sub    $0x1,%eax
   1af33:	48 8d 15 be be 00 00 	lea    0xbebe(%rip),%rdx        # 26df8 <p05.2593>
   1af3a:	48 98                	cltq   
   1af3c:	8b 34 82             	mov    (%rdx,%rax,4),%esi
   1af3f:	31 d2                	xor    %edx,%edx
   1af41:	e8 8a fb ff ff       	call   1aad0 <__multadd_D2A>
   1af46:	48 89 c5             	mov    %rax,%rbp
   1af49:	48 85 c0             	test   %rax,%rax
   1af4c:	0f 85 2a ff ff ff    	jne    1ae7c <__pow5mult_D2A+0x1c>
   1af52:	45 31 f6             	xor    %r14d,%r14d
   1af55:	5b                   	pop    %rbx
   1af56:	5d                   	pop    %rbp
   1af57:	4c 89 f0             	mov    %r14,%rax
   1af5a:	41 5c                	pop    %r12
   1af5c:	41 5d                	pop    %r13
   1af5e:	41 5e                	pop    %r14
   1af60:	c3                   	ret    
   1af61:	48 8d 3d cc 88 02 00 	lea    0x288cc(%rip),%rdi        # 43834 <__dtoa_locks+0x4>
   1af68:	e8 03 51 ff ff       	call   10070 <sgx_spin_lock>
   1af6d:	4c 8b 25 4c 7f 02 00 	mov    0x27f4c(%rip),%r12        # 42ec0 <p5s>
   1af74:	4d 85 e4             	test   %r12,%r12
   1af77:	74 11                	je     1af8a <__pow5mult_D2A+0x12a>
   1af79:	48 8d 3d b4 88 02 00 	lea    0x288b4(%rip),%rdi        # 43834 <__dtoa_locks+0x4>
   1af80:	e8 8b 51 ff ff       	call   10110 <sgx_spin_unlock>
   1af85:	e9 0a ff ff ff       	jmp    1ae94 <__pow5mult_D2A+0x34>
   1af8a:	bf 01 00 00 00       	mov    $0x1,%edi
   1af8f:	e8 5c f9 ff ff       	call   1a8f0 <__Balloc_D2A>
   1af94:	49 89 c4             	mov    %rax,%r12
   1af97:	48 85 c0             	test   %rax,%rax
   1af9a:	74 20                	je     1afbc <__pow5mult_D2A+0x15c>
   1af9c:	48 b8 01 00 00 00 71 	movabs $0x27100000001,%rax
   1afa3:	02 00 00 
   1afa6:	4c 89 25 13 7f 02 00 	mov    %r12,0x27f13(%rip)        # 42ec0 <p5s>
   1afad:	49 89 44 24 14       	mov    %rax,0x14(%r12)
   1afb2:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
   1afb9:	00 
   1afba:	eb bd                	jmp    1af79 <__pow5mult_D2A+0x119>
   1afbc:	48 c7 05 f9 7e 02 00 	movq   $0x0,0x27ef9(%rip)        # 42ec0 <p5s>
   1afc3:	00 00 00 00 
   1afc7:	45 31 f6             	xor    %r14d,%r14d
   1afca:	e9 0c ff ff ff       	jmp    1aedb <__pow5mult_D2A+0x7b>
   1afcf:	90                   	nop

000000000001afd0 <__lshift_D2A>:
   1afd0:	f3 0f 1e fa          	endbr64 
   1afd4:	41 57                	push   %r15
   1afd6:	41 89 f7             	mov    %esi,%r15d
   1afd9:	41 56                	push   %r14
   1afdb:	41 c1 ff 05          	sar    $0x5,%r15d
   1afdf:	41 89 f6             	mov    %esi,%r14d
   1afe2:	41 55                	push   %r13
   1afe4:	41 54                	push   %r12
   1afe6:	55                   	push   %rbp
   1afe7:	48 89 fd             	mov    %rdi,%rbp
   1afea:	53                   	push   %rbx
   1afeb:	48 83 ec 08          	sub    $0x8,%rsp
   1afef:	8b 5d 14             	mov    0x14(%rbp),%ebx
   1aff2:	8b 45 0c             	mov    0xc(%rbp),%eax
   1aff5:	8b 7f 08             	mov    0x8(%rdi),%edi
   1aff8:	44 01 fb             	add    %r15d,%ebx
   1affb:	44 8d 63 01          	lea    0x1(%rbx),%r12d
   1afff:	41 39 c4             	cmp    %eax,%r12d
   1b002:	7e 0e                	jle    1b012 <__lshift_D2A+0x42>
   1b004:	0f 1f 40 00          	nopl   0x0(%rax)
   1b008:	01 c0                	add    %eax,%eax
   1b00a:	83 c7 01             	add    $0x1,%edi
   1b00d:	41 39 c4             	cmp    %eax,%r12d
   1b010:	7f f6                	jg     1b008 <__lshift_D2A+0x38>
   1b012:	e8 d9 f8 ff ff       	call   1a8f0 <__Balloc_D2A>
   1b017:	49 89 c5             	mov    %rax,%r13
   1b01a:	48 85 c0             	test   %rax,%rax
   1b01d:	0f 84 bf 00 00 00    	je     1b0e2 <__lshift_D2A+0x112>
   1b023:	48 8d 78 18          	lea    0x18(%rax),%rdi
   1b027:	45 85 ff             	test   %r15d,%r15d
   1b02a:	7e 29                	jle    1b055 <__lshift_D2A+0x85>
   1b02c:	41 8d 4f ff          	lea    -0x1(%r15),%ecx
   1b030:	48 89 fa             	mov    %rdi,%rdx
   1b033:	48 8d 44 88 1c       	lea    0x1c(%rax,%rcx,4),%rax
   1b038:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1b03f:	00 
   1b040:	48 83 c2 04          	add    $0x4,%rdx
   1b044:	c7 42 fc 00 00 00 00 	movl   $0x0,-0x4(%rdx)
   1b04b:	48 39 c2             	cmp    %rax,%rdx
   1b04e:	75 f0                	jne    1b040 <__lshift_D2A+0x70>
   1b050:	48 8d 7c 8f 04       	lea    0x4(%rdi,%rcx,4),%rdi
   1b055:	48 63 45 14          	movslq 0x14(%rbp),%rax
   1b059:	48 8d 75 18          	lea    0x18(%rbp),%rsi
   1b05d:	48 8d 04 86          	lea    (%rsi,%rax,4),%rax
   1b061:	41 83 e6 1f          	and    $0x1f,%r14d
   1b065:	0f 84 8d 00 00 00    	je     1b0f8 <__lshift_D2A+0x128>
   1b06b:	41 bb 20 00 00 00    	mov    $0x20,%r11d
   1b071:	49 89 f9             	mov    %rdi,%r9
   1b074:	45 31 c0             	xor    %r8d,%r8d
   1b077:	45 29 f3             	sub    %r14d,%r11d
   1b07a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1b080:	8b 16                	mov    (%rsi),%edx
   1b082:	44 89 f1             	mov    %r14d,%ecx
   1b085:	49 83 c1 04          	add    $0x4,%r9
   1b089:	48 83 c6 04          	add    $0x4,%rsi
   1b08d:	d3 e2                	shl    %cl,%edx
   1b08f:	44 89 d9             	mov    %r11d,%ecx
   1b092:	44 09 c2             	or     %r8d,%edx
   1b095:	41 89 51 fc          	mov    %edx,-0x4(%r9)
   1b099:	44 8b 46 fc          	mov    -0x4(%rsi),%r8d
   1b09d:	41 d3 e8             	shr    %cl,%r8d
   1b0a0:	48 39 f0             	cmp    %rsi,%rax
   1b0a3:	77 db                	ja     1b080 <__lshift_D2A+0xb0>
   1b0a5:	48 89 c2             	mov    %rax,%rdx
   1b0a8:	48 8d 4d 19          	lea    0x19(%rbp),%rcx
   1b0ac:	48 29 ea             	sub    %rbp,%rdx
   1b0af:	48 83 ea 19          	sub    $0x19,%rdx
   1b0b3:	48 c1 ea 02          	shr    $0x2,%rdx
   1b0b7:	48 39 c8             	cmp    %rcx,%rax
   1b0ba:	b8 04 00 00 00       	mov    $0x4,%eax
   1b0bf:	48 8d 14 95 04 00 00 	lea    0x4(,%rdx,4),%rdx
   1b0c6:	00 
   1b0c7:	48 0f 42 d0          	cmovb  %rax,%rdx
   1b0cb:	45 85 c0             	test   %r8d,%r8d
   1b0ce:	41 0f 45 dc          	cmovne %r12d,%ebx
   1b0d2:	44 89 04 17          	mov    %r8d,(%rdi,%rdx,1)
   1b0d6:	41 89 5d 14          	mov    %ebx,0x14(%r13)
   1b0da:	48 89 ef             	mov    %rbp,%rdi
   1b0dd:	e8 fe f8 ff ff       	call   1a9e0 <__Bfree_D2A>
   1b0e2:	48 83 c4 08          	add    $0x8,%rsp
   1b0e6:	4c 89 e8             	mov    %r13,%rax
   1b0e9:	5b                   	pop    %rbx
   1b0ea:	5d                   	pop    %rbp
   1b0eb:	41 5c                	pop    %r12
   1b0ed:	41 5d                	pop    %r13
   1b0ef:	41 5e                	pop    %r14
   1b0f1:	41 5f                	pop    %r15
   1b0f3:	c3                   	ret    
   1b0f4:	0f 1f 40 00          	nopl   0x0(%rax)
   1b0f8:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1b0f9:	48 39 f0             	cmp    %rsi,%rax
   1b0fc:	76 d8                	jbe    1b0d6 <__lshift_D2A+0x106>
   1b0fe:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1b0ff:	48 39 f0             	cmp    %rsi,%rax
   1b102:	77 f4                	ja     1b0f8 <__lshift_D2A+0x128>
   1b104:	eb d0                	jmp    1b0d6 <__lshift_D2A+0x106>
   1b106:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1b10d:	00 00 00 

000000000001b110 <__cmp_D2A>:
   1b110:	f3 0f 1e fa          	endbr64 
   1b114:	48 63 46 14          	movslq 0x14(%rsi),%rax
   1b118:	44 8b 47 14          	mov    0x14(%rdi),%r8d
   1b11c:	41 29 c0             	sub    %eax,%r8d
   1b11f:	75 39                	jne    1b15a <__cmp_D2A+0x4a>
   1b121:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1b128:	00 
   1b129:	48 83 c7 18          	add    $0x18,%rdi
   1b12d:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
   1b131:	48 8d 54 16 18       	lea    0x18(%rsi,%rdx,1),%rdx
   1b136:	eb 0d                	jmp    1b145 <__cmp_D2A+0x35>
   1b138:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1b13f:	00 
   1b140:	48 39 c7             	cmp    %rax,%rdi
   1b143:	73 15                	jae    1b15a <__cmp_D2A+0x4a>
   1b145:	48 83 e8 04          	sub    $0x4,%rax
   1b149:	48 83 ea 04          	sub    $0x4,%rdx
   1b14d:	8b 0a                	mov    (%rdx),%ecx
   1b14f:	39 08                	cmp    %ecx,(%rax)
   1b151:	74 ed                	je     1b140 <__cmp_D2A+0x30>
   1b153:	45 19 c0             	sbb    %r8d,%r8d
   1b156:	41 83 c8 01          	or     $0x1,%r8d
   1b15a:	44 89 c0             	mov    %r8d,%eax
   1b15d:	c3                   	ret    
   1b15e:	66 90                	xchg   %ax,%ax

000000000001b160 <__diff_D2A>:
   1b160:	f3 0f 1e fa          	endbr64 
   1b164:	41 56                	push   %r14
   1b166:	41 55                	push   %r13
   1b168:	41 54                	push   %r12
   1b16a:	49 89 f4             	mov    %rsi,%r12
   1b16d:	55                   	push   %rbp
   1b16e:	53                   	push   %rbx
   1b16f:	48 63 46 14          	movslq 0x14(%rsi),%rax
   1b173:	48 89 fb             	mov    %rdi,%rbx
   1b176:	8b 6f 14             	mov    0x14(%rdi),%ebp
   1b179:	29 c5                	sub    %eax,%ebp
   1b17b:	0f 85 9f 01 00 00    	jne    1b320 <__diff_D2A+0x1c0>
   1b181:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1b188:	00 
   1b189:	48 8d 4f 18          	lea    0x18(%rdi),%rcx
   1b18d:	48 8d 04 11          	lea    (%rcx,%rdx,1),%rax
   1b191:	48 8d 54 16 18       	lea    0x18(%rsi,%rdx,1),%rdx
   1b196:	eb 11                	jmp    1b1a9 <__diff_D2A+0x49>
   1b198:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1b19f:	00 
   1b1a0:	48 39 c1             	cmp    %rax,%rcx
   1b1a3:	0f 83 97 01 00 00    	jae    1b340 <__diff_D2A+0x1e0>
   1b1a9:	48 83 e8 04          	sub    $0x4,%rax
   1b1ad:	48 83 ea 04          	sub    $0x4,%rdx
   1b1b1:	8b 32                	mov    (%rdx),%esi
   1b1b3:	39 30                	cmp    %esi,(%rax)
   1b1b5:	74 e9                	je     1b1a0 <__diff_D2A+0x40>
   1b1b7:	0f 82 6e 01 00 00    	jb     1b32b <__diff_D2A+0x1cb>
   1b1bd:	8b 7b 08             	mov    0x8(%rbx),%edi
   1b1c0:	e8 2b f7 ff ff       	call   1a8f0 <__Balloc_D2A>
   1b1c5:	48 85 c0             	test   %rax,%rax
   1b1c8:	0f 84 45 01 00 00    	je     1b313 <__diff_D2A+0x1b3>
   1b1ce:	48 63 53 14          	movslq 0x14(%rbx),%rdx
   1b1d2:	4c 8d 5b 18          	lea    0x18(%rbx),%r11
   1b1d6:	49 8d 7c 24 18       	lea    0x18(%r12),%rdi
   1b1db:	89 68 10             	mov    %ebp,0x10(%rax)
   1b1de:	48 8d 70 18          	lea    0x18(%rax),%rsi
   1b1e2:	4d 89 d9             	mov    %r11,%r9
   1b1e5:	45 31 ed             	xor    %r13d,%r13d
   1b1e8:	49 89 d2             	mov    %rdx,%r10
   1b1eb:	49 8d 1c 93          	lea    (%r11,%rdx,4),%rbx
   1b1ef:	49 63 54 24 14       	movslq 0x14(%r12),%rdx
   1b1f4:	49 89 f0             	mov    %rsi,%r8
   1b1f7:	48 8d 2c 97          	lea    (%rdi,%rdx,4),%rbp
   1b1fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b200:	41 8b 11             	mov    (%r9),%edx
   1b203:	44 8b 37             	mov    (%rdi),%r14d
   1b206:	48 83 c7 04          	add    $0x4,%rdi
   1b20a:	49 83 c1 04          	add    $0x4,%r9
   1b20e:	49 83 c0 04          	add    $0x4,%r8
   1b212:	0f b7 ca             	movzwl %dx,%ecx
   1b215:	c1 ea 10             	shr    $0x10,%edx
   1b218:	44 29 e9             	sub    %r13d,%ecx
   1b21b:	45 0f b7 ee          	movzwl %r14w,%r13d
   1b21f:	41 c1 ee 10          	shr    $0x10,%r14d
   1b223:	44 29 e9             	sub    %r13d,%ecx
   1b226:	44 29 f2             	sub    %r14d,%edx
   1b229:	41 89 cd             	mov    %ecx,%r13d
   1b22c:	66 41 89 48 fc       	mov    %cx,-0x4(%r8)
   1b231:	41 c1 ed 10          	shr    $0x10,%r13d
   1b235:	41 83 e5 01          	and    $0x1,%r13d
   1b239:	44 29 ea             	sub    %r13d,%edx
   1b23c:	41 89 d5             	mov    %edx,%r13d
   1b23f:	66 41 89 50 fe       	mov    %dx,-0x2(%r8)
   1b244:	41 c1 ed 10          	shr    $0x10,%r13d
   1b248:	41 83 e5 01          	and    $0x1,%r13d
   1b24c:	48 39 fd             	cmp    %rdi,%rbp
   1b24f:	77 af                	ja     1b200 <__diff_D2A+0xa0>
   1b251:	48 89 ea             	mov    %rbp,%rdx
   1b254:	49 8d 7c 24 19       	lea    0x19(%r12),%rdi
   1b259:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   1b25f:	4c 29 e2             	sub    %r12,%rdx
   1b262:	48 83 ea 19          	sub    $0x19,%rdx
   1b266:	48 89 d1             	mov    %rdx,%rcx
   1b269:	48 83 e2 fc          	and    $0xfffffffffffffffc,%rdx
   1b26d:	48 c1 e9 02          	shr    $0x2,%rcx
   1b271:	48 39 fd             	cmp    %rdi,%rbp
   1b274:	49 0f 42 d0          	cmovb  %r8,%rdx
   1b278:	48 8d 0c 8d 04 00 00 	lea    0x4(,%rcx,4),%rcx
   1b27f:	00 
   1b280:	48 01 f2             	add    %rsi,%rdx
   1b283:	48 39 fd             	cmp    %rdi,%rbp
   1b286:	bf 04 00 00 00       	mov    $0x4,%edi
   1b28b:	48 0f 42 cf          	cmovb  %rdi,%rcx
   1b28f:	49 01 cb             	add    %rcx,%r11
   1b292:	48 01 ce             	add    %rcx,%rsi
   1b295:	4c 39 db             	cmp    %r11,%rbx
   1b298:	0f 86 c2 00 00 00    	jbe    1b360 <__diff_D2A+0x200>
   1b29e:	49 89 f1             	mov    %rsi,%r9
   1b2a1:	4d 89 d8             	mov    %r11,%r8
   1b2a4:	0f 1f 40 00          	nopl   0x0(%rax)
   1b2a8:	41 8b 10             	mov    (%r8),%edx
   1b2ab:	49 83 c0 04          	add    $0x4,%r8
   1b2af:	49 83 c1 04          	add    $0x4,%r9
   1b2b3:	0f b7 ca             	movzwl %dx,%ecx
   1b2b6:	c1 ea 10             	shr    $0x10,%edx
   1b2b9:	44 29 e9             	sub    %r13d,%ecx
   1b2bc:	89 cd                	mov    %ecx,%ebp
   1b2be:	66 41 89 49 fc       	mov    %cx,-0x4(%r9)
   1b2c3:	c1 ed 10             	shr    $0x10,%ebp
   1b2c6:	83 e5 01             	and    $0x1,%ebp
   1b2c9:	29 ea                	sub    %ebp,%edx
   1b2cb:	41 89 d5             	mov    %edx,%r13d
   1b2ce:	66 41 89 51 fe       	mov    %dx,-0x2(%r9)
   1b2d3:	41 c1 ed 10          	shr    $0x10,%r13d
   1b2d7:	41 83 e5 01          	and    $0x1,%r13d
   1b2db:	4c 39 c3             	cmp    %r8,%rbx
   1b2de:	77 c8                	ja     1b2a8 <__diff_D2A+0x148>
   1b2e0:	48 83 eb 01          	sub    $0x1,%rbx
   1b2e4:	4c 29 db             	sub    %r11,%rbx
   1b2e7:	48 c1 eb 02          	shr    $0x2,%rbx
   1b2eb:	48 8d 4c 9e 04       	lea    0x4(%rsi,%rbx,4),%rcx
   1b2f0:	48 8d 14 9e          	lea    (%rsi,%rbx,4),%rdx
   1b2f4:	8b 71 fc             	mov    -0x4(%rcx),%esi
   1b2f7:	85 f6                	test   %esi,%esi
   1b2f9:	75 14                	jne    1b30f <__diff_D2A+0x1af>
   1b2fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b300:	8b 4a fc             	mov    -0x4(%rdx),%ecx
   1b303:	48 83 ea 04          	sub    $0x4,%rdx
   1b307:	41 83 ea 01          	sub    $0x1,%r10d
   1b30b:	85 c9                	test   %ecx,%ecx
   1b30d:	74 f1                	je     1b300 <__diff_D2A+0x1a0>
   1b30f:	44 89 50 14          	mov    %r10d,0x14(%rax)
   1b313:	5b                   	pop    %rbx
   1b314:	5d                   	pop    %rbp
   1b315:	41 5c                	pop    %r12
   1b317:	41 5d                	pop    %r13
   1b319:	41 5e                	pop    %r14
   1b31b:	c3                   	ret    
   1b31c:	0f 1f 40 00          	nopl   0x0(%rax)
   1b320:	bd 00 00 00 00       	mov    $0x0,%ebp
   1b325:	0f 89 92 fe ff ff    	jns    1b1bd <__diff_D2A+0x5d>
   1b32b:	48 89 d8             	mov    %rbx,%rax
   1b32e:	bd 01 00 00 00       	mov    $0x1,%ebp
   1b333:	4c 89 e3             	mov    %r12,%rbx
   1b336:	49 89 c4             	mov    %rax,%r12
   1b339:	e9 7f fe ff ff       	jmp    1b1bd <__diff_D2A+0x5d>
   1b33e:	66 90                	xchg   %ax,%ax
   1b340:	31 ff                	xor    %edi,%edi
   1b342:	e8 a9 f5 ff ff       	call   1a8f0 <__Balloc_D2A>
   1b347:	48 85 c0             	test   %rax,%rax
   1b34a:	74 c7                	je     1b313 <__diff_D2A+0x1b3>
   1b34c:	48 c7 40 14 01 00 00 	movq   $0x1,0x14(%rax)
   1b353:	00 
   1b354:	5b                   	pop    %rbx
   1b355:	5d                   	pop    %rbp
   1b356:	41 5c                	pop    %r12
   1b358:	41 5d                	pop    %r13
   1b35a:	41 5e                	pop    %r14
   1b35c:	c3                   	ret    
   1b35d:	0f 1f 00             	nopl   (%rax)
   1b360:	48 89 f1             	mov    %rsi,%rcx
   1b363:	eb 8f                	jmp    1b2f4 <__diff_D2A+0x194>
   1b365:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1b36c:	00 00 00 
   1b36f:	90                   	nop

000000000001b370 <__b2d_D2A>:
   1b370:	f3 0f 1e fa          	endbr64 
   1b374:	48 83 ec 18          	sub    $0x18,%rsp
   1b378:	4c 8d 4f 18          	lea    0x18(%rdi),%r9
   1b37c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1b383:	00 00 
   1b385:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1b38a:	31 c0                	xor    %eax,%eax
   1b38c:	48 63 47 14          	movslq 0x14(%rdi),%rax
   1b390:	4d 8d 14 81          	lea    (%r9,%rax,4),%r10
   1b394:	45 8b 42 fc          	mov    -0x4(%r10),%r8d
   1b398:	4d 8d 5a fc          	lea    -0x4(%r10),%r11
   1b39c:	44 89 c7             	mov    %r8d,%edi
   1b39f:	e8 fc f7 ff ff       	call   1aba0 <__hi0bits_D2A>
   1b3a4:	b9 20 00 00 00       	mov    $0x20,%ecx
   1b3a9:	89 ca                	mov    %ecx,%edx
   1b3ab:	29 c2                	sub    %eax,%edx
   1b3ad:	89 16                	mov    %edx,(%rsi)
   1b3af:	83 f8 0a             	cmp    $0xa,%eax
   1b3b2:	0f 8e 98 00 00 00    	jle    1b450 <__b2d_D2A+0xe0>
   1b3b8:	83 e8 0b             	sub    $0xb,%eax
   1b3bb:	4d 39 d9             	cmp    %r11,%r9
   1b3be:	73 58                	jae    1b418 <__b2d_D2A+0xa8>
   1b3c0:	41 8b 72 f8          	mov    -0x8(%r10),%esi
   1b3c4:	85 c0                	test   %eax,%eax
   1b3c6:	74 56                	je     1b41e <__b2d_D2A+0xae>
   1b3c8:	29 c1                	sub    %eax,%ecx
   1b3ca:	44 89 c2             	mov    %r8d,%edx
   1b3cd:	41 89 f3             	mov    %esi,%r11d
   1b3d0:	89 cf                	mov    %ecx,%edi
   1b3d2:	89 c1                	mov    %eax,%ecx
   1b3d4:	d3 e2                	shl    %cl,%edx
   1b3d6:	89 f9                	mov    %edi,%ecx
   1b3d8:	41 d3 eb             	shr    %cl,%r11d
   1b3db:	89 c1                	mov    %eax,%ecx
   1b3dd:	49 8d 42 f8          	lea    -0x8(%r10),%rax
   1b3e1:	44 09 da             	or     %r11d,%edx
   1b3e4:	d3 e6                	shl    %cl,%esi
   1b3e6:	81 ca 00 00 f0 3f    	or     $0x3ff00000,%edx
   1b3ec:	48 c1 e2 20          	shl    $0x20,%rdx
   1b3f0:	49 39 c1             	cmp    %rax,%r9
   1b3f3:	73 0a                	jae    1b3ff <__b2d_D2A+0x8f>
   1b3f5:	41 8b 42 f4          	mov    -0xc(%r10),%eax
   1b3f9:	89 f9                	mov    %edi,%ecx
   1b3fb:	d3 e8                	shr    %cl,%eax
   1b3fd:	09 c6                	or     %eax,%esi
   1b3ff:	48 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%rax
   1b406:	ff ff ff 
   1b409:	48 21 c2             	and    %rax,%rdx
   1b40c:	48 09 f2             	or     %rsi,%rdx
   1b40f:	eb 1d                	jmp    1b42e <__b2d_D2A+0xbe>
   1b411:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1b418:	31 f6                	xor    %esi,%esi
   1b41a:	85 c0                	test   %eax,%eax
   1b41c:	75 6a                	jne    1b488 <__b2d_D2A+0x118>
   1b41e:	44 89 c2             	mov    %r8d,%edx
   1b421:	81 ca 00 00 f0 3f    	or     $0x3ff00000,%edx
   1b427:	48 c1 e2 20          	shl    $0x20,%rdx
   1b42b:	48 09 f2             	or     %rsi,%rdx
   1b42e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1b433:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1b43a:	00 00 
   1b43c:	66 48 0f 6e c2       	movq   %rdx,%xmm0
   1b441:	75 5d                	jne    1b4a0 <__b2d_D2A+0x130>
   1b443:	48 83 c4 18          	add    $0x18,%rsp
   1b447:	c3                   	ret    
   1b448:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1b44f:	00 
   1b450:	b9 0b 00 00 00       	mov    $0xb,%ecx
   1b455:	44 89 c2             	mov    %r8d,%edx
   1b458:	31 f6                	xor    %esi,%esi
   1b45a:	29 c1                	sub    %eax,%ecx
   1b45c:	d3 ea                	shr    %cl,%edx
   1b45e:	81 ca 00 00 f0 3f    	or     $0x3ff00000,%edx
   1b464:	48 c1 e2 20          	shl    $0x20,%rdx
   1b468:	4d 39 d9             	cmp    %r11,%r9
   1b46b:	73 06                	jae    1b473 <__b2d_D2A+0x103>
   1b46d:	41 8b 72 f8          	mov    -0x8(%r10),%esi
   1b471:	d3 ee                	shr    %cl,%esi
   1b473:	8d 48 15             	lea    0x15(%rax),%ecx
   1b476:	41 d3 e0             	shl    %cl,%r8d
   1b479:	41 09 f0             	or     %esi,%r8d
   1b47c:	4c 09 c2             	or     %r8,%rdx
   1b47f:	eb ad                	jmp    1b42e <__b2d_D2A+0xbe>
   1b481:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1b488:	44 89 c2             	mov    %r8d,%edx
   1b48b:	89 c1                	mov    %eax,%ecx
   1b48d:	31 f6                	xor    %esi,%esi
   1b48f:	d3 e2                	shl    %cl,%edx
   1b491:	81 ca 00 00 f0 3f    	or     $0x3ff00000,%edx
   1b497:	48 c1 e2 20          	shl    $0x20,%rdx
   1b49b:	e9 5f ff ff ff       	jmp    1b3ff <__b2d_D2A+0x8f>
   1b4a0:	e8 9b 86 ff ff       	call   13b40 <__stack_chk_fail>
   1b4a5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1b4ac:	00 00 00 
   1b4af:	90                   	nop

000000000001b4b0 <__d2b_D2A>:
   1b4b0:	f3 0f 1e fa          	endbr64 
   1b4b4:	41 54                	push   %r12
   1b4b6:	66 49 0f 7e c4       	movq   %xmm0,%r12
   1b4bb:	55                   	push   %rbp
   1b4bc:	48 89 fd             	mov    %rdi,%rbp
   1b4bf:	bf 01 00 00 00       	mov    $0x1,%edi
   1b4c4:	53                   	push   %rbx
   1b4c5:	48 89 f3             	mov    %rsi,%rbx
   1b4c8:	48 83 ec 10          	sub    $0x10,%rsp
   1b4cc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1b4d3:	00 00 
   1b4d5:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1b4da:	31 c0                	xor    %eax,%eax
   1b4dc:	e8 0f f4 ff ff       	call   1a8f0 <__Balloc_D2A>
   1b4e1:	49 89 c1             	mov    %rax,%r9
   1b4e4:	48 85 c0             	test   %rax,%rax
   1b4e7:	0f 84 9b 00 00 00    	je     1b588 <__d2b_D2A+0xd8>
   1b4ed:	4c 89 e2             	mov    %r12,%rdx
   1b4f0:	44 89 24 24          	mov    %r12d,(%rsp)
   1b4f4:	48 c1 ea 20          	shr    $0x20,%rdx
   1b4f8:	89 d1                	mov    %edx,%ecx
   1b4fa:	c1 ea 14             	shr    $0x14,%edx
   1b4fd:	81 e1 ff ff 0f 00    	and    $0xfffff,%ecx
   1b503:	89 ce                	mov    %ecx,%esi
   1b505:	81 ce 00 00 10 00    	or     $0x100000,%esi
   1b50b:	81 e2 ff 07 00 00    	and    $0x7ff,%edx
   1b511:	0f 45 ce             	cmovne %esi,%ecx
   1b514:	89 4c 24 04          	mov    %ecx,0x4(%rsp)
   1b518:	45 85 e4             	test   %r12d,%r12d
   1b51b:	0f 84 87 00 00 00    	je     1b5a8 <__d2b_D2A+0xf8>
   1b521:	48 89 e7             	mov    %rsp,%rdi
   1b524:	e8 17 f5 ff ff       	call   1aa40 <__lo0bits_D2A>
   1b529:	85 c0                	test   %eax,%eax
   1b52b:	0f 84 b7 00 00 00    	je     1b5e8 <__d2b_D2A+0x138>
   1b531:	8b 74 24 04          	mov    0x4(%rsp),%esi
   1b535:	b9 20 00 00 00       	mov    $0x20,%ecx
   1b53a:	29 c1                	sub    %eax,%ecx
   1b53c:	89 f7                	mov    %esi,%edi
   1b53e:	d3 e7                	shl    %cl,%edi
   1b540:	8b 0c 24             	mov    (%rsp),%ecx
   1b543:	09 f9                	or     %edi,%ecx
   1b545:	41 89 49 18          	mov    %ecx,0x18(%r9)
   1b549:	89 c1                	mov    %eax,%ecx
   1b54b:	d3 ee                	shr    %cl,%esi
   1b54d:	89 74 24 04          	mov    %esi,0x4(%rsp)
   1b551:	89 f1                	mov    %esi,%ecx
   1b553:	85 c9                	test   %ecx,%ecx
   1b555:	41 89 49 1c          	mov    %ecx,0x1c(%r9)
   1b559:	0f 95 c1             	setne  %cl
   1b55c:	0f b6 c9             	movzbl %cl,%ecx
   1b55f:	83 c1 01             	add    $0x1,%ecx
   1b562:	41 89 49 14          	mov    %ecx,0x14(%r9)
   1b566:	85 d2                	test   %edx,%edx
   1b568:	75 64                	jne    1b5ce <__d2b_D2A+0x11e>
   1b56a:	2d 32 04 00 00       	sub    $0x432,%eax
   1b56f:	89 45 00             	mov    %eax,0x0(%rbp)
   1b572:	8d 41 ff             	lea    -0x1(%rcx),%eax
   1b575:	48 98                	cltq   
   1b577:	41 8b 7c 81 18       	mov    0x18(%r9,%rax,4),%edi
   1b57c:	e8 1f f6 ff ff       	call   1aba0 <__hi0bits_D2A>
   1b581:	c1 e1 05             	shl    $0x5,%ecx
   1b584:	29 c1                	sub    %eax,%ecx
   1b586:	89 0b                	mov    %ecx,(%rbx)
   1b588:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1b58d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1b594:	00 00 
   1b596:	75 60                	jne    1b5f8 <__d2b_D2A+0x148>
   1b598:	48 83 c4 10          	add    $0x10,%rsp
   1b59c:	4c 89 c8             	mov    %r9,%rax
   1b59f:	5b                   	pop    %rbx
   1b5a0:	5d                   	pop    %rbp
   1b5a1:	41 5c                	pop    %r12
   1b5a3:	c3                   	ret    
   1b5a4:	0f 1f 40 00          	nopl   0x0(%rax)
   1b5a8:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
   1b5ad:	e8 8e f4 ff ff       	call   1aa40 <__lo0bits_D2A>
   1b5b2:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
   1b5b6:	41 c7 41 14 01 00 00 	movl   $0x1,0x14(%r9)
   1b5bd:	00 
   1b5be:	83 c0 20             	add    $0x20,%eax
   1b5c1:	41 89 49 18          	mov    %ecx,0x18(%r9)
   1b5c5:	b9 01 00 00 00       	mov    $0x1,%ecx
   1b5ca:	85 d2                	test   %edx,%edx
   1b5cc:	74 9c                	je     1b56a <__d2b_D2A+0xba>
   1b5ce:	8d 94 02 cd fb ff ff 	lea    -0x433(%rdx,%rax,1),%edx
   1b5d5:	89 55 00             	mov    %edx,0x0(%rbp)
   1b5d8:	ba 35 00 00 00       	mov    $0x35,%edx
   1b5dd:	29 c2                	sub    %eax,%edx
   1b5df:	89 13                	mov    %edx,(%rbx)
   1b5e1:	eb a5                	jmp    1b588 <__d2b_D2A+0xd8>
   1b5e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b5e8:	8b 0c 24             	mov    (%rsp),%ecx
   1b5eb:	41 89 49 18          	mov    %ecx,0x18(%r9)
   1b5ef:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
   1b5f3:	e9 5b ff ff ff       	jmp    1b553 <__d2b_D2A+0xa3>
   1b5f8:	e8 43 85 ff ff       	call   13b40 <__stack_chk_fail>
   1b5fd:	0f 1f 00             	nopl   (%rax)

000000000001b600 <__fpclassify>:
   1b600:	f3 0f 1e fa          	endbr64 
   1b604:	f2 0f 11 44 24 f8    	movsd  %xmm0,-0x8(%rsp)
   1b60a:	0f b7 44 24 fe       	movzwl -0x2(%rsp),%eax
   1b60f:	66 25 f0 7f          	and    $0x7ff0,%ax
   1b613:	75 23                	jne    1b638 <__fpclassify+0x38>
   1b615:	8b 44 24 fc          	mov    -0x4(%rsp),%eax
   1b619:	45 31 c0             	xor    %r8d,%r8d
   1b61c:	25 ff ff 0f 00       	and    $0xfffff,%eax
   1b621:	0b 44 24 f8          	or     -0x8(%rsp),%eax
   1b625:	41 0f 95 c0          	setne  %r8b
   1b629:	41 83 c0 02          	add    $0x2,%r8d
   1b62d:	44 89 c0             	mov    %r8d,%eax
   1b630:	c3                   	ret    
   1b631:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1b638:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   1b63e:	66 3d f0 7f          	cmp    $0x7ff0,%ax
   1b642:	75 e9                	jne    1b62d <__fpclassify+0x2d>
   1b644:	8b 44 24 fc          	mov    -0x4(%rsp),%eax
   1b648:	45 31 c0             	xor    %r8d,%r8d
   1b64b:	25 ff ff 0f 00       	and    $0xfffff,%eax
   1b650:	0b 44 24 f8          	or     -0x8(%rsp),%eax
   1b654:	41 0f 94 c0          	sete   %r8b
   1b658:	44 89 c0             	mov    %r8d,%eax
   1b65b:	c3                   	ret    
   1b65c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001b660 <__fpclassifyl>:
   1b660:	f3 0f 1e fa          	endbr64 
   1b664:	0f b7 44 24 10       	movzwl 0x10(%rsp),%eax
   1b669:	8b 54 24 0c          	mov    0xc(%rsp),%edx
   1b66d:	66 25 ff 7f          	and    $0x7fff,%ax
   1b671:	75 1d                	jne    1b690 <__fpclassifyl+0x30>
   1b673:	45 31 c0             	xor    %r8d,%r8d
   1b676:	0b 54 24 08          	or     0x8(%rsp),%edx
   1b67a:	41 0f 95 c0          	setne  %r8b
   1b67e:	41 83 c0 02          	add    $0x2,%r8d
   1b682:	44 89 c0             	mov    %r8d,%eax
   1b685:	c3                   	ret    
   1b686:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1b68d:	00 00 00 
   1b690:	41 b8 04 00 00 00    	mov    $0x4,%r8d
   1b696:	66 3d ff 7f          	cmp    $0x7fff,%ax
   1b69a:	75 e6                	jne    1b682 <__fpclassifyl+0x22>
   1b69c:	81 e2 ff ff ff 7f    	and    $0x7fffffff,%edx
   1b6a2:	45 31 c0             	xor    %r8d,%r8d
   1b6a5:	0b 54 24 08          	or     0x8(%rsp),%edx
   1b6a9:	41 0f 94 c0          	sete   %r8b
   1b6ad:	44 89 c0             	mov    %r8d,%eax
   1b6b0:	c3                   	ret    
   1b6b1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1b6b8:	00 00 00 
   1b6bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001b6c0 <mbrtowc>:
   1b6c0:	f3 0f 1e fa          	endbr64 
   1b6c4:	48 85 f6             	test   %rsi,%rsi
   1b6c7:	74 27                	je     1b6f0 <mbrtowc+0x30>
   1b6c9:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
   1b6d0:	48 85 d2             	test   %rdx,%rdx
   1b6d3:	74 1d                	je     1b6f2 <mbrtowc+0x32>
   1b6d5:	0f b6 06             	movzbl (%rsi),%eax
   1b6d8:	48 85 ff             	test   %rdi,%rdi
   1b6db:	74 05                	je     1b6e2 <mbrtowc+0x22>
   1b6dd:	89 07                	mov    %eax,(%rdi)
   1b6df:	0f b6 06             	movzbl (%rsi),%eax
   1b6e2:	84 c0                	test   %al,%al
   1b6e4:	0f 95 c0             	setne  %al
   1b6e7:	0f b6 c0             	movzbl %al,%eax
   1b6ea:	c3                   	ret    
   1b6eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b6f0:	31 c0                	xor    %eax,%eax
   1b6f2:	c3                   	ret    
   1b6f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1b6fa:	00 00 00 
   1b6fd:	0f 1f 00             	nopl   (%rax)

000000000001b700 <wcrtomb>:
   1b700:	f3 0f 1e fa          	endbr64 
   1b704:	48 85 ff             	test   %rdi,%rdi
   1b707:	74 17                	je     1b720 <wcrtomb+0x20>
   1b709:	81 fe ff 00 00 00    	cmp    $0xff,%esi
   1b70f:	77 1f                	ja     1b730 <wcrtomb+0x30>
   1b711:	40 88 37             	mov    %sil,(%rdi)
   1b714:	b8 01 00 00 00       	mov    $0x1,%eax
   1b719:	c3                   	ret    
   1b71a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1b720:	b8 01 00 00 00       	mov    $0x1,%eax
   1b725:	c3                   	ret    
   1b726:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1b72d:	00 00 00 
   1b730:	48 83 ec 08          	sub    $0x8,%rsp
   1b734:	e8 27 8d ff ff       	call   14460 <__errno>
   1b739:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   1b73f:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1b746:	48 83 c4 08          	add    $0x8,%rsp
   1b74a:	c3                   	ret    
   1b74b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001b750 <wcsnrtombs>:
   1b750:	f3 0f 1e fa          	endbr64 
   1b754:	48 83 ec 08          	sub    $0x8,%rsp
   1b758:	48 85 ff             	test   %rdi,%rdi
   1b75b:	74 63                	je     1b7c0 <wcsnrtombs+0x70>
   1b75d:	48 39 ca             	cmp    %rcx,%rdx
   1b760:	48 0f 46 ca          	cmovbe %rdx,%rcx
   1b764:	31 c0                	xor    %eax,%eax
   1b766:	49 89 c8             	mov    %rcx,%r8
   1b769:	48 85 c9             	test   %rcx,%rcx
   1b76c:	75 1e                	jne    1b78c <wcsnrtombs+0x3c>
   1b76e:	e9 85 00 00 00       	jmp    1b7f8 <wcsnrtombs+0xa8>
   1b773:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b778:	88 14 07             	mov    %dl,(%rdi,%rax,1)
   1b77b:	85 d2                	test   %edx,%edx
   1b77d:	0f 84 85 00 00 00    	je     1b808 <wcsnrtombs+0xb8>
   1b783:	48 83 c0 01          	add    $0x1,%rax
   1b787:	49 39 c0             	cmp    %rax,%r8
   1b78a:	74 64                	je     1b7f0 <wcsnrtombs+0xa0>
   1b78c:	48 8b 16             	mov    (%rsi),%rdx
   1b78f:	48 8d 0c 82          	lea    (%rdx,%rax,4),%rcx
   1b793:	8b 11                	mov    (%rcx),%edx
   1b795:	81 fa ff 00 00 00    	cmp    $0xff,%edx
   1b79b:	76 db                	jbe    1b778 <wcsnrtombs+0x28>
   1b79d:	48 89 0e             	mov    %rcx,(%rsi)
   1b7a0:	e8 bb 8c ff ff       	call   14460 <__errno>
   1b7a5:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
   1b7ac:	c7 00 54 00 00 00    	movl   $0x54,(%rax)
   1b7b2:	4c 89 c0             	mov    %r8,%rax
   1b7b5:	48 83 c4 08          	add    $0x8,%rsp
   1b7b9:	c3                   	ret    
   1b7ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1b7c0:	48 85 d2             	test   %rdx,%rdx
   1b7c3:	74 55                	je     1b81a <wcsnrtombs+0xca>
   1b7c5:	48 8b 0e             	mov    (%rsi),%rcx
   1b7c8:	45 31 c0             	xor    %r8d,%r8d
   1b7cb:	eb 10                	jmp    1b7dd <wcsnrtombs+0x8d>
   1b7cd:	0f 1f 00             	nopl   (%rax)
   1b7d0:	85 c0                	test   %eax,%eax
   1b7d2:	74 de                	je     1b7b2 <wcsnrtombs+0x62>
   1b7d4:	49 83 c0 01          	add    $0x1,%r8
   1b7d8:	4c 39 c2             	cmp    %r8,%rdx
   1b7db:	74 d5                	je     1b7b2 <wcsnrtombs+0x62>
   1b7dd:	42 8b 04 81          	mov    (%rcx,%r8,4),%eax
   1b7e1:	3d ff 00 00 00       	cmp    $0xff,%eax
   1b7e6:	76 e8                	jbe    1b7d0 <wcsnrtombs+0x80>
   1b7e8:	eb b6                	jmp    1b7a0 <wcsnrtombs+0x50>
   1b7ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1b7f0:	4a 8d 04 85 00 00 00 	lea    0x0(,%r8,4),%rax
   1b7f7:	00 
   1b7f8:	48 01 06             	add    %rax,(%rsi)
   1b7fb:	4c 89 c0             	mov    %r8,%rax
   1b7fe:	48 83 c4 08          	add    $0x8,%rsp
   1b802:	c3                   	ret    
   1b803:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b808:	49 89 c0             	mov    %rax,%r8
   1b80b:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
   1b812:	48 83 c4 08          	add    $0x8,%rsp
   1b816:	4c 89 c0             	mov    %r8,%rax
   1b819:	c3                   	ret    
   1b81a:	45 31 c0             	xor    %r8d,%r8d
   1b81d:	eb 93                	jmp    1b7b2 <wcsnrtombs+0x62>
   1b81f:	90                   	nop

000000000001b820 <wcsrtombs>:
   1b820:	f3 0f 1e fa          	endbr64 
   1b824:	49 89 c8             	mov    %rcx,%r8
   1b827:	48 89 d1             	mov    %rdx,%rcx
   1b82a:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   1b831:	e9 1a ff ff ff       	jmp    1b750 <wcsnrtombs>
   1b836:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1b83d:	00 00 00 

000000000001b840 <__sfvwrite>:
   1b840:	f3 0f 1e fa          	endbr64 
   1b844:	8b 46 0c             	mov    0xc(%rsi),%eax
   1b847:	85 c0                	test   %eax,%eax
   1b849:	0f 84 91 02 00 00    	je     1bae0 <__sfvwrite+0x2a0>
   1b84f:	41 57                	push   %r15
   1b851:	49 89 f0             	mov    %rsi,%r8
   1b854:	41 56                	push   %r14
   1b856:	41 55                	push   %r13
   1b858:	41 54                	push   %r12
   1b85a:	55                   	push   %rbp
   1b85b:	48 89 fd             	mov    %rdi,%rbp
   1b85e:	53                   	push   %rbx
   1b85f:	48 83 ec 28          	sub    $0x28,%rsp
   1b863:	4c 8b 26             	mov    (%rsi),%r12
   1b866:	0f b7 47 10          	movzwl 0x10(%rdi),%eax
   1b86a:	4d 8b 2c 24          	mov    (%r12),%r13
   1b86e:	49 8b 5c 24 08       	mov    0x8(%r12),%rbx
   1b873:	49 83 c4 10          	add    $0x10,%r12
   1b877:	a8 02                	test   $0x2,%al
   1b879:	0f 85 3d 02 00 00    	jne    1babc <__sfvwrite+0x27c>
   1b87f:	a8 01                	test   $0x1,%al
   1b881:	0f 84 36 01 00 00    	je     1b9bd <__sfvwrite+0x17d>
   1b887:	45 31 ff             	xor    %r15d,%r15d
   1b88a:	31 d2                	xor    %edx,%edx
   1b88c:	eb 7d                	jmp    1b90b <__sfvwrite+0xcb>
   1b88e:	66 90                	xchg   %ax,%ax
   1b890:	85 d2                	test   %edx,%edx
   1b892:	0f 84 8a 00 00 00    	je     1b922 <__sfvwrite+0xe2>
   1b898:	4d 63 f7             	movslq %r15d,%r14
   1b89b:	8b 45 20             	mov    0x20(%rbp),%eax
   1b89e:	8b 55 0c             	mov    0xc(%rbp),%edx
   1b8a1:	49 39 de             	cmp    %rbx,%r14
   1b8a4:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   1b8a8:	4c 0f 47 f3          	cmova  %rbx,%r14
   1b8ac:	01 c2                	add    %eax,%edx
   1b8ae:	44 39 f2             	cmp    %r14d,%edx
   1b8b1:	7d 0a                	jge    1b8bd <__sfvwrite+0x7d>
   1b8b3:	48 3b 7d 18          	cmp    0x18(%rbp),%rdi
   1b8b7:	0f 87 fb 01 00 00    	ja     1bab8 <__sfvwrite+0x278>
   1b8bd:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   1b8c2:	44 39 f0             	cmp    %r14d,%eax
   1b8c5:	0f 8e ed 01 00 00    	jle    1bab8 <__sfvwrite+0x278>
   1b8cb:	49 63 d6             	movslq %r14d,%rdx
   1b8ce:	4c 89 ee             	mov    %r13,%rsi
   1b8d1:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   1b8d6:	e8 15 7f ff ff       	call   137f0 <memcpy>
   1b8db:	44 29 75 0c          	sub    %r14d,0xc(%rbp)
   1b8df:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   1b8e4:	48 01 55 00          	add    %rdx,0x0(%rbp)
   1b8e8:	45 29 f7             	sub    %r14d,%r15d
   1b8eb:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   1b8f0:	0f 84 c2 01 00 00    	je     1bab8 <__sfvwrite+0x278>
   1b8f6:	49 01 d5             	add    %rdx,%r13
   1b8f9:	48 29 d3             	sub    %rdx,%rbx
   1b8fc:	45 29 70 0c          	sub    %r14d,0xc(%r8)
   1b900:	ba 01 00 00 00       	mov    $0x1,%edx
   1b905:	0f 84 22 01 00 00    	je     1ba2d <__sfvwrite+0x1ed>
   1b90b:	48 85 db             	test   %rbx,%rbx
   1b90e:	75 80                	jne    1b890 <__sfvwrite+0x50>
   1b910:	49 8b 5c 24 08       	mov    0x8(%r12),%rbx
   1b915:	4d 8b 2c 24          	mov    (%r12),%r13
   1b919:	49 83 c4 10          	add    $0x10,%r12
   1b91d:	48 85 db             	test   %rbx,%rbx
   1b920:	74 ee                	je     1b910 <__sfvwrite+0xd0>
   1b922:	48 89 da             	mov    %rbx,%rdx
   1b925:	be 0a 00 00 00       	mov    $0xa,%esi
   1b92a:	4c 89 ef             	mov    %r13,%rdi
   1b92d:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   1b932:	e8 59 d1 ff ff       	call   18a90 <memchr>
   1b937:	8d 53 01             	lea    0x1(%rbx),%edx
   1b93a:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   1b93f:	4c 8d 78 01          	lea    0x1(%rax),%r15
   1b943:	4d 29 ef             	sub    %r13,%r15
   1b946:	48 85 c0             	test   %rax,%rax
   1b949:	44 0f 44 fa          	cmove  %edx,%r15d
   1b94d:	e9 46 ff ff ff       	jmp    1b898 <__sfvwrite+0x58>
   1b952:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1b958:	89 c2                	mov    %eax,%edx
   1b95a:	66 81 e2 00 42       	and    $0x4200,%dx
   1b95f:	66 81 fa 00 42       	cmp    $0x4200,%dx
   1b964:	0f 84 d6 00 00 00    	je     1ba40 <__sfvwrite+0x200>
   1b96a:	f6 c4 02             	test   $0x2,%ah
   1b96d:	74 71                	je     1b9e0 <__sfvwrite+0x1a0>
   1b96f:	48 63 d1             	movslq %ecx,%rdx
   1b972:	41 89 df             	mov    %ebx,%r15d
   1b975:	4c 63 f3             	movslq %ebx,%r14
   1b978:	48 39 d3             	cmp    %rdx,%rbx
   1b97b:	73 05                	jae    1b982 <__sfvwrite+0x142>
   1b97d:	4c 89 f2             	mov    %r14,%rdx
   1b980:	89 d9                	mov    %ebx,%ecx
   1b982:	4c 89 ee             	mov    %r13,%rsi
   1b985:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
   1b98a:	4d 01 f5             	add    %r14,%r13
   1b98d:	4c 29 f3             	sub    %r14,%rbx
   1b990:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
   1b994:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1b999:	e8 52 7e ff ff       	call   137f0 <memcpy>
   1b99e:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   1b9a3:	8b 4c 24 10          	mov    0x10(%rsp),%ecx
   1b9a7:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1b9ac:	29 4d 0c             	sub    %ecx,0xc(%rbp)
   1b9af:	48 01 55 00          	add    %rdx,0x0(%rbp)
   1b9b3:	45 29 78 0c          	sub    %r15d,0xc(%r8)
   1b9b7:	74 74                	je     1ba2d <__sfvwrite+0x1ed>
   1b9b9:	0f b7 45 10          	movzwl 0x10(%rbp),%eax
   1b9bd:	8b 4d 0c             	mov    0xc(%rbp),%ecx
   1b9c0:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
   1b9c4:	48 85 db             	test   %rbx,%rbx
   1b9c7:	75 8f                	jne    1b958 <__sfvwrite+0x118>
   1b9c9:	4d 8b 2c 24          	mov    (%r12),%r13
   1b9cd:	49 8b 5c 24 08       	mov    0x8(%r12),%rbx
   1b9d2:	49 83 c4 10          	add    $0x10,%r12
   1b9d6:	eb ec                	jmp    1b9c4 <__sfvwrite+0x184>
   1b9d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1b9df:	00 
   1b9e0:	48 39 7d 18          	cmp    %rdi,0x18(%rbp)
   1b9e4:	73 0c                	jae    1b9f2 <__sfvwrite+0x1b2>
   1b9e6:	48 63 c9             	movslq %ecx,%rcx
   1b9e9:	48 39 cb             	cmp    %rcx,%rbx
   1b9ec:	0f 87 ca 00 00 00    	ja     1babc <__sfvwrite+0x27c>
   1b9f2:	48 63 55 20          	movslq 0x20(%rbp),%rdx
   1b9f6:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   1b9fb:	48 39 d3             	cmp    %rdx,%rbx
   1b9fe:	0f 83 b8 00 00 00    	jae    1babc <__sfvwrite+0x27c>
   1ba04:	4c 63 f3             	movslq %ebx,%r14
   1ba07:	4c 89 ee             	mov    %r13,%rsi
   1ba0a:	41 89 df             	mov    %ebx,%r15d
   1ba0d:	4c 89 f2             	mov    %r14,%rdx
   1ba10:	4d 01 f5             	add    %r14,%r13
   1ba13:	e8 d8 7d ff ff       	call   137f0 <memcpy>
   1ba18:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   1ba1d:	29 5d 0c             	sub    %ebx,0xc(%rbp)
   1ba20:	4c 29 f3             	sub    %r14,%rbx
   1ba23:	4c 01 75 00          	add    %r14,0x0(%rbp)
   1ba27:	45 29 78 0c          	sub    %r15d,0xc(%r8)
   1ba2b:	75 8c                	jne    1b9b9 <__sfvwrite+0x179>
   1ba2d:	48 83 c4 28          	add    $0x28,%rsp
   1ba31:	31 c0                	xor    %eax,%eax
   1ba33:	5b                   	pop    %rbx
   1ba34:	5d                   	pop    %rbp
   1ba35:	41 5c                	pop    %r12
   1ba37:	41 5d                	pop    %r13
   1ba39:	41 5e                	pop    %r14
   1ba3b:	41 5f                	pop    %r15
   1ba3d:	c3                   	ret    
   1ba3e:	66 90                	xchg   %ax,%ax
   1ba40:	48 63 d1             	movslq %ecx,%rdx
   1ba43:	48 39 d3             	cmp    %rdx,%rbx
   1ba46:	0f 86 1e ff ff ff    	jbe    1b96a <__sfvwrite+0x12a>
   1ba4c:	4c 8b 4d 18          	mov    0x18(%rbp),%r9
   1ba50:	44 8b 75 20          	mov    0x20(%rbp),%r14d
   1ba54:	4c 29 cf             	sub    %r9,%rdi
   1ba57:	49 89 ff             	mov    %rdi,%r15
   1ba5a:	48 8d 0c 3b          	lea    (%rbx,%rdi,1),%rcx
   1ba5e:	66 90                	xchg   %ax,%ax
   1ba60:	43 8d 04 36          	lea    (%r14,%r14,1),%eax
   1ba64:	44 8d 70 01          	lea    0x1(%rax),%r14d
   1ba68:	49 63 d6             	movslq %r14d,%rdx
   1ba6b:	48 39 ca             	cmp    %rcx,%rdx
   1ba6e:	72 f0                	jb     1ba60 <__sfvwrite+0x220>
   1ba70:	83 c0 02             	add    $0x2,%eax
   1ba73:	4c 89 cf             	mov    %r9,%rdi
   1ba76:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   1ba7b:	48 63 f0             	movslq %eax,%rsi
   1ba7e:	e8 ad 74 ff ff       	call   12f30 <dlrealloc>
   1ba83:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   1ba88:	48 85 c0             	test   %rax,%rax
   1ba8b:	74 2b                	je     1bab8 <__sfvwrite+0x278>
   1ba8d:	8b 4d 0c             	mov    0xc(%rbp),%ecx
   1ba90:	4a 8d 3c 38          	lea    (%rax,%r15,1),%rdi
   1ba94:	48 89 45 18          	mov    %rax,0x18(%rbp)
   1ba98:	48 89 7d 00          	mov    %rdi,0x0(%rbp)
   1ba9c:	0f b7 45 10          	movzwl 0x10(%rbp),%eax
   1baa0:	44 01 f1             	add    %r14d,%ecx
   1baa3:	2b 4d 20             	sub    0x20(%rbp),%ecx
   1baa6:	44 89 75 20          	mov    %r14d,0x20(%rbp)
   1baaa:	89 4d 0c             	mov    %ecx,0xc(%rbp)
   1baad:	e9 b8 fe ff ff       	jmp    1b96a <__sfvwrite+0x12a>
   1bab2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1bab8:	0f b7 45 10          	movzwl 0x10(%rbp),%eax
   1babc:	83 c8 40             	or     $0x40,%eax
   1babf:	66 89 45 10          	mov    %ax,0x10(%rbp)
   1bac3:	48 83 c4 28          	add    $0x28,%rsp
   1bac7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1bacc:	5b                   	pop    %rbx
   1bacd:	5d                   	pop    %rbp
   1bace:	41 5c                	pop    %r12
   1bad0:	41 5d                	pop    %r13
   1bad2:	41 5e                	pop    %r14
   1bad4:	41 5f                	pop    %r15
   1bad6:	c3                   	ret    
   1bad7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1bade:	00 00 
   1bae0:	31 c0                	xor    %eax,%eax
   1bae2:	c3                   	ret    
   1bae3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1baea:	00 00 00 
   1baed:	0f 1f 00             	nopl   (%rax)

000000000001baf0 <_libc__memchr>:
   1baf0:	40 88 f0             	mov    %sil,%al
   1baf3:	48 89 d1             	mov    %rdx,%rcx
   1baf6:	48 85 c9             	test   %rcx,%rcx
   1baf9:	74 0b                	je     1bb06 <L1>
   1bafb:	fc                   	cld    
   1bafc:	f2 ae                	repnz scas %es:(%rdi),%al
   1bafe:	75 06                	jne    1bb06 <L1>
   1bb00:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
   1bb04:	eb 03                	jmp    1bb09 <L2>

000000000001bb06 <L1>:
   1bb06:	48 31 c0             	xor    %rax,%rax

000000000001bb09 <L2>:
   1bb09:	c3                   	ret    
   1bb0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001bb10 <_bcopy>:
   1bb10:	48 87 fe             	xchg   %rdi,%rsi
   1bb13:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   1bb1a:	00 00 00 00 
   1bb1e:	66 90                	xchg   %ax,%ax

000000000001bb20 <__memmove>:
   1bb20:	49 89 fb             	mov    %rdi,%r11
   1bb23:	48 89 d1             	mov    %rdx,%rcx
   1bb26:	48 89 f8             	mov    %rdi,%rax
   1bb29:	48 29 f0             	sub    %rsi,%rax
   1bb2c:	48 39 c8             	cmp    %rcx,%rax
   1bb2f:	72 16                	jb     1bb47 <__memmove+0x27>
   1bb31:	fc                   	cld    
   1bb32:	48 c1 e9 03          	shr    $0x3,%rcx
   1bb36:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   1bb39:	48 89 d1             	mov    %rdx,%rcx
   1bb3c:	48 83 e1 07          	and    $0x7,%rcx
   1bb40:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   1bb42:	4c 89 d8             	mov    %r11,%rax
   1bb45:	eb 29                	jmp    1bb70 <__memmove+0x50>
   1bb47:	48 01 cf             	add    %rcx,%rdi
   1bb4a:	48 01 ce             	add    %rcx,%rsi
   1bb4d:	fd                   	std    
   1bb4e:	48 83 e1 07          	and    $0x7,%rcx
   1bb52:	48 ff cf             	dec    %rdi
   1bb55:	48 ff ce             	dec    %rsi
   1bb58:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
   1bb5a:	48 89 d1             	mov    %rdx,%rcx
   1bb5d:	48 c1 e9 03          	shr    $0x3,%rcx
   1bb61:	48 83 ee 07          	sub    $0x7,%rsi
   1bb65:	48 83 ef 07          	sub    $0x7,%rdi
   1bb69:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   1bb6c:	4c 89 d8             	mov    %r11,%rax
   1bb6f:	fc                   	cld    
   1bb70:	c3                   	ret    
   1bb71:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1bb78:	00 00 00 
   1bb7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001bb80 <__gdtoa>:
   1bb80:	f3 0f 1e fa          	endbr64 
   1bb84:	41 57                	push   %r15
   1bb86:	41 56                	push   %r14
   1bb88:	41 55                	push   %r13
   1bb8a:	41 54                	push   %r12
   1bb8c:	55                   	push   %rbp
   1bb8d:	53                   	push   %rbx
   1bb8e:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
   1bb95:	48 8b 84 24 f0 00 00 	mov    0xf0(%rsp),%rax
   1bb9c:	00 
   1bb9d:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   1bba2:	8b 11                	mov    (%rcx),%edx
   1bba4:	48 8b ac 24 f8 00 00 	mov    0xf8(%rsp),%rbp
   1bbab:	00 
   1bbac:	89 74 24 30          	mov    %esi,0x30(%rsp)
   1bbb0:	44 89 44 24 10       	mov    %r8d,0x10(%rsp)
   1bbb5:	44 89 4c 24 28       	mov    %r9d,0x28(%rsp)
   1bbba:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1bbbf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1bbc6:	00 00 
   1bbc8:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
   1bbcf:	00 
   1bbd0:	31 c0                	xor    %eax,%eax
   1bbd2:	89 d0                	mov    %edx,%eax
   1bbd4:	83 e0 cf             	and    $0xffffffcf,%eax
   1bbd7:	89 01                	mov    %eax,(%rcx)
   1bbd9:	89 d0                	mov    %edx,%eax
   1bbdb:	83 e0 0f             	and    $0xf,%eax
   1bbde:	83 f8 03             	cmp    $0x3,%eax
   1bbe1:	0f 84 69 03 00 00    	je     1bf50 <__gdtoa+0x3d0>
   1bbe7:	89 d6                	mov    %edx,%esi
   1bbe9:	83 e6 0c             	and    $0xc,%esi
   1bbec:	89 74 24 20          	mov    %esi,0x20(%rsp)
   1bbf0:	0f 85 6a 02 00 00    	jne    1be60 <__gdtoa+0x2e0>
   1bbf6:	85 c0                	test   %eax,%eax
   1bbf8:	0f 84 22 03 00 00    	je     1bf20 <__gdtoa+0x3a0>
   1bbfe:	83 e8 01             	sub    $0x1,%eax
   1bc01:	45 31 e4             	xor    %r12d,%r12d
   1bc04:	83 f8 01             	cmp    $0x1,%eax
   1bc07:	0f 87 83 02 00 00    	ja     1be90 <__gdtoa+0x310>
   1bc0d:	48 89 cb             	mov    %rcx,%rbx
   1bc10:	8b 0f                	mov    (%rdi),%ecx
   1bc12:	49 89 ff             	mov    %rdi,%r15
   1bc15:	b8 20 00 00 00       	mov    $0x20,%eax
   1bc1a:	31 ff                	xor    %edi,%edi
   1bc1c:	83 f9 20             	cmp    $0x20,%ecx
   1bc1f:	0f 8e 5b 03 00 00    	jle    1bf80 <__gdtoa+0x400>
   1bc25:	01 c0                	add    %eax,%eax
   1bc27:	83 c7 01             	add    $0x1,%edi
   1bc2a:	39 c1                	cmp    %eax,%ecx
   1bc2c:	7f f7                	jg     1bc25 <__gdtoa+0xa5>
   1bc2e:	89 4c 24 40          	mov    %ecx,0x40(%rsp)
   1bc32:	89 54 24 38          	mov    %edx,0x38(%rsp)
   1bc36:	e8 b5 ec ff ff       	call   1a8f0 <__Balloc_D2A>
   1bc3b:	8b 54 24 38          	mov    0x38(%rsp),%edx
   1bc3f:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
   1bc43:	48 85 c0             	test   %rax,%rax
   1bc46:	49 89 c5             	mov    %rax,%r13
   1bc49:	0f 84 b9 02 00 00    	je     1bf08 <__gdtoa+0x388>
   1bc4f:	44 8d 59 ff          	lea    -0x1(%rcx),%r11d
   1bc53:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1bc58:	4d 8d 45 18          	lea    0x18(%r13),%r8
   1bc5c:	41 c1 fb 05          	sar    $0x5,%r11d
   1bc60:	4c 89 c6             	mov    %r8,%rsi
   1bc63:	4d 63 db             	movslq %r11d,%r11
   1bc66:	49 c1 e3 02          	shl    $0x2,%r11
   1bc6a:	4a 8d 3c 18          	lea    (%rax,%r11,1),%rdi
   1bc6e:	66 90                	xchg   %ax,%ax
   1bc70:	44 8b 08             	mov    (%rax),%r9d
   1bc73:	48 83 c0 04          	add    $0x4,%rax
   1bc77:	48 83 c6 04          	add    $0x4,%rsi
   1bc7b:	44 89 4e fc          	mov    %r9d,-0x4(%rsi)
   1bc7f:	48 39 c7             	cmp    %rax,%rdi
   1bc82:	73 ec                	jae    1bc70 <__gdtoa+0xf0>
   1bc84:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1bc89:	48 83 c7 01          	add    $0x1,%rdi
   1bc8d:	4d 8d 73 04          	lea    0x4(%r11),%r14
   1bc91:	48 83 c0 01          	add    $0x1,%rax
   1bc95:	48 39 c7             	cmp    %rax,%rdi
   1bc98:	b8 04 00 00 00       	mov    $0x4,%eax
   1bc9d:	4c 0f 42 f0          	cmovb  %rax,%r14
   1bca1:	49 c1 fe 02          	sar    $0x2,%r14
   1bca5:	eb 12                	jmp    1bcb9 <__gdtoa+0x139>
   1bca7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1bcae:	00 00 
   1bcb0:	45 85 f6             	test   %r14d,%r14d
   1bcb3:	0f 84 d7 02 00 00    	je     1bf90 <__gdtoa+0x410>
   1bcb9:	45 89 f4             	mov    %r14d,%r12d
   1bcbc:	41 83 ee 01          	sub    $0x1,%r14d
   1bcc0:	49 63 c6             	movslq %r14d,%rax
   1bcc3:	41 8b 34 80          	mov    (%r8,%rax,4),%esi
   1bcc7:	85 f6                	test   %esi,%esi
   1bcc9:	74 e5                	je     1bcb0 <__gdtoa+0x130>
   1bccb:	45 89 65 14          	mov    %r12d,0x14(%r13)
   1bccf:	41 8b 7c 85 18       	mov    0x18(%r13,%rax,4),%edi
   1bcd4:	45 89 e6             	mov    %r12d,%r14d
   1bcd7:	89 54 24 40          	mov    %edx,0x40(%rsp)
   1bcdb:	41 c1 e6 05          	shl    $0x5,%r14d
   1bcdf:	89 4c 24 38          	mov    %ecx,0x38(%rsp)
   1bce3:	e8 b8 ee ff ff       	call   1aba0 <__hi0bits_D2A>
   1bce8:	8b 4c 24 38          	mov    0x38(%rsp),%ecx
   1bcec:	8b 54 24 40          	mov    0x40(%rsp),%edx
   1bcf0:	41 29 c6             	sub    %eax,%r14d
   1bcf3:	4c 89 ef             	mov    %r13,%rdi
   1bcf6:	89 4c 24 40          	mov    %ecx,0x40(%rsp)
   1bcfa:	89 54 24 38          	mov    %edx,0x38(%rsp)
   1bcfe:	e8 8d 18 00 00       	call   1d590 <__trailz_D2A>
   1bd03:	8b 54 24 38          	mov    0x38(%rsp),%edx
   1bd07:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
   1bd0b:	85 c0                	test   %eax,%eax
   1bd0d:	89 84 24 a4 00 00 00 	mov    %eax,0xa4(%rsp)
   1bd14:	0f 85 86 02 00 00    	jne    1bfa0 <__gdtoa+0x420>
   1bd1a:	8b 44 24 30          	mov    0x30(%rsp),%eax
   1bd1e:	89 44 24 40          	mov    %eax,0x40(%rsp)
   1bd22:	41 8b 45 14          	mov    0x14(%r13),%eax
   1bd26:	85 c0                	test   %eax,%eax
   1bd28:	0f 84 e2 01 00 00    	je     1bf10 <__gdtoa+0x390>
   1bd2e:	48 8d b4 24 a4 00 00 	lea    0xa4(%rsp),%rsi
   1bd35:	00 
   1bd36:	4c 89 ef             	mov    %r13,%rdi
   1bd39:	89 4c 24 48          	mov    %ecx,0x48(%rsp)
   1bd3d:	89 54 24 38          	mov    %edx,0x38(%rsp)
   1bd41:	e8 2a f6 ff ff       	call   1b370 <__b2d_D2A>
   1bd46:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
   1bd4a:	66 0f ef c9          	pxor   %xmm1,%xmm1
   1bd4e:	8b 54 24 38          	mov    0x38(%rsp),%edx
   1bd52:	66 48 0f 7e c6       	movq   %xmm0,%rsi
   1bd57:	66 48 0f 7e c0       	movq   %xmm0,%rax
   1bd5c:	48 c1 ee 20          	shr    $0x20,%rsi
   1bd60:	46 8d 0c 31          	lea    (%rcx,%r14,1),%r9d
   1bd64:	89 c0                	mov    %eax,%eax
   1bd66:	8b 4c 24 48          	mov    0x48(%rsp),%ecx
   1bd6a:	81 e6 ff ff 0f 00    	and    $0xfffff,%esi
   1bd70:	41 8d 79 ff          	lea    -0x1(%r9),%edi
   1bd74:	81 ce 00 00 f0 3f    	or     $0x3ff00000,%esi
   1bd7a:	f2 0f 2a cf          	cvtsi2sd %edi,%xmm1
   1bd7e:	41 89 fc             	mov    %edi,%r12d
   1bd81:	f2 0f 59 0d df af 00 	mulsd  0xafdf(%rip),%xmm1        # 26d68 <xdigs_lower.3362+0x38>
   1bd88:	00 
   1bd89:	49 89 f0             	mov    %rsi,%r8
   1bd8c:	41 c1 fc 1f          	sar    $0x1f,%r12d
   1bd90:	49 c1 e0 20          	shl    $0x20,%r8
   1bd94:	45 89 e3             	mov    %r12d,%r11d
   1bd97:	4c 09 c0             	or     %r8,%rax
   1bd9a:	41 31 fb             	xor    %edi,%r11d
   1bd9d:	66 48 0f 6e c0       	movq   %rax,%xmm0
   1bda2:	f2 0f 5c 05 a6 af 00 	subsd  0xafa6(%rip),%xmm0        # 26d50 <xdigs_lower.3362+0x20>
   1bda9:	00 
   1bdaa:	45 29 e3             	sub    %r12d,%r11d
   1bdad:	f2 0f 59 05 a3 af 00 	mulsd  0xafa3(%rip),%xmm0        # 26d58 <xdigs_lower.3362+0x28>
   1bdb4:	00 
   1bdb5:	41 81 eb 35 04 00 00 	sub    $0x435,%r11d
   1bdbc:	f2 0f 58 05 9c af 00 	addsd  0xaf9c(%rip),%xmm0        # 26d60 <xdigs_lower.3362+0x30>
   1bdc3:	00 
   1bdc4:	45 85 db             	test   %r11d,%r11d
   1bdc7:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   1bdcb:	7e 15                	jle    1bde2 <__gdtoa+0x262>
   1bdcd:	66 0f ef c9          	pxor   %xmm1,%xmm1
   1bdd1:	f2 41 0f 2a cb       	cvtsi2sd %r11d,%xmm1
   1bdd6:	f2 0f 59 0d 2a b1 00 	mulsd  0xb12a(%rip),%xmm1        # 26f08 <__bigtens_D2A+0x28>
   1bddd:	00 
   1bdde:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
   1bde2:	66 0f ef f6          	pxor   %xmm6,%xmm6
   1bde6:	f2 44 0f 2c d8       	cvttsd2si %xmm0,%r11d
   1bdeb:	66 0f 2f f0          	comisd %xmm0,%xmm6
   1bdef:	0f 87 c3 08 00 00    	ja     1c6b8 <__gdtoa+0xb38>
   1bdf5:	41 89 fc             	mov    %edi,%r12d
   1bdf8:	89 c0                	mov    %eax,%eax
   1bdfa:	41 c1 e4 14          	shl    $0x14,%r12d
   1bdfe:	44 01 e6             	add    %r12d,%esi
   1be01:	48 c1 e6 20          	shl    $0x20,%rsi
   1be05:	48 09 f0             	or     %rsi,%rax
   1be08:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
   1be0f:	00 
   1be10:	49 89 c2             	mov    %rax,%r10
   1be13:	8b 44 24 40          	mov    0x40(%rsp),%eax
   1be17:	f7 d8                	neg    %eax
   1be19:	89 44 24 48          	mov    %eax,0x48(%rsp)
   1be1d:	41 83 fb 16          	cmp    $0x16,%r11d
   1be21:	0f 87 b1 01 00 00    	ja     1bfd8 <__gdtoa+0x458>
   1be27:	49 63 c3             	movslq %r11d,%rax
   1be2a:	48 8d 35 ef af 00 00 	lea    0xafef(%rip),%rsi        # 26e20 <__tens_D2A>
   1be31:	66 49 0f 6e fa       	movq   %r10,%xmm7
   1be36:	f2 0f 10 04 c6       	movsd  (%rsi,%rax,8),%xmm0
   1be3b:	66 0f 2f c7          	comisd %xmm7,%xmm0
   1be3f:	0f 86 e3 05 00 00    	jbe    1c428 <__gdtoa+0x8a8>
   1be45:	c7 84 24 94 00 00 00 	movl   $0x0,0x94(%rsp)
   1be4c:	00 00 00 00 
   1be50:	41 83 eb 01          	sub    $0x1,%r11d
   1be54:	e9 8a 01 00 00       	jmp    1bfe3 <__gdtoa+0x463>
   1be59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1be60:	83 f8 04             	cmp    $0x4,%eax
   1be63:	0f 85 9f 00 00 00    	jne    1bf08 <__gdtoa+0x388>
   1be69:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1be6e:	ba 03 00 00 00       	mov    $0x3,%edx
   1be73:	48 89 ee             	mov    %rbp,%rsi
   1be76:	48 8d 3d cc ae 00 00 	lea    0xaecc(%rip),%rdi        # 26d49 <xdigs_lower.3362+0x19>
   1be7d:	c7 00 00 80 ff ff    	movl   $0xffff8000,(%rax)
   1be83:	e8 68 cc ff ff       	call   18af0 <__nrv_alloc_D2A>
   1be88:	49 89 c4             	mov    %rax,%r12
   1be8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1be90:	48 8b 84 24 a8 00 00 	mov    0xa8(%rsp),%rax
   1be97:	00 
   1be98:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1be9f:	00 00 
   1bea1:	0f 85 3e 15 00 00    	jne    1d3e5 <__gdtoa+0x1865>
   1bea7:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
   1beae:	4c 89 e0             	mov    %r12,%rax
   1beb1:	5b                   	pop    %rbx
   1beb2:	5d                   	pop    %rbp
   1beb3:	41 5c                	pop    %r12
   1beb5:	41 5d                	pop    %r13
   1beb7:	41 5e                	pop    %r14
   1beb9:	41 5f                	pop    %r15
   1bebb:	c3                   	ret    
   1bebc:	8b 78 08             	mov    0x8(%rax),%edi
   1bebf:	49 89 c7             	mov    %rax,%r15
   1bec2:	e8 29 ea ff ff       	call   1a8f0 <__Balloc_D2A>
   1bec7:	49 89 c6             	mov    %rax,%r14
   1beca:	48 85 c0             	test   %rax,%rax
   1becd:	74 39                	je     1bf08 <__gdtoa+0x388>
   1becf:	49 63 47 14          	movslq 0x14(%r15),%rax
   1bed3:	49 8d 77 10          	lea    0x10(%r15),%rsi
   1bed7:	49 8d 7e 10          	lea    0x10(%r14),%rdi
   1bedb:	48 8d 14 85 08 00 00 	lea    0x8(,%rax,4),%rdx
   1bee2:	00 
   1bee3:	e8 08 79 ff ff       	call   137f0 <memcpy>
   1bee8:	be 01 00 00 00       	mov    $0x1,%esi
   1beed:	4c 89 f7             	mov    %r14,%rdi
   1bef0:	e8 db f0 ff ff       	call   1afd0 <__lshift_D2A>
   1bef5:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1befa:	48 85 c0             	test   %rax,%rax
   1befd:	0f 85 2d 09 00 00    	jne    1c830 <__gdtoa+0xcb0>
   1bf03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1bf08:	45 31 e4             	xor    %r12d,%r12d
   1bf0b:	eb 83                	jmp    1be90 <__gdtoa+0x310>
   1bf0d:	0f 1f 00             	nopl   (%rax)
   1bf10:	4c 89 ef             	mov    %r13,%rdi
   1bf13:	e8 c8 ea ff ff       	call   1a9e0 <__Bfree_D2A>
   1bf18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1bf1f:	00 
   1bf20:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1bf25:	ba 01 00 00 00       	mov    $0x1,%edx
   1bf2a:	48 89 ee             	mov    %rbp,%rsi
   1bf2d:	48 8d 3d 19 ae 00 00 	lea    0xae19(%rip),%rdi        # 26d4d <xdigs_lower.3362+0x1d>
   1bf34:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   1bf3a:	e8 b1 cb ff ff       	call   18af0 <__nrv_alloc_D2A>
   1bf3f:	49 89 c4             	mov    %rax,%r12
   1bf42:	e9 49 ff ff ff       	jmp    1be90 <__gdtoa+0x310>
   1bf47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1bf4e:	00 00 
   1bf50:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1bf55:	ba 08 00 00 00       	mov    $0x8,%edx
   1bf5a:	48 89 ee             	mov    %rbp,%rsi
   1bf5d:	48 8d 3d dc ad 00 00 	lea    0xaddc(%rip),%rdi        # 26d40 <xdigs_lower.3362+0x10>
   1bf64:	c7 00 00 80 ff ff    	movl   $0xffff8000,(%rax)
   1bf6a:	e8 81 cb ff ff       	call   18af0 <__nrv_alloc_D2A>
   1bf6f:	49 89 c4             	mov    %rax,%r12
   1bf72:	e9 19 ff ff ff       	jmp    1be90 <__gdtoa+0x310>
   1bf77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1bf7e:	00 00 
   1bf80:	89 f7                	mov    %esi,%edi
   1bf82:	e9 a7 fc ff ff       	jmp    1bc2e <__gdtoa+0xae>
   1bf87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1bf8e:	00 00 
   1bf90:	41 c7 45 14 00 00 00 	movl   $0x0,0x14(%r13)
   1bf97:	00 
   1bf98:	e9 56 fd ff ff       	jmp    1bcf3 <__gdtoa+0x173>
   1bf9d:	0f 1f 00             	nopl   (%rax)
   1bfa0:	89 c6                	mov    %eax,%esi
   1bfa2:	4c 89 ef             	mov    %r13,%rdi
   1bfa5:	89 4c 24 48          	mov    %ecx,0x48(%rsp)
   1bfa9:	89 54 24 38          	mov    %edx,0x38(%rsp)
   1bfad:	e8 ee 14 00 00       	call   1d4a0 <__rshift_D2A>
   1bfb2:	8b 84 24 a4 00 00 00 	mov    0xa4(%rsp),%eax
   1bfb9:	8b 4c 24 30          	mov    0x30(%rsp),%ecx
   1bfbd:	8b 54 24 38          	mov    0x38(%rsp),%edx
   1bfc1:	01 c1                	add    %eax,%ecx
   1bfc3:	41 29 c6             	sub    %eax,%r14d
   1bfc6:	89 4c 24 40          	mov    %ecx,0x40(%rsp)
   1bfca:	8b 4c 24 48          	mov    0x48(%rsp),%ecx
   1bfce:	e9 4f fd ff ff       	jmp    1bd22 <__gdtoa+0x1a2>
   1bfd3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1bfd8:	c7 84 24 94 00 00 00 	movl   $0x1,0x94(%rsp)
   1bfdf:	01 00 00 00 
   1bfe3:	44 8b 64 24 48       	mov    0x48(%rsp),%r12d
   1bfe8:	c7 44 24 50 00 00 00 	movl   $0x0,0x50(%rsp)
   1bfef:	00 
   1bff0:	45 85 e4             	test   %r12d,%r12d
   1bff3:	0f 88 4e 04 00 00    	js     1c447 <__gdtoa+0x8c7>
   1bff9:	45 85 db             	test   %r11d,%r11d
   1bffc:	0f 88 06 04 00 00    	js     1c408 <__gdtoa+0x888>
   1c002:	44 01 5c 24 48       	add    %r11d,0x48(%rsp)
   1c007:	44 89 5c 24 78       	mov    %r11d,0x78(%rsp)
   1c00c:	c7 44 24 68 00 00 00 	movl   $0x0,0x68(%rsp)
   1c013:	00 
   1c014:	8b 44 24 10          	mov    0x10(%rsp),%eax
   1c018:	83 f8 09             	cmp    $0x9,%eax
   1c01b:	0f 87 bf 01 00 00    	ja     1c1e0 <__gdtoa+0x660>
   1c021:	83 f8 05             	cmp    $0x5,%eax
   1c024:	0f 8f 36 04 00 00    	jg     1c460 <__gdtoa+0x8e0>
   1c02a:	41 8d 81 fd 03 00 00 	lea    0x3fd(%r9),%eax
   1c031:	3d f7 07 00 00       	cmp    $0x7f7,%eax
   1c036:	0f 96 c0             	setbe  %al
   1c039:	0f b6 c0             	movzbl %al,%eax
   1c03c:	89 84 24 80 00 00 00 	mov    %eax,0x80(%rsp)
   1c043:	8b 44 24 10          	mov    0x10(%rsp),%eax
   1c047:	83 f8 04             	cmp    $0x4,%eax
   1c04a:	0f 84 a0 07 00 00    	je     1c7f0 <__gdtoa+0xc70>
   1c050:	83 f8 05             	cmp    $0x5,%eax
   1c053:	0f 84 87 06 00 00    	je     1c6e0 <__gdtoa+0xb60>
   1c059:	83 f8 02             	cmp    $0x2,%eax
   1c05c:	0f 85 16 06 00 00    	jne    1c678 <__gdtoa+0xaf8>
   1c062:	c7 44 24 60 00 00 00 	movl   $0x0,0x60(%rsp)
   1c069:	00 
   1c06a:	8b 44 24 28          	mov    0x28(%rsp),%eax
   1c06e:	bf 01 00 00 00       	mov    $0x1,%edi
   1c073:	85 c0                	test   %eax,%eax
   1c075:	0f 4f f8             	cmovg  %eax,%edi
   1c078:	89 bc 24 a4 00 00 00 	mov    %edi,0xa4(%rsp)
   1c07f:	89 bc 24 9c 00 00 00 	mov    %edi,0x9c(%rsp)
   1c086:	89 7c 24 38          	mov    %edi,0x38(%rsp)
   1c08a:	89 7c 24 28          	mov    %edi,0x28(%rsp)
   1c08e:	89 8c 24 90 00 00 00 	mov    %ecx,0x90(%rsp)
   1c095:	44 89 5c 24 7c       	mov    %r11d,0x7c(%rsp)
   1c09a:	44 89 4c 24 70       	mov    %r9d,0x70(%rsp)
   1c09f:	89 94 24 98 00 00 00 	mov    %edx,0x98(%rsp)
   1c0a6:	e8 05 ca ff ff       	call   18ab0 <__rv_alloc_D2A>
   1c0ab:	49 89 c4             	mov    %rax,%r12
   1c0ae:	48 85 c0             	test   %rax,%rax
   1c0b1:	0f 84 51 fe ff ff    	je     1bf08 <__gdtoa+0x388>
   1c0b7:	41 8b 77 0c          	mov    0xc(%r15),%esi
   1c0bb:	44 8b 4c 24 70       	mov    0x70(%rsp),%r9d
   1c0c0:	44 8b 5c 24 7c       	mov    0x7c(%rsp),%r11d
   1c0c5:	8b 8c 24 90 00 00 00 	mov    0x90(%rsp),%ecx
   1c0cc:	83 ee 01             	sub    $0x1,%esi
   1c0cf:	89 74 24 5c          	mov    %esi,0x5c(%rsp)
   1c0d3:	0f 84 82 01 00 00    	je     1c25b <__gdtoa+0x6db>
   1c0d9:	b8 02 00 00 00       	mov    $0x2,%eax
   1c0de:	8b 94 24 98 00 00 00 	mov    0x98(%rsp),%edx
   1c0e5:	0f 49 c6             	cmovns %esi,%eax
   1c0e8:	89 44 24 5c          	mov    %eax,0x5c(%rsp)
   1c0ec:	89 c6                	mov    %eax,%esi
   1c0ee:	80 e6 01             	and    $0x1,%dh
   1c0f1:	0f 85 59 01 00 00    	jne    1c250 <__gdtoa+0x6d0>
   1c0f7:	8b 54 24 40          	mov    0x40(%rsp),%edx
   1c0fb:	85 d2                	test   %edx,%edx
   1c0fd:	0f 88 7d 03 00 00    	js     1c480 <__gdtoa+0x900>
   1c103:	8b 44 24 78          	mov    0x78(%rsp),%eax
   1c107:	83 f8 0e             	cmp    $0xe,%eax
   1c10a:	0f 8f 70 03 00 00    	jg     1c480 <__gdtoa+0x900>
   1c110:	48 98                	cltq   
   1c112:	48 8d 15 07 ad 00 00 	lea    0xad07(%rip),%rdx        # 26e20 <__tens_D2A>
   1c119:	f2 0f 10 14 c2       	movsd  (%rdx,%rax,8),%xmm2
   1c11e:	48 89 c1             	mov    %rax,%rcx
   1c121:	8b 44 24 28          	mov    0x28(%rsp),%eax
   1c125:	85 c0                	test   %eax,%eax
   1c127:	0f 89 eb 05 00 00    	jns    1c718 <__gdtoa+0xb98>
   1c12d:	8b 44 24 38          	mov    0x38(%rsp),%eax
   1c131:	85 c0                	test   %eax,%eax
   1c133:	0f 8f df 05 00 00    	jg     1c718 <__gdtoa+0xb98>
   1c139:	0f 85 b1 05 00 00    	jne    1c6f0 <__gdtoa+0xb70>
   1c13f:	f2 0f 59 15 41 ac 00 	mulsd  0xac41(%rip),%xmm2        # 26d88 <xdigs_lower.3362+0x58>
   1c146:	00 
   1c147:	66 0f 2f 94 24 88 00 	comisd 0x88(%rsp),%xmm2
   1c14e:	00 00 
   1c150:	0f 83 9a 05 00 00    	jae    1c6f0 <__gdtoa+0xb70>
   1c156:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   1c15d:	00 00 
   1c15f:	83 c1 02             	add    $0x2,%ecx
   1c162:	45 31 f6             	xor    %r14d,%r14d
   1c165:	41 89 cf             	mov    %ecx,%r15d
   1c168:	41 c6 04 24 31       	movb   $0x31,(%r12)
   1c16d:	49 8d 44 24 01       	lea    0x1(%r12),%rax
   1c172:	c7 44 24 20 20 00 00 	movl   $0x20,0x20(%rsp)
   1c179:	00 
   1c17a:	4c 89 f7             	mov    %r14,%rdi
   1c17d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1c182:	e8 59 e8 ff ff       	call   1a9e0 <__Bfree_D2A>
   1c187:	48 83 7c 24 40 00    	cmpq   $0x0,0x40(%rsp)
   1c18d:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1c192:	74 14                	je     1c1a8 <__gdtoa+0x628>
   1c194:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   1c199:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1c19e:	e8 3d e8 ff ff       	call   1a9e0 <__Bfree_D2A>
   1c1a3:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1c1a8:	4c 89 ef             	mov    %r13,%rdi
   1c1ab:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1c1b0:	e8 2b e8 ff ff       	call   1a9e0 <__Bfree_D2A>
   1c1b5:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1c1ba:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1c1bf:	c6 00 00             	movb   $0x0,(%rax)
   1c1c2:	44 89 39             	mov    %r15d,(%rcx)
   1c1c5:	48 85 ed             	test   %rbp,%rbp
   1c1c8:	74 04                	je     1c1ce <__gdtoa+0x64e>
   1c1ca:	48 89 45 00          	mov    %rax,0x0(%rbp)
   1c1ce:	8b 44 24 20          	mov    0x20(%rsp),%eax
   1c1d2:	09 03                	or     %eax,(%rbx)
   1c1d4:	e9 b7 fc ff ff       	jmp    1be90 <__gdtoa+0x310>
   1c1d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1c1e0:	41 8d 81 fd 03 00 00 	lea    0x3fd(%r9),%eax
   1c1e7:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
   1c1ee:	00 
   1c1ef:	3d f7 07 00 00       	cmp    $0x7f7,%eax
   1c1f4:	0f 96 c0             	setbe  %al
   1c1f7:	0f b6 c0             	movzbl %al,%eax
   1c1fa:	89 84 24 80 00 00 00 	mov    %eax,0x80(%rsp)
   1c201:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1c205:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%rsp)
   1c20c:	00 
   1c20d:	f2 0f 2a c1          	cvtsi2sd %ecx,%xmm0
   1c211:	f2 0f 59 05 f7 ac 00 	mulsd  0xacf7(%rip),%xmm0        # 26f10 <__bigtens_D2A+0x30>
   1c218:	00 
   1c219:	c7 44 24 60 01 00 00 	movl   $0x1,0x60(%rsp)
   1c220:	00 
   1c221:	c7 84 24 9c 00 00 00 	movl   $0xffffffff,0x9c(%rsp)
   1c228:	ff ff ff ff 
   1c22c:	c7 44 24 38 ff ff ff 	movl   $0xffffffff,0x38(%rsp)
   1c233:	ff 
   1c234:	f2 0f 2c f8          	cvttsd2si %xmm0,%edi
   1c238:	83 c7 03             	add    $0x3,%edi
   1c23b:	89 bc 24 a4 00 00 00 	mov    %edi,0xa4(%rsp)
   1c242:	e9 47 fe ff ff       	jmp    1c08e <__gdtoa+0x50e>
   1c247:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1c24e:	00 00 
   1c250:	b8 03 00 00 00       	mov    $0x3,%eax
   1c255:	29 f0                	sub    %esi,%eax
   1c257:	89 44 24 5c          	mov    %eax,0x5c(%rsp)
   1c25b:	44 0f b6 84 24 80 00 	movzbl 0x80(%rsp),%r8d
   1c262:	00 00 
   1c264:	8b 74 24 38          	mov    0x38(%rsp),%esi
   1c268:	83 fe 0e             	cmp    $0xe,%esi
   1c26b:	0f 96 c0             	setbe  %al
   1c26e:	41 20 c0             	and    %al,%r8b
   1c271:	0f 84 80 fe ff ff    	je     1c0f7 <__gdtoa+0x577>
   1c277:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
   1c27b:	0b 44 24 78          	or     0x78(%rsp),%eax
   1c27f:	0f 85 72 fe ff ff    	jne    1c0f7 <__gdtoa+0x577>
   1c285:	44 8b 94 24 94 00 00 	mov    0x94(%rsp),%r10d
   1c28c:	00 
   1c28d:	c7 84 24 a4 00 00 00 	movl   $0x0,0xa4(%rsp)
   1c294:	00 00 00 00 
   1c298:	f2 0f 10 84 24 88 00 	movsd  0x88(%rsp),%xmm0
   1c29f:	00 00 
   1c2a1:	45 85 d2             	test   %r10d,%r10d
   1c2a4:	74 12                	je     1c2b8 <__gdtoa+0x738>
   1c2a6:	f2 0f 10 25 c2 aa 00 	movsd  0xaac2(%rip),%xmm4        # 26d70 <xdigs_lower.3362+0x40>
   1c2ad:	00 
   1c2ae:	66 0f 2f e0          	comisd %xmm0,%xmm4
   1c2b2:	0f 87 68 0c 00 00    	ja     1cf20 <__gdtoa+0x13a0>
   1c2b8:	66 0f 28 c8          	movapd %xmm0,%xmm1
   1c2bc:	8b 7c 24 38          	mov    0x38(%rsp),%edi
   1c2c0:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
   1c2c4:	f2 0f 58 0d b4 aa 00 	addsd  0xaab4(%rip),%xmm1        # 26d80 <xdigs_lower.3362+0x50>
   1c2cb:	00 
   1c2cc:	66 48 0f 7e ca       	movq   %xmm1,%rdx
   1c2d1:	66 48 0f 7e c8       	movq   %xmm1,%rax
   1c2d6:	48 c1 ea 20          	shr    $0x20,%rdx
   1c2da:	89 c0                	mov    %eax,%eax
   1c2dc:	81 ea 00 00 40 03    	sub    $0x3400000,%edx
   1c2e2:	48 c1 e2 20          	shl    $0x20,%rdx
   1c2e6:	48 09 d0             	or     %rdx,%rax
   1c2e9:	85 ff                	test   %edi,%edi
   1c2eb:	0f 84 d1 08 00 00    	je     1cbc2 <__gdtoa+0x1042>
   1c2f1:	c7 44 24 5c 00 00 00 	movl   $0x0,0x5c(%rsp)
   1c2f8:	00 
   1c2f9:	44 8b 54 24 38       	mov    0x38(%rsp),%r10d
   1c2fe:	66 48 0f 6e e0       	movq   %rax,%xmm4
   1c303:	8b 74 24 60          	mov    0x60(%rsp),%esi
   1c307:	41 8d 42 ff          	lea    -0x1(%r10),%eax
   1c30b:	48 8d 15 0e ab 00 00 	lea    0xab0e(%rip),%rdx        # 26e20 <__tens_D2A>
   1c312:	48 98                	cltq   
   1c314:	f2 0f 10 14 c2       	movsd  (%rdx,%rax,8),%xmm2
   1c319:	85 f6                	test   %esi,%esi
   1c31b:	0f 84 05 0b 00 00    	je     1ce26 <__gdtoa+0x12a6>
   1c321:	f2 0f 10 0d 67 aa 00 	movsd  0xaa67(%rip),%xmm1        # 26d90 <xdigs_lower.3362+0x60>
   1c328:	00 
   1c329:	f2 0f 2c d0          	cvttsd2si %xmm0,%edx
   1c32d:	49 8d 44 24 01       	lea    0x1(%r12),%rax
   1c332:	f2 0f 5e ca          	divsd  %xmm2,%xmm1
   1c336:	66 0f ef d2          	pxor   %xmm2,%xmm2
   1c33a:	f2 0f 2a d2          	cvtsi2sd %edx,%xmm2
   1c33e:	83 c2 30             	add    $0x30,%edx
   1c341:	41 88 14 24          	mov    %dl,(%r12)
   1c345:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
   1c349:	f2 0f 5c cc          	subsd  %xmm4,%xmm1
   1c34d:	66 0f 2f c8          	comisd %xmm0,%xmm1
   1c351:	0f 87 15 0d 00 00    	ja     1d06c <__gdtoa+0x14ec>
   1c357:	f2 0f 10 25 11 aa 00 	movsd  0xaa11(%rip),%xmm4        # 26d70 <xdigs_lower.3362+0x40>
   1c35e:	00 
   1c35f:	f2 0f 10 1d 11 aa 00 	movsd  0xaa11(%rip),%xmm3        # 26d78 <xdigs_lower.3362+0x48>
   1c366:	00 
   1c367:	eb 4d                	jmp    1c3b6 <__gdtoa+0x836>
   1c369:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1c370:	8b b4 24 a4 00 00 00 	mov    0xa4(%rsp),%esi
   1c377:	8d 56 01             	lea    0x1(%rsi),%edx
   1c37a:	89 94 24 a4 00 00 00 	mov    %edx,0xa4(%rsp)
   1c381:	44 39 d2             	cmp    %r10d,%edx
   1c384:	0f 8d 61 08 00 00    	jge    1cbeb <__gdtoa+0x106b>
   1c38a:	f2 0f 59 c3          	mulsd  %xmm3,%xmm0
   1c38e:	66 0f ef d2          	pxor   %xmm2,%xmm2
   1c392:	48 83 c0 01          	add    $0x1,%rax
   1c396:	f2 0f 59 cb          	mulsd  %xmm3,%xmm1
   1c39a:	f2 0f 2c d0          	cvttsd2si %xmm0,%edx
   1c39e:	f2 0f 2a d2          	cvtsi2sd %edx,%xmm2
   1c3a2:	83 c2 30             	add    $0x30,%edx
   1c3a5:	88 50 ff             	mov    %dl,-0x1(%rax)
   1c3a8:	f2 0f 5c c2          	subsd  %xmm2,%xmm0
   1c3ac:	66 0f 2f c8          	comisd %xmm0,%xmm1
   1c3b0:	0f 87 b6 0c 00 00    	ja     1d06c <__gdtoa+0x14ec>
   1c3b6:	66 0f 28 d4          	movapd %xmm4,%xmm2
   1c3ba:	f2 0f 5c d0          	subsd  %xmm0,%xmm2
   1c3be:	66 0f 2f ca          	comisd %xmm2,%xmm1
   1c3c2:	76 ac                	jbe    1c370 <__gdtoa+0x7f0>
   1c3c4:	44 8b 7c 24 5c       	mov    0x5c(%rsp),%r15d
   1c3c9:	0f b6 50 ff          	movzbl -0x1(%rax),%edx
   1c3cd:	41 83 c7 01          	add    $0x1,%r15d
   1c3d1:	eb 15                	jmp    1c3e8 <__gdtoa+0x868>
   1c3d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1c3d8:	49 39 cc             	cmp    %rcx,%r12
   1c3db:	0f 84 ef 0b 00 00    	je     1cfd0 <__gdtoa+0x1450>
   1c3e1:	0f b6 51 ff          	movzbl -0x1(%rcx),%edx
   1c3e5:	48 89 c8             	mov    %rcx,%rax
   1c3e8:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   1c3ec:	80 fa 39             	cmp    $0x39,%dl
   1c3ef:	74 e7                	je     1c3d8 <__gdtoa+0x858>
   1c3f1:	83 c2 01             	add    $0x1,%edx
   1c3f4:	88 11                	mov    %dl,(%rcx)
   1c3f6:	c7 44 24 20 20 00 00 	movl   $0x20,0x20(%rsp)
   1c3fd:	00 
   1c3fe:	e9 a5 fd ff ff       	jmp    1c1a8 <__gdtoa+0x628>
   1c403:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1c408:	44 89 d8             	mov    %r11d,%eax
   1c40b:	44 29 5c 24 50       	sub    %r11d,0x50(%rsp)
   1c410:	f7 d8                	neg    %eax
   1c412:	44 89 5c 24 78       	mov    %r11d,0x78(%rsp)
   1c417:	45 31 db             	xor    %r11d,%r11d
   1c41a:	89 44 24 68          	mov    %eax,0x68(%rsp)
   1c41e:	e9 f1 fb ff ff       	jmp    1c014 <__gdtoa+0x494>
   1c423:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1c428:	8b 44 24 48          	mov    0x48(%rsp),%eax
   1c42c:	c7 44 24 50 00 00 00 	movl   $0x0,0x50(%rsp)
   1c433:	00 
   1c434:	c7 84 24 94 00 00 00 	movl   $0x0,0x94(%rsp)
   1c43b:	00 00 00 00 
   1c43f:	85 c0                	test   %eax,%eax
   1c441:	0f 89 bb fb ff ff    	jns    1c002 <__gdtoa+0x482>
   1c447:	44 29 f7             	sub    %r14d,%edi
   1c44a:	c7 44 24 48 00 00 00 	movl   $0x0,0x48(%rsp)
   1c451:	00 
   1c452:	8d 47 01             	lea    0x1(%rdi),%eax
   1c455:	89 44 24 50          	mov    %eax,0x50(%rsp)
   1c459:	e9 9b fb ff ff       	jmp    1bff9 <__gdtoa+0x479>
   1c45e:	66 90                	xchg   %ax,%ax
   1c460:	c7 84 24 80 00 00 00 	movl   $0x0,0x80(%rsp)
   1c467:	00 00 00 00 
   1c46b:	83 e8 04             	sub    $0x4,%eax
   1c46e:	89 44 24 10          	mov    %eax,0x10(%rsp)
   1c472:	e9 cc fb ff ff       	jmp    1c043 <__gdtoa+0x4c3>
   1c477:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1c47e:	00 00 
   1c480:	8b 44 24 60          	mov    0x60(%rsp),%eax
   1c484:	85 c0                	test   %eax,%eax
   1c486:	0f 84 44 03 00 00    	je     1c7d0 <__gdtoa+0xc50>
   1c48c:	8d 41 01             	lea    0x1(%rcx),%eax
   1c48f:	41 8b 57 04          	mov    0x4(%r15),%edx
   1c493:	41 29 c9             	sub    %ecx,%r9d
   1c496:	44 29 f0             	sub    %r14d,%eax
   1c499:	89 84 24 a4 00 00 00 	mov    %eax,0xa4(%rsp)
   1c4a0:	41 39 d1             	cmp    %edx,%r9d
   1c4a3:	0f 8d e7 05 00 00    	jge    1ca90 <__gdtoa+0xf10>
   1c4a9:	8b 74 24 10          	mov    0x10(%rsp),%esi
   1c4ad:	8d 4e fd             	lea    -0x3(%rsi),%ecx
   1c4b0:	83 e1 fd             	and    $0xfffffffd,%ecx
   1c4b3:	0f 84 d7 05 00 00    	je     1ca90 <__gdtoa+0xf10>
   1c4b9:	8b 44 24 40          	mov    0x40(%rsp),%eax
   1c4bd:	29 d0                	sub    %edx,%eax
   1c4bf:	83 c0 01             	add    $0x1,%eax
   1c4c2:	83 fe 01             	cmp    $0x1,%esi
   1c4c5:	8b 74 24 38          	mov    0x38(%rsp),%esi
   1c4c9:	0f 9f c1             	setg   %cl
   1c4cc:	89 84 24 a4 00 00 00 	mov    %eax,0xa4(%rsp)
   1c4d3:	85 f6                	test   %esi,%esi
   1c4d5:	0f 9f c2             	setg   %dl
   1c4d8:	84 d1                	test   %dl,%cl
   1c4da:	74 08                	je     1c4e4 <__gdtoa+0x964>
   1c4dc:	39 f0                	cmp    %esi,%eax
   1c4de:	0f 8f b7 05 00 00    	jg     1ca9b <__gdtoa+0xf1b>
   1c4e4:	8b 4c 24 50          	mov    0x50(%rsp),%ecx
   1c4e8:	01 44 24 48          	add    %eax,0x48(%rsp)
   1c4ec:	8b 54 24 68          	mov    0x68(%rsp),%edx
   1c4f0:	01 c8                	add    %ecx,%eax
   1c4f2:	89 4c 24 70          	mov    %ecx,0x70(%rsp)
   1c4f6:	89 44 24 50          	mov    %eax,0x50(%rsp)
   1c4fa:	bf 01 00 00 00       	mov    $0x1,%edi
   1c4ff:	89 94 24 90 00 00 00 	mov    %edx,0x90(%rsp)
   1c506:	44 89 5c 24 7c       	mov    %r11d,0x7c(%rsp)
   1c50b:	e8 f0 e6 ff ff       	call   1ac00 <__i2b_D2A>
   1c510:	44 8b 5c 24 7c       	mov    0x7c(%rsp),%r11d
   1c515:	8b 94 24 90 00 00 00 	mov    0x90(%rsp),%edx
   1c51c:	48 85 c0             	test   %rax,%rax
   1c51f:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1c524:	0f 84 de f9 ff ff    	je     1bf08 <__gdtoa+0x388>
   1c52a:	8b 4c 24 70          	mov    0x70(%rsp),%ecx
   1c52e:	85 c9                	test   %ecx,%ecx
   1c530:	7e 26                	jle    1c558 <__gdtoa+0x9d8>
   1c532:	8b 74 24 48          	mov    0x48(%rsp),%esi
   1c536:	85 f6                	test   %esi,%esi
   1c538:	7e 1e                	jle    1c558 <__gdtoa+0x9d8>
   1c53a:	39 f1                	cmp    %esi,%ecx
   1c53c:	89 f0                	mov    %esi,%eax
   1c53e:	0f 4e c1             	cmovle %ecx,%eax
   1c541:	29 44 24 50          	sub    %eax,0x50(%rsp)
   1c545:	29 c1                	sub    %eax,%ecx
   1c547:	29 c6                	sub    %eax,%esi
   1c549:	89 84 24 a4 00 00 00 	mov    %eax,0xa4(%rsp)
   1c550:	89 4c 24 70          	mov    %ecx,0x70(%rsp)
   1c554:	89 74 24 48          	mov    %esi,0x48(%rsp)
   1c558:	8b 44 24 68          	mov    0x68(%rsp),%eax
   1c55c:	85 c0                	test   %eax,%eax
   1c55e:	7e 20                	jle    1c580 <__gdtoa+0xa00>
   1c560:	8b 44 24 60          	mov    0x60(%rsp),%eax
   1c564:	85 c0                	test   %eax,%eax
   1c566:	0f 84 bc 07 00 00    	je     1cd28 <__gdtoa+0x11a8>
   1c56c:	85 d2                	test   %edx,%edx
   1c56e:	0f 8f 4c 08 00 00    	jg     1cdc0 <__gdtoa+0x1240>
   1c574:	8b 74 24 68          	mov    0x68(%rsp),%esi
   1c578:	29 d6                	sub    %edx,%esi
   1c57a:	0f 85 7d 09 00 00    	jne    1cefd <__gdtoa+0x137d>
   1c580:	bf 01 00 00 00       	mov    $0x1,%edi
   1c585:	44 89 5c 24 7c       	mov    %r11d,0x7c(%rsp)
   1c58a:	e8 71 e6 ff ff       	call   1ac00 <__i2b_D2A>
   1c58f:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   1c594:	48 89 c7             	mov    %rax,%rdi
   1c597:	48 85 c0             	test   %rax,%rax
   1c59a:	0f 84 68 f9 ff ff    	je     1bf08 <__gdtoa+0x388>
   1c5a0:	44 8b 5c 24 7c       	mov    0x7c(%rsp),%r11d
   1c5a5:	45 85 db             	test   %r11d,%r11d
   1c5a8:	0f 8f 4a 05 00 00    	jg     1caf8 <__gdtoa+0xf78>
   1c5ae:	41 83 fe 01          	cmp    $0x1,%r14d
   1c5b2:	75 0b                	jne    1c5bf <__gdtoa+0xa3f>
   1c5b4:	83 7c 24 10 01       	cmpl   $0x1,0x10(%rsp)
   1c5b9:	0f 8e 6d 0a 00 00    	jle    1d02c <__gdtoa+0x14ac>
   1c5bf:	45 31 f6             	xor    %r14d,%r14d
   1c5c2:	45 85 db             	test   %r11d,%r11d
   1c5c5:	0f 85 5c 05 00 00    	jne    1cb27 <__gdtoa+0xfa7>
   1c5cb:	b8 1b 00 00 00       	mov    $0x1b,%eax
   1c5d0:	44 8b 54 24 50       	mov    0x50(%rsp),%r10d
   1c5d5:	2b 44 24 48          	sub    0x48(%rsp),%eax
   1c5d9:	83 e0 1f             	and    $0x1f,%eax
   1c5dc:	41 01 c2             	add    %eax,%r10d
   1c5df:	89 84 24 a4 00 00 00 	mov    %eax,0xa4(%rsp)
   1c5e6:	41 89 c7             	mov    %eax,%r15d
   1c5e9:	89 c6                	mov    %eax,%esi
   1c5eb:	45 85 d2             	test   %r10d,%r10d
   1c5ee:	0f 8f 5c 05 00 00    	jg     1cb50 <__gdtoa+0xfd0>
   1c5f4:	03 74 24 48          	add    0x48(%rsp),%esi
   1c5f8:	85 f6                	test   %esi,%esi
   1c5fa:	0f 8f 78 05 00 00    	jg     1cb78 <__gdtoa+0xff8>
   1c600:	8b 84 24 94 00 00 00 	mov    0x94(%rsp),%eax
   1c607:	85 c0                	test   %eax,%eax
   1c609:	0f 85 41 07 00 00    	jne    1cd50 <__gdtoa+0x11d0>
   1c60f:	44 8b 54 24 38       	mov    0x38(%rsp),%r10d
   1c614:	45 85 d2             	test   %r10d,%r10d
   1c617:	0f 8f e3 01 00 00    	jg     1c800 <__gdtoa+0xc80>
   1c61d:	83 7c 24 10 02       	cmpl   $0x2,0x10(%rsp)
   1c622:	0f 8e d8 01 00 00    	jle    1c800 <__gdtoa+0xc80>
   1c628:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
   1c62d:	31 d2                	xor    %edx,%edx
   1c62f:	be 05 00 00 00       	mov    $0x5,%esi
   1c634:	e8 97 e4 ff ff       	call   1aad0 <__multadd_D2A>
   1c639:	49 89 c6             	mov    %rax,%r14
   1c63c:	48 85 c0             	test   %rax,%rax
   1c63f:	0f 84 c3 f8 ff ff    	je     1bf08 <__gdtoa+0x388>
   1c645:	44 8b 4c 24 38       	mov    0x38(%rsp),%r9d
   1c64a:	45 85 c9             	test   %r9d,%r9d
   1c64d:	0f 85 a9 00 00 00    	jne    1c6fc <__gdtoa+0xb7c>
   1c653:	48 89 c6             	mov    %rax,%rsi
   1c656:	4c 89 ef             	mov    %r13,%rdi
   1c659:	e8 b2 ea ff ff       	call   1b110 <__cmp_D2A>
   1c65e:	85 c0                	test   %eax,%eax
   1c660:	0f 8e 96 00 00 00    	jle    1c6fc <__gdtoa+0xb7c>
   1c666:	44 8b 7c 24 78       	mov    0x78(%rsp),%r15d
   1c66b:	41 83 c7 02          	add    $0x2,%r15d
   1c66f:	e9 f4 fa ff ff       	jmp    1c168 <__gdtoa+0x5e8>
   1c674:	0f 1f 40 00          	nopl   0x0(%rax)
   1c678:	83 f8 03             	cmp    $0x3,%eax
   1c67b:	0f 85 80 fb ff ff    	jne    1c201 <__gdtoa+0x681>
   1c681:	c7 44 24 60 00 00 00 	movl   $0x0,0x60(%rsp)
   1c688:	00 
   1c689:	8b 44 24 28          	mov    0x28(%rsp),%eax
   1c68d:	03 44 24 78          	add    0x78(%rsp),%eax
   1c691:	89 84 24 9c 00 00 00 	mov    %eax,0x9c(%rsp)
   1c698:	83 c0 01             	add    $0x1,%eax
   1c69b:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1c69f:	85 c0                	test   %eax,%eax
   1c6a1:	0f 8e 39 04 00 00    	jle    1cae0 <__gdtoa+0xf60>
   1c6a7:	89 84 24 a4 00 00 00 	mov    %eax,0xa4(%rsp)
   1c6ae:	89 c7                	mov    %eax,%edi
   1c6b0:	e9 d9 f9 ff ff       	jmp    1c08e <__gdtoa+0x50e>
   1c6b5:	0f 1f 00             	nopl   (%rax)
   1c6b8:	66 0f ef c9          	pxor   %xmm1,%xmm1
   1c6bc:	f2 41 0f 2a cb       	cvtsi2sd %r11d,%xmm1
   1c6c1:	66 0f 2e c8          	ucomisd %xmm0,%xmm1
   1c6c5:	7a 06                	jp     1c6cd <__gdtoa+0xb4d>
   1c6c7:	0f 84 28 f7 ff ff    	je     1bdf5 <__gdtoa+0x275>
   1c6cd:	41 83 eb 01          	sub    $0x1,%r11d
   1c6d1:	e9 1f f7 ff ff       	jmp    1bdf5 <__gdtoa+0x275>
   1c6d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1c6dd:	00 00 00 
   1c6e0:	c7 44 24 60 01 00 00 	movl   $0x1,0x60(%rsp)
   1c6e7:	00 
   1c6e8:	eb 9f                	jmp    1c689 <__gdtoa+0xb09>
   1c6ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1c6f0:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   1c6f7:	00 00 
   1c6f9:	45 31 f6             	xor    %r14d,%r14d
   1c6fc:	44 8b 7c 24 28       	mov    0x28(%rsp),%r15d
   1c701:	c7 44 24 20 10 00 00 	movl   $0x10,0x20(%rsp)
   1c708:	00 
   1c709:	4c 89 e0             	mov    %r12,%rax
   1c70c:	41 f7 df             	neg    %r15d
   1c70f:	e9 66 fa ff ff       	jmp    1c17a <__gdtoa+0x5fa>
   1c714:	0f 1f 40 00          	nopl   0x0(%rax)
   1c718:	8b 74 24 78          	mov    0x78(%rsp),%esi
   1c71c:	66 0f ef ff          	pxor   %xmm7,%xmm7
   1c720:	f2 0f 10 84 24 88 00 	movsd  0x88(%rsp),%xmm0
   1c727:	00 00 
   1c729:	c7 84 24 a4 00 00 00 	movl   $0x1,0xa4(%rsp)
   1c730:	01 00 00 00 
   1c734:	49 8d 44 24 01       	lea    0x1(%r12),%rax
   1c739:	66 0f 28 c8          	movapd %xmm0,%xmm1
   1c73d:	83 c6 01             	add    $0x1,%esi
   1c740:	f2 0f 5e ca          	divsd  %xmm2,%xmm1
   1c744:	41 89 f7             	mov    %esi,%r15d
   1c747:	f2 0f 2c c9          	cvttsd2si %xmm1,%ecx
   1c74b:	66 0f ef c9          	pxor   %xmm1,%xmm1
   1c74f:	f2 0f 2a c9          	cvtsi2sd %ecx,%xmm1
   1c753:	8d 51 30             	lea    0x30(%rcx),%edx
   1c756:	41 88 14 24          	mov    %dl,(%r12)
   1c75a:	f2 0f 59 ca          	mulsd  %xmm2,%xmm1
   1c75e:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   1c762:	66 0f 2e c7          	ucomisd %xmm7,%xmm0
   1c766:	0f 8b d8 0a 00 00    	jnp    1d244 <__gdtoa+0x16c4>
   1c76c:	f2 0f 10 1d 04 a6 00 	movsd  0xa604(%rip),%xmm3        # 26d78 <xdigs_lower.3362+0x48>
   1c773:	00 
   1c774:	0f 1f 40 00          	nopl   0x0(%rax)
   1c778:	8b 94 24 a4 00 00 00 	mov    0xa4(%rsp),%edx
   1c77f:	3b 54 24 38          	cmp    0x38(%rsp),%edx
   1c783:	0f 84 77 04 00 00    	je     1cc00 <__gdtoa+0x1080>
   1c789:	f2 0f 59 c3          	mulsd  %xmm3,%xmm0
   1c78d:	66 0f ef ed          	pxor   %xmm5,%xmm5
   1c791:	83 c2 01             	add    $0x1,%edx
   1c794:	48 83 c0 01          	add    $0x1,%rax
   1c798:	89 94 24 a4 00 00 00 	mov    %edx,0xa4(%rsp)
   1c79f:	66 0f 28 c8          	movapd %xmm0,%xmm1
   1c7a3:	f2 0f 5e ca          	divsd  %xmm2,%xmm1
   1c7a7:	f2 0f 2c c9          	cvttsd2si %xmm1,%ecx
   1c7ab:	66 0f ef c9          	pxor   %xmm1,%xmm1
   1c7af:	f2 0f 2a c9          	cvtsi2sd %ecx,%xmm1
   1c7b3:	8d 51 30             	lea    0x30(%rcx),%edx
   1c7b6:	88 50 ff             	mov    %dl,-0x1(%rax)
   1c7b9:	f2 0f 59 ca          	mulsd  %xmm2,%xmm1
   1c7bd:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
   1c7c1:	66 0f 2e c5          	ucomisd %xmm5,%xmm0
   1c7c5:	7a b1                	jp     1c778 <__gdtoa+0xbf8>
   1c7c7:	0f 84 db f9 ff ff    	je     1c1a8 <__gdtoa+0x628>
   1c7cd:	eb a9                	jmp    1c778 <__gdtoa+0xbf8>
   1c7cf:	90                   	nop
   1c7d0:	8b 44 24 50          	mov    0x50(%rsp),%eax
   1c7d4:	8b 54 24 68          	mov    0x68(%rsp),%edx
   1c7d8:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   1c7df:	00 00 
   1c7e1:	89 44 24 70          	mov    %eax,0x70(%rsp)
   1c7e5:	e9 40 fd ff ff       	jmp    1c52a <__gdtoa+0x9aa>
   1c7ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1c7f0:	c7 44 24 60 01 00 00 	movl   $0x1,0x60(%rsp)
   1c7f7:	00 
   1c7f8:	e9 6d f8 ff ff       	jmp    1c06a <__gdtoa+0x4ea>
   1c7fd:	0f 1f 00             	nopl   (%rax)
   1c800:	44 8b 44 24 60       	mov    0x60(%rsp),%r8d
   1c805:	45 85 c0             	test   %r8d,%r8d
   1c808:	0f 84 2a 04 00 00    	je     1cc38 <__gdtoa+0x10b8>
   1c80e:	8b 74 24 70          	mov    0x70(%rsp),%esi
   1c812:	44 01 fe             	add    %r15d,%esi
   1c815:	85 f6                	test   %esi,%esi
   1c817:	0f 8f 91 07 00 00    	jg     1cfae <__gdtoa+0x142e>
   1c81d:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   1c822:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   1c827:	45 85 f6             	test   %r14d,%r14d
   1c82a:	0f 85 8c f6 ff ff    	jne    1bebc <__gdtoa+0x33c>
   1c830:	4c 89 64 24 28       	mov    %r12,0x28(%rsp)
   1c835:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
   1c83a:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
   1c83f:	48 89 5c 24 60       	mov    %rbx,0x60(%rsp)
   1c844:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
   1c849:	48 89 6c 24 70       	mov    %rbp,0x70(%rsp)
   1c84e:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
   1c853:	c7 84 24 a4 00 00 00 	movl   $0x1,0xa4(%rsp)
   1c85a:	01 00 00 00 
   1c85e:	e9 cc 00 00 00       	jmp    1c92f <__gdtoa+0xdaf>
   1c863:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1c868:	48 89 c7             	mov    %rax,%rdi
   1c86b:	e8 70 e1 ff ff       	call   1a9e0 <__Bfree_D2A>
   1c870:	b9 01 00 00 00       	mov    $0x1,%ecx
   1c875:	45 85 f6             	test   %r14d,%r14d
   1c878:	0f 88 a9 08 00 00    	js     1d127 <__gdtoa+0x15a7>
   1c87e:	44 0b 74 24 10       	or     0x10(%rsp),%r14d
   1c883:	75 0e                	jne    1c893 <__gdtoa+0xd13>
   1c885:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1c88a:	f6 00 01             	testb  $0x1,(%rax)
   1c88d:	0f 84 94 08 00 00    	je     1d127 <__gdtoa+0x15a7>
   1c893:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1c898:	4c 8d 70 01          	lea    0x1(%rax),%r14
   1c89c:	4d 89 f7             	mov    %r14,%r15
   1c89f:	85 c9                	test   %ecx,%ecx
   1c8a1:	7e 0b                	jle    1c8ae <__gdtoa+0xd2e>
   1c8a3:	83 7c 24 5c 02       	cmpl   $0x2,0x5c(%rsp)
   1c8a8:	0f 85 a1 09 00 00    	jne    1d24f <__gdtoa+0x16cf>
   1c8ae:	0f b6 44 24 30       	movzbl 0x30(%rsp),%eax
   1c8b3:	41 88 46 ff          	mov    %al,-0x1(%r14)
   1c8b7:	8b 44 24 38          	mov    0x38(%rsp),%eax
   1c8bb:	39 84 24 a4 00 00 00 	cmp    %eax,0xa4(%rsp)
   1c8c2:	0f 84 d6 09 00 00    	je     1d29e <__gdtoa+0x171e>
   1c8c8:	4c 89 ef             	mov    %r13,%rdi
   1c8cb:	31 d2                	xor    %edx,%edx
   1c8cd:	be 0a 00 00 00       	mov    $0xa,%esi
   1c8d2:	e8 f9 e1 ff ff       	call   1aad0 <__multadd_D2A>
   1c8d7:	49 89 c5             	mov    %rax,%r13
   1c8da:	48 85 c0             	test   %rax,%rax
   1c8dd:	0f 84 25 f6 ff ff    	je     1bf08 <__gdtoa+0x388>
   1c8e3:	31 d2                	xor    %edx,%edx
   1c8e5:	be 0a 00 00 00       	mov    $0xa,%esi
   1c8ea:	48 89 ef             	mov    %rbp,%rdi
   1c8ed:	4c 39 e5             	cmp    %r12,%rbp
   1c8f0:	0f 84 7a 01 00 00    	je     1ca70 <__gdtoa+0xef0>
   1c8f6:	e8 d5 e1 ff ff       	call   1aad0 <__multadd_D2A>
   1c8fb:	48 89 c5             	mov    %rax,%rbp
   1c8fe:	48 85 c0             	test   %rax,%rax
   1c901:	0f 84 01 f6 ff ff    	je     1bf08 <__gdtoa+0x388>
   1c907:	4c 89 e7             	mov    %r12,%rdi
   1c90a:	31 d2                	xor    %edx,%edx
   1c90c:	be 0a 00 00 00       	mov    $0xa,%esi
   1c911:	e8 ba e1 ff ff       	call   1aad0 <__multadd_D2A>
   1c916:	49 89 c4             	mov    %rax,%r12
   1c919:	48 85 c0             	test   %rax,%rax
   1c91c:	0f 84 e6 f5 ff ff    	je     1bf08 <__gdtoa+0x388>
   1c922:	83 84 24 a4 00 00 00 	addl   $0x1,0xa4(%rsp)
   1c929:	01 
   1c92a:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
   1c92f:	48 89 de             	mov    %rbx,%rsi
   1c932:	4c 89 ef             	mov    %r13,%rdi
   1c935:	e8 36 c2 ff ff       	call   18b70 <__quorem_D2A>
   1c93a:	48 89 ee             	mov    %rbp,%rsi
   1c93d:	4c 89 ef             	mov    %r13,%rdi
   1c940:	41 89 c7             	mov    %eax,%r15d
   1c943:	8d 40 30             	lea    0x30(%rax),%eax
   1c946:	89 44 24 30          	mov    %eax,0x30(%rsp)
   1c94a:	e8 c1 e7 ff ff       	call   1b110 <__cmp_D2A>
   1c94f:	4c 89 e6             	mov    %r12,%rsi
   1c952:	48 89 df             	mov    %rbx,%rdi
   1c955:	41 89 c6             	mov    %eax,%r14d
   1c958:	e8 03 e8 ff ff       	call   1b160 <__diff_D2A>
   1c95d:	48 85 c0             	test   %rax,%rax
   1c960:	0f 84 a2 f5 ff ff    	je     1bf08 <__gdtoa+0x388>
   1c966:	8b 78 10             	mov    0x10(%rax),%edi
   1c969:	85 ff                	test   %edi,%edi
   1c96b:	0f 85 f7 fe ff ff    	jne    1c868 <__gdtoa+0xce8>
   1c971:	48 89 c6             	mov    %rax,%rsi
   1c974:	4c 89 ef             	mov    %r13,%rdi
   1c977:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   1c97c:	e8 8f e7 ff ff       	call   1b110 <__cmp_D2A>
   1c981:	4c 8b 44 24 48       	mov    0x48(%rsp),%r8
   1c986:	89 44 24 40          	mov    %eax,0x40(%rsp)
   1c98a:	4c 89 c7             	mov    %r8,%rdi
   1c98d:	e8 4e e0 ff ff       	call   1a9e0 <__Bfree_D2A>
   1c992:	8b 4c 24 10          	mov    0x10(%rsp),%ecx
   1c996:	0b 4c 24 40          	or     0x40(%rsp),%ecx
   1c99a:	0f 85 e5 0a 00 00    	jne    1d485 <__gdtoa+0x1905>
   1c9a0:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1c9a5:	8b 00                	mov    (%rax),%eax
   1c9a7:	89 44 24 40          	mov    %eax,0x40(%rsp)
   1c9ab:	83 e0 01             	and    $0x1,%eax
   1c9ae:	0b 44 24 5c          	or     0x5c(%rsp),%eax
   1c9b2:	0f 85 bd fe ff ff    	jne    1c875 <__gdtoa+0xcf5>
   1c9b8:	8b 54 24 30          	mov    0x30(%rsp),%edx
   1c9bc:	48 8b 5c 24 60       	mov    0x60(%rsp),%rbx
   1c9c1:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
   1c9c6:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   1c9cb:	48 8b 6c 24 70       	mov    0x70(%rsp),%rbp
   1c9d0:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   1c9d5:	83 fa 39             	cmp    $0x39,%edx
   1c9d8:	0f 84 b3 09 00 00    	je     1d391 <__gdtoa+0x1811>
   1c9de:	45 85 f6             	test   %r14d,%r14d
   1c9e1:	0f 8e 77 0a 00 00    	jle    1d45e <__gdtoa+0x18de>
   1c9e7:	41 8d 57 31          	lea    0x31(%r15),%edx
   1c9eb:	b9 20 00 00 00       	mov    $0x20,%ecx
   1c9f0:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   1c9f5:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   1c9fa:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
   1c9fe:	88 16                	mov    %dl,(%rsi)
   1ca00:	48 8d 46 01          	lea    0x1(%rsi),%rax
   1ca04:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   1ca09:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
   1ca0e:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
   1ca13:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1ca18:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1ca1d:	e8 be df ff ff       	call   1a9e0 <__Bfree_D2A>
   1ca22:	44 8b 7c 24 78       	mov    0x78(%rsp),%r15d
   1ca27:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
   1ca2c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1ca31:	41 83 c7 01          	add    $0x1,%r15d
   1ca35:	48 85 c9             	test   %rcx,%rcx
   1ca38:	0f 84 6a f7 ff ff    	je     1c1a8 <__gdtoa+0x628>
   1ca3e:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   1ca43:	4d 85 d2             	test   %r10,%r10
   1ca46:	0f 84 48 f7 ff ff    	je     1c194 <__gdtoa+0x614>
   1ca4c:	49 39 ca             	cmp    %rcx,%r10
   1ca4f:	0f 84 3f f7 ff ff    	je     1c194 <__gdtoa+0x614>
   1ca55:	4c 89 d7             	mov    %r10,%rdi
   1ca58:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1ca5d:	e8 7e df ff ff       	call   1a9e0 <__Bfree_D2A>
   1ca62:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1ca67:	e9 28 f7 ff ff       	jmp    1c194 <__gdtoa+0x614>
   1ca6c:	0f 1f 40 00          	nopl   0x0(%rax)
   1ca70:	e8 5b e0 ff ff       	call   1aad0 <__multadd_D2A>
   1ca75:	48 89 c5             	mov    %rax,%rbp
   1ca78:	48 85 c0             	test   %rax,%rax
   1ca7b:	0f 84 87 f4 ff ff    	je     1bf08 <__gdtoa+0x388>
   1ca81:	49 89 c4             	mov    %rax,%r12
   1ca84:	e9 99 fe ff ff       	jmp    1c922 <__gdtoa+0xda2>
   1ca89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1ca90:	83 7c 24 10 01       	cmpl   $0x1,0x10(%rsp)
   1ca95:	0f 8e 49 fa ff ff    	jle    1c4e4 <__gdtoa+0x964>
   1ca9b:	8b 44 24 38          	mov    0x38(%rsp),%eax
   1ca9f:	8b 4c 24 68          	mov    0x68(%rsp),%ecx
   1caa3:	83 e8 01             	sub    $0x1,%eax
   1caa6:	39 c1                	cmp    %eax,%ecx
   1caa8:	0f 8c d1 04 00 00    	jl     1cf7f <__gdtoa+0x13ff>
   1caae:	29 c1                	sub    %eax,%ecx
   1cab0:	89 ca                	mov    %ecx,%edx
   1cab2:	8b 44 24 38          	mov    0x38(%rsp),%eax
   1cab6:	85 c0                	test   %eax,%eax
   1cab8:	0f 88 d4 04 00 00    	js     1cf92 <__gdtoa+0x1412>
   1cabe:	8b 4c 24 50          	mov    0x50(%rsp),%ecx
   1cac2:	01 44 24 48          	add    %eax,0x48(%rsp)
   1cac6:	89 84 24 a4 00 00 00 	mov    %eax,0xa4(%rsp)
   1cacd:	01 c8                	add    %ecx,%eax
   1cacf:	89 4c 24 70          	mov    %ecx,0x70(%rsp)
   1cad3:	89 44 24 50          	mov    %eax,0x50(%rsp)
   1cad7:	e9 1e fa ff ff       	jmp    1c4fa <__gdtoa+0x97a>
   1cadc:	0f 1f 40 00          	nopl   0x0(%rax)
   1cae0:	c7 84 24 a4 00 00 00 	movl   $0x1,0xa4(%rsp)
   1cae7:	01 00 00 00 
   1caeb:	bf 01 00 00 00       	mov    $0x1,%edi
   1caf0:	e9 99 f5 ff ff       	jmp    1c08e <__gdtoa+0x50e>
   1caf5:	0f 1f 00             	nopl   (%rax)
   1caf8:	44 89 de             	mov    %r11d,%esi
   1cafb:	e8 60 e3 ff ff       	call   1ae60 <__pow5mult_D2A>
   1cb00:	44 8b 5c 24 7c       	mov    0x7c(%rsp),%r11d
   1cb05:	48 85 c0             	test   %rax,%rax
   1cb08:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   1cb0d:	0f 84 f5 f3 ff ff    	je     1bf08 <__gdtoa+0x388>
   1cb13:	41 83 fe 01          	cmp    $0x1,%r14d
   1cb17:	75 0b                	jne    1cb24 <__gdtoa+0xfa4>
   1cb19:	83 7c 24 10 01       	cmpl   $0x1,0x10(%rsp)
   1cb1e:	0f 8e d1 05 00 00    	jle    1d0f5 <__gdtoa+0x1575>
   1cb24:	45 31 f6             	xor    %r14d,%r14d
   1cb27:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
   1cb2c:	8b 41 14             	mov    0x14(%rcx),%eax
   1cb2f:	89 44 24 30          	mov    %eax,0x30(%rsp)
   1cb33:	83 e8 01             	sub    $0x1,%eax
   1cb36:	48 98                	cltq   
   1cb38:	8b 7c 81 18          	mov    0x18(%rcx,%rax,4),%edi
   1cb3c:	e8 5f e0 ff ff       	call   1aba0 <__hi0bits_D2A>
   1cb41:	83 e8 04             	sub    $0x4,%eax
   1cb44:	e9 87 fa ff ff       	jmp    1c5d0 <__gdtoa+0xa50>
   1cb49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1cb50:	4c 89 ef             	mov    %r13,%rdi
   1cb53:	44 89 d6             	mov    %r10d,%esi
   1cb56:	e8 75 e4 ff ff       	call   1afd0 <__lshift_D2A>
   1cb5b:	49 89 c5             	mov    %rax,%r13
   1cb5e:	48 85 c0             	test   %rax,%rax
   1cb61:	0f 84 a1 f3 ff ff    	je     1bf08 <__gdtoa+0x388>
   1cb67:	8b b4 24 a4 00 00 00 	mov    0xa4(%rsp),%esi
   1cb6e:	e9 81 fa ff ff       	jmp    1c5f4 <__gdtoa+0xa74>
   1cb73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1cb78:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
   1cb7d:	e8 4e e4 ff ff       	call   1afd0 <__lshift_D2A>
   1cb82:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   1cb87:	48 85 c0             	test   %rax,%rax
   1cb8a:	0f 85 70 fa ff ff    	jne    1c600 <__gdtoa+0xa80>
   1cb90:	e9 73 f3 ff ff       	jmp    1bf08 <__gdtoa+0x388>
   1cb95:	66 0f 28 c8          	movapd %xmm0,%xmm1
   1cb99:	f2 0f 58 c8          	addsd  %xmm0,%xmm1
   1cb9d:	f2 0f 58 0d db a1 00 	addsd  0xa1db(%rip),%xmm1        # 26d80 <xdigs_lower.3362+0x50>
   1cba4:	00 
   1cba5:	66 48 0f 7e ca       	movq   %xmm1,%rdx
   1cbaa:	66 48 0f 7e c8       	movq   %xmm1,%rax
   1cbaf:	48 c1 ea 20          	shr    $0x20,%rdx
   1cbb3:	89 c0                	mov    %eax,%eax
   1cbb5:	81 ea 00 00 40 03    	sub    $0x3400000,%edx
   1cbbb:	48 c1 e2 20          	shl    $0x20,%rdx
   1cbbf:	48 09 d0             	or     %rdx,%rax
   1cbc2:	f2 0f 5c 05 be a1 00 	subsd  0xa1be(%rip),%xmm0        # 26d88 <xdigs_lower.3362+0x58>
   1cbc9:	00 
   1cbca:	66 48 0f 6e c8       	movq   %rax,%xmm1
   1cbcf:	66 0f 2f c1          	comisd %xmm1,%xmm0
   1cbd3:	0f 87 05 04 00 00    	ja     1cfde <__gdtoa+0x145e>
   1cbd9:	66 0f 57 0d bf a1 00 	xorpd  0xa1bf(%rip),%xmm1        # 26da0 <xdigs_lower.3362+0x70>
   1cbe0:	00 
   1cbe1:	66 0f 2f c8          	comisd %xmm0,%xmm1
   1cbe5:	0f 87 05 fb ff ff    	ja     1c6f0 <__gdtoa+0xb70>
   1cbeb:	c7 44 24 5c 00 00 00 	movl   $0x0,0x5c(%rsp)
   1cbf2:	00 
   1cbf3:	e9 ff f4 ff ff       	jmp    1c0f7 <__gdtoa+0x577>
   1cbf8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1cbff:	00 
   1cc00:	8b 7c 24 5c          	mov    0x5c(%rsp),%edi
   1cc04:	85 ff                	test   %edi,%edi
   1cc06:	0f 84 e9 03 00 00    	je     1cff5 <__gdtoa+0x1475>
   1cc0c:	c7 44 24 20 10 00 00 	movl   $0x10,0x20(%rsp)
   1cc13:	00 
   1cc14:	83 ff 01             	cmp    $0x1,%edi
   1cc17:	0f 85 8b f5 ff ff    	jne    1c1a8 <__gdtoa+0x628>
   1cc1d:	0f b6 50 ff          	movzbl -0x1(%rax),%edx
   1cc21:	e9 c2 f7 ff ff       	jmp    1c3e8 <__gdtoa+0x868>
   1cc26:	8b 84 24 9c 00 00 00 	mov    0x9c(%rsp),%eax
   1cc2d:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1cc31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1cc38:	48 89 e8             	mov    %rbp,%rax
   1cc3b:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   1cc40:	4c 89 ed             	mov    %r13,%rbp
   1cc43:	44 8b 74 24 38       	mov    0x38(%rsp),%r14d
   1cc48:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
   1cc4d:	4d 89 e7             	mov    %r12,%r15
   1cc50:	49 89 c5             	mov    %rax,%r13
   1cc53:	c7 84 24 a4 00 00 00 	movl   $0x1,0xa4(%rsp)
   1cc5a:	01 00 00 00 
   1cc5e:	eb 23                	jmp    1cc83 <__gdtoa+0x1103>
   1cc60:	48 89 ef             	mov    %rbp,%rdi
   1cc63:	31 d2                	xor    %edx,%edx
   1cc65:	be 0a 00 00 00       	mov    $0xa,%esi
   1cc6a:	e8 61 de ff ff       	call   1aad0 <__multadd_D2A>
   1cc6f:	48 89 c5             	mov    %rax,%rbp
   1cc72:	48 85 c0             	test   %rax,%rax
   1cc75:	0f 84 8d f2 ff ff    	je     1bf08 <__gdtoa+0x388>
   1cc7b:	83 84 24 a4 00 00 00 	addl   $0x1,0xa4(%rsp)
   1cc82:	01 
   1cc83:	48 89 de             	mov    %rbx,%rsi
   1cc86:	48 89 ef             	mov    %rbp,%rdi
   1cc89:	49 83 c7 01          	add    $0x1,%r15
   1cc8d:	e8 de be ff ff       	call   18b70 <__quorem_D2A>
   1cc92:	8d 50 30             	lea    0x30(%rax),%edx
   1cc95:	41 88 57 ff          	mov    %dl,-0x1(%r15)
   1cc99:	44 39 b4 24 a4 00 00 	cmp    %r14d,0xa4(%rsp)
   1cca0:	00 
   1cca1:	7c bd                	jl     1cc60 <__gdtoa+0x10e0>
   1cca3:	4c 89 e8             	mov    %r13,%rax
   1cca6:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   1ccab:	49 89 ed             	mov    %rbp,%r13
   1ccae:	45 31 d2             	xor    %r10d,%r10d
   1ccb1:	48 89 c5             	mov    %rax,%rbp
   1ccb4:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
   1ccb8:	85 c0                	test   %eax,%eax
   1ccba:	0f 84 d2 03 00 00    	je     1d092 <__gdtoa+0x1512>
   1ccc0:	83 f8 02             	cmp    $0x2,%eax
   1ccc3:	0f 84 14 04 00 00    	je     1d0dd <__gdtoa+0x155d>
   1ccc9:	41 83 7d 14 01       	cmpl   $0x1,0x14(%r13)
   1ccce:	7f 31                	jg     1cd01 <__gdtoa+0x1181>
   1ccd0:	41 8b 4d 18          	mov    0x18(%r13),%ecx
   1ccd4:	85 c9                	test   %ecx,%ecx
   1ccd6:	75 29                	jne    1cd01 <__gdtoa+0x1181>
   1ccd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1ccdf:	00 
   1cce0:	4c 89 f8             	mov    %r15,%rax
   1cce3:	49 83 ef 01          	sub    $0x1,%r15
   1cce7:	41 80 3f 30          	cmpb   $0x30,(%r15)
   1cceb:	74 f3                	je     1cce0 <__gdtoa+0x1160>
   1cced:	e9 1c fd ff ff       	jmp    1ca0e <__gdtoa+0xe8e>
   1ccf2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1ccf8:	4d 39 fc             	cmp    %r15,%r12
   1ccfb:	0f 84 54 03 00 00    	je     1d055 <__gdtoa+0x14d5>
   1cd01:	4c 89 f8             	mov    %r15,%rax
   1cd04:	4d 8d 7f ff          	lea    -0x1(%r15),%r15
   1cd08:	0f b6 50 ff          	movzbl -0x1(%rax),%edx
   1cd0c:	80 fa 39             	cmp    $0x39,%dl
   1cd0f:	74 e7                	je     1ccf8 <__gdtoa+0x1178>
   1cd11:	83 c2 01             	add    $0x1,%edx
   1cd14:	c7 44 24 20 20 00 00 	movl   $0x20,0x20(%rsp)
   1cd1b:	00 
   1cd1c:	41 88 17             	mov    %dl,(%r15)
   1cd1f:	e9 ea fc ff ff       	jmp    1ca0e <__gdtoa+0xe8e>
   1cd24:	0f 1f 40 00          	nopl   0x0(%rax)
   1cd28:	8b 74 24 68          	mov    0x68(%rsp),%esi
   1cd2c:	4c 89 ef             	mov    %r13,%rdi
   1cd2f:	44 89 5c 24 7c       	mov    %r11d,0x7c(%rsp)
   1cd34:	e8 27 e1 ff ff       	call   1ae60 <__pow5mult_D2A>
   1cd39:	44 8b 5c 24 7c       	mov    0x7c(%rsp),%r11d
   1cd3e:	48 85 c0             	test   %rax,%rax
   1cd41:	49 89 c5             	mov    %rax,%r13
   1cd44:	0f 85 36 f8 ff ff    	jne    1c580 <__gdtoa+0xa00>
   1cd4a:	e9 b9 f1 ff ff       	jmp    1bf08 <__gdtoa+0x388>
   1cd4f:	90                   	nop
   1cd50:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   1cd55:	4c 89 ef             	mov    %r13,%rdi
   1cd58:	e8 b3 e3 ff ff       	call   1b110 <__cmp_D2A>
   1cd5d:	85 c0                	test   %eax,%eax
   1cd5f:	0f 89 aa f8 ff ff    	jns    1c60f <__gdtoa+0xa8f>
   1cd65:	4c 89 ef             	mov    %r13,%rdi
   1cd68:	31 d2                	xor    %edx,%edx
   1cd6a:	be 0a 00 00 00       	mov    $0xa,%esi
   1cd6f:	83 6c 24 78 01       	subl   $0x1,0x78(%rsp)
   1cd74:	e8 57 dd ff ff       	call   1aad0 <__multadd_D2A>
   1cd79:	49 89 c5             	mov    %rax,%r13
   1cd7c:	48 85 c0             	test   %rax,%rax
   1cd7f:	0f 84 83 f1 ff ff    	je     1bf08 <__gdtoa+0x388>
   1cd85:	44 8b 5c 24 60       	mov    0x60(%rsp),%r11d
   1cd8a:	45 85 db             	test   %r11d,%r11d
   1cd8d:	0f 85 ba 05 00 00    	jne    1d34d <__gdtoa+0x17cd>
   1cd93:	8b 94 24 9c 00 00 00 	mov    0x9c(%rsp),%edx
   1cd9a:	85 d2                	test   %edx,%edx
   1cd9c:	0f 8f 84 fe ff ff    	jg     1cc26 <__gdtoa+0x10a6>
   1cda2:	83 7c 24 10 02       	cmpl   $0x2,0x10(%rsp)
   1cda7:	0f 8e 79 fe ff ff    	jle    1cc26 <__gdtoa+0x10a6>
   1cdad:	8b 84 24 9c 00 00 00 	mov    0x9c(%rsp),%eax
   1cdb4:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1cdb8:	e9 6b f8 ff ff       	jmp    1c628 <__gdtoa+0xaa8>
   1cdbd:	0f 1f 00             	nopl   (%rax)
   1cdc0:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   1cdc5:	89 d6                	mov    %edx,%esi
   1cdc7:	44 89 9c 24 90 00 00 	mov    %r11d,0x90(%rsp)
   1cdce:	00 
   1cdcf:	89 54 24 7c          	mov    %edx,0x7c(%rsp)
   1cdd3:	e8 88 e0 ff ff       	call   1ae60 <__pow5mult_D2A>
   1cdd8:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1cddd:	48 85 c0             	test   %rax,%rax
   1cde0:	0f 84 22 f1 ff ff    	je     1bf08 <__gdtoa+0x388>
   1cde6:	4c 89 ee             	mov    %r13,%rsi
   1cde9:	48 89 c7             	mov    %rax,%rdi
   1cdec:	e8 3f de ff ff       	call   1ac30 <__mult_D2A>
   1cdf1:	48 85 c0             	test   %rax,%rax
   1cdf4:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
   1cdfb:	00 
   1cdfc:	0f 84 06 f1 ff ff    	je     1bf08 <__gdtoa+0x388>
   1ce02:	4c 89 ef             	mov    %r13,%rdi
   1ce05:	e8 d6 db ff ff       	call   1a9e0 <__Bfree_D2A>
   1ce0a:	48 8b 84 24 80 00 00 	mov    0x80(%rsp),%rax
   1ce11:	00 
   1ce12:	8b 54 24 7c          	mov    0x7c(%rsp),%edx
   1ce16:	44 8b 9c 24 90 00 00 	mov    0x90(%rsp),%r11d
   1ce1d:	00 
   1ce1e:	49 89 c5             	mov    %rax,%r13
   1ce21:	e9 4e f7 ff ff       	jmp    1c574 <__gdtoa+0x9f4>
   1ce26:	f2 0f 59 e2          	mulsd  %xmm2,%xmm4
   1ce2a:	66 0f 28 c8          	movapd %xmm0,%xmm1
   1ce2e:	4c 89 e0             	mov    %r12,%rax
   1ce31:	31 ff                	xor    %edi,%edi
   1ce33:	c7 84 24 a4 00 00 00 	movl   $0x1,0xa4(%rsp)
   1ce3a:	01 00 00 00 
   1ce3e:	f2 0f 10 15 32 9f 00 	movsd  0x9f32(%rip),%xmm2        # 26d78 <xdigs_lower.3362+0x48>
   1ce45:	00 
   1ce46:	eb 19                	jmp    1ce61 <__gdtoa+0x12e1>
   1ce48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1ce4f:	00 
   1ce50:	f2 0f 59 ca          	mulsd  %xmm2,%xmm1
   1ce54:	83 c6 01             	add    $0x1,%esi
   1ce57:	44 89 c7             	mov    %r8d,%edi
   1ce5a:	89 b4 24 a4 00 00 00 	mov    %esi,0xa4(%rsp)
   1ce61:	f2 0f 2c d1          	cvttsd2si %xmm1,%edx
   1ce65:	85 d2                	test   %edx,%edx
   1ce67:	74 0f                	je     1ce78 <__gdtoa+0x12f8>
   1ce69:	66 0f ef db          	pxor   %xmm3,%xmm3
   1ce6d:	44 89 c7             	mov    %r8d,%edi
   1ce70:	f2 0f 2a da          	cvtsi2sd %edx,%xmm3
   1ce74:	f2 0f 5c cb          	subsd  %xmm3,%xmm1
   1ce78:	48 83 c0 01          	add    $0x1,%rax
   1ce7c:	83 c2 30             	add    $0x30,%edx
   1ce7f:	88 50 ff             	mov    %dl,-0x1(%rax)
   1ce82:	8b b4 24 a4 00 00 00 	mov    0xa4(%rsp),%esi
   1ce89:	44 39 d6             	cmp    %r10d,%esi
   1ce8c:	75 c2                	jne    1ce50 <__gdtoa+0x12d0>
   1ce8e:	40 84 ff             	test   %dil,%dil
   1ce91:	0f 84 87 02 00 00    	je     1d11e <__gdtoa+0x159e>
   1ce97:	f2 0f 10 05 f1 9e 00 	movsd  0x9ef1(%rip),%xmm0        # 26d90 <xdigs_lower.3362+0x60>
   1ce9e:	00 
   1ce9f:	66 0f 28 d4          	movapd %xmm4,%xmm2
   1cea3:	f2 0f 58 d0          	addsd  %xmm0,%xmm2
   1cea7:	66 0f 2f ca          	comisd %xmm2,%xmm1
   1ceab:	0f 87 5f 02 00 00    	ja     1d110 <__gdtoa+0x1590>
   1ceb1:	f2 0f 5c c4          	subsd  %xmm4,%xmm0
   1ceb5:	66 0f 2f c1          	comisd %xmm1,%xmm0
   1ceb9:	0f 86 2c fd ff ff    	jbe    1cbeb <__gdtoa+0x106b>
   1cebf:	66 0f ef ff          	pxor   %xmm7,%xmm7
   1cec3:	48 89 c2             	mov    %rax,%rdx
   1cec6:	66 0f 2e cf          	ucomisd %xmm7,%xmm1
   1ceca:	7a 06                	jp     1ced2 <__gdtoa+0x1352>
   1cecc:	0f 84 e7 04 00 00    	je     1d3b9 <__gdtoa+0x1839>
   1ced2:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
   1ced6:	c7 44 24 20 10 00 00 	movl   $0x10,0x20(%rsp)
   1cedd:	00 
   1cede:	8d 70 01             	lea    0x1(%rax),%esi
   1cee1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1cee8:	48 89 d0             	mov    %rdx,%rax
   1ceeb:	48 8d 52 ff          	lea    -0x1(%rdx),%rdx
   1ceef:	80 78 ff 30          	cmpb   $0x30,-0x1(%rax)
   1cef3:	74 f3                	je     1cee8 <__gdtoa+0x1368>
   1cef5:	41 89 f7             	mov    %esi,%r15d
   1cef8:	e9 ab f2 ff ff       	jmp    1c1a8 <__gdtoa+0x628>
   1cefd:	4c 89 ef             	mov    %r13,%rdi
   1cf00:	44 89 5c 24 68       	mov    %r11d,0x68(%rsp)
   1cf05:	e8 56 df ff ff       	call   1ae60 <__pow5mult_D2A>
   1cf0a:	44 8b 5c 24 68       	mov    0x68(%rsp),%r11d
   1cf0f:	48 85 c0             	test   %rax,%rax
   1cf12:	49 89 c5             	mov    %rax,%r13
   1cf15:	0f 85 65 f6 ff ff    	jne    1c580 <__gdtoa+0xa00>
   1cf1b:	e9 e8 ef ff ff       	jmp    1bf08 <__gdtoa+0x388>
   1cf20:	85 f6                	test   %esi,%esi
   1cf22:	0f 84 6d fc ff ff    	je     1cb95 <__gdtoa+0x1015>
   1cf28:	44 8b 94 24 9c 00 00 	mov    0x9c(%rsp),%r10d
   1cf2f:	00 
   1cf30:	45 85 d2             	test   %r10d,%r10d
   1cf33:	0f 8e b2 fc ff ff    	jle    1cbeb <__gdtoa+0x106b>
   1cf39:	f2 0f 59 05 37 9e 00 	mulsd  0x9e37(%rip),%xmm0        # 26d78 <xdigs_lower.3362+0x48>
   1cf40:	00 
   1cf41:	f2 0f 10 0d cf 9f 00 	movsd  0x9fcf(%rip),%xmm1        # 26f18 <__bigtens_D2A+0x38>
   1cf48:	00 
   1cf49:	c7 44 24 5c ff ff ff 	movl   $0xffffffff,0x5c(%rsp)
   1cf50:	ff 
   1cf51:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
   1cf55:	f2 0f 58 0d 23 9e 00 	addsd  0x9e23(%rip),%xmm1        # 26d80 <xdigs_lower.3362+0x50>
   1cf5c:	00 
   1cf5d:	66 48 0f 7e ca       	movq   %xmm1,%rdx
   1cf62:	66 48 0f 7e c8       	movq   %xmm1,%rax
   1cf67:	48 c1 ea 20          	shr    $0x20,%rdx
   1cf6b:	89 c0                	mov    %eax,%eax
   1cf6d:	81 ea 00 00 40 03    	sub    $0x3400000,%edx
   1cf73:	48 c1 e2 20          	shl    $0x20,%rdx
   1cf77:	48 09 d0             	or     %rdx,%rax
   1cf7a:	e9 7f f3 ff ff       	jmp    1c2fe <__gdtoa+0x77e>
   1cf7f:	44 2b 5c 24 68       	sub    0x68(%rsp),%r11d
   1cf84:	31 d2                	xor    %edx,%edx
   1cf86:	89 44 24 68          	mov    %eax,0x68(%rsp)
   1cf8a:	41 01 c3             	add    %eax,%r11d
   1cf8d:	e9 20 fb ff ff       	jmp    1cab2 <__gdtoa+0xf32>
   1cf92:	c7 84 24 a4 00 00 00 	movl   $0x0,0xa4(%rsp)
   1cf99:	00 00 00 00 
   1cf9d:	8b 44 24 50          	mov    0x50(%rsp),%eax
   1cfa1:	2b 44 24 38          	sub    0x38(%rsp),%eax
   1cfa5:	89 44 24 70          	mov    %eax,0x70(%rsp)
   1cfa9:	e9 4c f5 ff ff       	jmp    1c4fa <__gdtoa+0x97a>
   1cfae:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   1cfb3:	e8 18 e0 ff ff       	call   1afd0 <__lshift_D2A>
   1cfb8:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1cfbd:	48 85 c0             	test   %rax,%rax
   1cfc0:	0f 85 57 f8 ff ff    	jne    1c81d <__gdtoa+0xc9d>
   1cfc6:	e9 3d ef ff ff       	jmp    1bf08 <__gdtoa+0x388>
   1cfcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1cfd0:	41 83 c7 01          	add    $0x1,%r15d
   1cfd4:	ba 31 00 00 00       	mov    $0x31,%edx
   1cfd9:	e9 16 f4 ff ff       	jmp    1c3f4 <__gdtoa+0x874>
   1cfde:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   1cfe5:	00 00 
   1cfe7:	41 bf 02 00 00 00    	mov    $0x2,%r15d
   1cfed:	45 31 f6             	xor    %r14d,%r14d
   1cff0:	e9 73 f1 ff ff       	jmp    1c168 <__gdtoa+0x5e8>
   1cff5:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
   1cff9:	0f b6 50 ff          	movzbl -0x1(%rax),%edx
   1cffd:	66 0f 2f c2          	comisd %xmm2,%xmm0
   1d001:	0f 87 e1 f3 ff ff    	ja     1c3e8 <__gdtoa+0x868>
   1d007:	66 0f 2e c2          	ucomisd %xmm2,%xmm0
   1d00b:	7a 0b                	jp     1d018 <__gdtoa+0x1498>
   1d00d:	75 09                	jne    1d018 <__gdtoa+0x1498>
   1d00f:	80 e1 01             	and    $0x1,%cl
   1d012:	0f 85 d0 f3 ff ff    	jne    1c3e8 <__gdtoa+0x868>
   1d018:	f3 0f 1e fa          	endbr64 
   1d01c:	c7 44 24 20 10 00 00 	movl   $0x10,0x20(%rsp)
   1d023:	00 
   1d024:	48 89 c2             	mov    %rax,%rdx
   1d027:	e9 bc fe ff ff       	jmp    1cee8 <__gdtoa+0x1368>
   1d02c:	41 8b 47 04          	mov    0x4(%r15),%eax
   1d030:	45 31 f6             	xor    %r14d,%r14d
   1d033:	83 c0 01             	add    $0x1,%eax
   1d036:	3b 44 24 30          	cmp    0x30(%rsp),%eax
   1d03a:	0f 8d 82 f5 ff ff    	jge    1c5c2 <__gdtoa+0xa42>
   1d040:	83 44 24 50 01       	addl   $0x1,0x50(%rsp)
   1d045:	41 be 01 00 00 00    	mov    $0x1,%r14d
   1d04b:	83 44 24 48 01       	addl   $0x1,0x48(%rsp)
   1d050:	e9 6d f5 ff ff       	jmp    1c5c2 <__gdtoa+0xa42>
   1d055:	83 44 24 78 01       	addl   $0x1,0x78(%rsp)
   1d05a:	41 c6 04 24 31       	movb   $0x31,(%r12)
   1d05f:	c7 44 24 20 20 00 00 	movl   $0x20,0x20(%rsp)
   1d066:	00 
   1d067:	e9 a2 f9 ff ff       	jmp    1ca0e <__gdtoa+0xe8e>
   1d06c:	44 8b 7c 24 5c       	mov    0x5c(%rsp),%r15d
   1d071:	66 0f ef ff          	pxor   %xmm7,%xmm7
   1d075:	41 83 c7 01          	add    $0x1,%r15d
   1d079:	66 0f 2e c7          	ucomisd %xmm7,%xmm0
   1d07d:	7a 06                	jp     1d085 <__gdtoa+0x1505>
   1d07f:	0f 84 3c 02 00 00    	je     1d2c1 <__gdtoa+0x1741>
   1d085:	c7 44 24 20 10 00 00 	movl   $0x10,0x20(%rsp)
   1d08c:	00 
   1d08d:	e9 16 f1 ff ff       	jmp    1c1a8 <__gdtoa+0x628>
   1d092:	4c 89 ef             	mov    %r13,%rdi
   1d095:	be 01 00 00 00       	mov    $0x1,%esi
   1d09a:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   1d09f:	89 54 24 10          	mov    %edx,0x10(%rsp)
   1d0a3:	e8 28 df ff ff       	call   1afd0 <__lshift_D2A>
   1d0a8:	49 89 c5             	mov    %rax,%r13
   1d0ab:	48 85 c0             	test   %rax,%rax
   1d0ae:	0f 84 54 ee ff ff    	je     1bf08 <__gdtoa+0x388>
   1d0b4:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   1d0b9:	48 89 c7             	mov    %rax,%rdi
   1d0bc:	e8 4f e0 ff ff       	call   1b110 <__cmp_D2A>
   1d0c1:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   1d0c6:	85 c0                	test   %eax,%eax
   1d0c8:	0f 8f 33 fc ff ff    	jg     1cd01 <__gdtoa+0x1181>
   1d0ce:	75 0d                	jne    1d0dd <__gdtoa+0x155d>
   1d0d0:	8b 54 24 10          	mov    0x10(%rsp),%edx
   1d0d4:	80 e2 01             	and    $0x1,%dl
   1d0d7:	0f 85 24 fc ff ff    	jne    1cd01 <__gdtoa+0x1181>
   1d0dd:	41 83 7d 14 01       	cmpl   $0x1,0x14(%r13)
   1d0e2:	0f 8e e5 02 00 00    	jle    1d3cd <__gdtoa+0x184d>
   1d0e8:	c7 44 24 20 10 00 00 	movl   $0x10,0x20(%rsp)
   1d0ef:	00 
   1d0f0:	e9 eb fb ff ff       	jmp    1cce0 <__gdtoa+0x1160>
   1d0f5:	41 8b 47 04          	mov    0x4(%r15),%eax
   1d0f9:	83 c0 01             	add    $0x1,%eax
   1d0fc:	39 44 24 30          	cmp    %eax,0x30(%rsp)
   1d100:	0f 8f 3a ff ff ff    	jg     1d040 <__gdtoa+0x14c0>
   1d106:	e9 19 fa ff ff       	jmp    1cb24 <__gdtoa+0xfa4>
   1d10b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d110:	44 8b 7c 24 5c       	mov    0x5c(%rsp),%r15d
   1d115:	41 83 c7 01          	add    $0x1,%r15d
   1d119:	e9 ca f2 ff ff       	jmp    1c3e8 <__gdtoa+0x868>
   1d11e:	66 0f 28 c8          	movapd %xmm0,%xmm1
   1d122:	e9 70 fd ff ff       	jmp    1ce97 <__gdtoa+0x1317>
   1d127:	8b 74 24 5c          	mov    0x5c(%rsp),%esi
   1d12b:	8b 54 24 30          	mov    0x30(%rsp),%edx
   1d12f:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
   1d134:	48 8b 5c 24 60       	mov    0x60(%rsp),%rbx
   1d139:	48 8b 6c 24 70       	mov    0x70(%rsp),%rbp
   1d13e:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   1d143:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   1d148:	85 f6                	test   %esi,%esi
   1d14a:	0f 84 7e 01 00 00    	je     1d2ce <__gdtoa+0x174e>
   1d150:	41 83 7d 14 01       	cmpl   $0x1,0x14(%r13)
   1d155:	0f 8e 8f 02 00 00    	jle    1d3ea <__gdtoa+0x186a>
   1d15b:	83 7c 24 5c 02       	cmpl   $0x2,0x5c(%rsp)
   1d160:	0f 84 c2 01 00 00    	je     1d328 <__gdtoa+0x17a8>
   1d166:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
   1d16b:	4c 8b 7c 24 68       	mov    0x68(%rsp),%r15
   1d170:	48 89 6c 24 38       	mov    %rbp,0x38(%rsp)
   1d175:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
   1d17a:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
   1d17f:	48 8b 6c 24 40       	mov    0x40(%rsp),%rbp
   1d184:	eb 57                	jmp    1d1dd <__gdtoa+0x165d>
   1d186:	41 88 56 ff          	mov    %dl,-0x1(%r14)
   1d18a:	be 0a 00 00 00       	mov    $0xa,%esi
   1d18f:	31 d2                	xor    %edx,%edx
   1d191:	4c 89 e7             	mov    %r12,%rdi
   1d194:	e8 37 d9 ff ff       	call   1aad0 <__multadd_D2A>
   1d199:	48 89 c3             	mov    %rax,%rbx
   1d19c:	48 85 c0             	test   %rax,%rax
   1d19f:	0f 84 63 ed ff ff    	je     1bf08 <__gdtoa+0x388>
   1d1a5:	4c 39 e5             	cmp    %r12,%rbp
   1d1a8:	4c 89 ef             	mov    %r13,%rdi
   1d1ab:	be 0a 00 00 00       	mov    $0xa,%esi
   1d1b0:	48 0f 44 e8          	cmove  %rax,%rbp
   1d1b4:	31 d2                	xor    %edx,%edx
   1d1b6:	e8 15 d9 ff ff       	call   1aad0 <__multadd_D2A>
   1d1bb:	49 89 c5             	mov    %rax,%r13
   1d1be:	48 85 c0             	test   %rax,%rax
   1d1c1:	0f 84 41 ed ff ff    	je     1bf08 <__gdtoa+0x388>
   1d1c7:	4c 89 fe             	mov    %r15,%rsi
   1d1ca:	48 89 c7             	mov    %rax,%rdi
   1d1cd:	49 89 dc             	mov    %rbx,%r12
   1d1d0:	e8 9b b9 ff ff       	call   18b70 <__quorem_D2A>
   1d1d5:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
   1d1da:	8d 50 30             	lea    0x30(%rax),%edx
   1d1dd:	4c 89 e6             	mov    %r12,%rsi
   1d1e0:	4c 89 ff             	mov    %r15,%rdi
   1d1e3:	89 54 24 10          	mov    %edx,0x10(%rsp)
   1d1e7:	e8 24 df ff ff       	call   1b110 <__cmp_D2A>
   1d1ec:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
   1d1f1:	8b 54 24 10          	mov    0x10(%rsp),%edx
   1d1f5:	85 c0                	test   %eax,%eax
   1d1f7:	4c 8d 73 01          	lea    0x1(%rbx),%r14
   1d1fb:	7f 89                	jg     1d186 <__gdtoa+0x1606>
   1d1fd:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
   1d202:	49 89 ea             	mov    %rbp,%r10
   1d205:	4c 89 e0             	mov    %r12,%rax
   1d208:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
   1d20d:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   1d212:	48 8b 6c 24 38       	mov    0x38(%rsp),%rbp
   1d217:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   1d21c:	83 fa 39             	cmp    $0x39,%edx
   1d21f:	0f 84 75 01 00 00    	je     1d39a <__gdtoa+0x181a>
   1d225:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1d22a:	83 c2 01             	add    $0x1,%edx
   1d22d:	c7 44 24 20 20 00 00 	movl   $0x20,0x20(%rsp)
   1d234:	00 
   1d235:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   1d23a:	4c 89 f0             	mov    %r14,%rax
   1d23d:	88 11                	mov    %dl,(%rcx)
   1d23f:	e9 ca f7 ff ff       	jmp    1ca0e <__gdtoa+0xe8e>
   1d244:	0f 84 5e ef ff ff    	je     1c1a8 <__gdtoa+0x628>
   1d24a:	e9 1d f5 ff ff       	jmp    1c76c <__gdtoa+0xbec>
   1d24f:	8b 54 24 30          	mov    0x30(%rsp),%edx
   1d253:	48 8b 5c 24 60       	mov    0x60(%rsp),%rbx
   1d258:	48 89 6c 24 40       	mov    %rbp,0x40(%rsp)
   1d25d:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   1d262:	48 8b 6c 24 70       	mov    0x70(%rsp),%rbp
   1d267:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   1d26c:	83 fa 39             	cmp    $0x39,%edx
   1d26f:	0f 84 25 01 00 00    	je     1d39a <__gdtoa+0x181a>
   1d275:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1d27a:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   1d27f:	83 c2 01             	add    $0x1,%edx
   1d282:	c7 44 24 20 20 00 00 	movl   $0x20,0x20(%rsp)
   1d289:	00 
   1d28a:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   1d28f:	88 10                	mov    %dl,(%rax)
   1d291:	4c 89 f0             	mov    %r14,%rax
   1d294:	48 89 4c 24 40       	mov    %rcx,0x40(%rsp)
   1d299:	e9 70 f7 ff ff       	jmp    1ca0e <__gdtoa+0xe8e>
   1d29e:	4c 89 e0             	mov    %r12,%rax
   1d2a1:	49 89 ea             	mov    %rbp,%r10
   1d2a4:	8b 54 24 30          	mov    0x30(%rsp),%edx
   1d2a8:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   1d2ad:	48 8b 5c 24 60       	mov    0x60(%rsp),%rbx
   1d2b2:	48 8b 6c 24 70       	mov    0x70(%rsp),%rbp
   1d2b7:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1d2bc:	e9 f3 f9 ff ff       	jmp    1ccb4 <__gdtoa+0x1134>
   1d2c1:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%rsp)
   1d2c8:	00 
   1d2c9:	e9 da ee ff ff       	jmp    1c1a8 <__gdtoa+0x628>
   1d2ce:	85 c9                	test   %ecx,%ecx
   1d2d0:	7e 4b                	jle    1d31d <__gdtoa+0x179d>
   1d2d2:	4c 89 ef             	mov    %r13,%rdi
   1d2d5:	be 01 00 00 00       	mov    $0x1,%esi
   1d2da:	89 54 24 10          	mov    %edx,0x10(%rsp)
   1d2de:	e8 ed dc ff ff       	call   1afd0 <__lshift_D2A>
   1d2e3:	49 89 c5             	mov    %rax,%r13
   1d2e6:	48 85 c0             	test   %rax,%rax
   1d2e9:	0f 84 19 ec ff ff    	je     1bf08 <__gdtoa+0x388>
   1d2ef:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   1d2f4:	48 89 c7             	mov    %rax,%rdi
   1d2f7:	e8 14 de ff ff       	call   1b110 <__cmp_D2A>
   1d2fc:	8b 54 24 10          	mov    0x10(%rsp),%edx
   1d300:	85 c0                	test   %eax,%eax
   1d302:	0f 8e 3e 01 00 00    	jle    1d446 <__gdtoa+0x18c6>
   1d308:	83 fa 39             	cmp    $0x39,%edx
   1d30b:	0f 84 80 00 00 00    	je     1d391 <__gdtoa+0x1811>
   1d311:	c7 44 24 5c 20 00 00 	movl   $0x20,0x5c(%rsp)
   1d318:	00 
   1d319:	41 8d 57 31          	lea    0x31(%r15),%edx
   1d31d:	41 83 7d 14 01       	cmpl   $0x1,0x14(%r13)
   1d322:	0f 8e f2 00 00 00    	jle    1d41a <__gdtoa+0x189a>
   1d328:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1d32d:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   1d332:	c7 44 24 20 10 00 00 	movl   $0x10,0x20(%rsp)
   1d339:	00 
   1d33a:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1d33f:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1d344:	4c 8d 70 01          	lea    0x1(%rax),%r14
   1d348:	e9 e8 fe ff ff       	jmp    1d235 <__gdtoa+0x16b5>
   1d34d:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
   1d352:	31 d2                	xor    %edx,%edx
   1d354:	be 0a 00 00 00       	mov    $0xa,%esi
   1d359:	e8 72 d7 ff ff       	call   1aad0 <__multadd_D2A>
   1d35e:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1d363:	48 85 c0             	test   %rax,%rax
   1d366:	0f 84 9c eb ff ff    	je     1bf08 <__gdtoa+0x388>
   1d36c:	83 bc 24 9c 00 00 00 	cmpl   $0x0,0x9c(%rsp)
   1d373:	00 
   1d374:	7f 0b                	jg     1d381 <__gdtoa+0x1801>
   1d376:	83 7c 24 10 02       	cmpl   $0x2,0x10(%rsp)
   1d37b:	0f 8f 2c fa ff ff    	jg     1cdad <__gdtoa+0x122d>
   1d381:	8b 84 24 9c 00 00 00 	mov    0x9c(%rsp),%eax
   1d388:	89 44 24 38          	mov    %eax,0x38(%rsp)
   1d38c:	e9 7d f4 ff ff       	jmp    1c80e <__gdtoa+0xc8e>
   1d391:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1d396:	4c 8d 70 01          	lea    0x1(%rax),%r14
   1d39a:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1d39f:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   1d3a4:	4d 89 f7             	mov    %r14,%r15
   1d3a7:	c6 00 39             	movb   $0x39,(%rax)
   1d3aa:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1d3af:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1d3b4:	e9 48 f9 ff ff       	jmp    1cd01 <__gdtoa+0x1181>
   1d3b9:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
   1d3bd:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%rsp)
   1d3c4:	00 
   1d3c5:	8d 70 01             	lea    0x1(%rax),%esi
   1d3c8:	e9 1b fb ff ff       	jmp    1cee8 <__gdtoa+0x1368>
   1d3cd:	41 83 7d 18 00       	cmpl   $0x0,0x18(%r13)
   1d3d2:	b8 10 00 00 00       	mov    $0x10,%eax
   1d3d7:	0f 44 44 24 20       	cmove  0x20(%rsp),%eax
   1d3dc:	89 44 24 20          	mov    %eax,0x20(%rsp)
   1d3e0:	e9 fb f8 ff ff       	jmp    1cce0 <__gdtoa+0x1160>
   1d3e5:	e8 56 67 ff ff       	call   13b40 <__stack_chk_fail>
   1d3ea:	41 83 7d 18 00       	cmpl   $0x0,0x18(%r13)
   1d3ef:	0f 85 66 fd ff ff    	jne    1d15b <__gdtoa+0x15db>
   1d3f5:	85 c9                	test   %ecx,%ecx
   1d3f7:	0f 8f d5 fe ff ff    	jg     1d2d2 <__gdtoa+0x1752>
   1d3fd:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1d402:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   1d407:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1d40c:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1d411:	4c 8d 70 01          	lea    0x1(%rax),%r14
   1d415:	e9 1b fe ff ff       	jmp    1d235 <__gdtoa+0x16b5>
   1d41a:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   1d41f:	41 83 7d 18 00       	cmpl   $0x0,0x18(%r13)
   1d424:	4c 8b 54 24 40       	mov    0x40(%rsp),%r10
   1d429:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   1d42e:	74 3f                	je     1d46f <__gdtoa+0x18ef>
   1d430:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1d435:	c7 44 24 20 10 00 00 	movl   $0x10,0x20(%rsp)
   1d43c:	00 
   1d43d:	4c 8d 70 01          	lea    0x1(%rax),%r14
   1d441:	e9 ef fd ff ff       	jmp    1d235 <__gdtoa+0x16b5>
   1d446:	75 09                	jne    1d451 <__gdtoa+0x18d1>
   1d448:	f6 c2 01             	test   $0x1,%dl
   1d44b:	0f 85 b7 fe ff ff    	jne    1d308 <__gdtoa+0x1788>
   1d451:	c7 44 24 5c 20 00 00 	movl   $0x20,0x5c(%rsp)
   1d458:	00 
   1d459:	e9 bf fe ff ff       	jmp    1d31d <__gdtoa+0x179d>
   1d45e:	41 83 7d 14 01       	cmpl   $0x1,0x14(%r13)
   1d463:	7e 29                	jle    1d48e <__gdtoa+0x190e>
   1d465:	b9 10 00 00 00       	mov    $0x10,%ecx
   1d46a:	e9 81 f5 ff ff       	jmp    1c9f0 <__gdtoa+0xe70>
   1d46f:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
   1d473:	89 44 24 20          	mov    %eax,0x20(%rsp)
   1d477:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1d47c:	4c 8d 70 01          	lea    0x1(%rax),%r14
   1d480:	e9 b0 fd ff ff       	jmp    1d235 <__gdtoa+0x16b5>
   1d485:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
   1d489:	e9 e7 f3 ff ff       	jmp    1c875 <__gdtoa+0xcf5>
   1d48e:	41 83 7d 18 00       	cmpl   $0x0,0x18(%r13)
   1d493:	b8 10 00 00 00       	mov    $0x10,%eax
   1d498:	0f 45 c8             	cmovne %eax,%ecx
   1d49b:	e9 50 f5 ff ff       	jmp    1c9f0 <__gdtoa+0xe70>

000000000001d4a0 <__rshift_D2A>:
   1d4a0:	f3 0f 1e fa          	endbr64 
   1d4a4:	41 54                	push   %r12
   1d4a6:	49 89 f9             	mov    %rdi,%r9
   1d4a9:	55                   	push   %rbp
   1d4aa:	53                   	push   %rbx
   1d4ab:	89 f3                	mov    %esi,%ebx
   1d4ad:	4c 63 5f 14          	movslq 0x14(%rdi),%r11
   1d4b1:	c1 fb 05             	sar    $0x5,%ebx
   1d4b4:	41 39 db             	cmp    %ebx,%r11d
   1d4b7:	7e 77                	jle    1d530 <__rshift_D2A+0x90>
   1d4b9:	48 8d 6f 18          	lea    0x18(%rdi),%rbp
   1d4bd:	41 89 f0             	mov    %esi,%r8d
   1d4c0:	48 63 db             	movslq %ebx,%rbx
   1d4c3:	4e 8d 54 9d 00       	lea    0x0(%rbp,%r11,4),%r10
   1d4c8:	48 8d 74 9d 00       	lea    0x0(%rbp,%rbx,4),%rsi
   1d4cd:	41 83 e0 1f          	and    $0x1f,%r8d
   1d4d1:	74 75                	je     1d548 <__rshift_D2A+0xa8>
   1d4d3:	8b 06                	mov    (%rsi),%eax
   1d4d5:	44 89 c1             	mov    %r8d,%ecx
   1d4d8:	41 bc 20 00 00 00    	mov    $0x20,%r12d
   1d4de:	48 8d 56 04          	lea    0x4(%rsi),%rdx
   1d4e2:	45 29 c4             	sub    %r8d,%r12d
   1d4e5:	d3 e8                	shr    %cl,%eax
   1d4e7:	89 c7                	mov    %eax,%edi
   1d4e9:	49 39 d2             	cmp    %rdx,%r10
   1d4ec:	0f 86 86 00 00 00    	jbe    1d578 <__rshift_D2A+0xd8>
   1d4f2:	48 89 ee             	mov    %rbp,%rsi
   1d4f5:	0f 1f 00             	nopl   (%rax)
   1d4f8:	8b 02                	mov    (%rdx),%eax
   1d4fa:	44 89 e1             	mov    %r12d,%ecx
   1d4fd:	48 83 c6 04          	add    $0x4,%rsi
   1d501:	48 83 c2 04          	add    $0x4,%rdx
   1d505:	d3 e0                	shl    %cl,%eax
   1d507:	44 89 c1             	mov    %r8d,%ecx
   1d50a:	09 f8                	or     %edi,%eax
   1d50c:	89 46 fc             	mov    %eax,-0x4(%rsi)
   1d50f:	8b 7a fc             	mov    -0x4(%rdx),%edi
   1d512:	d3 ef                	shr    %cl,%edi
   1d514:	49 39 d2             	cmp    %rdx,%r10
   1d517:	77 df                	ja     1d4f8 <__rshift_D2A+0x58>
   1d519:	49 29 db             	sub    %rbx,%r11
   1d51c:	4a 8d 44 9d fc       	lea    -0x4(%rbp,%r11,4),%rax
   1d521:	89 38                	mov    %edi,(%rax)
   1d523:	85 ff                	test   %edi,%edi
   1d525:	74 37                	je     1d55e <__rshift_D2A+0xbe>
   1d527:	48 83 c0 04          	add    $0x4,%rax
   1d52b:	eb 31                	jmp    1d55e <__rshift_D2A+0xbe>
   1d52d:	0f 1f 00             	nopl   (%rax)
   1d530:	41 c7 41 14 00 00 00 	movl   $0x0,0x14(%r9)
   1d537:	00 
   1d538:	5b                   	pop    %rbx
   1d539:	5d                   	pop    %rbp
   1d53a:	41 c7 41 18 00 00 00 	movl   $0x0,0x18(%r9)
   1d541:	00 
   1d542:	41 5c                	pop    %r12
   1d544:	c3                   	ret    
   1d545:	0f 1f 00             	nopl   (%rax)
   1d548:	48 89 ef             	mov    %rbp,%rdi
   1d54b:	49 39 f2             	cmp    %rsi,%r10
   1d54e:	76 e0                	jbe    1d530 <__rshift_D2A+0x90>
   1d550:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
   1d551:	49 39 f2             	cmp    %rsi,%r10
   1d554:	77 fa                	ja     1d550 <__rshift_D2A+0xb0>
   1d556:	49 29 db             	sub    %rbx,%r11
   1d559:	4a 8d 44 9d 00       	lea    0x0(%rbp,%r11,4),%rax
   1d55e:	48 29 e8             	sub    %rbp,%rax
   1d561:	48 c1 f8 02          	sar    $0x2,%rax
   1d565:	41 89 41 14          	mov    %eax,0x14(%r9)
   1d569:	85 c0                	test   %eax,%eax
   1d56b:	74 cb                	je     1d538 <__rshift_D2A+0x98>
   1d56d:	5b                   	pop    %rbx
   1d56e:	5d                   	pop    %rbp
   1d56f:	41 5c                	pop    %r12
   1d571:	c3                   	ret    
   1d572:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1d578:	41 89 41 18          	mov    %eax,0x18(%r9)
   1d57c:	85 c0                	test   %eax,%eax
   1d57e:	74 b0                	je     1d530 <__rshift_D2A+0x90>
   1d580:	48 89 e8             	mov    %rbp,%rax
   1d583:	eb a2                	jmp    1d527 <__rshift_D2A+0x87>
   1d585:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1d58c:	00 00 00 
   1d58f:	90                   	nop

000000000001d590 <__trailz_D2A>:
   1d590:	f3 0f 1e fa          	endbr64 
   1d594:	41 54                	push   %r12
   1d596:	45 31 e4             	xor    %r12d,%r12d
   1d599:	48 83 ec 10          	sub    $0x10,%rsp
   1d59d:	48 63 57 14          	movslq 0x14(%rdi),%rdx
   1d5a1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1d5a8:	00 00 
   1d5aa:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1d5af:	31 c0                	xor    %eax,%eax
   1d5b1:	48 8d 47 18          	lea    0x18(%rdi),%rax
   1d5b5:	48 8d 0c 90          	lea    (%rax,%rdx,4),%rcx
   1d5b9:	48 39 c8             	cmp    %rcx,%rax
   1d5bc:	72 0f                	jb     1d5cd <__trailz_D2A+0x3d>
   1d5be:	eb 24                	jmp    1d5e4 <__trailz_D2A+0x54>
   1d5c0:	48 83 c0 04          	add    $0x4,%rax
   1d5c4:	41 83 c4 20          	add    $0x20,%r12d
   1d5c8:	48 39 c1             	cmp    %rax,%rcx
   1d5cb:	76 17                	jbe    1d5e4 <__trailz_D2A+0x54>
   1d5cd:	8b 10                	mov    (%rax),%edx
   1d5cf:	85 d2                	test   %edx,%edx
   1d5d1:	74 ed                	je     1d5c0 <__trailz_D2A+0x30>
   1d5d3:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
   1d5d8:	89 54 24 04          	mov    %edx,0x4(%rsp)
   1d5dc:	e8 5f d4 ff ff       	call   1aa40 <__lo0bits_D2A>
   1d5e1:	41 01 c4             	add    %eax,%r12d
   1d5e4:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1d5e9:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1d5f0:	00 00 
   1d5f2:	75 0a                	jne    1d5fe <__trailz_D2A+0x6e>
   1d5f4:	48 83 c4 10          	add    $0x10,%rsp
   1d5f8:	44 89 e0             	mov    %r12d,%eax
   1d5fb:	41 5c                	pop    %r12
   1d5fd:	c3                   	ret    
   1d5fe:	e8 3d 65 ff ff       	call   13b40 <__stack_chk_fail>
   1d603:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1d60a:	00 00 00 
   1d60d:	0f 1f 00             	nopl   (%rax)

000000000001d610 <_Unwind_Resume>:
   1d610:	f3 0f 1e fa          	endbr64 
   1d614:	41 57                	push   %r15
   1d616:	41 56                	push   %r14
   1d618:	41 55                	push   %r13
   1d61a:	49 89 fd             	mov    %rdi,%r13
   1d61d:	41 54                	push   %r12
   1d61f:	55                   	push   %rbp
   1d620:	53                   	push   %rbx
   1d621:	48 81 ec 58 08 00 00 	sub    $0x858,%rsp
   1d628:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1d62f:	00 00 
   1d631:	48 89 84 24 48 08 00 	mov    %rax,0x848(%rsp)
   1d638:	00 
   1d639:	31 c0                	xor    %eax,%eax
   1d63b:	4c 8d 64 24 70       	lea    0x70(%rsp),%r12
   1d640:	c7 84 24 38 08 00 00 	movl   $0x0,0x838(%rsp)
   1d647:	00 00 00 00 
   1d64b:	4c 89 e7             	mov    %r12,%rdi
   1d64e:	e8 a6 09 00 00       	call   1dff9 <_Ux86_64_getcontext>
   1d653:	85 c0                	test   %eax,%eax
   1d655:	0f 88 ad 00 00 00    	js     1d708 <_Unwind_Resume+0xf8>
   1d65b:	48 8d ac 24 40 04 00 	lea    0x440(%rsp),%rbp
   1d662:	00 
   1d663:	4c 89 e6             	mov    %r12,%rsi
   1d666:	48 89 ef             	mov    %rbp,%rdi
   1d669:	e8 82 03 00 00       	call   1d9f0 <_ULx86_64_init_local>
   1d66e:	85 c0                	test   %eax,%eax
   1d670:	0f 88 92 00 00 00    	js     1d708 <_Unwind_Resume+0xf8>
   1d676:	4d 8b 65 10          	mov    0x10(%r13),%r12
   1d67a:	49 8b 45 18          	mov    0x18(%r13),%rax
   1d67e:	4c 8d 74 24 20       	lea    0x20(%rsp),%r14
   1d683:	4d 8b 7d 00          	mov    0x0(%r13),%r15
   1d687:	49 83 fc 01          	cmp    $0x1,%r12
   1d68b:	48 89 04 24          	mov    %rax,(%rsp)
   1d68f:	19 db                	sbb    %ebx,%ebx
   1d691:	83 e3 f8             	and    $0xfffffff8,%ebx
   1d694:	83 c3 0a             	add    $0xa,%ebx
   1d697:	eb 4b                	jmp    1d6e4 <_Unwind_Resume+0xd4>
   1d699:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1d6a0:	4d 85 e4             	test   %r12,%r12
   1d6a3:	74 1b                	je     1d6c0 <_Unwind_Resume+0xb0>
   1d6a5:	4c 8b 0c 24          	mov    (%rsp),%r9
   1d6a9:	49 89 e8             	mov    %rbp,%r8
   1d6ac:	4c 89 e9             	mov    %r13,%rcx
   1d6af:	4c 89 fa             	mov    %r15,%rdx
   1d6b2:	89 de                	mov    %ebx,%esi
   1d6b4:	bf 01 00 00 00       	mov    $0x1,%edi
   1d6b9:	41 ff d4             	call   *%r12
   1d6bc:	85 c0                	test   %eax,%eax
   1d6be:	75 48                	jne    1d708 <_Unwind_Resume+0xf8>
   1d6c0:	8b 84 24 38 08 00 00 	mov    0x838(%rsp),%eax
   1d6c7:	85 c0                	test   %eax,%eax
   1d6c9:	75 3d                	jne    1d708 <_Unwind_Resume+0xf8>
   1d6cb:	4c 89 f6             	mov    %r14,%rsi
   1d6ce:	48 89 ef             	mov    %rbp,%rdi
   1d6d1:	e8 2a 03 00 00       	call   1da00 <_ULx86_64_get_proc_info>
   1d6d6:	85 c0                	test   %eax,%eax
   1d6d8:	78 2e                	js     1d708 <_Unwind_Resume+0xf8>
   1d6da:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
   1d6df:	4d 85 c9             	test   %r9,%r9
   1d6e2:	75 29                	jne    1d70d <_Unwind_Resume+0xfd>
   1d6e4:	48 89 ef             	mov    %rbp,%rdi
   1d6e7:	e8 54 05 00 00       	call   1dc40 <_ULx86_64_step>
   1d6ec:	85 c0                	test   %eax,%eax
   1d6ee:	7f b0                	jg     1d6a0 <_Unwind_Resume+0x90>
   1d6f0:	75 16                	jne    1d708 <_Unwind_Resume+0xf8>
   1d6f2:	c7 84 24 38 08 00 00 	movl   $0x1,0x838(%rsp)
   1d6f9:	01 00 00 00 
   1d6fd:	83 cb 10             	or     $0x10,%ebx
   1d700:	4d 85 e4             	test   %r12,%r12
   1d703:	75 a0                	jne    1d6a5 <_Unwind_Resume+0x95>
   1d705:	0f 1f 00             	nopl   (%rax)
   1d708:	e8 2a 86 00 00       	call   25d37 <abort>
   1d70d:	4d 85 e4             	test   %r12,%r12
   1d710:	74 1f                	je     1d731 <_Unwind_Resume+0x121>
   1d712:	49 89 e8             	mov    %rbp,%r8
   1d715:	4c 89 e9             	mov    %r13,%rcx
   1d718:	4c 89 fa             	mov    %r15,%rdx
   1d71b:	89 de                	mov    %ebx,%esi
   1d71d:	bf 01 00 00 00       	mov    $0x1,%edi
   1d722:	41 ff d1             	call   *%r9
   1d725:	83 f8 08             	cmp    $0x8,%eax
   1d728:	75 37                	jne    1d761 <_Unwind_Resume+0x151>
   1d72a:	f6 c3 04             	test   $0x4,%bl
   1d72d:	74 b5                	je     1d6e4 <_Unwind_Resume+0xd4>
   1d72f:	eb d7                	jmp    1d708 <_Unwind_Resume+0xf8>
   1d731:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
   1d736:	be 10 00 00 00       	mov    $0x10,%esi
   1d73b:	48 89 ef             	mov    %rbp,%rdi
   1d73e:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1d743:	e8 08 46 00 00       	call   21d50 <_ULx86_64_get_reg>
   1d748:	85 c0                	test   %eax,%eax
   1d74a:	78 bc                	js     1d708 <_Unwind_Resume+0xf8>
   1d74c:	48 8b 04 24          	mov    (%rsp),%rax
   1d750:	48 3b 44 24 18       	cmp    0x18(%rsp),%rax
   1d755:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1d75a:	75 b6                	jne    1d712 <_Unwind_Resume+0x102>
   1d75c:	83 cb 04             	or     $0x4,%ebx
   1d75f:	eb b1                	jmp    1d712 <_Unwind_Resume+0x102>
   1d761:	83 f8 07             	cmp    $0x7,%eax
   1d764:	75 a2                	jne    1d708 <_Unwind_Resume+0xf8>
   1d766:	48 89 ef             	mov    %rbp,%rdi
   1d769:	e8 82 03 00 00       	call   1daf0 <_ULx86_64_resume>
   1d76e:	eb 98                	jmp    1d708 <_Unwind_Resume+0xf8>

000000000001d770 <unw_init_local_common>:
   1d770:	41 55                	push   %r13
   1d772:	41 54                	push   %r12
   1d774:	41 89 d4             	mov    %edx,%r12d
   1d777:	53                   	push   %rbx
   1d778:	48 89 fb             	mov    %rdi,%rbx
   1d77b:	48 83 ec 10          	sub    $0x10,%rsp
   1d77f:	8b 05 23 4a 03 00    	mov    0x34a23(%rip),%eax        # 521a8 <_ULx86_64_init_done>
   1d785:	85 c0                	test   %eax,%eax
   1d787:	0f 84 43 02 00 00    	je     1d9d0 <unw_init_local_common+0x260>
   1d78d:	48 8d 96 90 00 00 00 	lea    0x90(%rsi),%rdx
   1d794:	48 8b 05 d5 49 01 00 	mov    0x149d5(%rip),%rax        # 32170 <_ULx86_64_local_addr_space>
   1d79b:	48 89 1b             	mov    %rbx,(%rbx)
   1d79e:	48 89 53 40          	mov    %rdx,0x40(%rbx)
   1d7a2:	48 8d 96 88 00 00 00 	lea    0x88(%rsi),%rdx
   1d7a9:	48 89 53 50          	mov    %rdx,0x50(%rbx)
   1d7ad:	48 8d 96 98 00 00 00 	lea    0x98(%rsi),%rdx
   1d7b4:	48 89 53 60          	mov    %rdx,0x60(%rbx)
   1d7b8:	48 8d 96 80 00 00 00 	lea    0x80(%rsi),%rdx
   1d7bf:	48 89 53 70          	mov    %rdx,0x70(%rbx)
   1d7c3:	48 8d 56 70          	lea    0x70(%rsi),%rdx
   1d7c7:	48 89 93 80 00 00 00 	mov    %rdx,0x80(%rbx)
   1d7ce:	48 8d 56 68          	lea    0x68(%rsi),%rdx
   1d7d2:	48 89 93 90 00 00 00 	mov    %rdx,0x90(%rbx)
   1d7d9:	48 8d 56 78          	lea    0x78(%rsi),%rdx
   1d7dd:	48 89 93 a0 00 00 00 	mov    %rdx,0xa0(%rbx)
   1d7e4:	48 8d 96 a0 00 00 00 	lea    0xa0(%rsi),%rdx
   1d7eb:	48 89 93 b0 00 00 00 	mov    %rdx,0xb0(%rbx)
   1d7f2:	48 8d 56 28          	lea    0x28(%rsi),%rdx
   1d7f6:	48 89 93 c0 00 00 00 	mov    %rdx,0xc0(%rbx)
   1d7fd:	48 8d 56 30          	lea    0x30(%rsi),%rdx
   1d801:	48 89 93 d0 00 00 00 	mov    %rdx,0xd0(%rbx)
   1d808:	48 8d 56 38          	lea    0x38(%rsi),%rdx
   1d80c:	48 89 93 e0 00 00 00 	mov    %rdx,0xe0(%rbx)
   1d813:	48 8d 56 40          	lea    0x40(%rsi),%rdx
   1d817:	48 89 93 f0 00 00 00 	mov    %rdx,0xf0(%rbx)
   1d81e:	48 8d 56 48          	lea    0x48(%rsi),%rdx
   1d822:	48 89 93 00 01 00 00 	mov    %rdx,0x100(%rbx)
   1d829:	48 8d 56 50          	lea    0x50(%rsi),%rdx
   1d82d:	48 89 93 10 01 00 00 	mov    %rdx,0x110(%rbx)
   1d834:	48 8d 56 58          	lea    0x58(%rsi),%rdx
   1d838:	48 89 b3 d0 01 00 00 	mov    %rsi,0x1d0(%rbx)
   1d83f:	48 89 43 08          	mov    %rax,0x8(%rbx)
   1d843:	c7 83 c8 01 00 00 00 	movl   $0x0,0x1c8(%rbx)
   1d84a:	00 00 00 
   1d84d:	48 c7 43 48 00 00 00 	movq   $0x0,0x48(%rbx)
   1d854:	00 
   1d855:	48 c7 43 58 00 00 00 	movq   $0x0,0x58(%rbx)
   1d85c:	00 
   1d85d:	48 c7 43 68 00 00 00 	movq   $0x0,0x68(%rbx)
   1d864:	00 
   1d865:	48 c7 43 78 00 00 00 	movq   $0x0,0x78(%rbx)
   1d86c:	00 
   1d86d:	48 c7 83 88 00 00 00 	movq   $0x0,0x88(%rbx)
   1d874:	00 00 00 00 
   1d878:	48 c7 83 98 00 00 00 	movq   $0x0,0x98(%rbx)
   1d87f:	00 00 00 00 
   1d883:	48 c7 83 a8 00 00 00 	movq   $0x0,0xa8(%rbx)
   1d88a:	00 00 00 00 
   1d88e:	48 c7 83 b8 00 00 00 	movq   $0x0,0xb8(%rbx)
   1d895:	00 00 00 00 
   1d899:	48 c7 83 c8 00 00 00 	movq   $0x0,0xc8(%rbx)
   1d8a0:	00 00 00 00 
   1d8a4:	48 c7 83 d8 00 00 00 	movq   $0x0,0xd8(%rbx)
   1d8ab:	00 00 00 00 
   1d8af:	48 c7 83 e8 00 00 00 	movq   $0x0,0xe8(%rbx)
   1d8b6:	00 00 00 00 
   1d8ba:	48 c7 83 f8 00 00 00 	movq   $0x0,0xf8(%rbx)
   1d8c1:	00 00 00 00 
   1d8c5:	48 c7 83 08 01 00 00 	movq   $0x0,0x108(%rbx)
   1d8cc:	00 00 00 00 
   1d8d0:	48 c7 83 18 01 00 00 	movq   $0x0,0x118(%rbx)
   1d8d7:	00 00 00 00 
   1d8db:	48 89 93 20 01 00 00 	mov    %rdx,0x120(%rbx)
   1d8e2:	48 8d 56 60          	lea    0x60(%rsi),%rdx
   1d8e6:	48 81 c6 a8 00 00 00 	add    $0xa8,%rsi
   1d8ed:	48 89 93 30 01 00 00 	mov    %rdx,0x130(%rbx)
   1d8f4:	48 8d 53 18          	lea    0x18(%rbx),%rdx
   1d8f8:	48 c7 83 28 01 00 00 	movq   $0x0,0x128(%rbx)
   1d8ff:	00 00 00 00 
   1d903:	48 c7 83 38 01 00 00 	movq   $0x0,0x138(%rbx)
   1d90a:	00 00 00 00 
   1d90e:	48 89 b3 40 01 00 00 	mov    %rsi,0x140(%rbx)
   1d915:	48 c7 83 48 01 00 00 	movq   $0x0,0x148(%rbx)
   1d91c:	00 00 00 00 
   1d920:	0f 84 c2 00 00 00    	je     1d9e8 <unw_init_local_common+0x278>
   1d926:	31 c9                	xor    %ecx,%ecx
   1d928:	49 89 d8             	mov    %rbx,%r8
   1d92b:	48 89 c7             	mov    %rax,%rdi
   1d92e:	ff 50 18             	call   *0x18(%rax)
   1d931:	85 c0                	test   %eax,%eax
   1d933:	0f 88 85 00 00 00    	js     1d9be <unw_init_local_common+0x24e>
   1d939:	48 8b 03             	mov    (%rbx),%rax
   1d93c:	be 07 00 00 00       	mov    $0x7,%esi
   1d941:	4c 8d 6b 10          	lea    0x10(%rbx),%r13
   1d945:	48 8b b8 d0 01 00 00 	mov    0x1d0(%rax),%rdi
   1d94c:	e8 bf 41 00 00       	call   21b10 <_ULx86_64_r_uc_addr>
   1d951:	48 89 c6             	mov    %rax,%rsi
   1d954:	48 85 c0             	test   %rax,%rax
   1d957:	0f 84 8b 00 00 00    	je     1d9e8 <unw_init_local_common+0x278>
   1d95d:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1d961:	31 c9                	xor    %ecx,%ecx
   1d963:	4c 8b 03             	mov    (%rbx),%r8
   1d966:	4c 89 ea             	mov    %r13,%rdx
   1d969:	48 89 c7             	mov    %rax,%rdi
   1d96c:	ff 50 18             	call   *0x18(%rax)
   1d96f:	85 c0                	test   %eax,%eax
   1d971:	78 4b                	js     1d9be <unw_init_local_common+0x24e>
   1d973:	0f b6 93 50 01 00 00 	movzbl 0x150(%rbx),%edx
   1d97a:	45 01 e4             	add    %r12d,%r12d
   1d97d:	31 c0                	xor    %eax,%eax
   1d97f:	c7 83 b8 01 00 00 00 	movl   $0x0,0x1b8(%rbx)
   1d986:	00 00 00 
   1d989:	41 83 e4 0f          	and    $0xf,%r12d
   1d98d:	48 c7 83 c0 01 00 00 	movq   $0x0,0x1c0(%rbx)
   1d994:	00 00 00 00 
   1d998:	83 e2 f0             	and    $0xfffffff0,%edx
   1d99b:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
   1d9a2:	00 
   1d9a3:	41 09 d4             	or     %edx,%r12d
   1d9a6:	c7 43 38 00 00 00 00 	movl   $0x0,0x38(%rbx)
   1d9ad:	44 88 a3 50 01 00 00 	mov    %r12b,0x150(%rbx)
   1d9b4:	c7 83 a0 01 00 00 00 	movl   $0x0,0x1a0(%rbx)
   1d9bb:	00 00 00 
   1d9be:	48 83 c4 10          	add    $0x10,%rsp
   1d9c2:	5b                   	pop    %rbx
   1d9c3:	41 5c                	pop    %r12
   1d9c5:	41 5d                	pop    %r13
   1d9c7:	c3                   	ret    
   1d9c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1d9cf:	00 
   1d9d0:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   1d9d5:	e8 76 48 00 00       	call   22250 <_ULx86_64_init>
   1d9da:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   1d9df:	e9 a9 fd ff ff       	jmp    1d78d <unw_init_local_common+0x1d>
   1d9e4:	0f 1f 40 00          	nopl   0x0(%rax)
   1d9e8:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   1d9ed:	eb cf                	jmp    1d9be <unw_init_local_common+0x24e>
   1d9ef:	90                   	nop

000000000001d9f0 <_ULx86_64_init_local>:
   1d9f0:	f3 0f 1e fa          	endbr64 
   1d9f4:	ba 01 00 00 00       	mov    $0x1,%edx
   1d9f9:	e9 72 fd ff ff       	jmp    1d770 <unw_init_local_common>
   1d9fe:	66 90                	xchg   %ax,%ax

000000000001da00 <_ULx86_64_get_proc_info>:
   1da00:	f3 0f 1e fa          	endbr64 
   1da04:	55                   	push   %rbp
   1da05:	48 89 f5             	mov    %rsi,%rbp
   1da08:	53                   	push   %rbx
   1da09:	48 89 fb             	mov    %rdi,%rbx
   1da0c:	48 83 ec 08          	sub    $0x8,%rsp
   1da10:	e8 bb 21 00 00       	call   1fbd0 <_ULx86_64_dwarf_make_proc_info>
   1da15:	85 c0                	test   %eax,%eax
   1da17:	78 47                	js     1da60 <_ULx86_64_get_proc_info+0x60>
   1da19:	f3 0f 6f 8b 58 01 00 	movdqu 0x158(%rbx),%xmm1
   1da20:	00 
   1da21:	0f 11 4d 00          	movups %xmm1,0x0(%rbp)
   1da25:	f3 0f 6f 93 68 01 00 	movdqu 0x168(%rbx),%xmm2
   1da2c:	00 
   1da2d:	0f 11 55 10          	movups %xmm2,0x10(%rbp)
   1da31:	f3 0f 6f 9b 78 01 00 	movdqu 0x178(%rbx),%xmm3
   1da38:	00 
   1da39:	0f 11 5d 20          	movups %xmm3,0x20(%rbp)
   1da3d:	f3 0f 6f a3 88 01 00 	movdqu 0x188(%rbx),%xmm4
   1da44:	00 
   1da45:	0f 11 65 30          	movups %xmm4,0x30(%rbp)
   1da49:	48 8b 83 98 01 00 00 	mov    0x198(%rbx),%rax
   1da50:	48 89 45 40          	mov    %rax,0x40(%rbp)
   1da54:	48 83 c4 08          	add    $0x8,%rsp
   1da58:	31 c0                	xor    %eax,%eax
   1da5a:	5b                   	pop    %rbx
   1da5b:	5d                   	pop    %rbp
   1da5c:	c3                   	ret    
   1da5d:	0f 1f 00             	nopl   (%rax)
   1da60:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1da64:	48 c7 45 40 00 00 00 	movq   $0x0,0x40(%rbp)
   1da6b:	00 
   1da6c:	0f 11 45 00          	movups %xmm0,0x0(%rbp)
   1da70:	0f 11 45 10          	movups %xmm0,0x10(%rbp)
   1da74:	0f 11 45 20          	movups %xmm0,0x20(%rbp)
   1da78:	0f 11 45 30          	movups %xmm0,0x30(%rbp)
   1da7c:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1da80:	48 89 45 00          	mov    %rax,0x0(%rbp)
   1da84:	48 83 c0 01          	add    $0x1,%rax
   1da88:	48 89 45 08          	mov    %rax,0x8(%rbp)
   1da8c:	48 83 c4 08          	add    $0x8,%rsp
   1da90:	31 c0                	xor    %eax,%eax
   1da92:	5b                   	pop    %rbx
   1da93:	5d                   	pop    %rbp
   1da94:	c3                   	ret    
   1da95:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1da9c:	00 00 00 
   1da9f:	90                   	nop

000000000001daa0 <_ULx86_64_local_resume>:
   1daa0:	f3 0f 1e fa          	endbr64 
   1daa4:	41 54                	push   %r12
   1daa6:	48 89 f7             	mov    %rsi,%rdi
   1daa9:	55                   	push   %rbp
   1daaa:	48 89 f5             	mov    %rsi,%rbp
   1daad:	48 83 ec 08          	sub    $0x8,%rsp
   1dab1:	4c 8b a6 d0 01 00 00 	mov    0x1d0(%rsi),%r12
   1dab8:	e8 13 21 00 00       	call   1fbd0 <_ULx86_64_dwarf_make_proc_info>
   1dabd:	48 83 bd c0 01 00 00 	cmpq   $0x0,0x1c0(%rbp)
   1dac4:	00 
   1dac5:	75 19                	jne    1dae0 <_ULx86_64_local_resume+0x40>
   1dac7:	4c 89 e7             	mov    %r12,%rdi
   1daca:	e8 12 47 00 00       	call   221e1 <_Ux86_64_setcontext>
   1dacf:	48 83 c4 08          	add    $0x8,%rsp
   1dad3:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1dad8:	5d                   	pop    %rbp
   1dad9:	41 5c                	pop    %r12
   1dadb:	c3                   	ret    
   1dadc:	0f 1f 40 00          	nopl   0x0(%rax)
   1dae0:	48 89 ef             	mov    %rbp,%rdi
   1dae3:	e8 f8 40 00 00       	call   21be0 <_ULx86_64_sigreturn>
   1dae8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1daef:	00 

000000000001daf0 <_ULx86_64_resume>:
   1daf0:	f3 0f 1e fa          	endbr64 
   1daf4:	41 57                	push   %r15
   1daf6:	45 31 ff             	xor    %r15d,%r15d
   1daf9:	41 56                	push   %r14
   1dafb:	41 55                	push   %r13
   1dafd:	41 54                	push   %r12
   1daff:	55                   	push   %rbp
   1db00:	48 89 fd             	mov    %rdi,%rbp
   1db03:	53                   	push   %rbx
   1db04:	48 83 ec 48          	sub    $0x48,%rsp
   1db08:	4c 8b 67 08          	mov    0x8(%rdi),%r12
   1db0c:	48 8b 1f             	mov    (%rdi),%rbx
   1db0f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1db16:	00 00 
   1db18:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   1db1d:	31 c0                	xor    %eax,%eax
   1db1f:	4c 8d 6c 24 18       	lea    0x18(%rsp),%r13
   1db24:	49 8b 44 24 28       	mov    0x28(%r12),%rax
   1db29:	4d 8b 74 24 20       	mov    0x20(%r12),%r14
   1db2e:	48 89 04 24          	mov    %rax,(%rsp)
   1db32:	eb 42                	jmp    1db76 <_ULx86_64_resume+0x86>
   1db34:	0f 1f 40 00          	nopl   0x0(%rax)
   1db38:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   1db3d:	31 c9                	xor    %ecx,%ecx
   1db3f:	44 89 fe             	mov    %r15d,%esi
   1db42:	48 89 ef             	mov    %rbp,%rdi
   1db45:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1db4a:	e8 c1 4d 00 00       	call   22910 <_ULx86_64_access_fpreg>
   1db4f:	85 c0                	test   %eax,%eax
   1db51:	78 19                	js     1db6c <_ULx86_64_resume+0x7c>
   1db53:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1db58:	48 8b 04 24          	mov    (%rsp),%rax
   1db5c:	49 89 d8             	mov    %rbx,%r8
   1db5f:	44 89 fe             	mov    %r15d,%esi
   1db62:	b9 01 00 00 00       	mov    $0x1,%ecx
   1db67:	4c 89 e7             	mov    %r12,%rdi
   1db6a:	ff d0                	call   *%rax
   1db6c:	41 83 c7 01          	add    $0x1,%r15d
   1db70:	41 83 ff 11          	cmp    $0x11,%r15d
   1db74:	74 3e                	je     1dbb4 <_ULx86_64_resume+0xc4>
   1db76:	44 89 ff             	mov    %r15d,%edi
   1db79:	e8 d2 3e 00 00       	call   21a50 <_Ux86_64_is_fpreg>
   1db7e:	85 c0                	test   %eax,%eax
   1db80:	75 b6                	jne    1db38 <_ULx86_64_resume+0x48>
   1db82:	31 c9                	xor    %ecx,%ecx
   1db84:	4c 89 ea             	mov    %r13,%rdx
   1db87:	44 89 fe             	mov    %r15d,%esi
   1db8a:	48 89 ef             	mov    %rbp,%rdi
   1db8d:	e8 9e 4a 00 00       	call   22630 <_ULx86_64_access_reg>
   1db92:	85 c0                	test   %eax,%eax
   1db94:	78 d6                	js     1db6c <_ULx86_64_resume+0x7c>
   1db96:	44 89 fe             	mov    %r15d,%esi
   1db99:	41 83 c7 01          	add    $0x1,%r15d
   1db9d:	49 89 d8             	mov    %rbx,%r8
   1dba0:	b9 01 00 00 00       	mov    $0x1,%ecx
   1dba5:	4c 89 ea             	mov    %r13,%rdx
   1dba8:	4c 89 e7             	mov    %r12,%rdi
   1dbab:	41 ff d6             	call   *%r14
   1dbae:	41 83 ff 11          	cmp    $0x11,%r15d
   1dbb2:	75 c2                	jne    1db76 <_ULx86_64_resume+0x86>
   1dbb4:	48 83 7d 20 00       	cmpq   $0x0,0x20(%rbp)
   1dbb9:	75 35                	jne    1dbf0 <_ULx86_64_resume+0x100>
   1dbbb:	48 8b 45 08          	mov    0x8(%rbp),%rax
   1dbbf:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   1dbc3:	48 89 ee             	mov    %rbp,%rsi
   1dbc6:	48 89 c7             	mov    %rax,%rdi
   1dbc9:	ff 50 30             	call   *0x30(%rax)
   1dbcc:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
   1dbd1:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   1dbd8:	00 00 
   1dbda:	75 50                	jne    1dc2c <_ULx86_64_resume+0x13c>
   1dbdc:	48 83 c4 48          	add    $0x48,%rsp
   1dbe0:	5b                   	pop    %rbx
   1dbe1:	5d                   	pop    %rbp
   1dbe2:	41 5c                	pop    %r12
   1dbe4:	41 5d                	pop    %r13
   1dbe6:	41 5e                	pop    %r14
   1dbe8:	41 5f                	pop    %r15
   1dbea:	c3                   	ret    
   1dbeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1dbf0:	4c 8d 6c 24 18       	lea    0x18(%rsp),%r13
   1dbf5:	31 c9                	xor    %ecx,%ecx
   1dbf7:	be 07 00 00 00       	mov    $0x7,%esi
   1dbfc:	48 89 ef             	mov    %rbp,%rdi
   1dbff:	4c 89 ea             	mov    %r13,%rdx
   1dc02:	e8 29 4a 00 00       	call   22630 <_ULx86_64_access_reg>
   1dc07:	85 c0                	test   %eax,%eax
   1dc09:	78 b0                	js     1dbbb <_ULx86_64_resume+0xcb>
   1dc0b:	48 8b 45 20          	mov    0x20(%rbp),%rax
   1dc0f:	49 89 d8             	mov    %rbx,%r8
   1dc12:	48 01 44 24 18       	add    %rax,0x18(%rsp)
   1dc17:	4c 89 ea             	mov    %r13,%rdx
   1dc1a:	b9 01 00 00 00       	mov    $0x1,%ecx
   1dc1f:	be 07 00 00 00       	mov    $0x7,%esi
   1dc24:	4c 89 e7             	mov    %r12,%rdi
   1dc27:	41 ff d6             	call   *%r14
   1dc2a:	eb 8f                	jmp    1dbbb <_ULx86_64_resume+0xcb>
   1dc2c:	e8 0f 5f ff ff       	call   13b40 <__stack_chk_fail>
   1dc31:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1dc38:	00 00 00 
   1dc3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001dc40 <_ULx86_64_step>:
   1dc40:	f3 0f 1e fa          	endbr64 
   1dc44:	41 57                	push   %r15
   1dc46:	41 56                	push   %r14
   1dc48:	41 55                	push   %r13
   1dc4a:	41 54                	push   %r12
   1dc4c:	55                   	push   %rbp
   1dc4d:	53                   	push   %rbx
   1dc4e:	48 89 fb             	mov    %rdi,%rbx
   1dc51:	48 83 ec 28          	sub    $0x28,%rsp
   1dc55:	8b af c8 01 00 00    	mov    0x1c8(%rdi),%ebp
   1dc5b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1dc62:	00 00 
   1dc64:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1dc69:	31 c0                	xor    %eax,%eax
   1dc6b:	c7 87 c8 01 00 00 01 	movl   $0x1,0x1c8(%rdi)
   1dc72:	00 00 00 
   1dc75:	c7 87 b8 01 00 00 00 	movl   $0x0,0x1b8(%rdi)
   1dc7c:	00 00 00 
   1dc7f:	e8 cc 18 00 00       	call   1f550 <_ULx86_64_dwarf_step>
   1dc84:	89 ab c8 01 00 00    	mov    %ebp,0x1c8(%rbx)
   1dc8a:	41 89 c4             	mov    %eax,%r12d
   1dc8d:	85 c0                	test   %eax,%eax
   1dc8f:	79 33                	jns    1dcc4 <_ULx86_64_step+0x84>
   1dc91:	83 f8 f6             	cmp    $0xfffffff6,%eax
   1dc94:	74 2a                	je     1dcc0 <_ULx86_64_step+0x80>
   1dc96:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   1dc9b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1dca2:	00 00 
   1dca4:	0f 85 3a 03 00 00    	jne    1dfe4 <_ULx86_64_step+0x3a4>
   1dcaa:	48 83 c4 28          	add    $0x28,%rsp
   1dcae:	44 89 e0             	mov    %r12d,%eax
   1dcb1:	5b                   	pop    %rbx
   1dcb2:	5d                   	pop    %rbp
   1dcb3:	41 5c                	pop    %r12
   1dcb5:	41 5d                	pop    %r13
   1dcb7:	41 5e                	pop    %r14
   1dcb9:	41 5f                	pop    %r15
   1dcbb:	c3                   	ret    
   1dcbc:	0f 1f 40 00          	nopl   0x0(%rax)
   1dcc0:	85 c0                	test   %eax,%eax
   1dcc2:	78 1c                	js     1dce0 <_ULx86_64_step+0xa0>
   1dcc4:	48 83 bb a0 00 00 00 	cmpq   $0x0,0xa0(%rbx)
   1dccb:	00 
   1dccc:	75 c8                	jne    1dc96 <_ULx86_64_step+0x56>
   1dcce:	48 c7 43 18 00 00 00 	movq   $0x0,0x18(%rbx)
   1dcd5:	00 
   1dcd6:	45 31 e4             	xor    %r12d,%r12d
   1dcd9:	eb bb                	jmp    1dc96 <_ULx86_64_step+0x56>
   1dcdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1dce0:	48 89 df             	mov    %rbx,%rdi
   1dce3:	48 8b 6b 18          	mov    0x18(%rbx),%rbp
   1dce7:	4c 8b 6b 10          	mov    0x10(%rbx),%r13
   1dceb:	c7 83 c8 01 00 00 01 	movl   $0x1,0x1c8(%rbx)
   1dcf2:	00 00 00 
   1dcf5:	e8 e6 3d 00 00       	call   21ae0 <_ULx86_64_is_signal_frame>
   1dcfa:	85 c0                	test   %eax,%eax
   1dcfc:	7e 5a                	jle    1dd58 <_ULx86_64_step+0x118>
   1dcfe:	48 89 df             	mov    %rbx,%rdi
   1dd01:	e8 fa 3d 00 00       	call   21b00 <_ULx86_64_handle_signal_frame>
   1dd06:	41 89 c4             	mov    %eax,%r12d
   1dd09:	85 c0                	test   %eax,%eax
   1dd0b:	0f 88 d7 00 00 00    	js     1dde8 <_ULx86_64_step+0x1a8>
   1dd11:	4c 8b bb a0 00 00 00 	mov    0xa0(%rbx),%r15
   1dd18:	4d 85 ff             	test   %r15,%r15
   1dd1b:	0f 84 c7 00 00 00    	je     1dde8 <_ULx86_64_step+0x1a8>
   1dd21:	48 8b b3 40 01 00 00 	mov    0x140(%rbx),%rsi
   1dd28:	48 85 f6             	test   %rsi,%rsi
   1dd2b:	0f 85 bf 00 00 00    	jne    1ddf0 <_ULx86_64_step+0x1b0>
   1dd31:	48 c7 43 18 00 00 00 	movq   $0x0,0x18(%rbx)
   1dd38:	00 
   1dd39:	48 39 f5             	cmp    %rsi,%rbp
   1dd3c:	0f 85 54 ff ff ff    	jne    1dc96 <_ULx86_64_step+0x56>
   1dd42:	4c 39 6b 10          	cmp    %r13,0x10(%rbx)
   1dd46:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
   1dd4b:	44 0f 44 e0          	cmove  %eax,%r12d
   1dd4f:	e9 42 ff ff ff       	jmp    1dc96 <_ULx86_64_step+0x56>
   1dd54:	0f 1f 40 00          	nopl   0x0(%rax)
   1dd58:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1dd5c:	4c 8d 74 24 08       	lea    0x8(%rsp),%r14
   1dd61:	e8 9a 3f 00 00       	call   21d00 <_Ux86_64_get_accessors>
   1dd66:	31 c9                	xor    %ecx,%ecx
   1dd68:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   1dd6c:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1dd70:	4c 8b 03             	mov    (%rbx),%r8
   1dd73:	49 89 c7             	mov    %rax,%r15
   1dd76:	4c 89 f2             	mov    %r14,%rdx
   1dd79:	ff 50 18             	call   *0x18(%rax)
   1dd7c:	85 c0                	test   %eax,%eax
   1dd7e:	78 29                	js     1dda9 <_ULx86_64_step+0x169>
   1dd80:	48 8b 43 18          	mov    0x18(%rbx),%rax
   1dd84:	31 c9                	xor    %ecx,%ecx
   1dd86:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1dd8a:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   1dd8f:	4c 8b 03             	mov    (%rbx),%r8
   1dd92:	48 8d 70 08          	lea    0x8(%rax),%rsi
   1dd96:	41 ff 57 18          	call   *0x18(%r15)
   1dd9a:	85 c0                	test   %eax,%eax
   1dd9c:	78 0b                	js     1dda9 <_ULx86_64_step+0x169>
   1dd9e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1dda3:	66 3d ff 25          	cmp    $0x25ff,%ax
   1dda7:	74 72                	je     1de1b <_ULx86_64_step+0x1db>
   1dda9:	4c 8b bb a0 00 00 00 	mov    0xa0(%rbx),%r15
   1ddb0:	48 8d 43 40          	lea    0x40(%rbx),%rax
   1ddb4:	48 8d 93 50 01 00 00 	lea    0x150(%rbx),%rdx
   1ddbb:	4d 85 ff             	test   %r15,%r15
   1ddbe:	0f 85 ab 00 00 00    	jne    1de6f <_ULx86_64_step+0x22f>
   1ddc4:	0f 1f 40 00          	nopl   0x0(%rax)
   1ddc8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1ddcf:	48 83 c0 10          	add    $0x10,%rax
   1ddd3:	48 c7 40 f8 00 00 00 	movq   $0x0,-0x8(%rax)
   1ddda:	00 
   1dddb:	48 39 c2             	cmp    %rax,%rdx
   1ddde:	75 e8                	jne    1ddc8 <_ULx86_64_step+0x188>
   1dde0:	e9 2c ff ff ff       	jmp    1dd11 <_ULx86_64_step+0xd1>
   1dde5:	0f 1f 00             	nopl   (%rax)
   1dde8:	45 31 e4             	xor    %r12d,%r12d
   1ddeb:	e9 a6 fe ff ff       	jmp    1dc96 <_ULx86_64_step+0x56>
   1ddf0:	48 8b 83 48 01 00 00 	mov    0x148(%rbx),%rax
   1ddf7:	48 8d 53 18          	lea    0x18(%rbx),%rdx
   1ddfb:	a8 02                	test   $0x2,%al
   1ddfd:	0f 85 6b 01 00 00    	jne    1df6e <_ULx86_64_step+0x32e>
   1de03:	48 85 c0             	test   %rax,%rax
   1de06:	0f 84 8c 01 00 00    	je     1df98 <_ULx86_64_step+0x358>
   1de0c:	48 89 73 18          	mov    %rsi,0x18(%rbx)
   1de10:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   1de16:	e9 1e ff ff ff       	jmp    1dd39 <_ULx86_64_step+0xf9>
   1de1b:	48 c1 e8 30          	shr    $0x30,%rax
   1de1f:	3c 68                	cmp    $0x68,%al
   1de21:	75 86                	jne    1dda9 <_ULx86_64_step+0x169>
   1de23:	80 7c 24 13 e9       	cmpb   $0xe9,0x13(%rsp)
   1de28:	0f 85 7b ff ff ff    	jne    1dda9 <_ULx86_64_step+0x169>
   1de2e:	48 b8 08 00 00 00 fc 	movabs $0xfffffffc00000008,%rax
   1de35:	ff ff ff 
   1de38:	48 23 83 b0 01 00 00 	and    0x1b0(%rbx),%rax
   1de3f:	48 c7 83 48 01 00 00 	movq   $0x0,0x148(%rbx)
   1de46:	00 00 00 00 
   1de4a:	48 0d 16 01 00 00    	or     $0x116,%rax
   1de50:	48 89 83 b0 01 00 00 	mov    %rax,0x1b0(%rbx)
   1de57:	48 8b 43 10          	mov    0x10(%rbx),%rax
   1de5b:	48 89 83 40 01 00 00 	mov    %rax,0x140(%rbx)
   1de62:	48 83 c0 08          	add    $0x8,%rax
   1de66:	48 89 43 10          	mov    %rax,0x10(%rbx)
   1de6a:	e9 a2 fe ff ff       	jmp    1dd11 <_ULx86_64_step+0xd1>
   1de6f:	48 8b 83 a8 00 00 00 	mov    0xa8(%rbx),%rax
   1de76:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1de7a:	4c 8b 03             	mov    (%rbx),%r8
   1de7d:	a8 02                	test   $0x2,%al
   1de7f:	0f 85 27 01 00 00    	jne    1dfac <_ULx86_64_step+0x36c>
   1de85:	4c 8b 4f 18          	mov    0x18(%rdi),%r9
   1de89:	48 85 c0             	test   %rax,%rax
   1de8c:	0f 84 42 01 00 00    	je     1dfd4 <_ULx86_64_step+0x394>
   1de92:	4c 89 7c 24 08       	mov    %r15,0x8(%rsp)
   1de97:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   1de9e:	00 00 
   1dea0:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   1dea5:	31 c9                	xor    %ecx,%ecx
   1dea7:	4c 89 fe             	mov    %r15,%rsi
   1deaa:	41 ff d1             	call   *%r9
   1dead:	41 89 c4             	mov    %eax,%r12d
   1deb0:	85 c0                	test   %eax,%eax
   1deb2:	78 1d                	js     1ded1 <_ULx86_64_step+0x291>
   1deb4:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   1deb8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1debd:	48 39 c2             	cmp    %rax,%rdx
   1dec0:	77 0f                	ja     1ded1 <_ULx86_64_step+0x291>
   1dec2:	48 29 d0             	sub    %rdx,%rax
   1dec5:	49 8d 4f 08          	lea    0x8(%r15),%rcx
   1dec9:	48 3d 00 40 00 00    	cmp    $0x4000,%rax
   1decf:	76 05                	jbe    1ded6 <_ULx86_64_step+0x296>
   1ded1:	31 c9                	xor    %ecx,%ecx
   1ded3:	45 31 ff             	xor    %r15d,%r15d
   1ded6:	48 b8 08 00 00 00 00 	movabs $0xfffe000000000008,%rax
   1dedd:	00 fe ff 
   1dee0:	48 23 83 b0 01 00 00 	and    0x1b0(%rbx),%rax
   1dee7:	48 83 43 10 10       	addq   $0x10,0x10(%rbx)
   1deec:	48 ba 01 02 00 00 c0 	movabs $0x1ffc000000201,%rdx
   1def3:	ff 01 00 
   1def6:	48 09 d0             	or     %rdx,%rax
   1def9:	48 89 83 b0 01 00 00 	mov    %rax,0x1b0(%rbx)
   1df00:	48 8d 43 40          	lea    0x40(%rbx),%rax
   1df04:	48 8d 93 50 01 00 00 	lea    0x150(%rbx),%rdx
   1df0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1df10:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1df17:	48 83 c0 10          	add    $0x10,%rax
   1df1b:	48 c7 40 f8 00 00 00 	movq   $0x0,-0x8(%rax)
   1df22:	00 
   1df23:	48 39 c2             	cmp    %rax,%rdx
   1df26:	75 e8                	jne    1df10 <_ULx86_64_step+0x2d0>
   1df28:	80 8b 50 01 00 00 02 	orb    $0x2,0x150(%rbx)
   1df2f:	4c 89 bb a0 00 00 00 	mov    %r15,0xa0(%rbx)
   1df36:	48 c7 83 a8 00 00 00 	movq   $0x0,0xa8(%rbx)
   1df3d:	00 00 00 00 
   1df41:	48 c7 83 b0 00 00 00 	movq   $0x0,0xb0(%rbx)
   1df48:	00 00 00 00 
   1df4c:	48 c7 83 b8 00 00 00 	movq   $0x0,0xb8(%rbx)
   1df53:	00 00 00 00 
   1df57:	48 89 8b 40 01 00 00 	mov    %rcx,0x140(%rbx)
   1df5e:	48 c7 83 48 01 00 00 	movq   $0x0,0x148(%rbx)
   1df65:	00 00 00 00 
   1df69:	e9 aa fd ff ff       	jmp    1dd18 <_ULx86_64_step+0xd8>
   1df6e:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1df72:	4c 8b 03             	mov    (%rbx),%r8
   1df75:	31 c9                	xor    %ecx,%ecx
   1df77:	48 89 c7             	mov    %rax,%rdi
   1df7a:	ff 50 20             	call   *0x20(%rax)
   1df7d:	41 89 c4             	mov    %eax,%r12d
   1df80:	45 85 e4             	test   %r12d,%r12d
   1df83:	0f 88 0d fd ff ff    	js     1dc96 <_ULx86_64_step+0x56>
   1df89:	48 8b 73 18          	mov    0x18(%rbx),%rsi
   1df8d:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   1df93:	e9 a1 fd ff ff       	jmp    1dd39 <_ULx86_64_step+0xf9>
   1df98:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1df9c:	4c 8b 03             	mov    (%rbx),%r8
   1df9f:	31 c9                	xor    %ecx,%ecx
   1dfa1:	48 89 c7             	mov    %rax,%rdi
   1dfa4:	ff 50 18             	call   *0x18(%rax)
   1dfa7:	41 89 c4             	mov    %eax,%r12d
   1dfaa:	eb d4                	jmp    1df80 <_ULx86_64_step+0x340>
   1dfac:	31 c9                	xor    %ecx,%ecx
   1dfae:	4c 89 f2             	mov    %r14,%rdx
   1dfb1:	44 89 fe             	mov    %r15d,%esi
   1dfb4:	ff 57 20             	call   *0x20(%rdi)
   1dfb7:	41 89 c4             	mov    %eax,%r12d
   1dfba:	45 85 e4             	test   %r12d,%r12d
   1dfbd:	0f 88 d3 fc ff ff    	js     1dc96 <_ULx86_64_step+0x56>
   1dfc3:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
   1dfc8:	4d 85 ff             	test   %r15,%r15
   1dfcb:	75 1c                	jne    1dfe9 <_ULx86_64_step+0x3a9>
   1dfcd:	31 c9                	xor    %ecx,%ecx
   1dfcf:	e9 2c ff ff ff       	jmp    1df00 <_ULx86_64_step+0x2c0>
   1dfd4:	31 c9                	xor    %ecx,%ecx
   1dfd6:	4c 89 f2             	mov    %r14,%rdx
   1dfd9:	4c 89 fe             	mov    %r15,%rsi
   1dfdc:	41 ff d1             	call   *%r9
   1dfdf:	41 89 c4             	mov    %eax,%r12d
   1dfe2:	eb d6                	jmp    1dfba <_ULx86_64_step+0x37a>
   1dfe4:	e8 57 5b ff ff       	call   13b40 <__stack_chk_fail>
   1dfe9:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1dfed:	4c 8b 03             	mov    (%rbx),%r8
   1dff0:	4c 8b 4f 18          	mov    0x18(%rdi),%r9
   1dff4:	e9 9e fe ff ff       	jmp    1de97 <_ULx86_64_step+0x257>

000000000001dff9 <_Ux86_64_getcontext>:
   1dff9:	4c 89 67 48          	mov    %r12,0x48(%rdi)
   1dffd:	4c 89 6f 50          	mov    %r13,0x50(%rdi)
   1e001:	4c 89 77 58          	mov    %r14,0x58(%rdi)
   1e005:	4c 89 7f 60          	mov    %r15,0x60(%rdi)
   1e009:	48 89 6f 78          	mov    %rbp,0x78(%rdi)
   1e00d:	48 89 9f 80 00 00 00 	mov    %rbx,0x80(%rdi)
   1e014:	4c 89 47 28          	mov    %r8,0x28(%rdi)
   1e018:	4c 89 4f 30          	mov    %r9,0x30(%rdi)
   1e01c:	48 89 7f 68          	mov    %rdi,0x68(%rdi)
   1e020:	48 89 77 70          	mov    %rsi,0x70(%rdi)
   1e024:	48 89 97 88 00 00 00 	mov    %rdx,0x88(%rdi)
   1e02b:	48 89 87 90 00 00 00 	mov    %rax,0x90(%rdi)
   1e032:	48 89 8f 98 00 00 00 	mov    %rcx,0x98(%rdi)
   1e039:	4c 8d 87 e0 00 00 00 	lea    0xe0(%rdi),%r8
   1e040:	4c 89 87 a8 01 00 00 	mov    %r8,0x1a8(%rdi)
   1e047:	41 d9 30             	fnstenv (%r8)
   1e04a:	41 0f ae 58 18       	stmxcsr 0x18(%r8)
   1e04f:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   1e054:	48 89 87 a0 00 00 00 	mov    %rax,0xa0(%rdi)
   1e05b:	48 8b 04 24          	mov    (%rsp),%rax
   1e05f:	48 89 87 a8 00 00 00 	mov    %rax,0xa8(%rdi)
   1e066:	48 31 c0             	xor    %rax,%rax
   1e069:	c3                   	ret    

000000000001e06a <_Ux86_64_getcontext_trace>:
   1e06a:	48 89 6f 78          	mov    %rbp,0x78(%rdi)
   1e06e:	48 89 9f 80 00 00 00 	mov    %rbx,0x80(%rdi)
   1e075:	48 8d 44 24 08       	lea    0x8(%rsp),%rax
   1e07a:	48 89 87 a0 00 00 00 	mov    %rax,0xa0(%rdi)
   1e081:	48 8b 04 24          	mov    (%rsp),%rax
   1e085:	48 89 87 a8 00 00 00 	mov    %rax,0xa8(%rdi)
   1e08c:	48 31 c0             	xor    %rax,%rax
   1e08f:	c3                   	ret    

000000000001e090 <fetch_proc_info>:
   1e090:	41 56                	push   %r14
   1e092:	66 0f ef c0          	pxor   %xmm0,%xmm0
   1e096:	4c 8d b7 58 01 00 00 	lea    0x158(%rdi),%r14
   1e09d:	b9 01 00 00 00       	mov    $0x1,%ecx
   1e0a2:	41 55                	push   %r13
   1e0a4:	49 89 f5             	mov    %rsi,%r13
   1e0a7:	4c 89 f2             	mov    %r14,%rdx
   1e0aa:	41 54                	push   %r12
   1e0ac:	55                   	push   %rbp
   1e0ad:	48 89 fd             	mov    %rdi,%rbp
   1e0b0:	48 83 ec 08          	sub    $0x8,%rsp
   1e0b4:	0f b6 87 50 01 00 00 	movzbl 0x150(%rdi),%eax
   1e0bb:	48 c7 87 98 01 00 00 	movq   $0x0,0x198(%rdi)
   1e0c2:	00 00 00 00 
   1e0c6:	0f 11 87 58 01 00 00 	movups %xmm0,0x158(%rdi)
   1e0cd:	83 e0 02             	and    $0x2,%eax
   1e0d0:	0f 11 87 68 01 00 00 	movups %xmm0,0x168(%rdi)
   1e0d7:	3c 01                	cmp    $0x1,%al
   1e0d9:	0f 11 87 78 01 00 00 	movups %xmm0,0x178(%rdi)
   1e0e0:	49 83 d5 ff          	adc    $0xffffffffffffffff,%r13
   1e0e4:	0f 11 87 88 01 00 00 	movups %xmm0,0x188(%rdi)
   1e0eb:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1e0ef:	4c 8b 45 00          	mov    0x0(%rbp),%r8
   1e0f3:	4c 89 ee             	mov    %r13,%rsi
   1e0f6:	e8 75 3b 00 00       	call   21c70 <_ULx86_64_Ifind_dynamic_proc_info>
   1e0fb:	83 f8 f6             	cmp    $0xfffffff6,%eax
   1e0fe:	74 30                	je     1e130 <fetch_proc_info+0xa0>
   1e100:	83 bd 88 01 00 00 02 	cmpl   $0x2,0x188(%rbp)
   1e107:	0f 87 7d 00 00 00    	ja     1e18a <fetch_proc_info+0xfa>
   1e10d:	80 8d 50 01 00 00 0c 	orb    $0xc,0x150(%rbp)
   1e114:	41 89 c4             	mov    %eax,%r12d
   1e117:	85 c0                	test   %eax,%eax
   1e119:	79 50                	jns    1e16b <fetch_proc_info+0xdb>
   1e11b:	48 83 c4 08          	add    $0x8,%rsp
   1e11f:	44 89 e0             	mov    %r12d,%eax
   1e122:	5d                   	pop    %rbp
   1e123:	41 5c                	pop    %r12
   1e125:	41 5d                	pop    %r13
   1e127:	41 5e                	pop    %r14
   1e129:	c3                   	ret    
   1e12a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1e130:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   1e134:	4c 8b 45 00          	mov    0x0(%rbp),%r8
   1e138:	b9 01 00 00 00       	mov    $0x1,%ecx
   1e13d:	4c 89 f2             	mov    %r14,%rdx
   1e140:	4c 89 ee             	mov    %r13,%rsi
   1e143:	e8 28 5d 00 00       	call   23e70 <_ULx86_64_dwarf_find_proc_info>
   1e148:	41 89 c4             	mov    %eax,%r12d
   1e14b:	85 c0                	test   %eax,%eax
   1e14d:	78 cc                	js     1e11b <fetch_proc_info+0x8b>
   1e14f:	83 bd 88 01 00 00 02 	cmpl   $0x2,0x188(%rbp)
   1e156:	77 32                	ja     1e18a <fetch_proc_info+0xfa>
   1e158:	0f b6 85 50 01 00 00 	movzbl 0x150(%rbp),%eax
   1e15f:	83 e0 f3             	and    $0xfffffff3,%eax
   1e162:	83 c8 04             	or     $0x4,%eax
   1e165:	88 85 50 01 00 00    	mov    %al,0x150(%rbp)
   1e16b:	4c 89 ee             	mov    %r13,%rsi
   1e16e:	48 89 ef             	mov    %rbp,%rdi
   1e171:	ba 01 00 00 00       	mov    $0x1,%edx
   1e176:	e8 e5 38 00 00       	call   21a60 <_ULx86_64_fetch_frame>
   1e17b:	48 83 c4 08          	add    $0x8,%rsp
   1e17f:	44 89 e0             	mov    %r12d,%eax
   1e182:	5d                   	pop    %rbp
   1e183:	41 5c                	pop    %r12
   1e185:	41 5d                	pop    %r13
   1e187:	41 5e                	pop    %r14
   1e189:	c3                   	ret    
   1e18a:	41 bc f6 ff ff ff    	mov    $0xfffffff6,%r12d
   1e190:	eb 89                	jmp    1e11b <fetch_proc_info+0x8b>
   1e192:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1e199:	00 00 00 
   1e19c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001e1a0 <run_cfi_program>:
   1e1a0:	41 57                	push   %r15
   1e1a2:	4d 89 cf             	mov    %r9,%r15
   1e1a5:	41 56                	push   %r14
   1e1a7:	4d 89 c6             	mov    %r8,%r14
   1e1aa:	41 55                	push   %r13
   1e1ac:	49 89 cd             	mov    %rcx,%r13
   1e1af:	41 54                	push   %r12
   1e1b1:	49 89 d4             	mov    %rdx,%r12
   1e1b4:	55                   	push   %rbp
   1e1b5:	48 89 f5             	mov    %rsi,%rbp
   1e1b8:	53                   	push   %rbx
   1e1b9:	48 83 ec 38          	sub    $0x38,%rsp
   1e1bd:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   1e1c2:	f6 87 80 01 00 00 20 	testb  $0x20,0x180(%rdi)
   1e1c9:	0f 84 f1 06 00 00    	je     1e8c0 <run_cfi_program+0x720>
   1e1cf:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   1e1d6:	00 00 
   1e1d8:	48 8b 05 91 3f 01 00 	mov    0x13f91(%rip),%rax        # 32170 <_ULx86_64_local_addr_space>
   1e1df:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1e1e4:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   1e1e9:	e8 12 3b 00 00       	call   21d00 <_Ux86_64_get_accessors>
   1e1ee:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1e1f3:	4d 3b 2c 24          	cmp    (%r12),%r13
   1e1f7:	0f 82 e3 00 00 00    	jb     1e2e0 <run_cfi_program+0x140>
   1e1fd:	49 8b 3e             	mov    (%r14),%rdi
   1e200:	48 8d 1d 1d 90 00 00 	lea    0x901d(%rip),%rbx        # 27224 <__bigtens_D2A+0x344>
   1e207:	4c 8d 1d 12 8d 00 00 	lea    0x8d12(%rip),%r11        # 26f20 <__bigtens_D2A+0x40>
   1e20e:	4c 39 ff             	cmp    %r15,%rdi
   1e211:	0f 83 c9 00 00 00    	jae    1e2e0 <run_cfi_program+0x140>
   1e217:	0f b6 17             	movzbl (%rdi),%edx
   1e21a:	48 8d 47 01          	lea    0x1(%rdi),%rax
   1e21e:	49 89 06             	mov    %rax,(%r14)
   1e221:	89 d1                	mov    %edx,%ecx
   1e223:	81 e1 c0 00 00 00    	and    $0xc0,%ecx
   1e229:	0f 84 79 06 00 00    	je     1e8a8 <run_cfi_program+0x708>
   1e22f:	89 d6                	mov    %edx,%esi
   1e231:	83 e2 3f             	and    $0x3f,%edx
   1e234:	83 e6 3f             	and    $0x3f,%esi
   1e237:	80 f9 c0             	cmp    $0xc0,%cl
   1e23a:	0f 87 5a 09 00 00    	ja     1eb9a <run_cfi_program+0x9fa>
   1e240:	0f b6 c9             	movzbl %cl,%ecx
   1e243:	49 63 0c 8b          	movslq (%r11,%rcx,4),%rcx
   1e247:	4c 01 d9             	add    %r11,%rcx
   1e24a:	3e ff e1             	notrack jmp *%rcx
   1e24d:	40 80 fe 10          	cmp    $0x10,%sil
   1e251:	0f 86 ca 05 00 00    	jbe    1e821 <run_cfi_program+0x681>
   1e257:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1e25c:	48 83 c4 38          	add    $0x38,%rsp
   1e260:	5b                   	pop    %rbx
   1e261:	5d                   	pop    %rbp
   1e262:	41 5c                	pop    %r12
   1e264:	41 5d                	pop    %r13
   1e266:	41 5e                	pop    %r14
   1e268:	41 5f                	pop    %r15
   1e26a:	c3                   	ret    
   1e26b:	31 c9                	xor    %ecx,%ecx
   1e26d:	31 d2                	xor    %edx,%edx
   1e26f:	0f b6 38             	movzbl (%rax),%edi
   1e272:	48 83 c0 01          	add    $0x1,%rax
   1e276:	49 89 06             	mov    %rax,(%r14)
   1e279:	48 89 fe             	mov    %rdi,%rsi
   1e27c:	83 e6 7f             	and    $0x7f,%esi
   1e27f:	48 d3 e6             	shl    %cl,%rsi
   1e282:	48 83 c1 07          	add    $0x7,%rcx
   1e286:	48 09 f2             	or     %rsi,%rdx
   1e289:	40 84 ff             	test   %dil,%dil
   1e28c:	78 e1                	js     1e26f <run_cfi_program+0xcf>
   1e28e:	48 83 fa 10          	cmp    $0x10,%rdx
   1e292:	0f 87 4e 09 00 00    	ja     1ebe6 <run_cfi_program+0xa46>
   1e298:	c6 84 15 d0 00 00 00 	movb   $0x5,0xd0(%rbp,%rdx,1)
   1e29f:	05 
   1e2a0:	31 c9                	xor    %ecx,%ecx
   1e2a2:	31 f6                	xor    %esi,%esi
   1e2a4:	48 89 84 d5 e8 00 00 	mov    %rax,0xe8(%rbp,%rdx,8)
   1e2ab:	00 
   1e2ac:	49 8b 3e             	mov    (%r14),%rdi
   1e2af:	90                   	nop
   1e2b0:	0f b6 17             	movzbl (%rdi),%edx
   1e2b3:	48 83 c7 01          	add    $0x1,%rdi
   1e2b7:	49 89 3e             	mov    %rdi,(%r14)
   1e2ba:	48 89 d0             	mov    %rdx,%rax
   1e2bd:	83 e0 7f             	and    $0x7f,%eax
   1e2c0:	48 d3 e0             	shl    %cl,%rax
   1e2c3:	48 83 c1 07          	add    $0x7,%rcx
   1e2c7:	48 09 c6             	or     %rax,%rsi
   1e2ca:	84 d2                	test   %dl,%dl
   1e2cc:	78 e2                	js     1e2b0 <run_cfi_program+0x110>
   1e2ce:	48 01 f7             	add    %rsi,%rdi
   1e2d1:	49 89 3e             	mov    %rdi,(%r14)
   1e2d4:	4d 3b 2c 24          	cmp    (%r12),%r13
   1e2d8:	0f 83 30 ff ff ff    	jae    1e20e <run_cfi_program+0x6e>
   1e2de:	66 90                	xchg   %ax,%ax
   1e2e0:	31 c0                	xor    %eax,%eax
   1e2e2:	48 83 c4 38          	add    $0x38,%rsp
   1e2e6:	5b                   	pop    %rbx
   1e2e7:	5d                   	pop    %rbp
   1e2e8:	41 5c                	pop    %r12
   1e2ea:	41 5d                	pop    %r13
   1e2ec:	41 5e                	pop    %r14
   1e2ee:	41 5f                	pop    %r15
   1e2f0:	c3                   	ret    
   1e2f1:	31 c9                	xor    %ecx,%ecx
   1e2f3:	31 d2                	xor    %edx,%edx
   1e2f5:	0f b6 38             	movzbl (%rax),%edi
   1e2f8:	48 83 c0 01          	add    $0x1,%rax
   1e2fc:	49 89 06             	mov    %rax,(%r14)
   1e2ff:	48 89 fe             	mov    %rdi,%rsi
   1e302:	83 e6 7f             	and    $0x7f,%esi
   1e305:	48 d3 e6             	shl    %cl,%rsi
   1e308:	48 83 c1 07          	add    $0x7,%rcx
   1e30c:	48 09 f2             	or     %rsi,%rdx
   1e30f:	40 84 ff             	test   %dil,%dil
   1e312:	78 e1                	js     1e2f5 <run_cfi_program+0x155>
   1e314:	48 83 fa 10          	cmp    $0x10,%rdx
   1e318:	0f 87 c8 08 00 00    	ja     1ebe6 <run_cfi_program+0xa46>
   1e31e:	31 c9                	xor    %ecx,%ecx
   1e320:	45 31 c0             	xor    %r8d,%r8d
   1e323:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e328:	0f b6 38             	movzbl (%rax),%edi
   1e32b:	48 83 c0 01          	add    $0x1,%rax
   1e32f:	49 89 06             	mov    %rax,(%r14)
   1e332:	48 89 fe             	mov    %rdi,%rsi
   1e335:	83 e6 7f             	and    $0x7f,%esi
   1e338:	48 d3 e6             	shl    %cl,%rsi
   1e33b:	48 83 c1 07          	add    $0x7,%rcx
   1e33f:	49 09 f0             	or     %rsi,%r8
   1e342:	40 84 ff             	test   %dil,%dil
   1e345:	78 e1                	js     1e328 <run_cfi_program+0x188>
   1e347:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   1e34c:	4c 0f af 40 28       	imul   0x28(%rax),%r8
   1e351:	c6 84 15 d0 00 00 00 	movb   $0x2,0xd0(%rbp,%rdx,1)
   1e358:	02 
   1e359:	49 f7 d8             	neg    %r8
   1e35c:	4c 89 84 d5 e8 00 00 	mov    %r8,0xe8(%rbp,%rdx,8)
   1e363:	00 
   1e364:	4d 3b 2c 24          	cmp    (%r12),%r13
   1e368:	0f 83 a2 00 00 00    	jae    1e410 <run_cfi_program+0x270>
   1e36e:	31 c0                	xor    %eax,%eax
   1e370:	e9 6d ff ff ff       	jmp    1e2e2 <run_cfi_program+0x142>
   1e375:	31 c9                	xor    %ecx,%ecx
   1e377:	31 d2                	xor    %edx,%edx
   1e379:	0f b6 38             	movzbl (%rax),%edi
   1e37c:	48 83 c0 01          	add    $0x1,%rax
   1e380:	49 89 06             	mov    %rax,(%r14)
   1e383:	48 89 fe             	mov    %rdi,%rsi
   1e386:	83 e6 7f             	and    $0x7f,%esi
   1e389:	48 d3 e6             	shl    %cl,%rsi
   1e38c:	48 83 c1 07          	add    $0x7,%rcx
   1e390:	48 09 f2             	or     %rsi,%rdx
   1e393:	40 84 ff             	test   %dil,%dil
   1e396:	78 e1                	js     1e379 <run_cfi_program+0x1d9>
   1e398:	48 89 55 08          	mov    %rdx,0x8(%rbp)
   1e39c:	4d 3b 2c 24          	cmp    (%r12),%r13
   1e3a0:	73 6e                	jae    1e410 <run_cfi_program+0x270>
   1e3a2:	31 c0                	xor    %eax,%eax
   1e3a4:	e9 39 ff ff ff       	jmp    1e2e2 <run_cfi_program+0x142>
   1e3a9:	31 c9                	xor    %ecx,%ecx
   1e3ab:	31 d2                	xor    %edx,%edx
   1e3ad:	0f b6 38             	movzbl (%rax),%edi
   1e3b0:	48 83 c0 01          	add    $0x1,%rax
   1e3b4:	49 89 06             	mov    %rax,(%r14)
   1e3b7:	48 89 fe             	mov    %rdi,%rsi
   1e3ba:	83 e6 7f             	and    $0x7f,%esi
   1e3bd:	48 d3 e6             	shl    %cl,%rsi
   1e3c0:	48 83 c1 07          	add    $0x7,%rcx
   1e3c4:	48 09 f2             	or     %rsi,%rdx
   1e3c7:	40 84 ff             	test   %dil,%dil
   1e3ca:	78 e1                	js     1e3ad <run_cfi_program+0x20d>
   1e3cc:	48 83 f9 3f          	cmp    $0x3f,%rcx
   1e3d0:	77 12                	ja     1e3e4 <run_cfi_program+0x244>
   1e3d2:	83 e7 40             	and    $0x40,%edi
   1e3d5:	74 0d                	je     1e3e4 <run_cfi_program+0x244>
   1e3d7:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1e3de:	48 d3 e0             	shl    %cl,%rax
   1e3e1:	48 09 c2             	or     %rax,%rdx
   1e3e4:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   1e3e9:	48 0f af 50 28       	imul   0x28(%rax),%rdx
   1e3ee:	c6 85 e2 00 00 00 00 	movb   $0x0,0xe2(%rbp)
   1e3f5:	48 89 95 78 01 00 00 	mov    %rdx,0x178(%rbp)
   1e3fc:	4d 3b 2c 24          	cmp    (%r12),%r13
   1e400:	0f 82 da fe ff ff    	jb     1e2e0 <run_cfi_program+0x140>
   1e406:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1e40d:	00 00 00 
   1e410:	49 8b 3e             	mov    (%r14),%rdi
   1e413:	4c 39 ff             	cmp    %r15,%rdi
   1e416:	0f 82 fb fd ff ff    	jb     1e217 <run_cfi_program+0x77>
   1e41c:	e9 bf fe ff ff       	jmp    1e2e0 <run_cfi_program+0x140>
   1e421:	31 c9                	xor    %ecx,%ecx
   1e423:	31 d2                	xor    %edx,%edx
   1e425:	0f b6 38             	movzbl (%rax),%edi
   1e428:	48 83 c0 01          	add    $0x1,%rax
   1e42c:	49 89 06             	mov    %rax,(%r14)
   1e42f:	48 89 fe             	mov    %rdi,%rsi
   1e432:	83 e6 7f             	and    $0x7f,%esi
   1e435:	48 d3 e6             	shl    %cl,%rsi
   1e438:	48 83 c1 07          	add    $0x7,%rcx
   1e43c:	48 09 f2             	or     %rsi,%rdx
   1e43f:	40 84 ff             	test   %dil,%dil
   1e442:	78 e1                	js     1e425 <run_cfi_program+0x285>
   1e444:	48 83 fa 10          	cmp    $0x10,%rdx
   1e448:	0f 87 98 07 00 00    	ja     1ebe6 <run_cfi_program+0xa46>
   1e44e:	31 c9                	xor    %ecx,%ecx
   1e450:	45 31 c0             	xor    %r8d,%r8d
   1e453:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e458:	0f b6 38             	movzbl (%rax),%edi
   1e45b:	48 83 c0 01          	add    $0x1,%rax
   1e45f:	49 89 06             	mov    %rax,(%r14)
   1e462:	48 89 fe             	mov    %rdi,%rsi
   1e465:	83 e6 7f             	and    $0x7f,%esi
   1e468:	48 d3 e6             	shl    %cl,%rsi
   1e46b:	48 83 c1 07          	add    $0x7,%rcx
   1e46f:	49 09 f0             	or     %rsi,%r8
   1e472:	40 84 ff             	test   %dil,%dil
   1e475:	78 e1                	js     1e458 <run_cfi_program+0x2b8>
   1e477:	48 83 f9 3f          	cmp    $0x3f,%rcx
   1e47b:	77 12                	ja     1e48f <run_cfi_program+0x2ef>
   1e47d:	83 e7 40             	and    $0x40,%edi
   1e480:	74 0d                	je     1e48f <run_cfi_program+0x2ef>
   1e482:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1e489:	48 d3 e0             	shl    %cl,%rax
   1e48c:	49 09 c0             	or     %rax,%r8
   1e48f:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   1e494:	48 89 95 70 01 00 00 	mov    %rdx,0x170(%rbp)
   1e49b:	4c 0f af 40 28       	imul   0x28(%rax),%r8
   1e4a0:	b8 03 00 00 00       	mov    $0x3,%eax
   1e4a5:	66 89 85 e1 00 00 00 	mov    %ax,0xe1(%rbp)
   1e4ac:	4c 89 85 78 01 00 00 	mov    %r8,0x178(%rbp)
   1e4b3:	4d 3b 2c 24          	cmp    (%r12),%r13
   1e4b7:	0f 83 53 ff ff ff    	jae    1e410 <run_cfi_program+0x270>
   1e4bd:	31 c0                	xor    %eax,%eax
   1e4bf:	e9 1e fe ff ff       	jmp    1e2e2 <run_cfi_program+0x142>
   1e4c4:	31 c9                	xor    %ecx,%ecx
   1e4c6:	31 d2                	xor    %edx,%edx
   1e4c8:	0f b6 38             	movzbl (%rax),%edi
   1e4cb:	48 83 c0 01          	add    $0x1,%rax
   1e4cf:	49 89 06             	mov    %rax,(%r14)
   1e4d2:	48 89 fe             	mov    %rdi,%rsi
   1e4d5:	83 e6 7f             	and    $0x7f,%esi
   1e4d8:	48 d3 e6             	shl    %cl,%rsi
   1e4db:	48 83 c1 07          	add    $0x7,%rcx
   1e4df:	48 09 f2             	or     %rsi,%rdx
   1e4e2:	40 84 ff             	test   %dil,%dil
   1e4e5:	78 e1                	js     1e4c8 <run_cfi_program+0x328>
   1e4e7:	48 83 fa 10          	cmp    $0x10,%rdx
   1e4eb:	0f 87 f5 06 00 00    	ja     1ebe6 <run_cfi_program+0xa46>
   1e4f1:	31 c9                	xor    %ecx,%ecx
   1e4f3:	45 31 c0             	xor    %r8d,%r8d
   1e4f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1e4fd:	00 00 00 
   1e500:	0f b6 38             	movzbl (%rax),%edi
   1e503:	48 83 c0 01          	add    $0x1,%rax
   1e507:	49 89 06             	mov    %rax,(%r14)
   1e50a:	48 89 fe             	mov    %rdi,%rsi
   1e50d:	83 e6 7f             	and    $0x7f,%esi
   1e510:	48 d3 e6             	shl    %cl,%rsi
   1e513:	48 83 c1 07          	add    $0x7,%rcx
   1e517:	49 09 f0             	or     %rsi,%r8
   1e51a:	40 84 ff             	test   %dil,%dil
   1e51d:	78 e1                	js     1e500 <run_cfi_program+0x360>
   1e51f:	48 83 f9 3f          	cmp    $0x3f,%rcx
   1e523:	77 1b                	ja     1e540 <run_cfi_program+0x3a0>
   1e525:	83 e7 40             	and    $0x40,%edi
   1e528:	74 16                	je     1e540 <run_cfi_program+0x3a0>
   1e52a:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1e531:	48 d3 e0             	shl    %cl,%rax
   1e534:	49 09 c0             	or     %rax,%r8
   1e537:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1e53e:	00 00 
   1e540:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   1e545:	4c 0f af 40 28       	imul   0x28(%rax),%r8
   1e54a:	c6 84 15 d0 00 00 00 	movb   $0x2,0xd0(%rbp,%rdx,1)
   1e551:	02 
   1e552:	4c 89 84 d5 e8 00 00 	mov    %r8,0xe8(%rbp,%rdx,8)
   1e559:	00 
   1e55a:	4d 3b 2c 24          	cmp    (%r12),%r13
   1e55e:	0f 83 ac fe ff ff    	jae    1e410 <run_cfi_program+0x270>
   1e564:	31 c0                	xor    %eax,%eax
   1e566:	e9 77 fd ff ff       	jmp    1e2e2 <run_cfi_program+0x142>
   1e56b:	31 c9                	xor    %ecx,%ecx
   1e56d:	31 d2                	xor    %edx,%edx
   1e56f:	0f b6 38             	movzbl (%rax),%edi
   1e572:	48 83 c0 01          	add    $0x1,%rax
   1e576:	49 89 06             	mov    %rax,(%r14)
   1e579:	48 89 fe             	mov    %rdi,%rsi
   1e57c:	83 e6 7f             	and    $0x7f,%esi
   1e57f:	48 d3 e6             	shl    %cl,%rsi
   1e582:	48 83 c1 07          	add    $0x7,%rcx
   1e586:	48 09 f2             	or     %rsi,%rdx
   1e589:	40 84 ff             	test   %dil,%dil
   1e58c:	78 e1                	js     1e56f <run_cfi_program+0x3cf>
   1e58e:	48 83 fa 10          	cmp    $0x10,%rdx
   1e592:	0f 87 4e 06 00 00    	ja     1ebe6 <run_cfi_program+0xa46>
   1e598:	c6 84 15 d0 00 00 00 	movb   $0x4,0xd0(%rbp,%rdx,1)
   1e59f:	04 
   1e5a0:	31 c9                	xor    %ecx,%ecx
   1e5a2:	31 f6                	xor    %esi,%esi
   1e5a4:	48 89 84 d5 e8 00 00 	mov    %rax,0xe8(%rbp,%rdx,8)
   1e5ab:	00 
   1e5ac:	49 8b 3e             	mov    (%r14),%rdi
   1e5af:	90                   	nop
   1e5b0:	0f b6 17             	movzbl (%rdi),%edx
   1e5b3:	48 83 c7 01          	add    $0x1,%rdi
   1e5b7:	49 89 3e             	mov    %rdi,(%r14)
   1e5ba:	48 89 d0             	mov    %rdx,%rax
   1e5bd:	83 e0 7f             	and    $0x7f,%eax
   1e5c0:	48 d3 e0             	shl    %cl,%rax
   1e5c3:	48 83 c1 07          	add    $0x7,%rcx
   1e5c7:	48 09 c6             	or     %rax,%rsi
   1e5ca:	84 d2                	test   %dl,%dl
   1e5cc:	78 e2                	js     1e5b0 <run_cfi_program+0x410>
   1e5ce:	48 01 f7             	add    %rsi,%rdi
   1e5d1:	49 89 3e             	mov    %rdi,(%r14)
   1e5d4:	4d 3b 2c 24          	cmp    (%r12),%r13
   1e5d8:	0f 83 30 fc ff ff    	jae    1e20e <run_cfi_program+0x6e>
   1e5de:	e9 fd fc ff ff       	jmp    1e2e0 <run_cfi_program+0x140>
   1e5e3:	31 c9                	xor    %ecx,%ecx
   1e5e5:	31 d2                	xor    %edx,%edx
   1e5e7:	0f b6 38             	movzbl (%rax),%edi
   1e5ea:	48 83 c0 01          	add    $0x1,%rax
   1e5ee:	49 89 06             	mov    %rax,(%r14)
   1e5f1:	48 89 fe             	mov    %rdi,%rsi
   1e5f4:	83 e6 7f             	and    $0x7f,%esi
   1e5f7:	48 d3 e6             	shl    %cl,%rsi
   1e5fa:	48 83 c1 07          	add    $0x7,%rcx
   1e5fe:	48 09 f2             	or     %rsi,%rdx
   1e601:	40 84 ff             	test   %dil,%dil
   1e604:	78 e1                	js     1e5e7 <run_cfi_program+0x447>
   1e606:	e9 e3 fd ff ff       	jmp    1e3ee <run_cfi_program+0x24e>
   1e60b:	31 c9                	xor    %ecx,%ecx
   1e60d:	31 d2                	xor    %edx,%edx
   1e60f:	0f b6 38             	movzbl (%rax),%edi
   1e612:	48 83 c0 01          	add    $0x1,%rax
   1e616:	49 89 06             	mov    %rax,(%r14)
   1e619:	48 89 fe             	mov    %rdi,%rsi
   1e61c:	83 e6 7f             	and    $0x7f,%esi
   1e61f:	48 d3 e6             	shl    %cl,%rsi
   1e622:	48 83 c1 07          	add    $0x7,%rcx
   1e626:	48 09 f2             	or     %rsi,%rdx
   1e629:	40 84 ff             	test   %dil,%dil
   1e62c:	78 e1                	js     1e60f <run_cfi_program+0x46f>
   1e62e:	48 83 fa 10          	cmp    $0x10,%rdx
   1e632:	0f 87 ae 05 00 00    	ja     1ebe6 <run_cfi_program+0xa46>
   1e638:	c6 85 e1 00 00 00 03 	movb   $0x3,0xe1(%rbp)
   1e63f:	48 89 95 70 01 00 00 	mov    %rdx,0x170(%rbp)
   1e646:	4d 3b 2c 24          	cmp    (%r12),%r13
   1e64a:	0f 83 c0 fd ff ff    	jae    1e410 <run_cfi_program+0x270>
   1e650:	31 c0                	xor    %eax,%eax
   1e652:	e9 8b fc ff ff       	jmp    1e2e2 <run_cfi_program+0x142>
   1e657:	31 c9                	xor    %ecx,%ecx
   1e659:	31 d2                	xor    %edx,%edx
   1e65b:	0f b6 38             	movzbl (%rax),%edi
   1e65e:	48 83 c0 01          	add    $0x1,%rax
   1e662:	49 89 06             	mov    %rax,(%r14)
   1e665:	48 89 fe             	mov    %rdi,%rsi
   1e668:	83 e6 7f             	and    $0x7f,%esi
   1e66b:	48 d3 e6             	shl    %cl,%rsi
   1e66e:	48 83 c1 07          	add    $0x7,%rcx
   1e672:	48 09 f2             	or     %rsi,%rdx
   1e675:	40 84 ff             	test   %dil,%dil
   1e678:	78 e1                	js     1e65b <run_cfi_program+0x4bb>
   1e67a:	48 83 fa 10          	cmp    $0x10,%rdx
   1e67e:	0f 87 62 05 00 00    	ja     1ebe6 <run_cfi_program+0xa46>
   1e684:	31 c9                	xor    %ecx,%ecx
   1e686:	45 31 c0             	xor    %r8d,%r8d
   1e689:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1e690:	0f b6 38             	movzbl (%rax),%edi
   1e693:	48 83 c0 01          	add    $0x1,%rax
   1e697:	49 89 06             	mov    %rax,(%r14)
   1e69a:	48 89 fe             	mov    %rdi,%rsi
   1e69d:	83 e6 7f             	and    $0x7f,%esi
   1e6a0:	48 d3 e6             	shl    %cl,%rsi
   1e6a3:	48 83 c1 07          	add    $0x7,%rcx
   1e6a7:	49 09 f0             	or     %rsi,%r8
   1e6aa:	40 84 ff             	test   %dil,%dil
   1e6ad:	78 e1                	js     1e690 <run_cfi_program+0x4f0>
   1e6af:	48 89 95 70 01 00 00 	mov    %rdx,0x170(%rbp)
   1e6b6:	ba 03 00 00 00       	mov    $0x3,%edx
   1e6bb:	66 89 95 e1 00 00 00 	mov    %dx,0xe1(%rbp)
   1e6c2:	4c 89 85 78 01 00 00 	mov    %r8,0x178(%rbp)
   1e6c9:	4d 3b 2c 24          	cmp    (%r12),%r13
   1e6cd:	0f 83 3d fd ff ff    	jae    1e410 <run_cfi_program+0x270>
   1e6d3:	31 c0                	xor    %eax,%eax
   1e6d5:	e9 08 fc ff ff       	jmp    1e2e2 <run_cfi_program+0x142>
   1e6da:	31 c9                	xor    %ecx,%ecx
   1e6dc:	31 d2                	xor    %edx,%edx
   1e6de:	0f b6 38             	movzbl (%rax),%edi
   1e6e1:	48 83 c0 01          	add    $0x1,%rax
   1e6e5:	49 89 06             	mov    %rax,(%r14)
   1e6e8:	48 89 fe             	mov    %rdi,%rsi
   1e6eb:	83 e6 7f             	and    $0x7f,%esi
   1e6ee:	48 d3 e6             	shl    %cl,%rsi
   1e6f1:	48 83 c1 07          	add    $0x7,%rcx
   1e6f5:	48 09 f2             	or     %rsi,%rdx
   1e6f8:	40 84 ff             	test   %dil,%dil
   1e6fb:	78 e1                	js     1e6de <run_cfi_program+0x53e>
   1e6fd:	48 83 fa 10          	cmp    $0x10,%rdx
   1e701:	0f 87 df 04 00 00    	ja     1ebe6 <run_cfi_program+0xa46>
   1e707:	31 c9                	xor    %ecx,%ecx
   1e709:	45 31 c0             	xor    %r8d,%r8d
   1e70c:	0f 1f 40 00          	nopl   0x0(%rax)
   1e710:	0f b6 38             	movzbl (%rax),%edi
   1e713:	48 83 c0 01          	add    $0x1,%rax
   1e717:	49 89 06             	mov    %rax,(%r14)
   1e71a:	48 89 fe             	mov    %rdi,%rsi
   1e71d:	83 e6 7f             	and    $0x7f,%esi
   1e720:	48 d3 e6             	shl    %cl,%rsi
   1e723:	48 83 c1 07          	add    $0x7,%rcx
   1e727:	49 09 f0             	or     %rsi,%r8
   1e72a:	40 84 ff             	test   %dil,%dil
   1e72d:	78 e1                	js     1e710 <run_cfi_program+0x570>
   1e72f:	c6 84 15 d0 00 00 00 	movb   $0x3,0xd0(%rbp,%rdx,1)
   1e736:	03 
   1e737:	4c 89 84 d5 e8 00 00 	mov    %r8,0xe8(%rbp,%rdx,8)
   1e73e:	00 
   1e73f:	4d 3b 2c 24          	cmp    (%r12),%r13
   1e743:	0f 83 c7 fc ff ff    	jae    1e410 <run_cfi_program+0x270>
   1e749:	31 c0                	xor    %eax,%eax
   1e74b:	e9 92 fb ff ff       	jmp    1e2e2 <run_cfi_program+0x142>
   1e750:	31 c9                	xor    %ecx,%ecx
   1e752:	31 d2                	xor    %edx,%edx
   1e754:	0f b6 38             	movzbl (%rax),%edi
   1e757:	48 83 c0 01          	add    $0x1,%rax
   1e75b:	49 89 06             	mov    %rax,(%r14)
   1e75e:	48 89 fe             	mov    %rdi,%rsi
   1e761:	83 e6 7f             	and    $0x7f,%esi
   1e764:	48 d3 e6             	shl    %cl,%rsi
   1e767:	48 83 c1 07          	add    $0x7,%rcx
   1e76b:	48 09 f2             	or     %rsi,%rdx
   1e76e:	40 84 ff             	test   %dil,%dil
   1e771:	78 e1                	js     1e754 <run_cfi_program+0x5b4>
   1e773:	48 83 fa 10          	cmp    $0x10,%rdx
   1e777:	0f 87 69 04 00 00    	ja     1ebe6 <run_cfi_program+0xa46>
   1e77d:	c6 84 15 d0 00 00 00 	movb   $0x1,0xd0(%rbp,%rdx,1)
   1e784:	01 
   1e785:	48 c7 84 d5 e8 00 00 	movq   $0x0,0xe8(%rbp,%rdx,8)
   1e78c:	00 00 00 00 00 
   1e791:	4d 3b 2c 24          	cmp    (%r12),%r13
   1e795:	0f 83 75 fc ff ff    	jae    1e410 <run_cfi_program+0x270>
   1e79b:	31 c0                	xor    %eax,%eax
   1e79d:	e9 40 fb ff ff       	jmp    1e2e2 <run_cfi_program+0x142>
   1e7a2:	31 c9                	xor    %ecx,%ecx
   1e7a4:	31 d2                	xor    %edx,%edx
   1e7a6:	0f b6 38             	movzbl (%rax),%edi
   1e7a9:	48 83 c0 01          	add    $0x1,%rax
   1e7ad:	49 89 06             	mov    %rax,(%r14)
   1e7b0:	48 89 fe             	mov    %rdi,%rsi
   1e7b3:	83 e6 7f             	and    $0x7f,%esi
   1e7b6:	48 d3 e6             	shl    %cl,%rsi
   1e7b9:	48 83 c1 07          	add    $0x7,%rcx
   1e7bd:	48 09 f2             	or     %rsi,%rdx
   1e7c0:	40 84 ff             	test   %dil,%dil
   1e7c3:	78 e1                	js     1e7a6 <run_cfi_program+0x606>
   1e7c5:	48 83 fa 10          	cmp    $0x10,%rdx
   1e7c9:	0f 87 17 04 00 00    	ja     1ebe6 <run_cfi_program+0xa46>
   1e7cf:	c6 84 15 d0 00 00 00 	movb   $0x0,0xd0(%rbp,%rdx,1)
   1e7d6:	00 
   1e7d7:	48 c7 84 d5 e8 00 00 	movq   $0x0,0xe8(%rbp,%rdx,8)
   1e7de:	00 00 00 00 00 
   1e7e3:	4d 3b 2c 24          	cmp    (%r12),%r13
   1e7e7:	0f 83 23 fc ff ff    	jae    1e410 <run_cfi_program+0x270>
   1e7ed:	31 c0                	xor    %eax,%eax
   1e7ef:	e9 ee fa ff ff       	jmp    1e2e2 <run_cfi_program+0x142>
   1e7f4:	31 c9                	xor    %ecx,%ecx
   1e7f6:	31 d2                	xor    %edx,%edx
   1e7f8:	0f b6 38             	movzbl (%rax),%edi
   1e7fb:	48 83 c0 01          	add    $0x1,%rax
   1e7ff:	49 89 06             	mov    %rax,(%r14)
   1e802:	48 89 fe             	mov    %rdi,%rsi
   1e805:	83 e6 7f             	and    $0x7f,%esi
   1e808:	48 d3 e6             	shl    %cl,%rsi
   1e80b:	48 83 c1 07          	add    $0x7,%rcx
   1e80f:	48 09 f2             	or     %rsi,%rdx
   1e812:	40 84 ff             	test   %dil,%dil
   1e815:	78 e1                	js     1e7f8 <run_cfi_program+0x658>
   1e817:	48 83 fa 10          	cmp    $0x10,%rdx
   1e81b:	0f 87 36 fa ff ff    	ja     1e257 <run_cfi_program+0xb7>
   1e821:	0f b6 44 15 18       	movzbl 0x18(%rbp,%rdx,1),%eax
   1e826:	88 84 15 d0 00 00 00 	mov    %al,0xd0(%rbp,%rdx,1)
   1e82d:	48 8d 44 d5 00       	lea    0x0(%rbp,%rdx,8),%rax
   1e832:	48 8b 50 30          	mov    0x30(%rax),%rdx
   1e836:	48 89 90 e8 00 00 00 	mov    %rdx,0xe8(%rax)
   1e83d:	4d 3b 2c 24          	cmp    (%r12),%r13
   1e841:	0f 83 c9 fb ff ff    	jae    1e410 <run_cfi_program+0x270>
   1e847:	31 c0                	xor    %eax,%eax
   1e849:	e9 94 fa ff ff       	jmp    1e2e2 <run_cfi_program+0x142>
   1e84e:	31 c9                	xor    %ecx,%ecx
   1e850:	31 d2                	xor    %edx,%edx
   1e852:	0f b6 38             	movzbl (%rax),%edi
   1e855:	48 83 c0 01          	add    $0x1,%rax
   1e859:	49 89 06             	mov    %rax,(%r14)
   1e85c:	48 89 fe             	mov    %rdi,%rsi
   1e85f:	83 e6 7f             	and    $0x7f,%esi
   1e862:	48 d3 e6             	shl    %cl,%rsi
   1e865:	48 83 c1 07          	add    $0x7,%rcx
   1e869:	48 09 f2             	or     %rsi,%rdx
   1e86c:	40 84 ff             	test   %dil,%dil
   1e86f:	78 e1                	js     1e852 <run_cfi_program+0x6b2>
   1e871:	48 83 fa 10          	cmp    $0x10,%rdx
   1e875:	0f 87 6b 03 00 00    	ja     1ebe6 <run_cfi_program+0xa46>
   1e87b:	31 c9                	xor    %ecx,%ecx
   1e87d:	45 31 c0             	xor    %r8d,%r8d
   1e880:	0f b6 38             	movzbl (%rax),%edi
   1e883:	48 83 c0 01          	add    $0x1,%rax
   1e887:	49 89 06             	mov    %rax,(%r14)
   1e88a:	48 89 fe             	mov    %rdi,%rsi
   1e88d:	83 e6 7f             	and    $0x7f,%esi
   1e890:	48 d3 e6             	shl    %cl,%rsi
   1e893:	48 83 c1 07          	add    $0x7,%rcx
   1e897:	49 09 f0             	or     %rsi,%r8
   1e89a:	40 84 ff             	test   %dil,%dil
   1e89d:	78 e1                	js     1e880 <run_cfi_program+0x6e0>
   1e89f:	e9 9c fc ff ff       	jmp    1e540 <run_cfi_program+0x3a0>
   1e8a4:	0f 1f 40 00          	nopl   0x0(%rax)
   1e8a8:	80 fa 3c             	cmp    $0x3c,%dl
   1e8ab:	0f 87 e9 02 00 00    	ja     1eb9a <run_cfi_program+0x9fa>
   1e8b1:	48 63 14 93          	movslq (%rbx,%rdx,4),%rdx
   1e8b5:	48 01 da             	add    %rbx,%rdx
   1e8b8:	3e ff e2             	notrack jmp *%rdx
   1e8bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e8c0:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   1e8c5:	48 8b 58 08          	mov    0x8(%rax),%rbx
   1e8c9:	48 8b 00             	mov    (%rax),%rax
   1e8cc:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
   1e8d1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1e8d6:	e9 09 f9 ff ff       	jmp    1e1e4 <run_cfi_program+0x44>
   1e8db:	c6 85 e1 00 00 00 04 	movb   $0x4,0xe1(%rbp)
   1e8e2:	31 c9                	xor    %ecx,%ecx
   1e8e4:	31 f6                	xor    %esi,%esi
   1e8e6:	48 89 85 70 01 00 00 	mov    %rax,0x170(%rbp)
   1e8ed:	49 8b 3e             	mov    (%r14),%rdi
   1e8f0:	0f b6 17             	movzbl (%rdi),%edx
   1e8f3:	48 83 c7 01          	add    $0x1,%rdi
   1e8f7:	49 89 3e             	mov    %rdi,(%r14)
   1e8fa:	48 89 d0             	mov    %rdx,%rax
   1e8fd:	83 e0 7f             	and    $0x7f,%eax
   1e900:	48 d3 e0             	shl    %cl,%rax
   1e903:	48 83 c1 07          	add    $0x7,%rcx
   1e907:	48 09 c6             	or     %rax,%rsi
   1e90a:	84 d2                	test   %dl,%dl
   1e90c:	78 e2                	js     1e8f0 <run_cfi_program+0x750>
   1e90e:	48 01 f7             	add    %rsi,%rdi
   1e911:	49 89 3e             	mov    %rdi,(%r14)
   1e914:	4d 3b 2c 24          	cmp    (%r12),%r13
   1e918:	0f 83 f0 f8 ff ff    	jae    1e20e <run_cfi_program+0x6e>
   1e91e:	e9 bd f9 ff ff       	jmp    1e2e0 <run_cfi_program+0x140>
   1e923:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   1e928:	48 8b 30             	mov    (%rax),%rsi
   1e92b:	48 85 f6             	test   %rsi,%rsi
   1e92e:	0f 84 23 f9 ff ff    	je     1e257 <run_cfi_program+0xb7>
   1e934:	f3 0f 6f 5e 08       	movdqu 0x8(%rsi),%xmm3
   1e939:	f3 0f 6f 66 18       	movdqu 0x18(%rsi),%xmm4
   1e93e:	f3 0f 6f 6e 28       	movdqu 0x28(%rsi),%xmm5
   1e943:	f3 0f 6f 76 38       	movdqu 0x38(%rsi),%xmm6
   1e948:	f3 0f 6f 7e 48       	movdqu 0x48(%rsi),%xmm7
   1e94d:	48 8b 86 b8 00 00 00 	mov    0xb8(%rsi),%rax
   1e954:	0f 11 9d c8 00 00 00 	movups %xmm3,0xc8(%rbp)
   1e95b:	f3 0f 6f 86 a8 00 00 	movdqu 0xa8(%rsi),%xmm0
   1e962:	00 
   1e963:	f3 0f 6f 5e 58       	movdqu 0x58(%rsi),%xmm3
   1e968:	0f 11 a5 d8 00 00 00 	movups %xmm4,0xd8(%rbp)
   1e96f:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
   1e974:	f3 0f 6f 66 68       	movdqu 0x68(%rsi),%xmm4
   1e979:	0f 11 ad e8 00 00 00 	movups %xmm5,0xe8(%rbp)
   1e980:	0f 11 b5 f8 00 00 00 	movups %xmm6,0xf8(%rbp)
   1e987:	f3 0f 6f 6e 78       	movdqu 0x78(%rsi),%xmm5
   1e98c:	f3 0f 6f b6 88 00 00 	movdqu 0x88(%rsi),%xmm6
   1e993:	00 
   1e994:	0f 11 bd 08 01 00 00 	movups %xmm7,0x108(%rbp)
   1e99b:	f3 0f 6f be 98 00 00 	movdqu 0x98(%rsi),%xmm7
   1e9a2:	00 
   1e9a3:	48 89 85 78 01 00 00 	mov    %rax,0x178(%rbp)
   1e9aa:	48 8b 06             	mov    (%rsi),%rax
   1e9ad:	0f 11 9d 18 01 00 00 	movups %xmm3,0x118(%rbp)
   1e9b4:	0f 11 a5 28 01 00 00 	movups %xmm4,0x128(%rbp)
   1e9bb:	0f 11 ad 38 01 00 00 	movups %xmm5,0x138(%rbp)
   1e9c2:	0f 11 b5 48 01 00 00 	movups %xmm6,0x148(%rbp)
   1e9c9:	0f 11 bd 58 01 00 00 	movups %xmm7,0x158(%rbp)
   1e9d0:	0f 11 85 68 01 00 00 	movups %xmm0,0x168(%rbp)
   1e9d7:	48 89 07             	mov    %rax,(%rdi)
   1e9da:	48 8d 3d 9f 37 03 00 	lea    0x3379f(%rip),%rdi        # 52180 <dwarf_reg_state_pool>
   1e9e1:	e8 2a 30 00 00       	call   21a10 <_UIx86_64__mempool_free>
   1e9e6:	4d 3b 2c 24          	cmp    (%r12),%r13
   1e9ea:	0f 82 f0 f8 ff ff    	jb     1e2e0 <run_cfi_program+0x140>
   1e9f0:	49 8b 3e             	mov    (%r14),%rdi
   1e9f3:	4c 8d 1d 26 85 00 00 	lea    0x8526(%rip),%r11        # 26f20 <__bigtens_D2A+0x40>
   1e9fa:	4c 39 ff             	cmp    %r15,%rdi
   1e9fd:	0f 82 14 f8 ff ff    	jb     1e217 <run_cfi_program+0x77>
   1ea03:	31 c0                	xor    %eax,%eax
   1ea05:	e9 d8 f8 ff ff       	jmp    1e2e2 <run_cfi_program+0x142>
   1ea0a:	0f b6 00             	movzbl (%rax),%eax
   1ea0d:	48 83 c7 02          	add    $0x2,%rdi
   1ea11:	49 89 3e             	mov    %rdi,(%r14)
   1ea14:	48 8b 7c 24 78       	mov    0x78(%rsp),%rdi
   1ea19:	48 0f af 47 20       	imul   0x20(%rdi),%rax
   1ea1e:	49 03 04 24          	add    (%r12),%rax
   1ea22:	49 89 04 24          	mov    %rax,(%r12)
   1ea26:	4c 39 e8             	cmp    %r13,%rax
   1ea29:	0f 86 e1 f9 ff ff    	jbe    1e410 <run_cfi_program+0x270>
   1ea2f:	31 c0                	xor    %eax,%eax
   1ea31:	e9 ac f8 ff ff       	jmp    1e2e2 <run_cfi_program+0x142>
   1ea36:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   1ea3b:	48 83 ec 08          	sub    $0x8,%rsp
   1ea3f:	4d 89 e1             	mov    %r12,%r9
   1ea42:	4c 89 f2             	mov    %r14,%rdx
   1ea45:	0f b6 48 44          	movzbl 0x44(%rax),%ecx
   1ea49:	ff 74 24 20          	push   0x20(%rsp)
   1ea4d:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   1ea52:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   1ea57:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   1ea5c:	4c 8d 80 58 01 00 00 	lea    0x158(%rax),%r8
   1ea63:	e8 68 12 00 00       	call   1fcd0 <_ULx86_64_dwarf_read_encoded_pointer>
   1ea68:	4d 39 2c 24          	cmp    %r13,(%r12)
   1ea6c:	59                   	pop    %rcx
   1ea6d:	4c 8d 1d ac 84 00 00 	lea    0x84ac(%rip),%r11        # 26f20 <__bigtens_D2A+0x40>
   1ea74:	5e                   	pop    %rsi
   1ea75:	77 10                	ja     1ea87 <run_cfi_program+0x8e7>
   1ea77:	49 8b 3e             	mov    (%r14),%rdi
   1ea7a:	85 c0                	test   %eax,%eax
   1ea7c:	78 09                	js     1ea87 <run_cfi_program+0x8e7>
   1ea7e:	4c 39 ff             	cmp    %r15,%rdi
   1ea81:	0f 82 90 f7 ff ff    	jb     1e217 <run_cfi_program+0x77>
   1ea87:	85 c0                	test   %eax,%eax
   1ea89:	ba 00 00 00 00       	mov    $0x0,%edx
   1ea8e:	0f 4f c2             	cmovg  %edx,%eax
   1ea91:	e9 c6 f7 ff ff       	jmp    1e25c <run_cfi_program+0xbc>
   1ea96:	8b 00                	mov    (%rax),%eax
   1ea98:	48 83 c7 05          	add    $0x5,%rdi
   1ea9c:	e9 70 ff ff ff       	jmp    1ea11 <run_cfi_program+0x871>
   1eaa1:	0f b7 00             	movzwl (%rax),%eax
   1eaa4:	48 83 c7 03          	add    $0x3,%rdi
   1eaa8:	e9 64 ff ff ff       	jmp    1ea11 <run_cfi_program+0x871>
   1eaad:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   1eab2:	48 8d 3d c7 36 03 00 	lea    0x336c7(%rip),%rdi        # 52180 <dwarf_reg_state_pool>
   1eab9:	48 8b 08             	mov    (%rax),%rcx
   1eabc:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
   1eac1:	e8 da 2e 00 00       	call   219a0 <_UIx86_64__mempool_alloc>
   1eac6:	48 8b 7c 24 70       	mov    0x70(%rsp),%rdi
   1eacb:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
   1ead0:	4c 8d 1d 49 84 00 00 	lea    0x8449(%rip),%r11        # 26f20 <__bigtens_D2A+0x40>
   1ead7:	48 85 c0             	test   %rax,%rax
   1eada:	48 89 07             	mov    %rax,(%rdi)
   1eadd:	0f 84 41 01 00 00    	je     1ec24 <run_cfi_program+0xa84>
   1eae3:	48 89 08             	mov    %rcx,(%rax)
   1eae6:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
   1eaeb:	f3 0f 6f 85 c8 00 00 	movdqu 0xc8(%rbp),%xmm0
   1eaf2:	00 
   1eaf3:	f3 0f 6f 8d d8 00 00 	movdqu 0xd8(%rbp),%xmm1
   1eafa:	00 
   1eafb:	48 8b 00             	mov    (%rax),%rax
   1eafe:	f3 0f 6f 95 e8 00 00 	movdqu 0xe8(%rbp),%xmm2
   1eb05:	00 
   1eb06:	f3 0f 6f 9d f8 00 00 	movdqu 0xf8(%rbp),%xmm3
   1eb0d:	00 
   1eb0e:	f3 0f 6f a5 08 01 00 	movdqu 0x108(%rbp),%xmm4
   1eb15:	00 
   1eb16:	f3 0f 6f ad 18 01 00 	movdqu 0x118(%rbp),%xmm5
   1eb1d:	00 
   1eb1e:	f3 0f 6f b5 28 01 00 	movdqu 0x128(%rbp),%xmm6
   1eb25:	00 
   1eb26:	0f 11 40 08          	movups %xmm0,0x8(%rax)
   1eb2a:	f3 0f 6f bd 38 01 00 	movdqu 0x138(%rbp),%xmm7
   1eb31:	00 
   1eb32:	f3 0f 6f 85 48 01 00 	movdqu 0x148(%rbp),%xmm0
   1eb39:	00 
   1eb3a:	0f 11 48 18          	movups %xmm1,0x18(%rax)
   1eb3e:	48 8b 95 78 01 00 00 	mov    0x178(%rbp),%rdx
   1eb45:	f3 0f 6f 8d 58 01 00 	movdqu 0x158(%rbp),%xmm1
   1eb4c:	00 
   1eb4d:	0f 11 50 28          	movups %xmm2,0x28(%rax)
   1eb51:	f3 0f 6f 95 68 01 00 	movdqu 0x168(%rbp),%xmm2
   1eb58:	00 
   1eb59:	0f 11 58 38          	movups %xmm3,0x38(%rax)
   1eb5d:	48 89 90 b8 00 00 00 	mov    %rdx,0xb8(%rax)
   1eb64:	0f 11 60 48          	movups %xmm4,0x48(%rax)
   1eb68:	0f 11 68 58          	movups %xmm5,0x58(%rax)
   1eb6c:	0f 11 70 68          	movups %xmm6,0x68(%rax)
   1eb70:	0f 11 78 78          	movups %xmm7,0x78(%rax)
   1eb74:	0f 11 80 88 00 00 00 	movups %xmm0,0x88(%rax)
   1eb7b:	0f 11 88 98 00 00 00 	movups %xmm1,0x98(%rax)
   1eb82:	0f 11 90 a8 00 00 00 	movups %xmm2,0xa8(%rax)
   1eb89:	4d 3b 2c 24          	cmp    (%r12),%r13
   1eb8d:	0f 83 7d f8 ff ff    	jae    1e410 <run_cfi_program+0x270>
   1eb93:	31 c0                	xor    %eax,%eax
   1eb95:	e9 48 f7 ff ff       	jmp    1e2e2 <run_cfi_program+0x142>
   1eb9a:	4d 3b 2c 24          	cmp    (%r12),%r13
   1eb9e:	0f 82 3c f7 ff ff    	jb     1e2e0 <run_cfi_program+0x140>
   1eba4:	4c 39 f8             	cmp    %r15,%rax
   1eba7:	0f 83 33 f7 ff ff    	jae    1e2e0 <run_cfi_program+0x140>
   1ebad:	48 89 c7             	mov    %rax,%rdi
   1ebb0:	e9 62 f6 ff ff       	jmp    1e217 <run_cfi_program+0x77>
   1ebb5:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   1ebba:	48 0f af 50 20       	imul   0x20(%rax),%rdx
   1ebbf:	49 03 14 24          	add    (%r12),%rdx
   1ebc3:	49 89 14 24          	mov    %rdx,(%r12)
   1ebc7:	4c 39 ea             	cmp    %r13,%rdx
   1ebca:	0f 86 40 f8 ff ff    	jbe    1e410 <run_cfi_program+0x270>
   1ebd0:	31 c0                	xor    %eax,%eax
   1ebd2:	e9 0b f7 ff ff       	jmp    1e2e2 <run_cfi_program+0x142>
   1ebd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1ebde:	00 00 
   1ebe0:	40 80 fe 10          	cmp    $0x10,%sil
   1ebe4:	76 14                	jbe    1ebfa <run_cfi_program+0xa5a>
   1ebe6:	48 83 c4 38          	add    $0x38,%rsp
   1ebea:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   1ebef:	5b                   	pop    %rbx
   1ebf0:	5d                   	pop    %rbp
   1ebf1:	41 5c                	pop    %r12
   1ebf3:	41 5d                	pop    %r13
   1ebf5:	41 5e                	pop    %r14
   1ebf7:	41 5f                	pop    %r15
   1ebf9:	c3                   	ret    
   1ebfa:	31 c9                	xor    %ecx,%ecx
   1ebfc:	45 31 c0             	xor    %r8d,%r8d
   1ebff:	90                   	nop
   1ec00:	0f b6 38             	movzbl (%rax),%edi
   1ec03:	48 83 c0 01          	add    $0x1,%rax
   1ec07:	49 89 06             	mov    %rax,(%r14)
   1ec0a:	48 89 fe             	mov    %rdi,%rsi
   1ec0d:	83 e6 7f             	and    $0x7f,%esi
   1ec10:	48 d3 e6             	shl    %cl,%rsi
   1ec13:	48 83 c1 07          	add    $0x7,%rcx
   1ec17:	49 09 f0             	or     %rsi,%r8
   1ec1a:	40 84 ff             	test   %dil,%dil
   1ec1d:	78 e1                	js     1ec00 <run_cfi_program+0xa60>
   1ec1f:	e9 1c f9 ff ff       	jmp    1e540 <run_cfi_program+0x3a0>
   1ec24:	48 89 0f             	mov    %rcx,(%rdi)
   1ec27:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   1ec2c:	e9 2b f6 ff ff       	jmp    1e25c <run_cfi_program+0xbc>
   1ec31:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1ec38:	00 00 00 
   1ec3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001ec40 <create_state_record_for.part.0>:
   1ec40:	41 57                	push   %r15
   1ec42:	b9 30 00 00 00       	mov    $0x30,%ecx
   1ec47:	41 56                	push   %r14
   1ec49:	41 55                	push   %r13
   1ec4b:	41 54                	push   %r12
   1ec4d:	55                   	push   %rbp
   1ec4e:	48 89 f5             	mov    %rsi,%rbp
   1ec51:	53                   	push   %rbx
   1ec52:	48 89 fb             	mov    %rdi,%rbx
   1ec55:	48 89 f7             	mov    %rsi,%rdi
   1ec58:	48 83 ec 38          	sub    $0x38,%rsp
   1ec5c:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1ec61:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1ec68:	00 00 
   1ec6a:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1ec6f:	31 c0                	xor    %eax,%eax
   1ec71:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   1ec74:	0f 1f 40 00          	nopl   0x0(%rax)
   1ec78:	c6 84 05 d0 00 00 00 	movb   $0x1,0xd0(%rbp,%rax,1)
   1ec7f:	01 
   1ec80:	48 c7 84 c5 e8 00 00 	movq   $0x0,0xe8(%rbp,%rax,8)
   1ec87:	00 00 00 00 00 
   1ec8c:	48 83 c0 01          	add    $0x1,%rax
   1ec90:	48 83 f8 13          	cmp    $0x13,%rax
   1ec94:	75 e2                	jne    1ec78 <create_state_record_for.part.0+0x38>
   1ec96:	4c 8d 7c 24 10       	lea    0x10(%rsp),%r15
   1ec9b:	4c 8d 6c 24 18       	lea    0x18(%rsp),%r13
   1eca0:	48 89 ee             	mov    %rbp,%rsi
   1eca3:	48 89 df             	mov    %rbx,%rdi
   1eca6:	48 8b 83 90 01 00 00 	mov    0x190(%rbx),%rax
   1ecad:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   1ecb4:	4d 89 f8             	mov    %r15,%r8
   1ecb7:	48 8b 50 30          	mov    0x30(%rax),%rdx
   1ecbb:	48 89 95 c8 00 00 00 	mov    %rdx,0xc8(%rbp)
   1ecc2:	48 8b 10             	mov    (%rax),%rdx
   1ecc5:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   1eccc:	00 00 
   1ecce:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   1ecd3:	4c 8b 48 08          	mov    0x8(%rax),%r9
   1ecd7:	4c 89 ea             	mov    %r13,%rdx
   1ecda:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   1ece1:	00 00 
   1ece3:	50                   	push   %rax
   1ece4:	4c 8d 74 24 28       	lea    0x28(%rsp),%r14
   1ece9:	41 56                	push   %r14
   1eceb:	e8 b0 f4 ff ff       	call   1e1a0 <run_cfi_program>
   1ecf0:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   1ecf5:	59                   	pop    %rcx
   1ecf6:	41 89 c4             	mov    %eax,%r12d
   1ecf9:	5f                   	pop    %rdi
   1ecfa:	48 85 f6             	test   %rsi,%rsi
   1ecfd:	74 32                	je     1ed31 <create_state_record_for.part.0+0xf1>
   1ecff:	48 8d 15 7a 34 03 00 	lea    0x3347a(%rip),%rdx        # 52180 <dwarf_reg_state_pool>
   1ed06:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1ed0d:	00 00 00 
   1ed10:	48 8b 06             	mov    (%rsi),%rax
   1ed13:	48 89 d7             	mov    %rdx,%rdi
   1ed16:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1ed1b:	e8 f0 2c 00 00       	call   21a10 <_UIx86_64__mempool_free>
   1ed20:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   1ed25:	48 8d 15 54 34 03 00 	lea    0x33454(%rip),%rdx        # 52180 <dwarf_reg_state_pool>
   1ed2c:	48 85 f6             	test   %rsi,%rsi
   1ed2f:	75 df                	jne    1ed10 <create_state_record_for.part.0+0xd0>
   1ed31:	45 85 e4             	test   %r12d,%r12d
   1ed34:	0f 88 2c 01 00 00    	js     1ee66 <create_state_record_for.part.0+0x226>
   1ed3a:	f3 0f 6f 85 c8 00 00 	movdqu 0xc8(%rbp),%xmm0
   1ed41:	00 
   1ed42:	f3 0f 6f 8d d8 00 00 	movdqu 0xd8(%rbp),%xmm1
   1ed49:	00 
   1ed4a:	48 89 ee             	mov    %rbp,%rsi
   1ed4d:	48 89 df             	mov    %rbx,%rdi
   1ed50:	f3 0f 6f 95 e8 00 00 	movdqu 0xe8(%rbp),%xmm2
   1ed57:	00 
   1ed58:	f3 0f 6f 9d f8 00 00 	movdqu 0xf8(%rbp),%xmm3
   1ed5f:	00 
   1ed60:	4d 89 f8             	mov    %r15,%r8
   1ed63:	0f 29 45 10          	movaps %xmm0,0x10(%rbp)
   1ed67:	f3 0f 6f a5 08 01 00 	movdqu 0x108(%rbp),%xmm4
   1ed6e:	00 
   1ed6f:	f3 0f 6f ad 18 01 00 	movdqu 0x118(%rbp),%xmm5
   1ed76:	00 
   1ed77:	0f 29 4d 20          	movaps %xmm1,0x20(%rbp)
   1ed7b:	f3 0f 6f b5 28 01 00 	movdqu 0x128(%rbp),%xmm6
   1ed82:	00 
   1ed83:	f3 0f 6f bd 38 01 00 	movdqu 0x138(%rbp),%xmm7
   1ed8a:	00 
   1ed8b:	0f 29 55 30          	movaps %xmm2,0x30(%rbp)
   1ed8f:	f3 0f 6f 85 48 01 00 	movdqu 0x148(%rbp),%xmm0
   1ed96:	00 
   1ed97:	f3 0f 6f 8d 58 01 00 	movdqu 0x158(%rbp),%xmm1
   1ed9e:	00 
   1ed9f:	f3 0f 6f 95 68 01 00 	movdqu 0x168(%rbp),%xmm2
   1eda6:	00 
   1eda7:	48 8b 95 78 01 00 00 	mov    0x178(%rbp),%rdx
   1edae:	0f 29 5d 40          	movaps %xmm3,0x40(%rbp)
   1edb2:	0f 29 65 50          	movaps %xmm4,0x50(%rbp)
   1edb6:	0f 29 6d 60          	movaps %xmm5,0x60(%rbp)
   1edba:	0f 29 75 70          	movaps %xmm6,0x70(%rbp)
   1edbe:	0f 29 bd 80 00 00 00 	movaps %xmm7,0x80(%rbp)
   1edc5:	0f 29 85 90 00 00 00 	movaps %xmm0,0x90(%rbp)
   1edcc:	0f 29 8d a0 00 00 00 	movaps %xmm1,0xa0(%rbp)
   1edd3:	0f 29 95 b0 00 00 00 	movaps %xmm2,0xb0(%rbp)
   1edda:	48 89 95 c0 00 00 00 	mov    %rdx,0xc0(%rbp)
   1ede1:	48 8b 93 90 01 00 00 	mov    0x190(%rbx),%rdx
   1ede8:	48 8b 42 10          	mov    0x10(%rdx),%rax
   1edec:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   1edf3:	00 00 
   1edf5:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   1edfa:	48 8b 83 58 01 00 00 	mov    0x158(%rbx),%rax
   1ee01:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1ee06:	0f b6 83 50 01 00 00 	movzbl 0x150(%rbx),%eax
   1ee0d:	48 8d 1d 6c 33 03 00 	lea    0x3336c(%rip),%rbx        # 52180 <dwarf_reg_state_pool>
   1ee14:	4c 8b 4a 18          	mov    0x18(%rdx),%r9
   1ee18:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   1ee1d:	52                   	push   %rdx
   1ee1e:	4c 89 ea             	mov    %r13,%rdx
   1ee21:	41 56                	push   %r14
   1ee23:	d0 e8                	shr    %al
   1ee25:	83 e0 01             	and    $0x1,%eax
   1ee28:	48 29 c1             	sub    %rax,%rcx
   1ee2b:	e8 70 f3 ff ff       	call   1e1a0 <run_cfi_program>
   1ee30:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
   1ee35:	41 89 c4             	mov    %eax,%r12d
   1ee38:	58                   	pop    %rax
   1ee39:	5a                   	pop    %rdx
   1ee3a:	48 85 f6             	test   %rsi,%rsi
   1ee3d:	74 1b                	je     1ee5a <create_state_record_for.part.0+0x21a>
   1ee3f:	90                   	nop
   1ee40:	48 8b 06             	mov    (%rsi),%rax
   1ee43:	48 89 df             	mov    %rbx,%rdi
   1ee46:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   1ee4b:	e8 c0 2b 00 00       	call   21a10 <_UIx86_64__mempool_free>
   1ee50:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   1ee55:	48 85 f6             	test   %rsi,%rsi
   1ee58:	75 e6                	jne    1ee40 <create_state_record_for.part.0+0x200>
   1ee5a:	45 85 e4             	test   %r12d,%r12d
   1ee5d:	b8 00 00 00 00       	mov    $0x0,%eax
   1ee62:	44 0f 4f e0          	cmovg  %eax,%r12d
   1ee66:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1ee6b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1ee72:	00 00 
   1ee74:	75 12                	jne    1ee88 <create_state_record_for.part.0+0x248>
   1ee76:	48 83 c4 38          	add    $0x38,%rsp
   1ee7a:	44 89 e0             	mov    %r12d,%eax
   1ee7d:	5b                   	pop    %rbx
   1ee7e:	5d                   	pop    %rbp
   1ee7f:	41 5c                	pop    %r12
   1ee81:	41 5d                	pop    %r13
   1ee83:	41 5e                	pop    %r14
   1ee85:	41 5f                	pop    %r15
   1ee87:	c3                   	ret    
   1ee88:	e8 b3 4c ff ff       	call   13b40 <__stack_chk_fail>
   1ee8d:	0f 1f 00             	nopl   (%rax)

000000000001ee90 <apply_reg_state>:
   1ee90:	41 57                	push   %r15
   1ee92:	49 89 ff             	mov    %rdi,%r15
   1ee95:	41 56                	push   %r14
   1ee97:	41 55                	push   %r13
   1ee99:	41 54                	push   %r12
   1ee9b:	49 89 f4             	mov    %rsi,%r12
   1ee9e:	55                   	push   %rbp
   1ee9f:	53                   	push   %rbx
   1eea0:	48 81 ec 68 01 00 00 	sub    $0x168,%rsp
   1eea7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1eeae:	00 00 
   1eeb0:	48 89 84 24 58 01 00 	mov    %rax,0x158(%rsp)
   1eeb7:	00 
   1eeb8:	31 c0                	xor    %eax,%eax
   1eeba:	48 8b 47 18          	mov    0x18(%rdi),%rax
   1eebe:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   1eec3:	48 8b 47 10          	mov    0x10(%rdi),%rax
   1eec7:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   1eecb:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   1eed0:	e8 2b 2e 00 00       	call   21d00 <_Ux86_64_get_accessors>
   1eed5:	41 80 7c 24 19 03    	cmpb   $0x3,0x19(%r12)
   1eedb:	0f 85 5f 03 00 00    	jne    1f240 <apply_reg_state+0x3b0>
   1eee1:	49 8b 84 24 a8 00 00 	mov    0xa8(%r12),%rax
   1eee8:	00 
   1eee9:	48 83 f8 07          	cmp    $0x7,%rax
   1eeed:	0f 84 35 04 00 00    	je     1f328 <apply_reg_state+0x498>
   1eef3:	31 f6                	xor    %esi,%esi
   1eef5:	48 83 f8 10          	cmp    $0x10,%rax
   1eef9:	0f 86 d1 03 00 00    	jbe    1f2d0 <apply_reg_state+0x440>
   1eeff:	48 8d 54 24 28       	lea    0x28(%rsp),%rdx
   1ef04:	4c 89 ff             	mov    %r15,%rdi
   1ef07:	e8 44 2e 00 00       	call   21d50 <_ULx86_64_get_reg>
   1ef0c:	85 c0                	test   %eax,%eax
   1ef0e:	0f 88 bb 01 00 00    	js     1f0cf <apply_reg_state+0x23f>
   1ef14:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1ef19:	49 03 84 24 b0 00 00 	add    0xb0(%r12),%rax
   1ef20:	00 
   1ef21:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1ef26:	49 8d 77 40          	lea    0x40(%r15),%rsi
   1ef2a:	48 8d 6c 24 40       	lea    0x40(%rsp),%rbp
   1ef2f:	b9 22 00 00 00       	mov    $0x22,%ecx
   1ef34:	31 db                	xor    %ebx,%ebx
   1ef36:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   1ef3b:	48 89 ef             	mov    %rbp,%rdi
   1ef3e:	48 8d 44 24 38       	lea    0x38(%rsp),%rax
   1ef43:	4c 8d 2d ce 83 00 00 	lea    0x83ce(%rip),%r13        # 27318 <__bigtens_D2A+0x438>
   1ef4a:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   1ef4d:	48 89 04 24          	mov    %rax,(%rsp)
   1ef51:	4c 89 e0             	mov    %r12,%rax
   1ef54:	4c 8d 74 24 24       	lea    0x24(%rsp),%r14
   1ef59:	4d 89 fc             	mov    %r15,%r12
   1ef5c:	49 89 c7             	mov    %rax,%r15
   1ef5f:	90                   	nop
   1ef60:	41 80 7c 1f 08 05    	cmpb   $0x5,0x8(%r15,%rbx,1)
   1ef66:	0f 87 c4 00 00 00    	ja     1f030 <apply_reg_state+0x1a0>
   1ef6c:	41 0f b6 44 1f 08    	movzbl 0x8(%r15,%rbx,1),%eax
   1ef72:	49 63 44 85 00       	movslq 0x0(%r13,%rax,4),%rax
   1ef77:	4c 01 e8             	add    %r13,%rax
   1ef7a:	3e ff e0             	notrack jmp *%rax
   1ef7d:	0f 1f 00             	nopl   (%rax)
   1ef80:	49 8b 54 df 20       	mov    0x20(%r15,%rbx,8),%rdx
   1ef85:	31 c9                	xor    %ecx,%ecx
   1ef87:	45 31 d2             	xor    %r10d,%r10d
   1ef8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1ef90:	0f b6 32             	movzbl (%rdx),%esi
   1ef93:	48 83 c2 01          	add    $0x1,%rdx
   1ef97:	48 89 f0             	mov    %rsi,%rax
   1ef9a:	83 e0 7f             	and    $0x7f,%eax
   1ef9d:	48 d3 e0             	shl    %cl,%rax
   1efa0:	48 83 c1 07          	add    $0x7,%rcx
   1efa4:	49 09 c2             	or     %rax,%r10
   1efa7:	40 84 f6             	test   %sil,%sil
   1efaa:	78 e4                	js     1ef90 <apply_reg_state+0x100>
   1efac:	48 8b 0c 24          	mov    (%rsp),%rcx
   1efb0:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   1efb5:	4d 89 f0             	mov    %r14,%r8
   1efb8:	4c 89 d2             	mov    %r10,%rdx
   1efbb:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   1efc0:	4c 89 e7             	mov    %r12,%rdi
   1efc3:	e8 28 3d 00 00       	call   22cf0 <_ULx86_64_dwarf_eval_expr>
   1efc8:	85 c0                	test   %eax,%eax
   1efca:	0f 88 ff 00 00 00    	js     1f0cf <apply_reg_state+0x23f>
   1efd0:	8b 54 24 24          	mov    0x24(%rsp),%edx
   1efd4:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1efd9:	85 d2                	test   %edx,%edx
   1efdb:	0f 84 37 02 00 00    	je     1f218 <apply_reg_state+0x388>
   1efe1:	31 f6                	xor    %esi,%esi
   1efe3:	48 83 f8 10          	cmp    $0x10,%rax
   1efe7:	77 0b                	ja     1eff4 <apply_reg_state+0x164>
   1efe9:	48 8d 3d 60 85 00 00 	lea    0x8560(%rip),%rdi        # 27550 <_ULx86_64_dwarf_to_unw_regnum_map>
   1eff0:	0f b6 34 07          	movzbl (%rdi,%rax,1),%esi
   1eff4:	49 8b 04 24          	mov    (%r12),%rax
   1eff8:	48 8b b8 d0 01 00 00 	mov    0x1d0(%rax),%rdi
   1efff:	e8 0c 2b 00 00       	call   21b10 <_ULx86_64_r_uc_addr>
   1f004:	48 89 da             	mov    %rbx,%rdx
   1f007:	48 c1 e2 04          	shl    $0x4,%rdx
   1f00b:	48 89 44 15 00       	mov    %rax,0x0(%rbp,%rdx,1)
   1f010:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   1f015:	48 c7 04 10 00 00 00 	movq   $0x0,(%rax,%rdx,1)
   1f01c:	00 
   1f01d:	48 89 da             	mov    %rbx,%rdx
   1f020:	48 c1 e2 04          	shl    $0x4,%rdx
   1f024:	48 c7 04 10 04 00 00 	movq   $0x4,(%rax,%rdx,1)
   1f02b:	00 
   1f02c:	0f 1f 40 00          	nopl   0x0(%rax)
   1f030:	48 83 c3 01          	add    $0x1,%rbx
   1f034:	48 83 fb 11          	cmp    $0x11,%rbx
   1f038:	0f 85 22 ff ff ff    	jne    1ef60 <apply_reg_state+0xd0>
   1f03e:	4c 89 f8             	mov    %r15,%rax
   1f041:	4d 89 e7             	mov    %r12,%r15
   1f044:	48 89 ee             	mov    %rbp,%rsi
   1f047:	49 89 c4             	mov    %rax,%r12
   1f04a:	48 8b 44 24 40       	mov    0x40(%rsp),%rax
   1f04f:	49 89 47 40          	mov    %rax,0x40(%r15)
   1f053:	48 8b 84 24 48 01 00 	mov    0x148(%rsp),%rax
   1f05a:	00 
   1f05b:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
   1f060:	48 89 87 08 01 00 00 	mov    %rax,0x108(%rdi)
   1f067:	48 89 f8             	mov    %rdi,%rax
   1f06a:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
   1f06e:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1f072:	48 29 f8             	sub    %rdi,%rax
   1f075:	8d 88 10 01 00 00    	lea    0x110(%rax),%ecx
   1f07b:	48 29 c6             	sub    %rax,%rsi
   1f07e:	89 c8                	mov    %ecx,%eax
   1f080:	c1 e8 03             	shr    $0x3,%eax
   1f083:	89 c1                	mov    %eax,%ecx
   1f085:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   1f088:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1f08d:	49 89 47 10          	mov    %rax,0x10(%r15)
   1f091:	49 8b 04 24          	mov    (%r12),%rax
   1f095:	48 83 c0 04          	add    $0x4,%rax
   1f099:	48 c1 e0 04          	shl    $0x4,%rax
   1f09d:	4c 01 f8             	add    %r15,%rax
   1f0a0:	48 8b 30             	mov    (%rax),%rsi
   1f0a3:	48 85 f6             	test   %rsi,%rsi
   1f0a6:	0f 85 34 02 00 00    	jne    1f2e0 <apply_reg_state+0x450>
   1f0ac:	49 c7 47 18 00 00 00 	movq   $0x0,0x18(%r15)
   1f0b3:	00 
   1f0b4:	31 c0                	xor    %eax,%eax
   1f0b6:	48 39 74 24 08       	cmp    %rsi,0x8(%rsp)
   1f0bb:	0f 84 49 02 00 00    	je     1f30a <apply_reg_state+0x47a>
   1f0c1:	41 f6 87 50 01 00 00 	testb  $0x1,0x150(%r15)
   1f0c8:	01 
   1f0c9:	0f 85 91 02 00 00    	jne    1f360 <apply_reg_state+0x4d0>
   1f0cf:	48 8b bc 24 58 01 00 	mov    0x158(%rsp),%rdi
   1f0d6:	00 
   1f0d7:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   1f0de:	00 00 
   1f0e0:	0f 85 a6 02 00 00    	jne    1f38c <apply_reg_state+0x4fc>
   1f0e6:	48 81 c4 68 01 00 00 	add    $0x168,%rsp
   1f0ed:	5b                   	pop    %rbx
   1f0ee:	5d                   	pop    %rbp
   1f0ef:	41 5c                	pop    %r12
   1f0f1:	41 5d                	pop    %r13
   1f0f3:	41 5e                	pop    %r14
   1f0f5:	41 5f                	pop    %r15
   1f0f7:	c3                   	ret    
   1f0f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1f0ff:	00 
   1f100:	49 8b 54 df 20       	mov    0x20(%r15,%rbx,8),%rdx
   1f105:	31 c9                	xor    %ecx,%ecx
   1f107:	45 31 d2             	xor    %r10d,%r10d
   1f10a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1f110:	0f b6 32             	movzbl (%rdx),%esi
   1f113:	48 83 c2 01          	add    $0x1,%rdx
   1f117:	48 89 f0             	mov    %rsi,%rax
   1f11a:	83 e0 7f             	and    $0x7f,%eax
   1f11d:	48 d3 e0             	shl    %cl,%rax
   1f120:	48 83 c1 07          	add    $0x7,%rcx
   1f124:	49 09 c2             	or     %rax,%r10
   1f127:	40 84 f6             	test   %sil,%sil
   1f12a:	78 e4                	js     1f110 <apply_reg_state+0x280>
   1f12c:	48 8b 0c 24          	mov    (%rsp),%rcx
   1f130:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   1f135:	4d 89 f0             	mov    %r14,%r8
   1f138:	4c 89 d2             	mov    %r10,%rdx
   1f13b:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   1f140:	4c 89 e7             	mov    %r12,%rdi
   1f143:	e8 a8 3b 00 00       	call   22cf0 <_ULx86_64_dwarf_eval_expr>
   1f148:	85 c0                	test   %eax,%eax
   1f14a:	78 83                	js     1f0cf <apply_reg_state+0x23f>
   1f14c:	8b 4c 24 24          	mov    0x24(%rsp),%ecx
   1f150:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1f155:	85 c9                	test   %ecx,%ecx
   1f157:	0f 84 9b 00 00 00    	je     1f1f8 <apply_reg_state+0x368>
   1f15d:	31 f6                	xor    %esi,%esi
   1f15f:	48 83 f8 10          	cmp    $0x10,%rax
   1f163:	77 0b                	ja     1f170 <apply_reg_state+0x2e0>
   1f165:	48 8d 3d e4 83 00 00 	lea    0x83e4(%rip),%rdi        # 27550 <_ULx86_64_dwarf_to_unw_regnum_map>
   1f16c:	0f b6 34 07          	movzbl (%rdi,%rax,1),%esi
   1f170:	49 8b 04 24          	mov    (%r12),%rax
   1f174:	48 8b b8 d0 01 00 00 	mov    0x1d0(%rax),%rdi
   1f17b:	e8 90 29 00 00       	call   21b10 <_ULx86_64_r_uc_addr>
   1f180:	49 89 c0             	mov    %rax,%r8
   1f183:	48 89 d8             	mov    %rbx,%rax
   1f186:	48 c1 e0 04          	shl    $0x4,%rax
   1f18a:	4c 89 44 05 00       	mov    %r8,0x0(%rbp,%rax,1)
   1f18f:	48 c7 44 04 48 00 00 	movq   $0x0,0x48(%rsp,%rax,1)
   1f196:	00 00 
   1f198:	e9 93 fe ff ff       	jmp    1f030 <apply_reg_state+0x1a0>
   1f19d:	0f 1f 00             	nopl   (%rax)
   1f1a0:	49 8b 44 df 20       	mov    0x20(%r15,%rbx,8),%rax
   1f1a5:	31 f6                	xor    %esi,%esi
   1f1a7:	48 83 f8 10          	cmp    $0x10,%rax
   1f1ab:	77 c3                	ja     1f170 <apply_reg_state+0x2e0>
   1f1ad:	eb b6                	jmp    1f165 <apply_reg_state+0x2d5>
   1f1af:	90                   	nop
   1f1b0:	48 89 d8             	mov    %rbx,%rax
   1f1b3:	48 c1 e0 04          	shl    $0x4,%rax
   1f1b7:	48 c7 44 05 00 00 00 	movq   $0x0,0x0(%rbp,%rax,1)
   1f1be:	00 00 
   1f1c0:	48 c7 44 04 48 00 00 	movq   $0x0,0x48(%rsp,%rax,1)
   1f1c7:	00 00 
   1f1c9:	e9 62 fe ff ff       	jmp    1f030 <apply_reg_state+0x1a0>
   1f1ce:	66 90                	xchg   %ax,%ax
   1f1d0:	48 89 da             	mov    %rbx,%rdx
   1f1d3:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   1f1d8:	49 03 44 df 20       	add    0x20(%r15,%rbx,8),%rax
   1f1dd:	48 c1 e2 04          	shl    $0x4,%rdx
   1f1e1:	48 89 44 15 00       	mov    %rax,0x0(%rbp,%rdx,1)
   1f1e6:	48 c7 44 14 48 00 00 	movq   $0x0,0x48(%rsp,%rdx,1)
   1f1ed:	00 00 
   1f1ef:	e9 3c fe ff ff       	jmp    1f030 <apply_reg_state+0x1a0>
   1f1f4:	0f 1f 40 00          	nopl   0x0(%rax)
   1f1f8:	48 89 da             	mov    %rbx,%rdx
   1f1fb:	48 c1 e2 04          	shl    $0x4,%rdx
   1f1ff:	48 89 44 15 00       	mov    %rax,0x0(%rbp,%rdx,1)
   1f204:	48 c7 44 14 48 00 00 	movq   $0x0,0x48(%rsp,%rdx,1)
   1f20b:	00 00 
   1f20d:	e9 1e fe ff ff       	jmp    1f030 <apply_reg_state+0x1a0>
   1f212:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1f218:	48 89 da             	mov    %rbx,%rdx
   1f21b:	48 c1 e2 04          	shl    $0x4,%rdx
   1f21f:	48 89 44 15 00       	mov    %rax,0x0(%rbp,%rdx,1)
   1f224:	48 8d 44 24 48       	lea    0x48(%rsp),%rax
   1f229:	48 c7 44 14 48 00 00 	movq   $0x0,0x48(%rsp,%rdx,1)
   1f230:	00 00 
   1f232:	e9 e6 fd ff ff       	jmp    1f01d <apply_reg_state+0x18d>
   1f237:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1f23e:	00 00 
   1f240:	49 8b 94 24 a8 00 00 	mov    0xa8(%r12),%rdx
   1f247:	00 
   1f248:	31 c9                	xor    %ecx,%ecx
   1f24a:	45 31 d2             	xor    %r10d,%r10d
   1f24d:	0f 1f 00             	nopl   (%rax)
   1f250:	0f b6 32             	movzbl (%rdx),%esi
   1f253:	48 83 c2 01          	add    $0x1,%rdx
   1f257:	48 89 f0             	mov    %rsi,%rax
   1f25a:	83 e0 7f             	and    $0x7f,%eax
   1f25d:	48 d3 e0             	shl    %cl,%rax
   1f260:	48 83 c1 07          	add    $0x7,%rcx
   1f264:	49 09 c2             	or     %rax,%r10
   1f267:	40 84 f6             	test   %sil,%sil
   1f26a:	78 e4                	js     1f250 <apply_reg_state+0x3c0>
   1f26c:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
   1f271:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
   1f276:	4c 89 d2             	mov    %r10,%rdx
   1f279:	4c 89 ff             	mov    %r15,%rdi
   1f27c:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   1f281:	4c 8d 44 24 28       	lea    0x28(%rsp),%r8
   1f286:	e8 65 3a 00 00       	call   22cf0 <_ULx86_64_dwarf_eval_expr>
   1f28b:	85 c0                	test   %eax,%eax
   1f28d:	0f 88 3c fe ff ff    	js     1f0cf <apply_reg_state+0x23f>
   1f293:	8b 74 24 28          	mov    0x28(%rsp),%esi
   1f297:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   1f29c:	85 f6                	test   %esi,%esi
   1f29e:	74 22                	je     1f2c2 <apply_reg_state+0x432>
   1f2a0:	31 f6                	xor    %esi,%esi
   1f2a2:	48 83 f8 10          	cmp    $0x10,%rax
   1f2a6:	77 0b                	ja     1f2b3 <apply_reg_state+0x423>
   1f2a8:	48 8d 15 a1 82 00 00 	lea    0x82a1(%rip),%rdx        # 27550 <_ULx86_64_dwarf_to_unw_regnum_map>
   1f2af:	0f b6 34 02          	movzbl (%rdx,%rax,1),%esi
   1f2b3:	49 8b 07             	mov    (%r15),%rax
   1f2b6:	48 8b b8 d0 01 00 00 	mov    0x1d0(%rax),%rdi
   1f2bd:	e8 4e 28 00 00       	call   21b10 <_ULx86_64_r_uc_addr>
   1f2c2:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   1f2c7:	e9 5a fc ff ff       	jmp    1ef26 <apply_reg_state+0x96>
   1f2cc:	0f 1f 40 00          	nopl   0x0(%rax)
   1f2d0:	48 8d 15 79 82 00 00 	lea    0x8279(%rip),%rdx        # 27550 <_ULx86_64_dwarf_to_unw_regnum_map>
   1f2d7:	0f b6 34 02          	movzbl (%rdx,%rax,1),%esi
   1f2db:	e9 1f fc ff ff       	jmp    1eeff <apply_reg_state+0x6f>
   1f2e0:	48 8b 40 08          	mov    0x8(%rax),%rax
   1f2e4:	a8 02                	test   $0x2,%al
   1f2e6:	75 51                	jne    1f339 <apply_reg_state+0x4a9>
   1f2e8:	48 85 c0             	test   %rax,%rax
   1f2eb:	0f 84 85 00 00 00    	je     1f376 <apply_reg_state+0x4e6>
   1f2f1:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
   1f2f6:	49 89 77 18          	mov    %rsi,0x18(%r15)
   1f2fa:	b8 01 00 00 00       	mov    $0x1,%eax
   1f2ff:	48 39 74 24 08       	cmp    %rsi,0x8(%rsp)
   1f304:	0f 85 b7 fd ff ff    	jne    1f0c1 <apply_reg_state+0x231>
   1f30a:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
   1f30f:	49 39 7f 10          	cmp    %rdi,0x10(%r15)
   1f313:	0f 85 a8 fd ff ff    	jne    1f0c1 <apply_reg_state+0x231>
   1f319:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
   1f31e:	e9 ac fd ff ff       	jmp    1f0cf <apply_reg_state+0x23f>
   1f323:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1f328:	41 80 7c 24 0f 01    	cmpb   $0x1,0xf(%r12)
   1f32e:	75 a0                	jne    1f2d0 <apply_reg_state+0x440>
   1f330:	49 8b 47 10          	mov    0x10(%r15),%rax
   1f334:	e9 e0 fb ff ff       	jmp    1ef19 <apply_reg_state+0x89>
   1f339:	49 8b 47 08          	mov    0x8(%r15),%rax
   1f33d:	4d 8b 07             	mov    (%r15),%r8
   1f340:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   1f345:	31 c9                	xor    %ecx,%ecx
   1f347:	48 89 c7             	mov    %rax,%rdi
   1f34a:	ff 50 20             	call   *0x20(%rax)
   1f34d:	85 c0                	test   %eax,%eax
   1f34f:	0f 88 7a fd ff ff    	js     1f0cf <apply_reg_state+0x23f>
   1f355:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
   1f35a:	eb 9a                	jmp    1f2f6 <apply_reg_state+0x466>
   1f35c:	0f 1f 40 00          	nopl   0x0(%rax)
   1f360:	4c 89 e6             	mov    %r12,%rsi
   1f363:	4c 89 ff             	mov    %r15,%rdi
   1f366:	89 04 24             	mov    %eax,(%rsp)
   1f369:	e8 b2 35 00 00       	call   22920 <_ULx86_64_stash_frame>
   1f36e:	8b 04 24             	mov    (%rsp),%eax
   1f371:	e9 59 fd ff ff       	jmp    1f0cf <apply_reg_state+0x23f>
   1f376:	49 8b 47 08          	mov    0x8(%r15),%rax
   1f37a:	4d 8b 07             	mov    (%r15),%r8
   1f37d:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   1f382:	31 c9                	xor    %ecx,%ecx
   1f384:	48 89 c7             	mov    %rax,%rdi
   1f387:	ff 50 18             	call   *0x18(%rax)
   1f38a:	eb c1                	jmp    1f34d <apply_reg_state+0x4bd>
   1f38c:	e8 af 47 ff ff       	call   13b40 <__stack_chk_fail>
   1f391:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1f398:	00 00 00 
   1f39b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001f3a0 <_ULx86_64_dwarf_flush_rs_cache>:
   1f3a0:	f3 0f 1e fa          	endbr64 
   1f3a4:	55                   	push   %rbp
   1f3a5:	48 8d 47 30          	lea    0x30(%rdi),%rax
   1f3a9:	53                   	push   %rbx
   1f3aa:	48 89 fb             	mov    %rdi,%rbx
   1f3ad:	48 83 ec 08          	sub    $0x8,%rsp
   1f3b1:	66 83 7f 06 07       	cmpw   $0x7,0x6(%rdi)
   1f3b6:	0f 84 24 01 00 00    	je     1f4e0 <_ULx86_64_dwarf_flush_rs_cache+0x140>
   1f3bc:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   1f3c0:	48 85 ff             	test   %rdi,%rdi
   1f3c3:	0f 84 17 01 00 00    	je     1f4e0 <_ULx86_64_dwarf_flush_rs_cache+0x140>
   1f3c9:	48 39 c7             	cmp    %rax,%rdi
   1f3cc:	74 05                	je     1f3d3 <_ULx86_64_dwarf_flush_rs_cache+0x33>
   1f3ce:	e8 cd 30 ff ff       	call   124a0 <dlfree>
   1f3d3:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   1f3d7:	48 85 ff             	test   %rdi,%rdi
   1f3da:	74 11                	je     1f3ed <_ULx86_64_dwarf_flush_rs_cache+0x4d>
   1f3dc:	48 8d 83 30 02 00 00 	lea    0x230(%rbx),%rax
   1f3e3:	48 39 c7             	cmp    %rax,%rdi
   1f3e6:	74 05                	je     1f3ed <_ULx86_64_dwarf_flush_rs_cache+0x4d>
   1f3e8:	e8 b3 30 ff ff       	call   124a0 <dlfree>
   1f3ed:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
   1f3f1:	48 85 ff             	test   %rdi,%rdi
   1f3f4:	74 11                	je     1f407 <_ULx86_64_dwarf_flush_rs_cache+0x67>
   1f3f6:	48 8d 83 30 5e 00 00 	lea    0x5e30(%rbx),%rax
   1f3fd:	48 39 c7             	cmp    %rax,%rdi
   1f400:	74 05                	je     1f407 <_ULx86_64_dwarf_flush_rs_cache+0x67>
   1f402:	e8 99 30 ff ff       	call   124a0 <dlfree>
   1f407:	0f b7 4b 06          	movzwl 0x6(%rbx),%ecx
   1f40b:	bd 01 00 00 00       	mov    $0x1,%ebp
   1f410:	89 ef                	mov    %ebp,%edi
   1f412:	83 c1 01             	add    $0x1,%ecx
   1f415:	d3 e7                	shl    %cl,%edi
   1f417:	48 63 ff             	movslq %edi,%rdi
   1f41a:	48 01 ff             	add    %rdi,%rdi
   1f41d:	e8 0e 16 ff ff       	call   10a30 <dlmalloc>
   1f422:	0f b7 4b 06          	movzwl 0x6(%rbx),%ecx
   1f426:	89 ef                	mov    %ebp,%edi
   1f428:	48 89 43 10          	mov    %rax,0x10(%rbx)
   1f42c:	d3 e7                	shl    %cl,%edi
   1f42e:	48 63 ff             	movslq %edi,%rdi
   1f431:	48 69 ff b8 00 00 00 	imul   $0xb8,%rdi,%rdi
   1f438:	e8 f3 15 ff ff       	call   10a30 <dlmalloc>
   1f43d:	0f b7 4b 06          	movzwl 0x6(%rbx),%ecx
   1f441:	89 ef                	mov    %ebp,%edi
   1f443:	48 89 43 20          	mov    %rax,0x20(%rbx)
   1f447:	d3 e7                	shl    %cl,%edi
   1f449:	48 63 ff             	movslq %edi,%rdi
   1f44c:	48 c1 e7 04          	shl    $0x4,%rdi
   1f450:	e8 db 15 ff ff       	call   10a30 <dlmalloc>
   1f455:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
   1f45a:	48 89 43 28          	mov    %rax,0x28(%rbx)
   1f45e:	0f 84 e1 00 00 00    	je     1f545 <_ULx86_64_dwarf_flush_rs_cache+0x1a5>
   1f464:	48 83 7b 20 00       	cmpq   $0x0,0x20(%rbx)
   1f469:	0f 84 d6 00 00 00    	je     1f545 <_ULx86_64_dwarf_flush_rs_cache+0x1a5>
   1f46f:	48 85 c0             	test   %rax,%rax
   1f472:	0f 84 cd 00 00 00    	je     1f545 <_ULx86_64_dwarf_flush_rs_cache+0x1a5>
   1f478:	0f b7 43 06          	movzwl 0x6(%rbx),%eax
   1f47c:	89 ee                	mov    %ebp,%esi
   1f47e:	45 31 c0             	xor    %r8d,%r8d
   1f481:	66 44 89 43 04       	mov    %r8w,0x4(%rbx)
   1f486:	8d 48 01             	lea    0x1(%rax),%ecx
   1f489:	66 89 43 08          	mov    %ax,0x8(%rbx)
   1f48d:	d3 e6                	shl    %cl,%esi
   1f48f:	89 c1                	mov    %eax,%ecx
   1f491:	d3 e5                	shl    %cl,%ebp
   1f493:	85 ed                	test   %ebp,%ebp
   1f495:	7f 74                	jg     1f50b <_ULx86_64_dwarf_flush_rs_cache+0x16b>
   1f497:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1f49e:	00 00 
   1f4a0:	85 f6                	test   %esi,%esi
   1f4a2:	7e 2a                	jle    1f4ce <_ULx86_64_dwarf_flush_rs_cache+0x12e>
   1f4a4:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   1f4a8:	31 c0                	xor    %eax,%eax
   1f4aa:	be 01 00 00 00       	mov    $0x1,%esi
   1f4af:	90                   	nop
   1f4b0:	48 63 d0             	movslq %eax,%rdx
   1f4b3:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   1f4b8:	83 c0 01             	add    $0x1,%eax
   1f4bb:	66 89 0c 57          	mov    %cx,(%rdi,%rdx,2)
   1f4bf:	0f b7 4b 06          	movzwl 0x6(%rbx),%ecx
   1f4c3:	89 f2                	mov    %esi,%edx
   1f4c5:	83 c1 01             	add    $0x1,%ecx
   1f4c8:	d3 e2                	shl    %cl,%edx
   1f4ca:	39 c2                	cmp    %eax,%edx
   1f4cc:	7f e2                	jg     1f4b0 <_ULx86_64_dwarf_flush_rs_cache+0x110>
   1f4ce:	31 c0                	xor    %eax,%eax
   1f4d0:	48 83 c4 08          	add    $0x8,%rsp
   1f4d4:	5b                   	pop    %rbx
   1f4d5:	5d                   	pop    %rbp
   1f4d6:	c3                   	ret    
   1f4d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1f4de:	00 00 
   1f4e0:	48 89 43 10          	mov    %rax,0x10(%rbx)
   1f4e4:	bd 80 00 00 00       	mov    $0x80,%ebp
   1f4e9:	be 00 01 00 00       	mov    $0x100,%esi
   1f4ee:	48 8d 83 30 02 00 00 	lea    0x230(%rbx),%rax
   1f4f5:	48 89 43 20          	mov    %rax,0x20(%rbx)
   1f4f9:	48 8d 83 30 5e 00 00 	lea    0x5e30(%rbx),%rax
   1f500:	48 89 43 28          	mov    %rax,0x28(%rbx)
   1f504:	c7 43 04 00 00 07 00 	movl   $0x70000,0x4(%rbx)
   1f50b:	48 8b 43 28          	mov    0x28(%rbx),%rax
   1f50f:	8d 4d ff             	lea    -0x1(%rbp),%ecx
   1f512:	48 c1 e1 04          	shl    $0x4,%rcx
   1f516:	48 8d 50 10          	lea    0x10(%rax),%rdx
   1f51a:	48 01 d1             	add    %rdx,%rcx
   1f51d:	eb 05                	jmp    1f524 <_ULx86_64_dwarf_flush_rs_cache+0x184>
   1f51f:	90                   	nop
   1f520:	48 83 c2 10          	add    $0x10,%rdx
   1f524:	bf ff ff ff ff       	mov    $0xffffffff,%edi
   1f529:	80 60 0c fe          	andb   $0xfe,0xc(%rax)
   1f52d:	66 89 78 08          	mov    %di,0x8(%rax)
   1f531:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1f538:	48 89 d0             	mov    %rdx,%rax
   1f53b:	48 39 d1             	cmp    %rdx,%rcx
   1f53e:	75 e0                	jne    1f520 <_ULx86_64_dwarf_flush_rs_cache+0x180>
   1f540:	e9 5b ff ff ff       	jmp    1f4a0 <_ULx86_64_dwarf_flush_rs_cache+0x100>
   1f545:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   1f54a:	eb 84                	jmp    1f4d0 <_ULx86_64_dwarf_flush_rs_cache+0x130>
   1f54c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001f550 <_ULx86_64_dwarf_step>:
   1f550:	f3 0f 1e fa          	endbr64 
   1f554:	41 57                	push   %r15
   1f556:	41 56                	push   %r14
   1f558:	41 55                	push   %r13
   1f55a:	41 54                	push   %r12
   1f55c:	55                   	push   %rbp
   1f55d:	48 89 fd             	mov    %rdi,%rbp
   1f560:	53                   	push   %rbx
   1f561:	48 81 ec 98 01 00 00 	sub    $0x198,%rsp
   1f568:	4c 8b 67 08          	mov    0x8(%rdi),%r12
   1f56c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1f573:	00 00 
   1f575:	48 89 84 24 88 01 00 	mov    %rax,0x188(%rsp)
   1f57c:	00 
   1f57d:	31 c0                	xor    %eax,%eax
   1f57f:	41 8b 44 24 40       	mov    0x40(%r12),%eax
   1f584:	85 c0                	test   %eax,%eax
   1f586:	0f 84 b4 02 00 00    	je     1f840 <_ULx86_64_dwarf_step+0x2f0>
   1f58c:	4d 8d 6c 24 58       	lea    0x58(%r12),%r13
   1f591:	83 f8 01             	cmp    $0x1,%eax
   1f594:	75 10                	jne    1f5a6 <_ULx86_64_dwarf_step+0x56>
   1f596:	4c 89 ef             	mov    %r13,%rdi
   1f599:	e8 d2 0a ff ff       	call   10070 <sgx_spin_lock>
   1f59e:	85 c0                	test   %eax,%eax
   1f5a0:	0f 85 18 06 00 00    	jne    1fbbe <_ULx86_64_dwarf_step+0x66e>
   1f5a6:	41 8b 44 24 70       	mov    0x70(%r12),%eax
   1f5ab:	41 39 44 24 44       	cmp    %eax,0x44(%r12)
   1f5b0:	75 08                	jne    1f5ba <_ULx86_64_dwarf_step+0x6a>
   1f5b2:	49 83 7c 24 68 00    	cmpq   $0x0,0x68(%r12)
   1f5b8:	75 1a                	jne    1f5d4 <_ULx86_64_dwarf_step+0x84>
   1f5ba:	4c 89 ef             	mov    %r13,%rdi
   1f5bd:	e8 de fd ff ff       	call   1f3a0 <_ULx86_64_dwarf_flush_rs_cache>
   1f5c2:	85 c0                	test   %eax,%eax
   1f5c4:	0f 88 76 02 00 00    	js     1f840 <_ULx86_64_dwarf_step+0x2f0>
   1f5ca:	41 8b 44 24 44       	mov    0x44(%r12),%eax
   1f5cf:	41 89 44 24 70       	mov    %eax,0x70(%r12)
   1f5d4:	48 8b 75 18          	mov    0x18(%rbp),%rsi
   1f5d8:	4d 85 ed             	test   %r13,%r13
   1f5db:	0f 84 bf 05 00 00    	je     1fba0 <_ULx86_64_dwarf_step+0x650>
   1f5e1:	0f b7 9d a0 01 00 00 	movzwl 0x1a0(%rbp),%ebx
   1f5e8:	66 85 db             	test   %bx,%bx
   1f5eb:	7e 24                	jle    1f611 <_ULx86_64_dwarf_step+0xc1>
   1f5ed:	83 eb 01             	sub    $0x1,%ebx
   1f5f0:	49 8b 94 24 80 00 00 	mov    0x80(%r12),%rdx
   1f5f7:	00 
   1f5f8:	48 0f bf db          	movswq %bx,%rbx
   1f5fc:	48 89 d8             	mov    %rbx,%rax
   1f5ff:	48 c1 e0 04          	shl    $0x4,%rax
   1f603:	48 01 d0             	add    %rdx,%rax
   1f606:	f6 40 0c 01          	testb  $0x1,0xc(%rax)
   1f60a:	74 05                	je     1f611 <_ULx86_64_dwarf_step+0xc1>
   1f60c:	48 39 30             	cmp    %rsi,(%rax)
   1f60f:	74 73                	je     1f684 <_ULx86_64_dwarf_step+0x134>
   1f611:	48 b8 16 7c 4a 7f b9 	movabs $0x9e3779b97f4a7c16,%rax
   1f618:	79 37 9e 
   1f61b:	41 0f b7 54 24 5e    	movzwl 0x5e(%r12),%edx
   1f621:	b9 3f 00 00 00       	mov    $0x3f,%ecx
   1f626:	48 0f af c6          	imul   %rsi,%rax
   1f62a:	29 d1                	sub    %edx,%ecx
   1f62c:	48 d3 e8             	shr    %cl,%rax
   1f62f:	49 8b 4c 24 68       	mov    0x68(%r12),%rcx
   1f634:	0f b6 c0             	movzbl %al,%eax
   1f637:	0f b7 1c 41          	movzwl (%rcx,%rax,2),%ebx
   1f63b:	89 d1                	mov    %edx,%ecx
   1f63d:	b8 01 00 00 00       	mov    $0x1,%eax
   1f642:	d3 e0                	shl    %cl,%eax
   1f644:	89 c1                	mov    %eax,%ecx
   1f646:	0f b7 c3             	movzwl %bx,%eax
   1f649:	39 c1                	cmp    %eax,%ecx
   1f64b:	0f 8e b7 02 00 00    	jle    1f908 <_ULx86_64_dwarf_step+0x3b8>
   1f651:	49 8b 94 24 80 00 00 	mov    0x80(%r12),%rdx
   1f658:	00 
   1f659:	eb 14                	jmp    1f66f <_ULx86_64_dwarf_step+0x11f>
   1f65b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1f660:	0f b7 58 08          	movzwl 0x8(%rax),%ebx
   1f664:	0f b7 c3             	movzwl %bx,%eax
   1f667:	39 c8                	cmp    %ecx,%eax
   1f669:	0f 8d 99 02 00 00    	jge    1f908 <_ULx86_64_dwarf_step+0x3b8>
   1f66f:	48 89 d8             	mov    %rbx,%rax
   1f672:	48 c1 e0 04          	shl    $0x4,%rax
   1f676:	48 01 d0             	add    %rdx,%rax
   1f679:	f6 40 0c 01          	testb  $0x1,0xc(%rax)
   1f67d:	74 e1                	je     1f660 <_ULx86_64_dwarf_step+0x110>
   1f67f:	48 39 30             	cmp    %rsi,(%rax)
   1f682:	75 dc                	jne    1f660 <_ULx86_64_dwarf_step+0x110>
   1f684:	48 69 db b8 00 00 00 	imul   $0xb8,%rbx,%rbx
   1f68b:	49 03 5c 24 78       	add    0x78(%r12),%rbx
   1f690:	48 85 db             	test   %rbx,%rbx
   1f693:	0f 84 6f 02 00 00    	je     1f908 <_ULx86_64_dwarf_step+0x3b8>
   1f699:	48 89 d8             	mov    %rbx,%rax
   1f69c:	49 2b 44 24 78       	sub    0x78(%r12),%rax
   1f6a1:	48 c1 f8 03          	sar    $0x3,%rax
   1f6a5:	66 69 c0 a7 37       	imul   $0x37a7,%ax,%ax
   1f6aa:	0f b7 c0             	movzwl %ax,%eax
   1f6ad:	48 c1 e0 04          	shl    $0x4,%rax
   1f6b1:	0f b6 44 02 0c       	movzbl 0xc(%rdx,%rax,1),%eax
   1f6b6:	f7 d0                	not    %eax
   1f6b8:	83 e0 02             	and    $0x2,%eax
   1f6bb:	89 c2                	mov    %eax,%edx
   1f6bd:	0f b6 85 50 01 00 00 	movzbl 0x150(%rbp),%eax
   1f6c4:	83 e0 fd             	and    $0xfffffffd,%eax
   1f6c7:	09 d0                	or     %edx,%eax
   1f6c9:	88 85 50 01 00 00    	mov    %al,0x150(%rbp)
   1f6cf:	f3 0f 6f 03          	movdqu (%rbx),%xmm0
   1f6d3:	0f 11 84 24 c8 00 00 	movups %xmm0,0xc8(%rsp)
   1f6da:	00 
   1f6db:	f3 0f 6f 4b 10       	movdqu 0x10(%rbx),%xmm1
   1f6e0:	0f 11 8c 24 d8 00 00 	movups %xmm1,0xd8(%rsp)
   1f6e7:	00 
   1f6e8:	f3 0f 6f 53 20       	movdqu 0x20(%rbx),%xmm2
   1f6ed:	0f 11 94 24 e8 00 00 	movups %xmm2,0xe8(%rsp)
   1f6f4:	00 
   1f6f5:	f3 0f 6f 5b 30       	movdqu 0x30(%rbx),%xmm3
   1f6fa:	0f 11 9c 24 f8 00 00 	movups %xmm3,0xf8(%rsp)
   1f701:	00 
   1f702:	f3 0f 6f 63 40       	movdqu 0x40(%rbx),%xmm4
   1f707:	0f 11 a4 24 08 01 00 	movups %xmm4,0x108(%rsp)
   1f70e:	00 
   1f70f:	f3 0f 6f 6b 50       	movdqu 0x50(%rbx),%xmm5
   1f714:	0f 11 ac 24 18 01 00 	movups %xmm5,0x118(%rsp)
   1f71b:	00 
   1f71c:	f3 0f 6f 73 60       	movdqu 0x60(%rbx),%xmm6
   1f721:	0f 11 b4 24 28 01 00 	movups %xmm6,0x128(%rsp)
   1f728:	00 
   1f729:	f3 0f 6f 7b 70       	movdqu 0x70(%rbx),%xmm7
   1f72e:	0f 11 bc 24 38 01 00 	movups %xmm7,0x138(%rsp)
   1f735:	00 
   1f736:	f3 0f 6f 83 80 00 00 	movdqu 0x80(%rbx),%xmm0
   1f73d:	00 
   1f73e:	0f 11 84 24 48 01 00 	movups %xmm0,0x148(%rsp)
   1f745:	00 
   1f746:	f3 0f 6f 8b 90 00 00 	movdqu 0x90(%rbx),%xmm1
   1f74d:	00 
   1f74e:	0f 11 8c 24 58 01 00 	movups %xmm1,0x158(%rsp)
   1f755:	00 
   1f756:	f3 0f 6f 93 a0 00 00 	movdqu 0xa0(%rbx),%xmm2
   1f75d:	00 
   1f75e:	0f 11 94 24 68 01 00 	movups %xmm2,0x168(%rsp)
   1f765:	00 
   1f766:	48 8b 83 b0 00 00 00 	mov    0xb0(%rbx),%rax
   1f76d:	48 89 84 24 78 01 00 	mov    %rax,0x178(%rsp)
   1f774:	00 
   1f775:	48 8b 45 08          	mov    0x8(%rbp),%rax
   1f779:	83 78 40 01          	cmpl   $0x1,0x40(%rax)
   1f77d:	75 10                	jne    1f78f <_ULx86_64_dwarf_step+0x23f>
   1f77f:	4c 89 ef             	mov    %r13,%rdi
   1f782:	e8 89 09 ff ff       	call   10110 <sgx_spin_unlock>
   1f787:	85 c0                	test   %eax,%eax
   1f789:	0f 85 2f 04 00 00    	jne    1fbbe <_ULx86_64_dwarf_step+0x66e>
   1f78f:	45 31 e4             	xor    %r12d,%r12d
   1f792:	49 2b 5d 20          	sub    0x20(%r13),%rbx
   1f796:	49 8b 4d 28          	mov    0x28(%r13),%rcx
   1f79a:	48 b8 a7 37 bd e9 4d 	movabs $0xd37a6f4de9bd37a7,%rax
   1f7a1:	6f 7a d3 
   1f7a4:	48 c1 fb 03          	sar    $0x3,%rbx
   1f7a8:	48 0f af d8          	imul   %rax,%rbx
   1f7ac:	0f b7 d3             	movzwl %bx,%edx
   1f7af:	8d 73 01             	lea    0x1(%rbx),%esi
   1f7b2:	0f b7 c3             	movzwl %bx,%eax
   1f7b5:	48 c1 e2 04          	shl    $0x4,%rdx
   1f7b9:	0f b7 54 11 0a       	movzwl 0xa(%rcx,%rdx,1),%edx
   1f7be:	66 89 95 a0 01 00 00 	mov    %dx,0x1a0(%rbp)
   1f7c5:	48 0f bf 95 a2 01 00 	movswq 0x1a2(%rbp),%rdx
   1f7cc:	00 
   1f7cd:	48 c1 e2 04          	shl    $0x4,%rdx
   1f7d1:	66 89 74 11 0a       	mov    %si,0xa(%rcx,%rdx,1)
   1f7d6:	66 89 9d a2 01 00 00 	mov    %bx,0x1a2(%rbp)
   1f7dd:	45 85 e4             	test   %r12d,%r12d
   1f7e0:	78 2d                	js     1f80f <_ULx86_64_dwarf_step+0x2bf>
   1f7e2:	48 c1 e0 04          	shl    $0x4,%rax
   1f7e6:	49 03 45 28          	add    0x28(%r13),%rax
   1f7ea:	48 89 ef             	mov    %rbp,%rdi
   1f7ed:	0f b6 70 0c          	movzbl 0xc(%rax),%esi
   1f7f1:	40 d0 ee             	shr    %sil
   1f7f4:	83 e6 01             	and    $0x1,%esi
   1f7f7:	e8 a4 22 00 00       	call   21aa0 <_ULx86_64_reuse_frame>
   1f7fc:	48 8d b4 24 c8 00 00 	lea    0xc8(%rsp),%rsi
   1f803:	00 
   1f804:	48 89 ef             	mov    %rbp,%rdi
   1f807:	e8 84 f6 ff ff       	call   1ee90 <apply_reg_state>
   1f80c:	41 89 c4             	mov    %eax,%r12d
   1f80f:	48 8b 84 24 88 01 00 	mov    0x188(%rsp),%rax
   1f816:	00 
   1f817:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1f81e:	00 00 
   1f820:	0f 85 9d 03 00 00    	jne    1fbc3 <_ULx86_64_dwarf_step+0x673>
   1f826:	48 81 c4 98 01 00 00 	add    $0x198,%rsp
   1f82d:	44 89 e0             	mov    %r12d,%eax
   1f830:	5b                   	pop    %rbx
   1f831:	5d                   	pop    %rbp
   1f832:	41 5c                	pop    %r12
   1f834:	41 5d                	pop    %r13
   1f836:	41 5e                	pop    %r14
   1f838:	41 5f                	pop    %r15
   1f83a:	c3                   	ret    
   1f83b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1f840:	48 8b 75 18          	mov    0x18(%rbp),%rsi
   1f844:	45 31 ff             	xor    %r15d,%r15d
   1f847:	45 31 ed             	xor    %r13d,%r13d
   1f84a:	48 89 ef             	mov    %rbp,%rdi
   1f84d:	e8 3e e8 ff ff       	call   1e090 <fetch_proc_info>
   1f852:	41 89 c4             	mov    %eax,%r12d
   1f855:	85 c0                	test   %eax,%eax
   1f857:	0f 88 c4 00 00 00    	js     1f921 <_ULx86_64_dwarf_step+0x3d1>
   1f85d:	48 8b 85 90 01 00 00 	mov    0x190(%rbp),%rax
   1f864:	0f b6 58 46          	movzbl 0x46(%rax),%ebx
   1f868:	8b 85 88 01 00 00    	mov    0x188(%rbp),%eax
   1f86e:	c0 eb 02             	shr    $0x2,%bl
   1f871:	83 f3 01             	xor    $0x1,%ebx
   1f874:	83 e3 01             	and    $0x1,%ebx
   1f877:	85 c0                	test   %eax,%eax
   1f879:	0f 84 d1 02 00 00    	je     1fb50 <_ULx86_64_dwarf_step+0x600>
   1f87f:	83 e8 01             	sub    $0x1,%eax
   1f882:	83 f8 01             	cmp    $0x1,%eax
   1f885:	0f 87 dd 02 00 00    	ja     1fb68 <_ULx86_64_dwarf_step+0x618>
   1f88b:	48 8b 55 18          	mov    0x18(%rbp),%rdx
   1f88f:	48 89 e6             	mov    %rsp,%rsi
   1f892:	48 89 ef             	mov    %rbp,%rdi
   1f895:	e8 a6 f3 ff ff       	call   1ec40 <create_state_record_for.part.0>
   1f89a:	41 89 c6             	mov    %eax,%r14d
   1f89d:	41 89 c4             	mov    %eax,%r12d
   1f8a0:	0f b6 85 50 01 00 00 	movzbl 0x150(%rbp),%eax
   1f8a7:	41 f7 d6             	not    %r14d
   1f8aa:	41 c1 ee 1f          	shr    $0x1f,%r14d
   1f8ae:	45 21 fe             	and    %r15d,%r14d
   1f8b1:	a8 08                	test   $0x8,%al
   1f8b3:	0f 85 81 00 00 00    	jne    1f93a <_ULx86_64_dwarf_step+0x3ea>
   1f8b9:	48 8b b5 90 01 00 00 	mov    0x190(%rbp),%rsi
   1f8c0:	48 85 f6             	test   %rsi,%rsi
   1f8c3:	74 0d                	je     1f8d2 <_ULx86_64_dwarf_step+0x382>
   1f8c5:	83 bd 88 01 00 00 01 	cmpl   $0x1,0x188(%rbp)
   1f8cc:	0f 84 ae 02 00 00    	je     1fb80 <_ULx86_64_dwarf_step+0x630>
   1f8d2:	0f b6 85 50 01 00 00 	movzbl 0x150(%rbp),%eax
   1f8d9:	01 db                	add    %ebx,%ebx
   1f8db:	83 e3 06             	and    $0x6,%ebx
   1f8de:	83 e0 f9             	and    $0xfffffff9,%eax
   1f8e1:	09 c3                	or     %eax,%ebx
   1f8e3:	88 9d 50 01 00 00    	mov    %bl,0x150(%rbp)
   1f8e9:	45 84 f6             	test   %r14b,%r14b
   1f8ec:	75 6a                	jne    1f958 <_ULx86_64_dwarf_step+0x408>
   1f8ee:	4d 85 ed             	test   %r13,%r13
   1f8f1:	0f 85 b1 02 00 00    	jne    1fba8 <_ULx86_64_dwarf_step+0x658>
   1f8f7:	45 85 e4             	test   %r12d,%r12d
   1f8fa:	0f 89 fc fe ff ff    	jns    1f7fc <_ULx86_64_dwarf_step+0x2ac>
   1f900:	e9 0a ff ff ff       	jmp    1f80f <_ULx86_64_dwarf_step+0x2bf>
   1f905:	0f 1f 00             	nopl   (%rax)
   1f908:	48 89 ef             	mov    %rbp,%rdi
   1f90b:	41 bf 01 00 00 00    	mov    $0x1,%r15d
   1f911:	e8 7a e7 ff ff       	call   1e090 <fetch_proc_info>
   1f916:	41 89 c4             	mov    %eax,%r12d
   1f919:	85 c0                	test   %eax,%eax
   1f91b:	0f 89 3c ff ff ff    	jns    1f85d <_ULx86_64_dwarf_step+0x30d>
   1f921:	0f b6 85 50 01 00 00 	movzbl 0x150(%rbp),%eax
   1f928:	45 31 f6             	xor    %r14d,%r14d
   1f92b:	89 c3                	mov    %eax,%ebx
   1f92d:	d0 eb                	shr    %bl
   1f92f:	83 e3 01             	and    $0x1,%ebx
   1f932:	a8 08                	test   $0x8,%al
   1f934:	0f 84 7f ff ff ff    	je     1f8b9 <_ULx86_64_dwarf_step+0x369>
   1f93a:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   1f93e:	48 8b 55 00          	mov    0x0(%rbp),%rdx
   1f942:	48 8d b5 58 01 00 00 	lea    0x158(%rbp),%rsi
   1f949:	e8 e2 23 00 00       	call   21d30 <_ULx86_64_Iput_dynamic_unwind_info>
   1f94e:	e9 7f ff ff ff       	jmp    1f8d2 <_ULx86_64_dwarf_step+0x382>
   1f953:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1f958:	41 0f b7 55 06       	movzwl 0x6(%r13),%edx
   1f95d:	41 0f b7 5d 04       	movzwl 0x4(%r13),%ebx
   1f962:	be 01 00 00 00       	mov    $0x1,%esi
   1f967:	4d 8b 45 28          	mov    0x28(%r13),%r8
   1f96b:	4d 8b 5d 10          	mov    0x10(%r13),%r11
   1f96f:	89 d1                	mov    %edx,%ecx
   1f971:	49 89 de             	mov    %rbx,%r14
   1f974:	8d 43 01             	lea    0x1(%rbx),%eax
   1f977:	48 89 df             	mov    %rbx,%rdi
   1f97a:	d3 e6                	shl    %cl,%esi
   1f97c:	49 c1 e6 04          	shl    $0x4,%r14
   1f980:	8d 4e ff             	lea    -0x1(%rsi),%ecx
   1f983:	4f 8d 0c 30          	lea    (%r8,%r14,1),%r9
   1f987:	21 c8                	and    %ecx,%eax
   1f989:	b9 3f 00 00 00       	mov    $0x3f,%ecx
   1f98e:	66 41 89 45 04       	mov    %ax,0x4(%r13)
   1f993:	49 8b 01             	mov    (%r9),%rax
   1f996:	29 d1                	sub    %edx,%ecx
   1f998:	48 85 c0             	test   %rax,%rax
   1f99b:	74 5d                	je     1f9fa <_ULx86_64_dwarf_step+0x4aa>
   1f99d:	48 ba 16 7c 4a 7f b9 	movabs $0x9e3779b97f4a7c16,%rdx
   1f9a4:	79 37 9e 
   1f9a7:	48 0f af c2          	imul   %rdx,%rax
   1f9ab:	48 d3 e8             	shr    %cl,%rax
   1f9ae:	0f b6 c0             	movzbl %al,%eax
   1f9b1:	4d 8d 14 43          	lea    (%r11,%rax,2),%r10
   1f9b5:	41 0f b7 02          	movzwl (%r10),%eax
   1f9b9:	89 c2                	mov    %eax,%edx
   1f9bb:	39 c6                	cmp    %eax,%esi
   1f9bd:	7f 14                	jg     1f9d3 <_ULx86_64_dwarf_step+0x483>
   1f9bf:	eb 39                	jmp    1f9fa <_ULx86_64_dwarf_step+0x4aa>
   1f9c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1f9c8:	4c 8d 50 08          	lea    0x8(%rax),%r10
   1f9cc:	0f b7 c2             	movzwl %dx,%eax
   1f9cf:	39 c6                	cmp    %eax,%esi
   1f9d1:	7e 27                	jle    1f9fa <_ULx86_64_dwarf_step+0x4aa>
   1f9d3:	0f b7 c2             	movzwl %dx,%eax
   1f9d6:	41 89 d7             	mov    %edx,%r15d
   1f9d9:	48 c1 e0 04          	shl    $0x4,%rax
   1f9dd:	4c 01 c0             	add    %r8,%rax
   1f9e0:	0f b7 50 08          	movzwl 0x8(%rax),%edx
   1f9e4:	66 44 39 ff          	cmp    %r15w,%di
   1f9e8:	75 de                	jne    1f9c8 <_ULx86_64_dwarf_step+0x478>
   1f9ea:	66 41 89 12          	mov    %dx,(%r10)
   1f9ee:	41 0f b7 45 06       	movzwl 0x6(%r13),%eax
   1f9f3:	b9 3f 00 00 00       	mov    $0x3f,%ecx
   1f9f8:	29 c1                	sub    %eax,%ecx
   1f9fa:	48 b8 16 7c 4a 7f b9 	movabs $0x9e3779b97f4a7c16,%rax
   1fa01:	79 37 9e 
   1fa04:	48 8b 55 18          	mov    0x18(%rbp),%rdx
   1fa08:	48 0f af c2          	imul   %rdx,%rax
   1fa0c:	48 d3 e8             	shr    %cl,%rax
   1fa0f:	0f b6 c0             	movzbl %al,%eax
   1fa12:	49 8d 04 43          	lea    (%r11,%rax,2),%rax
   1fa16:	0f b7 08             	movzwl (%rax),%ecx
   1fa19:	66 41 89 49 08       	mov    %cx,0x8(%r9)
   1fa1e:	66 89 38             	mov    %di,(%rax)
   1fa21:	48 89 ef             	mov    %rbp,%rdi
   1fa24:	41 80 49 0c 01       	orb    $0x1,0xc(%r9)
   1fa29:	49 89 11             	mov    %rdx,(%r9)
   1fa2c:	e8 5f 20 00 00       	call   21a90 <_ULx86_64_cache_frame>
   1fa31:	49 8b 4d 28          	mov    0x28(%r13),%rcx
   1fa35:	83 e0 01             	and    $0x1,%eax
   1fa38:	8d 14 00             	lea    (%rax,%rax,1),%edx
   1fa3b:	42 0f b6 44 31 0c    	movzbl 0xc(%rcx,%r14,1),%eax
   1fa41:	83 e0 fd             	and    $0xfffffffd,%eax
   1fa44:	09 d0                	or     %edx,%eax
   1fa46:	48 ba a7 37 bd e9 4d 	movabs $0xd37a6f4de9bd37a7,%rdx
   1fa4d:	6f 7a d3 
   1fa50:	42 88 44 31 0c       	mov    %al,0xc(%rcx,%r14,1)
   1fa55:	48 69 c3 b8 00 00 00 	imul   $0xb8,%rbx,%rax
   1fa5c:	49 8b 5d 20          	mov    0x20(%r13),%rbx
   1fa60:	48 01 c3             	add    %rax,%rbx
   1fa63:	48 c1 f8 03          	sar    $0x3,%rax
   1fa67:	48 0f af c2          	imul   %rdx,%rax
   1fa6b:	31 d2                	xor    %edx,%edx
   1fa6d:	48 c1 e0 04          	shl    $0x4,%rax
   1fa71:	66 89 54 01 0a       	mov    %dx,0xa(%rcx,%rax,1)
   1fa76:	f3 0f 6f 9c 24 c8 00 	movdqu 0xc8(%rsp),%xmm3
   1fa7d:	00 00 
   1fa7f:	0f 11 1b             	movups %xmm3,(%rbx)
   1fa82:	f3 0f 6f a4 24 d8 00 	movdqu 0xd8(%rsp),%xmm4
   1fa89:	00 00 
   1fa8b:	0f 11 63 10          	movups %xmm4,0x10(%rbx)
   1fa8f:	f3 0f 6f ac 24 e8 00 	movdqu 0xe8(%rsp),%xmm5
   1fa96:	00 00 
   1fa98:	0f 11 6b 20          	movups %xmm5,0x20(%rbx)
   1fa9c:	f3 0f 6f b4 24 f8 00 	movdqu 0xf8(%rsp),%xmm6
   1faa3:	00 00 
   1faa5:	0f 11 73 30          	movups %xmm6,0x30(%rbx)
   1faa9:	f3 0f 6f bc 24 08 01 	movdqu 0x108(%rsp),%xmm7
   1fab0:	00 00 
   1fab2:	0f 11 7b 40          	movups %xmm7,0x40(%rbx)
   1fab6:	f3 0f 6f 9c 24 18 01 	movdqu 0x118(%rsp),%xmm3
   1fabd:	00 00 
   1fabf:	0f 11 5b 50          	movups %xmm3,0x50(%rbx)
   1fac3:	f3 0f 6f a4 24 28 01 	movdqu 0x128(%rsp),%xmm4
   1faca:	00 00 
   1facc:	0f 11 63 60          	movups %xmm4,0x60(%rbx)
   1fad0:	f3 0f 6f ac 24 38 01 	movdqu 0x138(%rsp),%xmm5
   1fad7:	00 00 
   1fad9:	0f 11 6b 70          	movups %xmm5,0x70(%rbx)
   1fadd:	f3 0f 6f b4 24 48 01 	movdqu 0x148(%rsp),%xmm6
   1fae4:	00 00 
   1fae6:	0f 11 b3 80 00 00 00 	movups %xmm6,0x80(%rbx)
   1faed:	f3 0f 6f bc 24 58 01 	movdqu 0x158(%rsp),%xmm7
   1faf4:	00 00 
   1faf6:	0f 11 bb 90 00 00 00 	movups %xmm7,0x90(%rbx)
   1fafd:	f3 0f 6f 84 24 68 01 	movdqu 0x168(%rsp),%xmm0
   1fb04:	00 00 
   1fb06:	0f 11 83 a0 00 00 00 	movups %xmm0,0xa0(%rbx)
   1fb0d:	48 8b 84 24 78 01 00 	mov    0x178(%rsp),%rax
   1fb14:	00 
   1fb15:	48 89 83 b0 00 00 00 	mov    %rax,0xb0(%rbx)
   1fb1c:	48 8b 45 08          	mov    0x8(%rbp),%rax
   1fb20:	83 78 40 01          	cmpl   $0x1,0x40(%rax)
   1fb24:	75 10                	jne    1fb36 <_ULx86_64_dwarf_step+0x5e6>
   1fb26:	4c 89 ef             	mov    %r13,%rdi
   1fb29:	e8 e2 05 ff ff       	call   10110 <sgx_spin_unlock>
   1fb2e:	85 c0                	test   %eax,%eax
   1fb30:	0f 85 88 00 00 00    	jne    1fbbe <_ULx86_64_dwarf_step+0x66e>
   1fb36:	48 85 db             	test   %rbx,%rbx
   1fb39:	0f 85 53 fc ff ff    	jne    1f792 <_ULx86_64_dwarf_step+0x242>
   1fb3f:	b8 ff ff 00 00       	mov    $0xffff,%eax
   1fb44:	e9 94 fc ff ff       	jmp    1f7dd <_ULx86_64_dwarf_step+0x28d>
   1fb49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1fb50:	0f b6 85 50 01 00 00 	movzbl 0x150(%rbp),%eax
   1fb57:	45 31 f6             	xor    %r14d,%r14d
   1fb5a:	41 bc f6 ff ff ff    	mov    $0xfffffff6,%r12d
   1fb60:	e9 4c fd ff ff       	jmp    1f8b1 <_ULx86_64_dwarf_step+0x361>
   1fb65:	0f 1f 00             	nopl   (%rax)
   1fb68:	0f b6 85 50 01 00 00 	movzbl 0x150(%rbp),%eax
   1fb6f:	45 31 f6             	xor    %r14d,%r14d
   1fb72:	41 bc f8 ff ff ff    	mov    $0xfffffff8,%r12d
   1fb78:	e9 34 fd ff ff       	jmp    1f8b1 <_ULx86_64_dwarf_step+0x361>
   1fb7d:	0f 1f 00             	nopl   (%rax)
   1fb80:	48 8d 3d b9 25 03 00 	lea    0x325b9(%rip),%rdi        # 52140 <dwarf_cie_info_pool>
   1fb87:	e8 84 1e 00 00       	call   21a10 <_UIx86_64__mempool_free>
   1fb8c:	48 c7 85 90 01 00 00 	movq   $0x0,0x190(%rbp)
   1fb93:	00 00 00 00 
   1fb97:	e9 36 fd ff ff       	jmp    1f8d2 <_ULx86_64_dwarf_step+0x382>
   1fb9c:	0f 1f 40 00          	nopl   0x0(%rax)
   1fba0:	45 31 ff             	xor    %r15d,%r15d
   1fba3:	e9 a2 fc ff ff       	jmp    1f84a <_ULx86_64_dwarf_step+0x2fa>
   1fba8:	48 8b 45 08          	mov    0x8(%rbp),%rax
   1fbac:	83 78 40 01          	cmpl   $0x1,0x40(%rax)
   1fbb0:	75 8d                	jne    1fb3f <_ULx86_64_dwarf_step+0x5ef>
   1fbb2:	4c 89 ef             	mov    %r13,%rdi
   1fbb5:	e8 56 05 ff ff       	call   10110 <sgx_spin_unlock>
   1fbba:	85 c0                	test   %eax,%eax
   1fbbc:	74 81                	je     1fb3f <_ULx86_64_dwarf_step+0x5ef>
   1fbbe:	e8 74 61 00 00       	call   25d37 <abort>
   1fbc3:	e8 78 3f ff ff       	call   13b40 <__stack_chk_fail>
   1fbc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1fbcf:	00 

000000000001fbd0 <_ULx86_64_dwarf_make_proc_info>:
   1fbd0:	f3 0f 1e fa          	endbr64 
   1fbd4:	41 54                	push   %r12
   1fbd6:	53                   	push   %rbx
   1fbd7:	48 89 fb             	mov    %rdi,%rbx
   1fbda:	48 81 ec 98 01 00 00 	sub    $0x198,%rsp
   1fbe1:	48 8b 77 18          	mov    0x18(%rdi),%rsi
   1fbe5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1fbec:	00 00 
   1fbee:	48 89 84 24 88 01 00 	mov    %rax,0x188(%rsp)
   1fbf5:	00 
   1fbf6:	31 c0                	xor    %eax,%eax
   1fbf8:	e8 93 e4 ff ff       	call   1e090 <fetch_proc_info>
   1fbfd:	41 89 c4             	mov    %eax,%r12d
   1fc00:	85 c0                	test   %eax,%eax
   1fc02:	78 30                	js     1fc34 <_ULx86_64_dwarf_make_proc_info+0x64>
   1fc04:	8b 83 88 01 00 00    	mov    0x188(%rbx),%eax
   1fc0a:	41 bc f6 ff ff ff    	mov    $0xfffffff6,%r12d
   1fc10:	85 c0                	test   %eax,%eax
   1fc12:	74 20                	je     1fc34 <_ULx86_64_dwarf_make_proc_info+0x64>
   1fc14:	83 e8 01             	sub    $0x1,%eax
   1fc17:	41 bc f8 ff ff ff    	mov    $0xfffffff8,%r12d
   1fc1d:	83 f8 01             	cmp    $0x1,%eax
   1fc20:	77 12                	ja     1fc34 <_ULx86_64_dwarf_make_proc_info+0x64>
   1fc22:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   1fc26:	48 89 e6             	mov    %rsp,%rsi
   1fc29:	48 89 df             	mov    %rbx,%rdi
   1fc2c:	e8 0f f0 ff ff       	call   1ec40 <create_state_record_for.part.0>
   1fc31:	41 89 c4             	mov    %eax,%r12d
   1fc34:	f6 83 50 01 00 00 08 	testb  $0x8,0x150(%rbx)
   1fc3b:	75 53                	jne    1fc90 <_ULx86_64_dwarf_make_proc_info+0xc0>
   1fc3d:	48 8b b3 90 01 00 00 	mov    0x190(%rbx),%rsi
   1fc44:	48 85 f6             	test   %rsi,%rsi
   1fc47:	74 09                	je     1fc52 <_ULx86_64_dwarf_make_proc_info+0x82>
   1fc49:	83 bb 88 01 00 00 01 	cmpl   $0x1,0x188(%rbx)
   1fc50:	74 56                	je     1fca8 <_ULx86_64_dwarf_make_proc_info+0xd8>
   1fc52:	80 a3 50 01 00 00 fb 	andb   $0xfb,0x150(%rbx)
   1fc59:	45 85 e4             	test   %r12d,%r12d
   1fc5c:	78 0c                	js     1fc6a <_ULx86_64_dwarf_make_proc_info+0x9a>
   1fc5e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   1fc63:	45 31 e4             	xor    %r12d,%r12d
   1fc66:	48 89 43 20          	mov    %rax,0x20(%rbx)
   1fc6a:	48 8b 84 24 88 01 00 	mov    0x188(%rsp),%rax
   1fc71:	00 
   1fc72:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   1fc79:	00 00 
   1fc7b:	75 44                	jne    1fcc1 <_ULx86_64_dwarf_make_proc_info+0xf1>
   1fc7d:	48 81 c4 98 01 00 00 	add    $0x198,%rsp
   1fc84:	44 89 e0             	mov    %r12d,%eax
   1fc87:	5b                   	pop    %rbx
   1fc88:	41 5c                	pop    %r12
   1fc8a:	c3                   	ret    
   1fc8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1fc90:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1fc94:	48 8b 13             	mov    (%rbx),%rdx
   1fc97:	48 8d b3 58 01 00 00 	lea    0x158(%rbx),%rsi
   1fc9e:	e8 8d 20 00 00       	call   21d30 <_ULx86_64_Iput_dynamic_unwind_info>
   1fca3:	eb ad                	jmp    1fc52 <_ULx86_64_dwarf_make_proc_info+0x82>
   1fca5:	0f 1f 00             	nopl   (%rax)
   1fca8:	48 8d 3d 91 24 03 00 	lea    0x32491(%rip),%rdi        # 52140 <dwarf_cie_info_pool>
   1fcaf:	e8 5c 1d 00 00       	call   21a10 <_UIx86_64__mempool_free>
   1fcb4:	48 c7 83 90 01 00 00 	movq   $0x0,0x190(%rbx)
   1fcbb:	00 00 00 00 
   1fcbf:	eb 91                	jmp    1fc52 <_ULx86_64_dwarf_make_proc_info+0x82>
   1fcc1:	e8 7a 3e ff ff       	call   13b40 <__stack_chk_fail>
   1fcc6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1fccd:	00 00 00 

000000000001fcd0 <_ULx86_64_dwarf_read_encoded_pointer>:
   1fcd0:	f3 0f 1e fa          	endbr64 
   1fcd4:	80 f9 ff             	cmp    $0xff,%cl
   1fcd7:	0f 84 83 01 00 00    	je     1fe60 <_ULx86_64_dwarf_read_encoded_pointer+0x190>
   1fcdd:	48 8b 3a             	mov    (%rdx),%rdi
   1fce0:	89 c8                	mov    %ecx,%eax
   1fce2:	80 f9 50             	cmp    $0x50,%cl
   1fce5:	0f 84 3d 01 00 00    	je     1fe28 <_ULx86_64_dwarf_read_encoded_pointer+0x158>
   1fceb:	83 e1 0f             	and    $0xf,%ecx
   1fcee:	80 f9 0c             	cmp    $0xc,%cl
   1fcf1:	0f 87 79 01 00 00    	ja     1fe70 <_ULx86_64_dwarf_read_encoded_pointer+0x1a0>
   1fcf7:	48 8d 35 32 76 00 00 	lea    0x7632(%rip),%rsi        # 27330 <__bigtens_D2A+0x450>
   1fcfe:	0f b6 c9             	movzbl %cl,%ecx
   1fd01:	53                   	push   %rbx
   1fd02:	48 63 0c 8e          	movslq (%rsi,%rcx,4),%rcx
   1fd06:	48 01 f1             	add    %rsi,%rcx
   1fd09:	3e ff e1             	notrack jmp *%rcx
   1fd0c:	0f 1f 40 00          	nopl   0x0(%rax)
   1fd10:	48 8d 4f 08          	lea    0x8(%rdi),%rcx
   1fd14:	48 8b 37             	mov    (%rdi),%rsi
   1fd17:	48 89 0a             	mov    %rcx,(%rdx)
   1fd1a:	48 85 f6             	test   %rsi,%rsi
   1fd1d:	74 41                	je     1fd60 <_ULx86_64_dwarf_read_encoded_pointer+0x90>
   1fd1f:	89 c2                	mov    %eax,%edx
   1fd21:	83 e2 70             	and    $0x70,%edx
   1fd24:	80 fa 30             	cmp    $0x30,%dl
   1fd27:	0f 84 23 01 00 00    	je     1fe50 <_ULx86_64_dwarf_read_encoded_pointer+0x180>
   1fd2d:	77 21                	ja     1fd50 <_ULx86_64_dwarf_read_encoded_pointer+0x80>
   1fd2f:	84 d2                	test   %dl,%dl
   1fd31:	74 08                	je     1fd3b <_ULx86_64_dwarf_read_encoded_pointer+0x6b>
   1fd33:	80 fa 10             	cmp    $0x10,%dl
   1fd36:	75 38                	jne    1fd70 <_ULx86_64_dwarf_read_encoded_pointer+0xa0>
   1fd38:	48 01 fe             	add    %rdi,%rsi
   1fd3b:	84 c0                	test   %al,%al
   1fd3d:	0f 88 05 01 00 00    	js     1fe48 <_ULx86_64_dwarf_read_encoded_pointer+0x178>
   1fd43:	31 c0                	xor    %eax,%eax
   1fd45:	49 89 31             	mov    %rsi,(%r9)
   1fd48:	5b                   	pop    %rbx
   1fd49:	c3                   	ret    
   1fd4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1fd50:	80 fa 40             	cmp    $0x40,%dl
   1fd53:	75 1b                	jne    1fd70 <_ULx86_64_dwarf_read_encoded_pointer+0xa0>
   1fd55:	49 03 30             	add    (%r8),%rsi
   1fd58:	eb e1                	jmp    1fd3b <_ULx86_64_dwarf_read_encoded_pointer+0x6b>
   1fd5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1fd60:	31 c0                	xor    %eax,%eax
   1fd62:	49 c7 01 00 00 00 00 	movq   $0x0,(%r9)
   1fd69:	5b                   	pop    %rbx
   1fd6a:	c3                   	ret    
   1fd6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1fd70:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1fd75:	5b                   	pop    %rbx
   1fd76:	c3                   	ret    
   1fd77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1fd7e:	00 00 
   1fd80:	48 8d 4f 02          	lea    0x2(%rdi),%rcx
   1fd84:	0f b7 37             	movzwl (%rdi),%esi
   1fd87:	48 89 0a             	mov    %rcx,(%rdx)
   1fd8a:	eb 8e                	jmp    1fd1a <_ULx86_64_dwarf_read_encoded_pointer+0x4a>
   1fd8c:	0f 1f 40 00          	nopl   0x0(%rax)
   1fd90:	48 8d 4f 04          	lea    0x4(%rdi),%rcx
   1fd94:	8b 37                	mov    (%rdi),%esi
   1fd96:	48 89 0a             	mov    %rcx,(%rdx)
   1fd99:	e9 7c ff ff ff       	jmp    1fd1a <_ULx86_64_dwarf_read_encoded_pointer+0x4a>
   1fd9e:	66 90                	xchg   %ax,%ax
   1fda0:	48 8d 4f 04          	lea    0x4(%rdi),%rcx
   1fda4:	48 63 37             	movslq (%rdi),%rsi
   1fda7:	48 89 0a             	mov    %rcx,(%rdx)
   1fdaa:	e9 6b ff ff ff       	jmp    1fd1a <_ULx86_64_dwarf_read_encoded_pointer+0x4a>
   1fdaf:	90                   	nop
   1fdb0:	48 8d 4f 02          	lea    0x2(%rdi),%rcx
   1fdb4:	48 0f bf 37          	movswq (%rdi),%rsi
   1fdb8:	48 89 0a             	mov    %rcx,(%rdx)
   1fdbb:	e9 5a ff ff ff       	jmp    1fd1a <_ULx86_64_dwarf_read_encoded_pointer+0x4a>
   1fdc0:	49 89 fa             	mov    %rdi,%r10
   1fdc3:	31 c9                	xor    %ecx,%ecx
   1fdc5:	31 f6                	xor    %esi,%esi
   1fdc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1fdce:	00 00 
   1fdd0:	41 0f b6 1a          	movzbl (%r10),%ebx
   1fdd4:	49 83 c2 01          	add    $0x1,%r10
   1fdd8:	4c 89 12             	mov    %r10,(%rdx)
   1fddb:	49 89 db             	mov    %rbx,%r11
   1fdde:	41 83 e3 7f          	and    $0x7f,%r11d
   1fde2:	49 d3 e3             	shl    %cl,%r11
   1fde5:	48 83 c1 07          	add    $0x7,%rcx
   1fde9:	4c 09 de             	or     %r11,%rsi
   1fdec:	84 db                	test   %bl,%bl
   1fdee:	78 e0                	js     1fdd0 <_ULx86_64_dwarf_read_encoded_pointer+0x100>
   1fdf0:	e9 25 ff ff ff       	jmp    1fd1a <_ULx86_64_dwarf_read_encoded_pointer+0x4a>
   1fdf5:	0f 1f 00             	nopl   (%rax)
   1fdf8:	49 89 fa             	mov    %rdi,%r10
   1fdfb:	31 c9                	xor    %ecx,%ecx
   1fdfd:	31 f6                	xor    %esi,%esi
   1fdff:	90                   	nop
   1fe00:	41 0f b6 1a          	movzbl (%r10),%ebx
   1fe04:	49 83 c2 01          	add    $0x1,%r10
   1fe08:	4c 89 12             	mov    %r10,(%rdx)
   1fe0b:	49 89 db             	mov    %rbx,%r11
   1fe0e:	41 83 e3 7f          	and    $0x7f,%r11d
   1fe12:	49 d3 e3             	shl    %cl,%r11
   1fe15:	48 83 c1 07          	add    $0x7,%rcx
   1fe19:	4c 09 de             	or     %r11,%rsi
   1fe1c:	84 db                	test   %bl,%bl
   1fe1e:	78 e0                	js     1fe00 <_ULx86_64_dwarf_read_encoded_pointer+0x130>
   1fe20:	e9 f5 fe ff ff       	jmp    1fd1a <_ULx86_64_dwarf_read_encoded_pointer+0x4a>
   1fe25:	0f 1f 00             	nopl   (%rax)
   1fe28:	48 83 c7 07          	add    $0x7,%rdi
   1fe2c:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1fe30:	48 89 3a             	mov    %rdi,(%rdx)
   1fe33:	48 8b 07             	mov    (%rdi),%rax
   1fe36:	48 83 c7 08          	add    $0x8,%rdi
   1fe3a:	48 89 3a             	mov    %rdi,(%rdx)
   1fe3d:	49 89 01             	mov    %rax,(%r9)
   1fe40:	31 c0                	xor    %eax,%eax
   1fe42:	c3                   	ret    
   1fe43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1fe48:	48 8b 36             	mov    (%rsi),%rsi
   1fe4b:	e9 f3 fe ff ff       	jmp    1fd43 <_ULx86_64_dwarf_read_encoded_pointer+0x73>
   1fe50:	49 03 70 20          	add    0x20(%r8),%rsi
   1fe54:	e9 e2 fe ff ff       	jmp    1fd3b <_ULx86_64_dwarf_read_encoded_pointer+0x6b>
   1fe59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1fe60:	49 c7 01 00 00 00 00 	movq   $0x0,(%r9)
   1fe67:	31 c0                	xor    %eax,%eax
   1fe69:	c3                   	ret    
   1fe6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1fe70:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1fe75:	c3                   	ret    
   1fe76:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1fe7d:	00 00 00 

000000000001fe80 <_Ux86_64_dwarf_init>:
   1fe80:	f3 0f 1e fa          	endbr64 
   1fe84:	48 83 ec 08          	sub    $0x8,%rsp
   1fe88:	31 d2                	xor    %edx,%edx
   1fe8a:	be c0 00 00 00       	mov    $0xc0,%esi
   1fe8f:	48 8d 3d ea 22 03 00 	lea    0x322ea(%rip),%rdi        # 52180 <dwarf_reg_state_pool>
   1fe96:	e8 65 1a 00 00       	call   21900 <_UIx86_64__mempool_init>
   1fe9b:	31 d2                	xor    %edx,%edx
   1fe9d:	be 48 00 00 00       	mov    $0x48,%esi
   1fea2:	48 8d 3d 97 22 03 00 	lea    0x32297(%rip),%rdi        # 52140 <dwarf_cie_info_pool>
   1fea9:	e8 52 1a 00 00       	call   21900 <_UIx86_64__mempool_init>
   1feae:	31 c0                	xor    %eax,%eax
   1feb0:	48 83 c4 08          	add    $0x8,%rsp
   1feb4:	c3                   	ret    
   1feb5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1febc:	00 00 00 
   1febf:	90                   	nop

000000000001fec0 <_ZL5traceP15_Unwind_ContextPv>:
   1fec0:	f3 0f 1e fa          	endbr64 
   1fec4:	b8 08 00 00 00       	mov    $0x8,%eax
   1fec9:	c3                   	ret    
   1feca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001fed0 <_ZL14free_exceptionPc>:
   1fed0:	48 8d 05 89 39 02 00 	lea    0x23989(%rip),%rax        # 43860 <_ZL16emergency_buffer>
   1fed7:	48 39 c7             	cmp    %rax,%rdi
   1feda:	72 0c                	jb     1fee8 <_ZL14free_exceptionPc+0x18>
   1fedc:	48 8d 90 00 40 00 00 	lea    0x4000(%rax),%rdx
   1fee3:	48 39 d7             	cmp    %rdx,%rdi
   1fee6:	72 08                	jb     1fef0 <_ZL14free_exceptionPc+0x20>
   1fee8:	e9 b3 25 ff ff       	jmp    124a0 <dlfree>
   1feed:	0f 1f 00             	nopl   (%rax)
   1fef0:	53                   	push   %rbx
   1fef1:	31 db                	xor    %ebx,%ebx
   1fef3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1fef8:	48 39 c7             	cmp    %rax,%rdi
   1fefb:	74 33                	je     1ff30 <_ZL14free_exceptionPc+0x60>
   1fefd:	83 c3 01             	add    $0x1,%ebx
   1ff00:	48 05 00 04 00 00    	add    $0x400,%rax
   1ff06:	83 fb 10             	cmp    $0x10,%ebx
   1ff09:	75 ed                	jne    1fef8 <_ZL14free_exceptionPc+0x28>
   1ff0b:	ba 00 04 00 00       	mov    $0x400,%edx
   1ff10:	31 f6                	xor    %esi,%esi
   1ff12:	e8 f9 3a ff ff       	call   13a10 <memset>
   1ff17:	48 8d 3d 2a 39 02 00 	lea    0x2392a(%rip),%rdi        # 43848 <_ZL21emergency_malloc_lock>
   1ff1e:	e8 4d 01 ff ff       	call   10070 <sgx_spin_lock>
   1ff23:	48 8d 3d 1e 39 02 00 	lea    0x2391e(%rip),%rdi        # 43848 <_ZL21emergency_malloc_lock>
   1ff2a:	5b                   	pop    %rbx
   1ff2b:	e9 e0 01 ff ff       	jmp    10110 <sgx_spin_unlock>
   1ff30:	ba 00 04 00 00       	mov    $0x400,%edx
   1ff35:	31 f6                	xor    %esi,%esi
   1ff37:	48 63 db             	movslq %ebx,%rbx
   1ff3a:	e8 d1 3a ff ff       	call   13a10 <memset>
   1ff3f:	48 8d 3d 02 39 02 00 	lea    0x23902(%rip),%rdi        # 43848 <_ZL21emergency_malloc_lock>
   1ff46:	e8 25 01 ff ff       	call   10070 <sgx_spin_lock>
   1ff4b:	48 8d 05 fe 38 02 00 	lea    0x238fe(%rip),%rax        # 43850 <_ZL16buffer_allocated>
   1ff52:	48 8d 3d ef 38 02 00 	lea    0x238ef(%rip),%rdi        # 43848 <_ZL21emergency_malloc_lock>
   1ff59:	c6 05 d8 21 01 00 01 	movb   $0x1,0x121d8(%rip)        # 32138 <_ZL16buffer_available>
   1ff60:	c6 04 18 00          	movb   $0x0,(%rax,%rbx,1)
   1ff64:	5b                   	pop    %rbx
   1ff65:	e9 a6 01 ff ff       	jmp    10110 <sgx_spin_unlock>
   1ff6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001ff70 <_ZL10read_valuecPPh>:
   1ff70:	83 e7 0f             	and    $0xf,%edi
   1ff73:	40 80 ff 0c          	cmp    $0xc,%dil
   1ff77:	0f 87 25 01 00 00    	ja     200a2 <_ZL10read_valuecPPh+0x132>
   1ff7d:	48 8d 15 e0 73 00 00 	lea    0x73e0(%rip),%rdx        # 27364 <__bigtens_D2A+0x484>
   1ff84:	40 0f b6 ff          	movzbl %dil,%edi
   1ff88:	48 63 04 ba          	movslq (%rdx,%rdi,4),%rax
   1ff8c:	48 01 d0             	add    %rdx,%rax
   1ff8f:	3e ff e0             	notrack jmp *%rax
   1ff92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1ff98:	48 8b 06             	mov    (%rsi),%rax
   1ff9b:	4c 8b 00             	mov    (%rax),%r8
   1ff9e:	48 83 c0 08          	add    $0x8,%rax
   1ffa2:	48 89 06             	mov    %rax,(%rsi)
   1ffa5:	4c 89 c0             	mov    %r8,%rax
   1ffa8:	c3                   	ret    
   1ffa9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1ffb0:	48 8b 16             	mov    (%rsi),%rdx
   1ffb3:	31 c9                	xor    %ecx,%ecx
   1ffb5:	45 31 c0             	xor    %r8d,%r8d
   1ffb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1ffbf:	00 
   1ffc0:	0f b6 02             	movzbl (%rdx),%eax
   1ffc3:	48 83 c2 01          	add    $0x1,%rdx
   1ffc7:	48 89 16             	mov    %rdx,(%rsi)
   1ffca:	89 c7                	mov    %eax,%edi
   1ffcc:	83 e0 7f             	and    $0x7f,%eax
   1ffcf:	d3 e0                	shl    %cl,%eax
   1ffd1:	83 e7 7f             	and    $0x7f,%edi
   1ffd4:	83 c1 07             	add    $0x7,%ecx
   1ffd7:	48 98                	cltq   
   1ffd9:	49 01 c0             	add    %rax,%r8
   1ffdc:	40 3a 7a ff          	cmp    -0x1(%rdx),%dil
   1ffe0:	75 de                	jne    1ffc0 <_ZL10read_valuecPPh+0x50>
   1ffe2:	4c 89 c0             	mov    %r8,%rax
   1ffe5:	c3                   	ret    
   1ffe6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1ffed:	00 00 00 
   1fff0:	48 8b 06             	mov    (%rsi),%rax
   1fff3:	44 0f b7 00          	movzwl (%rax),%r8d
   1fff7:	48 83 c0 02          	add    $0x2,%rax
   1fffb:	48 89 06             	mov    %rax,(%rsi)
   1fffe:	4c 89 c0             	mov    %r8,%rax
   20001:	c3                   	ret    
   20002:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   20008:	48 8b 06             	mov    (%rsi),%rax
   2000b:	44 8b 00             	mov    (%rax),%r8d
   2000e:	48 83 c0 04          	add    $0x4,%rax
   20012:	48 89 06             	mov    %rax,(%rsi)
   20015:	4c 89 c0             	mov    %r8,%rax
   20018:	c3                   	ret    
   20019:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   20020:	48 8b 06             	mov    (%rsi),%rax
   20023:	4c 63 00             	movslq (%rax),%r8
   20026:	48 83 c0 04          	add    $0x4,%rax
   2002a:	48 89 06             	mov    %rax,(%rsi)
   2002d:	4c 89 c0             	mov    %r8,%rax
   20030:	c3                   	ret    
   20031:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   20038:	48 8b 16             	mov    (%rsi),%rdx
   2003b:	31 ff                	xor    %edi,%edi
   2003d:	45 31 c0             	xor    %r8d,%r8d
   20040:	0f b6 02             	movzbl (%rdx),%eax
   20043:	89 f9                	mov    %edi,%ecx
   20045:	48 83 c2 01          	add    $0x1,%rdx
   20049:	48 89 16             	mov    %rdx,(%rsi)
   2004c:	41 89 c1             	mov    %eax,%r9d
   2004f:	83 e0 7f             	and    $0x7f,%eax
   20052:	d3 e0                	shl    %cl,%eax
   20054:	41 83 e1 7f          	and    $0x7f,%r9d
   20058:	89 f9                	mov    %edi,%ecx
   2005a:	83 c7 07             	add    $0x7,%edi
   2005d:	48 98                	cltq   
   2005f:	49 01 c0             	add    %rax,%r8
   20062:	44 3a 4a ff          	cmp    -0x1(%rdx),%r9b
   20066:	75 d8                	jne    20040 <_ZL10read_valuecPPh+0xd0>
   20068:	83 c1 06             	add    $0x6,%ecx
   2006b:	4c 89 c0             	mov    %r8,%rax
   2006e:	48 d3 e8             	shr    %cl,%rax
   20071:	48 83 f8 01          	cmp    $0x1,%rax
   20075:	0f 85 2a ff ff ff    	jne    1ffa5 <_ZL10read_valuecPPh+0x35>
   2007b:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   20082:	89 f9                	mov    %edi,%ecx
   20084:	48 d3 e0             	shl    %cl,%rax
   20087:	49 09 c0             	or     %rax,%r8
   2008a:	e9 16 ff ff ff       	jmp    1ffa5 <_ZL10read_valuecPPh+0x35>
   2008f:	90                   	nop
   20090:	48 8b 06             	mov    (%rsi),%rax
   20093:	4c 0f bf 00          	movswq (%rax),%r8
   20097:	48 83 c0 02          	add    $0x2,%rax
   2009b:	48 89 06             	mov    %rax,(%rsi)
   2009e:	4c 89 c0             	mov    %r8,%rax
   200a1:	c3                   	ret    
   200a2:	50                   	push   %rax
   200a3:	e8 8f 5c 00 00       	call   25d37 <abort>
   200a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   200af:	00 

00000000000200b0 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh>:
   200b0:	41 54                	push   %r12
   200b2:	89 f0                	mov    %esi,%eax
   200b4:	49 89 d4             	mov    %rdx,%r12
   200b7:	53                   	push   %rbx
   200b8:	83 e0 70             	and    $0x70,%eax
   200bb:	89 f3                	mov    %esi,%ebx
   200bd:	48 83 ec 08          	sub    $0x8,%rsp
   200c1:	3c 30                	cmp    $0x30,%al
   200c3:	74 53                	je     20118 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x68>
   200c5:	77 31                	ja     200f8 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x48>
   200c7:	3c 10                	cmp    $0x10,%al
   200c9:	74 45                	je     20110 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x60>
   200cb:	3c 20                	cmp    $0x20,%al
   200cd:	75 11                	jne    200e0 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x30>
   200cf:	e8 9c 1e 00 00       	call   21f70 <_Unwind_GetTextRelBase>
   200d4:	49 01 c4             	add    %rax,%r12
   200d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   200de:	00 00 
   200e0:	84 db                	test   %bl,%bl
   200e2:	79 04                	jns    200e8 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x38>
   200e4:	4d 8b 24 24          	mov    (%r12),%r12
   200e8:	48 83 c4 08          	add    $0x8,%rsp
   200ec:	4c 89 e0             	mov    %r12,%rax
   200ef:	5b                   	pop    %rbx
   200f0:	41 5c                	pop    %r12
   200f2:	c3                   	ret    
   200f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   200f8:	3c 40                	cmp    $0x40,%al
   200fa:	75 e4                	jne    200e0 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x30>
   200fc:	e8 1f 1e 00 00       	call   21f20 <_Unwind_GetRegionStart>
   20101:	49 01 c4             	add    %rax,%r12
   20104:	eb da                	jmp    200e0 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x30>
   20106:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2010d:	00 00 00 
   20110:	49 01 cc             	add    %rcx,%r12
   20113:	eb cb                	jmp    200e0 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x30>
   20115:	0f 1f 00             	nopl   (%rax)
   20118:	e8 13 1d 00 00       	call   21e30 <_Unwind_GetDataRelBase>
   2011d:	49 01 c4             	add    %rax,%r12
   20120:	eb be                	jmp    200e0 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh+0x30>
   20122:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   20129:	00 00 00 
   2012c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000020130 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv>:
   20130:	41 54                	push   %r12
   20132:	55                   	push   %rbp
   20133:	48 89 f5             	mov    %rsi,%rbp
   20136:	53                   	push   %rbx
   20137:	48 83 ec 10          	sub    $0x10,%rsp
   2013b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   20142:	00 00 
   20144:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   20149:	31 c0                	xor    %eax,%eax
   2014b:	48 8d 87 80 00 00 00 	lea    0x80(%rdi),%rax
   20152:	48 89 04 24          	mov    %rax,(%rsp)
   20156:	48 85 ff             	test   %rdi,%rdi
   20159:	0f 84 91 00 00 00    	je     201f0 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0xc0>
   2015f:	4c 8b 67 08          	mov    0x8(%rdi),%r12
   20163:	48 89 d3             	mov    %rdx,%rbx
   20166:	49 8b 04 24          	mov    (%r12),%rax
   2016a:	4c 89 e7             	mov    %r12,%rdi
   2016d:	ff 50 10             	call   *0x10(%rax)
   20170:	84 c0                	test   %al,%al
   20172:	75 4c                	jne    201c0 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0x90>
   20174:	48 85 ed             	test   %rbp,%rbp
   20177:	0f 84 80 00 00 00    	je     201fd <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0xcd>
   2017d:	4c 89 e6             	mov    %r12,%rsi
   20180:	48 89 ef             	mov    %rbp,%rdi
   20183:	e8 08 10 00 00       	call   21190 <_ZNKSt9type_infoeqERKS_>
   20188:	84 c0                	test   %al,%al
   2018a:	75 54                	jne    201e0 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0xb0>
   2018c:	48 8b 45 00          	mov    0x0(%rbp),%rax
   20190:	48 89 e2             	mov    %rsp,%rdx
   20193:	b9 01 00 00 00       	mov    $0x1,%ecx
   20198:	4c 89 e6             	mov    %r12,%rsi
   2019b:	48 89 ef             	mov    %rbp,%rdi
   2019e:	ff 50 20             	call   *0x20(%rax)
   201a1:	84 c0                	test   %al,%al
   201a3:	75 3b                	jne    201e0 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0xb0>
   201a5:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   201aa:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   201b1:	00 00 
   201b3:	75 43                	jne    201f8 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0xc8>
   201b5:	48 83 c4 10          	add    $0x10,%rsp
   201b9:	5b                   	pop    %rbx
   201ba:	5d                   	pop    %rbp
   201bb:	41 5c                	pop    %r12
   201bd:	c3                   	ret    
   201be:	66 90                	xchg   %ax,%ax
   201c0:	48 8b 04 24          	mov    (%rsp),%rax
   201c4:	48 8b 00             	mov    (%rax),%rax
   201c7:	48 89 04 24          	mov    %rax,(%rsp)
   201cb:	48 85 ed             	test   %rbp,%rbp
   201ce:	75 ad                	jne    2017d <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0x4d>
   201d0:	48 89 03             	mov    %rax,(%rbx)
   201d3:	b8 01 00 00 00       	mov    $0x1,%eax
   201d8:	eb cb                	jmp    201a5 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0x75>
   201da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   201e0:	48 8b 14 24          	mov    (%rsp),%rdx
   201e4:	48 89 13             	mov    %rdx,(%rbx)
   201e7:	eb bc                	jmp    201a5 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0x75>
   201e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   201f0:	48 85 f6             	test   %rsi,%rsi
   201f3:	0f 94 c0             	sete   %al
   201f6:	eb ad                	jmp    201a5 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0x75>
   201f8:	e8 43 39 ff ff       	call   13b40 <__stack_chk_fail>
   201fd:	48 8b 04 24          	mov    (%rsp),%rax
   20201:	eb cd                	jmp    201d0 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv+0xa0>
   20203:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2020a:	00 00 00 
   2020d:	0f 1f 00             	nopl   (%rax)

0000000000020210 <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai.isra.0>:
   20210:	41 54                	push   %r12
   20212:	55                   	push   %rbp
   20213:	48 89 fd             	mov    %rdi,%rbp
   20216:	53                   	push   %rbx
   20217:	48 83 ec 10          	sub    $0x10,%rsp
   2021b:	0f be 3a             	movsbl (%rdx),%edi
   2021e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   20225:	00 00 
   20227:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   2022c:	31 c0                	xor    %eax,%eax
   2022e:	89 f8                	mov    %edi,%eax
   20230:	83 e0 0f             	and    $0xf,%eax
   20233:	3c 0c                	cmp    $0xc,%al
   20235:	0f 87 7c 00 00 00    	ja     202b7 <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai.isra.0+0xa7>
   2023b:	48 89 d3             	mov    %rdx,%rbx
   2023e:	0f b6 c0             	movzbl %al,%eax
   20241:	48 8d 15 50 71 00 00 	lea    0x7150(%rip),%rdx        # 27398 <__bigtens_D2A+0x4b8>
   20248:	49 89 f4             	mov    %rsi,%r12
   2024b:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
   2024f:	48 01 d0             	add    %rdx,%rax
   20252:	3e ff e0             	notrack jmp *%rax
   20255:	0f 1f 00             	nopl   (%rax)
   20258:	b8 08 00 00 00       	mov    $0x8,%eax
   2025d:	0f af c8             	imul   %eax,%ecx
   20260:	48 89 e6             	mov    %rsp,%rsi
   20263:	48 63 c9             	movslq %ecx,%rcx
   20266:	49 29 cc             	sub    %rcx,%r12
   20269:	4c 89 24 24          	mov    %r12,(%rsp)
   2026d:	e8 fe fc ff ff       	call   1ff70 <_ZL10read_valuecPPh>
   20272:	48 89 c2             	mov    %rax,%rdx
   20275:	31 c0                	xor    %eax,%eax
   20277:	48 85 d2             	test   %rdx,%rdx
   2027a:	74 0e                	je     2028a <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai.isra.0+0x7a>
   2027c:	0f b6 33             	movzbl (%rbx),%esi
   2027f:	4c 89 e1             	mov    %r12,%rcx
   20282:	48 89 ef             	mov    %rbp,%rdi
   20285:	e8 26 fe ff ff       	call   200b0 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh>
   2028a:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   2028f:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   20296:	00 00 
   20298:	75 22                	jne    202bc <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai.isra.0+0xac>
   2029a:	48 83 c4 10          	add    $0x10,%rsp
   2029e:	5b                   	pop    %rbx
   2029f:	5d                   	pop    %rbp
   202a0:	41 5c                	pop    %r12
   202a2:	c3                   	ret    
   202a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   202a8:	b8 02 00 00 00       	mov    $0x2,%eax
   202ad:	eb ae                	jmp    2025d <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai.isra.0+0x4d>
   202af:	90                   	nop
   202b0:	b8 04 00 00 00       	mov    $0x4,%eax
   202b5:	eb a6                	jmp    2025d <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai.isra.0+0x4d>
   202b7:	e8 7b 5a 00 00       	call   25d37 <abort>
   202bc:	e8 7f 38 ff ff       	call   13b40 <__stack_chk_fail>
   202c1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   202c8:	00 00 00 
   202cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000202d0 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0>:
   202d0:	41 57                	push   %r15
   202d2:	49 89 cf             	mov    %rcx,%r15
   202d5:	41 56                	push   %r14
   202d7:	41 55                	push   %r13
   202d9:	41 54                	push   %r12
   202db:	49 89 fc             	mov    %rdi,%r12
   202de:	55                   	push   %rbp
   202df:	48 89 f5             	mov    %rsi,%rbp
   202e2:	53                   	push   %rbx
   202e3:	48 83 ec 28          	sub    $0x28,%rsp
   202e7:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   202ec:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
   202f1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   202f8:	00 00 
   202fa:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   202ff:	31 c0                	xor    %eax,%eax
   20301:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
   20308:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
   2030f:	e8 6c 1b 00 00       	call   21e80 <_Unwind_GetIP>
   20314:	4c 89 e7             	mov    %r12,%rdi
   20317:	49 89 c6             	mov    %rax,%r14
   2031a:	e8 01 1c 00 00       	call   21f20 <_Unwind_GetRegionStart>
   2031f:	49 29 c6             	sub    %rax,%r14
   20322:	48 8b 45 20          	mov    0x20(%rbp),%rax
   20326:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   2032b:	48 3b 45 28          	cmp    0x28(%rbp),%rax
   2032f:	77 79                	ja     203aa <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0xda>
   20331:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   20338:	0f be 7d 30          	movsbl 0x30(%rbp),%edi
   2033c:	4c 89 ee             	mov    %r13,%rsi
   2033f:	e8 2c fc ff ff       	call   1ff70 <_ZL10read_valuecPPh>
   20344:	0f be 7d 30          	movsbl 0x30(%rbp),%edi
   20348:	4c 89 ee             	mov    %r13,%rsi
   2034b:	48 89 c3             	mov    %rax,%rbx
   2034e:	e8 1d fc ff ff       	call   1ff70 <_ZL10read_valuecPPh>
   20353:	49 89 c4             	mov    %rax,%r12
   20356:	49 39 de             	cmp    %rbx,%r14
   20359:	72 4f                	jb     203aa <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0xda>
   2035b:	0f be 7d 30          	movsbl 0x30(%rbp),%edi
   2035f:	4c 89 ee             	mov    %r13,%rsi
   20362:	e8 09 fc ff ff       	call   1ff70 <_ZL10read_valuecPPh>
   20367:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   2036c:	31 c9                	xor    %ecx,%ecx
   2036e:	31 ff                	xor    %edi,%edi
   20370:	0f b6 16             	movzbl (%rsi),%edx
   20373:	48 83 c6 01          	add    $0x1,%rsi
   20377:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   2037c:	41 89 d0             	mov    %edx,%r8d
   2037f:	83 e2 7f             	and    $0x7f,%edx
   20382:	d3 e2                	shl    %cl,%edx
   20384:	41 83 e0 7f          	and    $0x7f,%r8d
   20388:	83 c1 07             	add    $0x7,%ecx
   2038b:	48 63 d2             	movslq %edx,%rdx
   2038e:	48 01 d7             	add    %rdx,%rdi
   20391:	44 3a 46 ff          	cmp    -0x1(%rsi),%r8b
   20395:	75 d9                	jne    20370 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0xa0>
   20397:	49 39 de             	cmp    %rbx,%r14
   2039a:	76 08                	jbe    203a4 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0xd4>
   2039c:	4c 01 e3             	add    %r12,%rbx
   2039f:	49 39 de             	cmp    %rbx,%r14
   203a2:	76 2b                	jbe    203cf <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0xff>
   203a4:	48 39 75 28          	cmp    %rsi,0x28(%rbp)
   203a8:	73 8e                	jae    20338 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0x68>
   203aa:	45 31 c0             	xor    %r8d,%r8d
   203ad:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   203b2:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   203b9:	00 00 
   203bb:	75 3c                	jne    203f9 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0x129>
   203bd:	48 83 c4 28          	add    $0x28,%rsp
   203c1:	44 89 c0             	mov    %r8d,%eax
   203c4:	5b                   	pop    %rbx
   203c5:	5d                   	pop    %rbp
   203c6:	41 5c                	pop    %r12
   203c8:	41 5d                	pop    %r13
   203ca:	41 5e                	pop    %r14
   203cc:	41 5f                	pop    %r15
   203ce:	c3                   	ret    
   203cf:	48 85 ff             	test   %rdi,%rdi
   203d2:	74 0c                	je     203e0 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0x110>
   203d4:	48 8b 55 28          	mov    0x28(%rbp),%rdx
   203d8:	48 8d 54 3a ff       	lea    -0x1(%rdx,%rdi,1),%rdx
   203dd:	49 89 17             	mov    %rdx,(%r15)
   203e0:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   203e6:	48 85 c0             	test   %rax,%rax
   203e9:	74 c2                	je     203ad <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0xdd>
   203eb:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   203f0:	48 03 45 08          	add    0x8(%rbp),%rax
   203f4:	48 89 03             	mov    %rax,(%rbx)
   203f7:	eb b4                	jmp    203ad <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0+0xdd>
   203f9:	e8 42 37 ff ff       	call   13b40 <__stack_chk_fail>
   203fe:	66 90                	xchg   %ax,%ax

0000000000020400 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0>:
   20400:	41 57                	push   %r15
   20402:	41 56                	push   %r14
   20404:	41 55                	push   %r13
   20406:	41 54                	push   %r12
   20408:	55                   	push   %rbp
   20409:	53                   	push   %rbx
   2040a:	48 83 ec 28          	sub    $0x28,%rsp
   2040e:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
   20413:	48 85 d2             	test   %rdx,%rdx
   20416:	0f 84 f0 01 00 00    	je     2060c <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x20c>
   2041c:	48 85 c9             	test   %rcx,%rcx
   2041f:	48 89 fd             	mov    %rdi,%rbp
   20422:	49 89 f7             	mov    %rsi,%r15
   20425:	49 89 d5             	mov    %rdx,%r13
   20428:	48 89 cb             	mov    %rcx,%rbx
   2042b:	4d 89 cc             	mov    %r9,%r12
   2042e:	4c 8d 76 18          	lea    0x18(%rsi),%r14
   20432:	0f 95 44 24 0b       	setne  0xb(%rsp)
   20437:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
   2043e:	00 
   2043f:	90                   	nop
   20440:	31 d2                	xor    %edx,%edx
   20442:	45 31 c0             	xor    %r8d,%r8d
   20445:	89 d1                	mov    %edx,%ecx
   20447:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2044e:	00 00 
   20450:	41 0f b6 55 00       	movzbl 0x0(%r13),%edx
   20455:	49 83 c5 01          	add    $0x1,%r13
   20459:	89 d0                	mov    %edx,%eax
   2045b:	83 e0 7f             	and    $0x7f,%eax
   2045e:	d3 e0                	shl    %cl,%eax
   20460:	48 98                	cltq   
   20462:	49 01 c0             	add    %rax,%r8
   20465:	89 c8                	mov    %ecx,%eax
   20467:	83 c1 07             	add    $0x7,%ecx
   2046a:	84 d2                	test   %dl,%dl
   2046c:	78 e2                	js     20450 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x50>
   2046e:	89 ca                	mov    %ecx,%edx
   20470:	89 c1                	mov    %eax,%ecx
   20472:	4c 89 c6             	mov    %r8,%rsi
   20475:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   2047c:	83 c1 06             	add    $0x6,%ecx
   2047f:	4c 89 c7             	mov    %r8,%rdi
   20482:	48 d3 ee             	shr    %cl,%rsi
   20485:	89 d1                	mov    %edx,%ecx
   20487:	48 d3 e0             	shl    %cl,%rax
   2048a:	49 09 c0             	or     %rax,%r8
   2048d:	48 83 fe 01          	cmp    $0x1,%rsi
   20491:	4c 89 ee             	mov    %r13,%rsi
   20494:	4c 0f 45 c7          	cmovne %rdi,%r8
   20498:	31 d2                	xor    %edx,%edx
   2049a:	45 31 db             	xor    %r11d,%r11d
   2049d:	89 d1                	mov    %edx,%ecx
   2049f:	90                   	nop
   204a0:	0f b6 16             	movzbl (%rsi),%edx
   204a3:	48 83 c6 01          	add    $0x1,%rsi
   204a7:	89 d0                	mov    %edx,%eax
   204a9:	83 e0 7f             	and    $0x7f,%eax
   204ac:	d3 e0                	shl    %cl,%eax
   204ae:	48 98                	cltq   
   204b0:	49 01 c3             	add    %rax,%r11
   204b3:	89 c8                	mov    %ecx,%eax
   204b5:	83 c1 07             	add    $0x7,%ecx
   204b8:	84 d2                	test   %dl,%dl
   204ba:	78 e4                	js     204a0 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0xa0>
   204bc:	89 ca                	mov    %ecx,%edx
   204be:	89 c1                	mov    %eax,%ecx
   204c0:	4c 89 d8             	mov    %r11,%rax
   204c3:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   204ca:	83 c1 06             	add    $0x6,%ecx
   204cd:	4c 89 de             	mov    %r11,%rsi
   204d0:	48 d3 e8             	shr    %cl,%rax
   204d3:	89 d1                	mov    %edx,%ecx
   204d5:	48 d3 e7             	shl    %cl,%rdi
   204d8:	49 09 fb             	or     %rdi,%r11
   204db:	48 83 f8 01          	cmp    $0x1,%rax
   204df:	4c 0f 45 de          	cmovne %rsi,%r11
   204e3:	49 63 c3             	movslq %r11d,%rax
   204e6:	45 85 db             	test   %r11d,%r11d
   204e9:	4d 8d 4c 05 00       	lea    0x0(%r13,%rax,1),%r9
   204ee:	41 bd 00 00 00 00    	mov    $0x0,%r13d
   204f4:	4d 0f 45 e9          	cmovne %r9,%r13
   204f8:	45 85 c0             	test   %r8d,%r8d
   204fb:	7e 5b                	jle    20558 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x158>
   204fd:	80 7c 24 0b 00       	cmpb   $0x0,0xb(%rsp)
   20502:	74 54                	je     20558 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x158>
   20504:	49 8b 77 10          	mov    0x10(%r15),%rsi
   20508:	44 89 c1             	mov    %r8d,%ecx
   2050b:	4c 89 f2             	mov    %r14,%rdx
   2050e:	48 89 ef             	mov    %rbp,%rdi
   20511:	44 89 44 24 10       	mov    %r8d,0x10(%rsp)
   20516:	e8 f5 fc ff ff       	call   20210 <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai.isra.0>
   2051b:	4c 89 e2             	mov    %r12,%rdx
   2051e:	48 89 df             	mov    %rbx,%rdi
   20521:	48 89 c6             	mov    %rax,%rsi
   20524:	e8 07 fc ff ff       	call   20130 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv>
   20529:	4c 63 44 24 10       	movslq 0x10(%rsp),%r8
   2052e:	84 c0                	test   %al,%al
   20530:	0f 85 c1 00 00 00    	jne    205f7 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x1f7>
   20536:	4d 85 ed             	test   %r13,%r13
   20539:	0f 85 01 ff ff ff    	jne    20440 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x40>
   2053f:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   20543:	48 83 c4 28          	add    $0x28,%rsp
   20547:	5b                   	pop    %rbx
   20548:	5d                   	pop    %rbp
   20549:	41 5c                	pop    %r12
   2054b:	41 5d                	pop    %r13
   2054d:	41 5e                	pop    %r14
   2054f:	41 5f                	pop    %r15
   20551:	c3                   	ret    
   20552:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   20558:	45 85 c0             	test   %r8d,%r8d
   2055b:	79 07                	jns    20564 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x164>
   2055d:	80 7c 24 0b 00       	cmpb   $0x0,0xb(%rsp)
   20562:	75 1c                	jne    20580 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x180>
   20564:	45 85 c0             	test   %r8d,%r8d
   20567:	75 cd                	jne    20536 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x136>
   20569:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   2056e:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%rsp)
   20575:	00 
   20576:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   2057d:	eb b7                	jmp    20536 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x136>
   2057f:	90                   	nop
   20580:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   20584:	4d 63 c0             	movslq %r8d,%r8
   20587:	85 c0                	test   %eax,%eax
   20589:	75 08                	jne    20593 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x193>
   2058b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   20590:	4c 89 00             	mov    %r8,(%rax)
   20593:	49 f7 d0             	not    %r8
   20596:	4d 03 47 10          	add    0x10(%r15),%r8
   2059a:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   2059f:	4d 89 fd             	mov    %r15,%r13
   205a2:	4d 89 c7             	mov    %r8,%r15
   205a5:	eb 2e                	jmp    205d5 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x1d5>
   205a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   205ae:	00 00 
   205b0:	49 8b 75 10          	mov    0x10(%r13),%rsi
   205b4:	4c 89 f2             	mov    %r14,%rdx
   205b7:	48 89 ef             	mov    %rbp,%rdi
   205ba:	49 83 c7 01          	add    $0x1,%r15
   205be:	e8 4d fc ff ff       	call   20210 <_ZL19get_type_info_entryP15_Unwind_ContextP13dwarf_eh_lsdai.isra.0>
   205c3:	4c 89 e2             	mov    %r12,%rdx
   205c6:	48 89 df             	mov    %rbx,%rdi
   205c9:	48 89 c6             	mov    %rax,%rsi
   205cc:	e8 5f fb ff ff       	call   20130 <_ZL20check_type_signaturePN10__cxxabiv115__cxa_exceptionEPKSt9type_infoRPv>
   205d1:	84 c0                	test   %al,%al
   205d3:	75 15                	jne    205ea <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x1ea>
   205d5:	41 0f b6 0f          	movzbl (%r15),%ecx
   205d9:	84 c9                	test   %cl,%cl
   205db:	75 d3                	jne    205b0 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x1b0>
   205dd:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%rsp)
   205e4:	00 
   205e5:	e9 55 ff ff ff       	jmp    2053f <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x13f>
   205ea:	4d 89 ef             	mov    %r13,%r15
   205ed:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
   205f2:	e9 3f ff ff ff       	jmp    20536 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x136>
   205f7:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   205fc:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%rsp)
   20603:	00 
   20604:	4c 89 00             	mov    %r8,(%rax)
   20607:	e9 33 ff ff ff       	jmp    2053f <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x13f>
   2060c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
   20613:	00 
   20614:	e9 26 ff ff ff       	jmp    2053f <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0+0x13f>
   20619:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000020620 <__cxa_begin_catch>:
   20620:	f3 0f 1e fa          	endbr64 
   20624:	53                   	push   %rbx
   20625:	48 89 fb             	mov    %rdi,%rbx
   20628:	e8 16 53 00 00       	call   25943 <get_thread_data>
   2062d:	4c 8d 43 20          	lea    0x20(%rbx),%r8
   20631:	48 ba 00 d5 d4 bc bc 	movabs $0xb8b1aabcbcd4d500,%rdx
   20638:	aa b1 b8 
   2063b:	48 03 13             	add    (%rbx),%rdx
   2063e:	83 a8 a8 00 00 00 01 	subl   $0x1,0xa8(%rax)
   20645:	48 83 fa 01          	cmp    $0x1,%rdx
   20649:	76 05                	jbe    20650 <__cxa_begin_catch+0x30>
   2064b:	4c 89 c0             	mov    %r8,%rax
   2064e:	5b                   	pop    %rbx
   2064f:	c3                   	ret    
   20650:	8b 53 d0             	mov    -0x30(%rbx),%edx
   20653:	85 d2                	test   %edx,%edx
   20655:	74 19                	je     20670 <__cxa_begin_catch+0x50>
   20657:	79 2d                	jns    20686 <__cxa_begin_catch+0x66>
   20659:	b8 01 00 00 00       	mov    $0x1,%eax
   2065e:	29 d0                	sub    %edx,%eax
   20660:	89 c2                	mov    %eax,%edx
   20662:	4c 8b 43 f0          	mov    -0x10(%rbx),%r8
   20666:	89 53 d0             	mov    %edx,-0x30(%rbx)
   20669:	5b                   	pop    %rbx
   2066a:	4c 89 c0             	mov    %r8,%rax
   2066d:	c3                   	ret    
   2066e:	66 90                	xchg   %ax,%ax
   20670:	48 8b 88 a0 00 00 00 	mov    0xa0(%rax),%rcx
   20677:	48 89 4b c8          	mov    %rcx,-0x38(%rbx)
   2067b:	48 8d 4b a0          	lea    -0x60(%rbx),%rcx
   2067f:	48 89 88 a0 00 00 00 	mov    %rcx,0xa0(%rax)
   20686:	83 c2 01             	add    $0x1,%edx
   20689:	eb d7                	jmp    20662 <__cxa_begin_catch+0x42>
   2068b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000020690 <__cxa_end_catch>:
   20690:	f3 0f 1e fa          	endbr64 
   20694:	48 83 ec 08          	sub    $0x8,%rsp
   20698:	e8 a6 52 00 00       	call   25943 <get_thread_data>
   2069d:	48 8b b8 a0 00 00 00 	mov    0xa0(%rax),%rdi
   206a4:	8b 57 30             	mov    0x30(%rdi),%edx
   206a7:	85 d2                	test   %edx,%edx
   206a9:	78 25                	js     206d0 <__cxa_end_catch+0x40>
   206ab:	83 ea 01             	sub    $0x1,%edx
   206ae:	89 57 30             	mov    %edx,0x30(%rdi)
   206b1:	75 30                	jne    206e3 <__cxa_end_catch+0x53>
   206b3:	48 8b 57 28          	mov    0x28(%rdi),%rdx
   206b7:	48 89 90 a0 00 00 00 	mov    %rdx,0xa0(%rax)
   206be:	48 83 c4 08          	add    $0x8,%rsp
   206c2:	e9 d9 08 00 00       	jmp    20fa0 <_ZL16releaseExceptionPN10__cxxabiv115__cxa_exceptionE>
   206c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   206ce:	00 00 
   206d0:	83 c2 01             	add    $0x1,%edx
   206d3:	89 57 30             	mov    %edx,0x30(%rdi)
   206d6:	75 0b                	jne    206e3 <__cxa_end_catch+0x53>
   206d8:	48 8b 57 28          	mov    0x28(%rdi),%rdx
   206dc:	48 89 90 a0 00 00 00 	mov    %rdx,0xa0(%rax)
   206e3:	48 83 c4 08          	add    $0x8,%rsp
   206e7:	c3                   	ret    
   206e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   206ef:	00 

00000000000206f0 <_ZSt9terminatev>:
   206f0:	f3 0f 1e fa          	endbr64 
   206f4:	55                   	push   %rbp
   206f5:	0f b6 05 3c 31 02 00 	movzbl 0x2313c(%rip),%eax        # 43838 <_ZGVZSt9terminatevE4info>
   206fc:	84 c0                	test   %al,%al
   206fe:	74 26                	je     20726 <_ZSt9terminatev+0x36>
   20700:	48 8b 05 39 31 02 00 	mov    0x23139(%rip),%rax        # 43840 <_ZZSt9terminatevE4info>
   20707:	48 85 c0             	test   %rax,%rax
   2070a:	74 0f                	je     2071b <_ZSt9terminatev+0x2b>
   2070c:	48 8b 00             	mov    (%rax),%rax
   2070f:	48 85 c0             	test   %rax,%rax
   20712:	74 07                	je     2071b <_ZSt9terminatev+0x2b>
   20714:	ff d0                	call   *%rax
   20716:	e8 1c 56 00 00       	call   25d37 <abort>
   2071b:	ff 15 27 1a 01 00    	call   *0x11a27(%rip)        # 32148 <_ZL16terminateHandler>
   20721:	e8 11 56 00 00       	call   25d37 <abort>
   20726:	48 8d 3d 0b 31 02 00 	lea    0x2310b(%rip),%rdi        # 43838 <_ZGVZSt9terminatevE4info>
   2072d:	e8 0e 09 00 00       	call   21040 <__cxa_guard_acquire>
   20732:	85 c0                	test   %eax,%eax
   20734:	74 ca                	je     20700 <_ZSt9terminatev+0x10>
   20736:	e8 08 52 00 00       	call   25943 <get_thread_data>
   2073b:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   2073f:	48 8d 3d f2 30 02 00 	lea    0x230f2(%rip),%rdi        # 43838 <_ZGVZSt9terminatevE4info>
   20746:	48 89 05 f3 30 02 00 	mov    %rax,0x230f3(%rip)        # 43840 <_ZZSt9terminatevE4info>
   2074d:	e8 3e 09 00 00       	call   21090 <__cxa_guard_release>
   20752:	eb ac                	jmp    20700 <_ZSt9terminatev+0x10>
   20754:	f3 0f 1e fa          	endbr64 
   20758:	48 89 c5             	mov    %rax,%rbp
   2075b:	e9 c0 18 fe ff       	jmp    2020 <_ZSt9terminatev.cold>
   20760:	f3 0f 1e fa          	endbr64 
   20764:	48 89 c7             	mov    %rax,%rdi
   20767:	e9 c8 18 fe ff       	jmp    2034 <_ZSt9terminatev.cold+0x14>
   2076c:	f3 0f 1e fa          	endbr64 
   20770:	48 89 c7             	mov    %rax,%rdi
   20773:	e9 c6 18 fe ff       	jmp    203e <_ZSt9terminatev.cold+0x1e>
   20778:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2077f:	00 

0000000000020780 <_ZL12alloc_or_diem>:
   20780:	41 55                	push   %r13
   20782:	48 89 fe             	mov    %rdi,%rsi
   20785:	41 54                	push   %r12
   20787:	55                   	push   %rbp
   20788:	53                   	push   %rbx
   20789:	48 89 fb             	mov    %rdi,%rbx
   2078c:	bf 01 00 00 00       	mov    $0x1,%edi
   20791:	48 83 ec 08          	sub    $0x8,%rsp
   20795:	e8 16 27 ff ff       	call   12eb0 <calloc>
   2079a:	49 89 c4             	mov    %rax,%r12
   2079d:	48 85 c0             	test   %rax,%rax
   207a0:	74 0e                	je     207b0 <_ZL12alloc_or_diem+0x30>
   207a2:	48 83 c4 08          	add    $0x8,%rsp
   207a6:	4c 89 e0             	mov    %r12,%rax
   207a9:	5b                   	pop    %rbx
   207aa:	5d                   	pop    %rbp
   207ab:	41 5c                	pop    %r12
   207ad:	41 5d                	pop    %r13
   207af:	c3                   	ret    
   207b0:	48 81 fb 00 04 00 00 	cmp    $0x400,%rbx
   207b7:	0f 87 cb 00 00 00    	ja     20888 <_ZL12alloc_or_diem+0x108>
   207bd:	e8 81 51 00 00       	call   25943 <get_thread_data>
   207c2:	83 b8 90 00 00 00 03 	cmpl   $0x3,0x90(%rax)
   207c9:	48 89 c5             	mov    %rax,%rbp
   207cc:	0f 8f b6 00 00 00    	jg     20888 <_ZL12alloc_or_diem+0x108>
   207d2:	48 8d 3d 6f 30 02 00 	lea    0x2306f(%rip),%rdi        # 43848 <_ZL21emergency_malloc_lock>
   207d9:	4c 8d 2d 70 30 02 00 	lea    0x23070(%rip),%r13        # 43850 <_ZL16buffer_allocated>
   207e0:	e8 8b f8 fe ff       	call   10070 <sgx_spin_lock>
   207e5:	0f 1f 00             	nopl   (%rax)
   207e8:	48 89 de             	mov    %rbx,%rsi
   207eb:	bf 01 00 00 00       	mov    $0x1,%edi
   207f0:	e8 bb 26 ff ff       	call   12eb0 <calloc>
   207f5:	49 89 c4             	mov    %rax,%r12
   207f8:	48 85 c0             	test   %rax,%rax
   207fb:	0f 85 8f 00 00 00    	jne    20890 <_ZL12alloc_or_diem+0x110>
   20801:	31 c0                	xor    %eax,%eax
   20803:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   20808:	41 80 7c 05 00 00    	cmpb   $0x0,0x0(%r13,%rax,1)
   2080e:	41 89 c4             	mov    %eax,%r12d
   20811:	74 3d                	je     20850 <_ZL12alloc_or_diem+0xd0>
   20813:	48 83 c0 01          	add    $0x1,%rax
   20817:	48 83 f8 10          	cmp    $0x10,%rax
   2081b:	75 eb                	jne    20808 <_ZL12alloc_or_diem+0x88>
   2081d:	48 8d 3d 24 30 02 00 	lea    0x23024(%rip),%rdi        # 43848 <_ZL21emergency_malloc_lock>
   20824:	c6 05 0d 19 01 00 00 	movb   $0x0,0x1190d(%rip)        # 32138 <_ZL16buffer_available>
   2082b:	e8 e0 f8 fe ff       	call   10110 <sgx_spin_unlock>
   20830:	0f b6 05 01 19 01 00 	movzbl 0x11901(%rip),%eax        # 32138 <_ZL16buffer_available>
   20837:	84 c0                	test   %al,%al
   20839:	74 f5                	je     20830 <_ZL12alloc_or_diem+0xb0>
   2083b:	48 8d 3d 06 30 02 00 	lea    0x23006(%rip),%rdi        # 43848 <_ZL21emergency_malloc_lock>
   20842:	e8 29 f8 fe ff       	call   10070 <sgx_spin_lock>
   20847:	eb 9f                	jmp    207e8 <_ZL12alloc_or_diem+0x68>
   20849:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   20850:	48 98                	cltq   
   20852:	48 8d 3d ef 2f 02 00 	lea    0x22fef(%rip),%rdi        # 43848 <_ZL21emergency_malloc_lock>
   20859:	41 c1 e4 0a          	shl    $0xa,%r12d
   2085d:	41 c6 44 05 00 01    	movb   $0x1,0x0(%r13,%rax,1)
   20863:	4d 63 e4             	movslq %r12d,%r12
   20866:	e8 a5 f8 fe ff       	call   10110 <sgx_spin_unlock>
   2086b:	48 8d 05 ee 2f 02 00 	lea    0x22fee(%rip),%rax        # 43860 <_ZL16emergency_buffer>
   20872:	83 85 90 00 00 00 01 	addl   $0x1,0x90(%rbp)
   20879:	49 01 c4             	add    %rax,%r12
   2087c:	0f 85 20 ff ff ff    	jne    207a2 <_ZL12alloc_or_diem+0x22>
   20882:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   20888:	e8 63 fe ff ff       	call   206f0 <_ZSt9terminatev>
   2088d:	0f 1f 00             	nopl   (%rax)
   20890:	48 8d 3d b1 2f 02 00 	lea    0x22fb1(%rip),%rdi        # 43848 <_ZL21emergency_malloc_lock>
   20897:	e8 74 f8 fe ff       	call   10110 <sgx_spin_unlock>
   2089c:	e9 01 ff ff ff       	jmp    207a2 <_ZL12alloc_or_diem+0x22>
   208a1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   208a8:	00 00 00 
   208ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000208b0 <__cxa_allocate_exception>:
   208b0:	f3 0f 1e fa          	endbr64 
   208b4:	48 83 ec 08          	sub    $0x8,%rsp
   208b8:	48 83 ef 80          	sub    $0xffffffffffffff80,%rdi
   208bc:	e8 bf fe ff ff       	call   20780 <_ZL12alloc_or_diem>
   208c1:	48 83 c4 08          	add    $0x8,%rsp
   208c5:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
   208c9:	c3                   	ret    
   208ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000208d0 <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE>:
   208d0:	53                   	push   %rbx
   208d1:	83 ff 05             	cmp    $0x5,%edi
   208d4:	74 05                	je     208db <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE+0xb>
   208d6:	e8 15 fe ff ff       	call   206f0 <_ZSt9terminatev>
   208db:	48 b8 01 2b 2b 43 43 	movabs $0x474e5543432b2b01,%rax
   208e2:	55 4e 47 
   208e5:	48 89 f3             	mov    %rsi,%rbx
   208e8:	48 39 46 60          	cmp    %rax,0x60(%rsi)
   208ec:	74 4e                	je     2093c <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE+0x6c>
   208ee:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   208f2:	48 85 ff             	test   %rdi,%rdi
   208f5:	74 35                	je     2092c <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE+0x5c>
   208f7:	48 8d 15 fa f2 00 00 	lea    0xf2fa(%rip),%rdx        # 2fbf8 <_ZTIN10__cxxabiv117__class_type_infoE>
   208fe:	31 c9                	xor    %ecx,%ecx
   20900:	48 8d 35 e1 f2 00 00 	lea    0xf2e1(%rip),%rsi        # 2fbe8 <_ZTISt9type_info>
   20907:	e8 04 38 00 00       	call   24110 <__dynamic_cast>
   2090c:	48 89 c2             	mov    %rax,%rdx
   2090f:	48 85 c0             	test   %rax,%rax
   20912:	74 18                	je     2092c <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE+0x5c>
   20914:	48 8b 05 15 f4 00 00 	mov    0xf415(%rip),%rax        # 2fd30 <_ZTISt9exception>
   2091b:	48 8d b3 80 00 00 00 	lea    0x80(%rbx),%rsi
   20922:	48 8d 3d 07 f4 00 00 	lea    0xf407(%rip),%rdi        # 2fd30 <_ZTISt9exception>
   20929:	ff 50 30             	call   *0x30(%rax)
   2092c:	31 f6                	xor    %esi,%esi
   2092e:	48 8d 3d 8b f5 ff ff 	lea    -0xa75(%rip),%rdi        # 1fec0 <_ZL5traceP15_Unwind_ContextPv>
   20935:	e8 36 14 00 00       	call   21d70 <_Unwind_Backtrace>
   2093a:	eb 9a                	jmp    208d6 <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE+0x6>
   2093c:	48 8b 1e             	mov    (%rsi),%rbx
   2093f:	48 83 c3 80          	add    $0xffffffffffffff80,%rbx
   20943:	eb a9                	jmp    208ee <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE+0x1e>
   20945:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2094c:	00 00 00 
   2094f:	90                   	nop

0000000000020950 <_ZL15throw_exceptionPN10__cxxabiv115__cxa_exceptionE>:
   20950:	55                   	push   %rbp
   20951:	48 89 fd             	mov    %rdi,%rbp
   20954:	e8 ea 4f 00 00       	call   25943 <get_thread_data>
   20959:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
   20960:	48 89 55 18          	mov    %rdx,0x18(%rbp)
   20964:	48 85 d2             	test   %rdx,%rdx
   20967:	74 2a                	je     20993 <_ZL15throw_exceptionPN10__cxxabiv115__cxa_exceptionE+0x43>
   20969:	48 8b 90 80 00 00 00 	mov    0x80(%rax),%rdx
   20970:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   20974:	48 85 d2             	test   %rdx,%rdx
   20977:	74 27                	je     209a0 <_ZL15throw_exceptionPN10__cxxabiv115__cxa_exceptionE+0x50>
   20979:	83 80 a8 00 00 00 01 	addl   $0x1,0xa8(%rax)
   20980:	48 8d 7d 60          	lea    0x60(%rbp),%rdi
   20984:	e8 f7 15 00 00       	call   21f80 <_Unwind_RaiseException>
   20989:	48 89 ee             	mov    %rbp,%rsi
   2098c:	89 c7                	mov    %eax,%edi
   2098e:	e8 3d ff ff ff       	call   208d0 <_ZL14report_failure19_Unwind_Reason_CodePN10__cxxabiv115__cxa_exceptionE>
   20993:	48 8b 15 a6 17 01 00 	mov    0x117a6(%rip),%rdx        # 32140 <_ZL17unexpectedHandler>
   2099a:	48 89 55 18          	mov    %rdx,0x18(%rbp)
   2099e:	eb c9                	jmp    20969 <_ZL15throw_exceptionPN10__cxxabiv115__cxa_exceptionE+0x19>
   209a0:	48 8b 15 a1 17 01 00 	mov    0x117a1(%rip),%rdx        # 32148 <_ZL16terminateHandler>
   209a7:	48 89 55 20          	mov    %rdx,0x20(%rbp)
   209ab:	eb cc                	jmp    20979 <_ZL15throw_exceptionPN10__cxxabiv115__cxa_exceptionE+0x29>
   209ad:	0f 1f 00             	nopl   (%rax)

00000000000209b0 <__cxa_throw>:
   209b0:	f3 0f 1e fa          	endbr64 
   209b4:	50                   	push   %rax
   209b5:	58                   	pop    %rax
   209b6:	48 b8 00 2b 2b 43 43 	movabs $0x474e5543432b2b00,%rax
   209bd:	55 4e 47 
   209c0:	48 83 ec 08          	sub    $0x8,%rsp
   209c4:	48 89 47 e0          	mov    %rax,-0x20(%rdi)
   209c8:	48 8d 05 61 06 00 00 	lea    0x661(%rip),%rax        # 21030 <_ZL17exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception>
   209cf:	48 83 c7 80          	add    $0xffffffffffffff80,%rdi
   209d3:	48 c7 07 01 00 00 00 	movq   $0x1,(%rdi)
   209da:	48 89 77 08          	mov    %rsi,0x8(%rdi)
   209de:	48 89 57 10          	mov    %rdx,0x10(%rdi)
   209e2:	48 89 47 68          	mov    %rax,0x68(%rdi)
   209e6:	e8 65 ff ff ff       	call   20950 <_ZL15throw_exceptionPN10__cxxabiv115__cxa_exceptionE>
   209eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000209f0 <__gxx_personality_v0>:
   209f0:	f3 0f 1e fa          	endbr64 
   209f4:	41 57                	push   %r15
   209f6:	41 56                	push   %r14
   209f8:	41 55                	push   %r13
   209fa:	41 54                	push   %r12
   209fc:	55                   	push   %rbp
   209fd:	53                   	push   %rbx
   209fe:	48 83 ec 78          	sub    $0x78,%rsp
   20a02:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   20a09:	00 00 
   20a0b:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
   20a10:	31 c0                	xor    %eax,%eax
   20a12:	83 ff 01             	cmp    $0x1,%edi
   20a15:	0f 85 75 02 00 00    	jne    20c90 <__gxx_personality_v0+0x2a0>
   20a1b:	49 89 ce             	mov    %rcx,%r14
   20a1e:	4c 89 c5             	mov    %r8,%rbp
   20a21:	45 31 e4             	xor    %r12d,%r12d
   20a24:	31 db                	xor    %ebx,%ebx
   20a26:	49 bf 00 d5 d4 bc bc 	movabs $0xb8b1aabcbcd4d500,%r15
   20a2d:	aa b1 b8 
   20a30:	49 01 d7             	add    %rdx,%r15
   20a33:	49 83 ff 01          	cmp    $0x1,%r15
   20a37:	0f 86 b3 00 00 00    	jbe    20af0 <__gxx_personality_v0+0x100>
   20a3d:	48 89 ef             	mov    %rbp,%rdi
   20a40:	89 74 24 0c          	mov    %esi,0xc(%rsp)
   20a44:	e8 87 14 00 00       	call   21ed0 <_Unwind_GetLanguageSpecificData>
   20a49:	49 89 c5             	mov    %rax,%r13
   20a4c:	48 85 c0             	test   %rax,%rax
   20a4f:	0f 84 0b 02 00 00    	je     20c60 <__gxx_personality_v0+0x270>
   20a55:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   20a59:	66 0f ef c0          	pxor   %xmm0,%xmm0
   20a5d:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   20a64:	00 00 
   20a66:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   20a6b:	40 f6 c6 01          	test   $0x1,%sil
   20a6f:	0f 85 ab 00 00 00    	jne    20b20 <__gxx_personality_v0+0x130>
   20a75:	83 e6 04             	and    $0x4,%esi
   20a78:	0f 84 22 02 00 00    	je     20ca0 <__gxx_personality_v0+0x2b0>
   20a7e:	49 83 ff 01          	cmp    $0x1,%r15
   20a82:	0f 87 a8 03 00 00    	ja     20e30 <__gxx_personality_v0+0x440>
   20a88:	48 8b 43 48          	mov    0x48(%rbx),%rax
   20a8c:	48 85 c0             	test   %rax,%rax
   20a8f:	0f 84 d5 04 00 00    	je     20f6a <__gxx_personality_v0+0x57a>
   20a95:	31 f6                	xor    %esi,%esi
   20a97:	48 85 db             	test   %rbx,%rbx
   20a9a:	74 11                	je     20aad <__gxx_personality_v0+0xbd>
   20a9c:	48 63 53 34          	movslq 0x34(%rbx),%rdx
   20aa0:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   20aa5:	48 89 c6             	mov    %rax,%rsi
   20aa8:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   20aad:	48 c7 43 48 00 00 00 	movq   $0x0,0x48(%rbx)
   20ab4:	00 
   20ab5:	c7 43 34 00 00 00 00 	movl   $0x0,0x34(%rbx)
   20abc:	48 89 ef             	mov    %rbp,%rdi
   20abf:	e8 0c 17 00 00       	call   221d0 <_Unwind_SetIP>
   20ac4:	4c 89 f2             	mov    %r14,%rdx
   20ac7:	31 f6                	xor    %esi,%esi
   20ac9:	48 89 ef             	mov    %rbp,%rdi
   20acc:	e8 ef 16 00 00       	call   221c0 <_Unwind_SetGR>
   20ad1:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   20ad6:	be 01 00 00 00       	mov    $0x1,%esi
   20adb:	48 89 ef             	mov    %rbp,%rdi
   20ade:	e8 dd 16 00 00       	call   221c0 <_Unwind_SetGR>
   20ae3:	b8 07 00 00 00       	mov    $0x7,%eax
   20ae8:	e9 78 01 00 00       	jmp    20c65 <__gxx_personality_v0+0x275>
   20aed:	0f 1f 00             	nopl   (%rax)
   20af0:	48 b8 01 2b 2b 43 43 	movabs $0x474e5543432b2b01,%rax
   20af7:	55 4e 47 
   20afa:	48 8d 59 a0          	lea    -0x60(%rcx),%rbx
   20afe:	49 89 dc             	mov    %rbx,%r12
   20b01:	48 39 01             	cmp    %rax,(%rcx)
   20b04:	0f 85 33 ff ff ff    	jne    20a3d <__gxx_personality_v0+0x4d>
   20b0a:	48 8b 41 a0          	mov    -0x60(%rcx),%rax
   20b0e:	4c 8d 60 80          	lea    -0x80(%rax),%r12
   20b12:	e9 26 ff ff ff       	jmp    20a3d <__gxx_personality_v0+0x4d>
   20b17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   20b1e:	00 00 
   20b20:	48 89 ef             	mov    %rbp,%rdi
   20b23:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   20b28:	e8 f3 13 00 00       	call   21f20 <_Unwind_GetRegionStart>
   20b2d:	4c 8b 7c 24 18       	mov    0x18(%rsp),%r15
   20b32:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   20b37:	49 8d 57 01          	lea    0x1(%r15),%rdx
   20b3b:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   20b40:	45 0f b6 37          	movzbl (%r15),%r14d
   20b44:	41 80 fe ff          	cmp    $0xff,%r14b
   20b48:	74 25                	je     20b6f <__gxx_personality_v0+0x17f>
   20b4a:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   20b4f:	41 0f be fe          	movsbl %r14b,%edi
   20b53:	e8 18 f4 ff ff       	call   1ff70 <_ZL10read_valuecPPh>
   20b58:	41 0f b6 f6          	movzbl %r14b,%esi
   20b5c:	4c 89 f9             	mov    %r15,%rcx
   20b5f:	48 89 ef             	mov    %rbp,%rdi
   20b62:	48 89 c2             	mov    %rax,%rdx
   20b65:	e8 46 f5 ff ff       	call   200b0 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh>
   20b6a:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   20b6f:	48 8d 72 01          	lea    0x1(%rdx),%rsi
   20b73:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   20b78:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   20b7f:	00 00 
   20b81:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   20b86:	0f b6 02             	movzbl (%rdx),%eax
   20b89:	88 44 24 48          	mov    %al,0x48(%rsp)
   20b8d:	3c ff                	cmp    $0xff,%al
   20b8f:	74 33                	je     20bc4 <__gxx_personality_v0+0x1d4>
   20b91:	31 c9                	xor    %ecx,%ecx
   20b93:	31 d2                	xor    %edx,%edx
   20b95:	0f 1f 00             	nopl   (%rax)
   20b98:	0f b6 06             	movzbl (%rsi),%eax
   20b9b:	48 83 c6 01          	add    $0x1,%rsi
   20b9f:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   20ba4:	89 c7                	mov    %eax,%edi
   20ba6:	83 e0 7f             	and    $0x7f,%eax
   20ba9:	d3 e0                	shl    %cl,%eax
   20bab:	83 e7 7f             	and    $0x7f,%edi
   20bae:	83 c1 07             	add    $0x7,%ecx
   20bb1:	48 98                	cltq   
   20bb3:	48 01 c2             	add    %rax,%rdx
   20bb6:	40 3a 7e ff          	cmp    -0x1(%rsi),%dil
   20bba:	75 dc                	jne    20b98 <__gxx_personality_v0+0x1a8>
   20bbc:	48 01 f2             	add    %rsi,%rdx
   20bbf:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
   20bc4:	48 8d 56 01          	lea    0x1(%rsi),%rdx
   20bc8:	31 c9                	xor    %ecx,%ecx
   20bca:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   20bcf:	0f b6 06             	movzbl (%rsi),%eax
   20bd2:	31 f6                	xor    %esi,%esi
   20bd4:	88 44 24 60          	mov    %al,0x60(%rsp)
   20bd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   20bdf:	00 
   20be0:	0f b6 02             	movzbl (%rdx),%eax
   20be3:	48 83 c2 01          	add    $0x1,%rdx
   20be7:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   20bec:	89 c7                	mov    %eax,%edi
   20bee:	83 e0 7f             	and    $0x7f,%eax
   20bf1:	d3 e0                	shl    %cl,%eax
   20bf3:	83 e7 7f             	and    $0x7f,%edi
   20bf6:	83 c1 07             	add    $0x7,%ecx
   20bf9:	48 98                	cltq   
   20bfb:	48 01 c6             	add    %rax,%rsi
   20bfe:	40 3a 7a ff          	cmp    -0x1(%rdx),%dil
   20c02:	75 dc                	jne    20be0 <__gxx_personality_v0+0x1f0>
   20c04:	48 01 d6             	add    %rdx,%rsi
   20c07:	4c 8d 74 24 30       	lea    0x30(%rsp),%r14
   20c0c:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
   20c11:	48 89 ef             	mov    %rbp,%rdi
   20c14:	48 89 74 24 58       	mov    %rsi,0x58(%rsp)
   20c19:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   20c1e:	48 8d 4c 24 28       	lea    0x28(%rsp),%rcx
   20c23:	4c 89 f6             	mov    %r14,%rsi
   20c26:	e8 a5 f6 ff ff       	call   202d0 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0>
   20c2b:	84 c0                	test   %al,%al
   20c2d:	0f 84 ed 01 00 00    	je     20e20 <__gxx_personality_v0+0x430>
   20c33:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   20c38:	4c 8d 4b 50          	lea    0x50(%rbx),%r9
   20c3c:	48 85 d2             	test   %rdx,%rdx
   20c3f:	74 1f                	je     20c60 <__gxx_personality_v0+0x270>
   20c41:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
   20c46:	4c 89 e1             	mov    %r12,%rcx
   20c49:	4c 89 f6             	mov    %r14,%rsi
   20c4c:	48 89 ef             	mov    %rbp,%rdi
   20c4f:	e8 ac f7 ff ff       	call   20400 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0>
   20c54:	83 f8 02             	cmp    $0x2,%eax
   20c57:	0f 84 9b 01 00 00    	je     20df8 <__gxx_personality_v0+0x408>
   20c5d:	0f 1f 00             	nopl   (%rax)
   20c60:	b8 08 00 00 00       	mov    $0x8,%eax
   20c65:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
   20c6a:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   20c71:	00 00 
   20c73:	0f 85 ec 02 00 00    	jne    20f65 <__gxx_personality_v0+0x575>
   20c79:	48 83 c4 78          	add    $0x78,%rsp
   20c7d:	5b                   	pop    %rbx
   20c7e:	5d                   	pop    %rbp
   20c7f:	41 5c                	pop    %r12
   20c81:	41 5d                	pop    %r13
   20c83:	41 5e                	pop    %r14
   20c85:	41 5f                	pop    %r15
   20c87:	c3                   	ret    
   20c88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   20c8f:	00 
   20c90:	b8 03 00 00 00       	mov    $0x3,%eax
   20c95:	eb ce                	jmp    20c65 <__gxx_personality_v0+0x275>
   20c97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   20c9e:	00 00 
   20ca0:	48 89 ef             	mov    %rbp,%rdi
   20ca3:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   20ca8:	e8 73 12 00 00       	call   21f20 <_Unwind_GetRegionStart>
   20cad:	4c 8b 7c 24 18       	mov    0x18(%rsp),%r15
   20cb2:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   20cb7:	49 8d 57 01          	lea    0x1(%r15),%rdx
   20cbb:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   20cc0:	45 0f b6 2f          	movzbl (%r15),%r13d
   20cc4:	41 80 fd ff          	cmp    $0xff,%r13b
   20cc8:	74 25                	je     20cef <__gxx_personality_v0+0x2ff>
   20cca:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   20ccf:	41 0f be fd          	movsbl %r13b,%edi
   20cd3:	e8 98 f2 ff ff       	call   1ff70 <_ZL10read_valuecPPh>
   20cd8:	41 0f b6 f5          	movzbl %r13b,%esi
   20cdc:	4c 89 f9             	mov    %r15,%rcx
   20cdf:	48 89 ef             	mov    %rbp,%rdi
   20ce2:	48 89 c2             	mov    %rax,%rdx
   20ce5:	e8 c6 f3 ff ff       	call   200b0 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh>
   20cea:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   20cef:	48 8d 72 01          	lea    0x1(%rdx),%rsi
   20cf3:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   20cf8:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   20cff:	00 00 
   20d01:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   20d06:	0f b6 02             	movzbl (%rdx),%eax
   20d09:	88 44 24 48          	mov    %al,0x48(%rsp)
   20d0d:	3c ff                	cmp    $0xff,%al
   20d0f:	74 33                	je     20d44 <__gxx_personality_v0+0x354>
   20d11:	31 c9                	xor    %ecx,%ecx
   20d13:	31 d2                	xor    %edx,%edx
   20d15:	0f 1f 00             	nopl   (%rax)
   20d18:	0f b6 06             	movzbl (%rsi),%eax
   20d1b:	48 83 c6 01          	add    $0x1,%rsi
   20d1f:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   20d24:	89 c7                	mov    %eax,%edi
   20d26:	83 e0 7f             	and    $0x7f,%eax
   20d29:	d3 e0                	shl    %cl,%eax
   20d2b:	83 e7 7f             	and    $0x7f,%edi
   20d2e:	83 c1 07             	add    $0x7,%ecx
   20d31:	48 98                	cltq   
   20d33:	48 01 c2             	add    %rax,%rdx
   20d36:	40 3a 7e ff          	cmp    -0x1(%rsi),%dil
   20d3a:	75 dc                	jne    20d18 <__gxx_personality_v0+0x328>
   20d3c:	48 01 f2             	add    %rsi,%rdx
   20d3f:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
   20d44:	48 8d 56 01          	lea    0x1(%rsi),%rdx
   20d48:	31 c9                	xor    %ecx,%ecx
   20d4a:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   20d4f:	0f b6 06             	movzbl (%rsi),%eax
   20d52:	31 f6                	xor    %esi,%esi
   20d54:	88 44 24 60          	mov    %al,0x60(%rsp)
   20d58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   20d5f:	00 
   20d60:	0f b6 02             	movzbl (%rdx),%eax
   20d63:	48 83 c2 01          	add    $0x1,%rdx
   20d67:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   20d6c:	89 c7                	mov    %eax,%edi
   20d6e:	83 e0 7f             	and    $0x7f,%eax
   20d71:	d3 e0                	shl    %cl,%eax
   20d73:	83 e7 7f             	and    $0x7f,%edi
   20d76:	83 c1 07             	add    $0x7,%ecx
   20d79:	48 98                	cltq   
   20d7b:	48 01 c6             	add    %rax,%rsi
   20d7e:	40 3a 7a ff          	cmp    -0x1(%rdx),%dil
   20d82:	75 dc                	jne    20d60 <__gxx_personality_v0+0x370>
   20d84:	48 01 d6             	add    %rdx,%rsi
   20d87:	4c 8d 6c 24 30       	lea    0x30(%rsp),%r13
   20d8c:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
   20d91:	48 89 ef             	mov    %rbp,%rdi
   20d94:	48 89 74 24 58       	mov    %rsi,0x58(%rsp)
   20d99:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   20d9e:	4c 89 ee             	mov    %r13,%rsi
   20da1:	48 8d 4c 24 28       	lea    0x28(%rsp),%rcx
   20da6:	e8 25 f5 ff ff       	call   202d0 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0>
   20dab:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   20db0:	48 85 f6             	test   %rsi,%rsi
   20db3:	0f 84 a7 fe ff ff    	je     20c60 <__gxx_personality_v0+0x270>
   20db9:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   20dbe:	4c 8d 4b 50          	lea    0x50(%rbx),%r9
   20dc2:	48 85 d2             	test   %rdx,%rdx
   20dc5:	0f 84 f1 fc ff ff    	je     20abc <__gxx_personality_v0+0xcc>
   20dcb:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
   20dd0:	4c 89 e1             	mov    %r12,%rcx
   20dd3:	4c 89 ee             	mov    %r13,%rsi
   20dd6:	48 89 ef             	mov    %rbp,%rdi
   20dd9:	e8 22 f6 ff ff       	call   20400 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0>
   20dde:	83 f8 01             	cmp    $0x1,%eax
   20de1:	0f 85 79 fe ff ff    	jne    20c60 <__gxx_personality_v0+0x270>
   20de7:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
   20dec:	e9 cb fc ff ff       	jmp    20abc <__gxx_personality_v0+0xcc>
   20df1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   20df8:	48 85 db             	test   %rbx,%rbx
   20dfb:	74 23                	je     20e20 <__gxx_personality_v0+0x430>
   20dfd:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   20e02:	4c 89 6b 40          	mov    %r13,0x40(%rbx)
   20e06:	89 43 34             	mov    %eax,0x34(%rbx)
   20e09:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   20e0e:	48 89 43 48          	mov    %rax,0x48(%rbx)
   20e12:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   20e17:	48 89 43 38          	mov    %rax,0x38(%rbx)
   20e1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   20e20:	b8 06 00 00 00       	mov    $0x6,%eax
   20e25:	e9 3b fe ff ff       	jmp    20c65 <__gxx_personality_v0+0x275>
   20e2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   20e30:	48 89 ef             	mov    %rbp,%rdi
   20e33:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   20e38:	e8 e3 10 00 00       	call   21f20 <_Unwind_GetRegionStart>
   20e3d:	4c 8b 7c 24 18       	mov    0x18(%rsp),%r15
   20e42:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   20e47:	49 8d 57 01          	lea    0x1(%r15),%rdx
   20e4b:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   20e50:	45 0f b6 2f          	movzbl (%r15),%r13d
   20e54:	41 80 fd ff          	cmp    $0xff,%r13b
   20e58:	74 25                	je     20e7f <__gxx_personality_v0+0x48f>
   20e5a:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   20e5f:	41 0f be fd          	movsbl %r13b,%edi
   20e63:	e8 08 f1 ff ff       	call   1ff70 <_ZL10read_valuecPPh>
   20e68:	41 0f b6 f5          	movzbl %r13b,%esi
   20e6c:	4c 89 f9             	mov    %r15,%rcx
   20e6f:	48 89 ef             	mov    %rbp,%rdi
   20e72:	48 89 c2             	mov    %rax,%rdx
   20e75:	e8 36 f2 ff ff       	call   200b0 <_ZL22resolve_indirect_valueP15_Unwind_ContexthlPh>
   20e7a:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
   20e7f:	48 8d 72 01          	lea    0x1(%rdx),%rsi
   20e83:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   20e88:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
   20e8f:	00 00 
   20e91:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   20e96:	0f b6 02             	movzbl (%rdx),%eax
   20e99:	88 44 24 48          	mov    %al,0x48(%rsp)
   20e9d:	3c ff                	cmp    $0xff,%al
   20e9f:	74 33                	je     20ed4 <__gxx_personality_v0+0x4e4>
   20ea1:	31 c9                	xor    %ecx,%ecx
   20ea3:	31 d2                	xor    %edx,%edx
   20ea5:	0f 1f 00             	nopl   (%rax)
   20ea8:	0f b6 06             	movzbl (%rsi),%eax
   20eab:	48 83 c6 01          	add    $0x1,%rsi
   20eaf:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   20eb4:	89 c7                	mov    %eax,%edi
   20eb6:	83 e0 7f             	and    $0x7f,%eax
   20eb9:	d3 e0                	shl    %cl,%eax
   20ebb:	83 e7 7f             	and    $0x7f,%edi
   20ebe:	83 c1 07             	add    $0x7,%ecx
   20ec1:	48 98                	cltq   
   20ec3:	48 01 c2             	add    %rax,%rdx
   20ec6:	40 3a 7e ff          	cmp    -0x1(%rsi),%dil
   20eca:	75 dc                	jne    20ea8 <__gxx_personality_v0+0x4b8>
   20ecc:	48 01 f2             	add    %rsi,%rdx
   20ecf:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
   20ed4:	48 8d 56 01          	lea    0x1(%rsi),%rdx
   20ed8:	31 c9                	xor    %ecx,%ecx
   20eda:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   20edf:	0f b6 06             	movzbl (%rsi),%eax
   20ee2:	31 f6                	xor    %esi,%esi
   20ee4:	88 44 24 60          	mov    %al,0x60(%rsp)
   20ee8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   20eef:	00 
   20ef0:	0f b6 02             	movzbl (%rdx),%eax
   20ef3:	48 83 c2 01          	add    $0x1,%rdx
   20ef7:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
   20efc:	89 c7                	mov    %eax,%edi
   20efe:	83 e0 7f             	and    $0x7f,%eax
   20f01:	d3 e0                	shl    %cl,%eax
   20f03:	83 e7 7f             	and    $0x7f,%edi
   20f06:	83 c1 07             	add    $0x7,%ecx
   20f09:	48 98                	cltq   
   20f0b:	48 01 c6             	add    %rax,%rsi
   20f0e:	40 3a 7a ff          	cmp    -0x1(%rdx),%dil
   20f12:	75 dc                	jne    20ef0 <__gxx_personality_v0+0x500>
   20f14:	48 01 d6             	add    %rdx,%rsi
   20f17:	4c 8d 6c 24 30       	lea    0x30(%rsp),%r13
   20f1c:	48 89 54 24 50       	mov    %rdx,0x50(%rsp)
   20f21:	48 89 ef             	mov    %rbp,%rdi
   20f24:	48 89 74 24 58       	mov    %rsi,0x58(%rsp)
   20f29:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   20f2e:	48 8d 4c 24 28       	lea    0x28(%rsp),%rcx
   20f33:	4c 89 ee             	mov    %r13,%rsi
   20f36:	e8 95 f3 ff ff       	call   202d0 <_ZL22dwarf_eh_find_callsiteP15_Unwind_ContextP13dwarf_eh_lsdaP15dwarf_eh_action.isra.0>
   20f3b:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
   20f40:	4c 8d 4b 50          	lea    0x50(%rbx),%r9
   20f44:	48 85 d2             	test   %rdx,%rdx
   20f47:	0f 84 9a fe ff ff    	je     20de7 <__gxx_personality_v0+0x3f7>
   20f4d:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
   20f52:	4c 89 e1             	mov    %r12,%rcx
   20f55:	4c 89 ee             	mov    %r13,%rsi
   20f58:	48 89 ef             	mov    %rbp,%rdi
   20f5b:	e8 a0 f4 ff ff       	call   20400 <_ZL19check_action_recordP15_Unwind_ContextP13dwarf_eh_lsdaPhPN10__cxxabiv115__cxa_exceptionEPmRPv.part.0>
   20f60:	e9 82 fe ff ff       	jmp    20de7 <__gxx_personality_v0+0x3f7>
   20f65:	e8 d6 2b ff ff       	call   13b40 <__stack_chk_fail>
   20f6a:	e8 81 f7 ff ff       	call   206f0 <_ZSt9terminatev>
   20f6f:	90                   	nop

0000000000020f70 <__cxa_free_exception>:
   20f70:	f3 0f 1e fa          	endbr64 
   20f74:	55                   	push   %rbp
   20f75:	48 8b 47 90          	mov    -0x70(%rdi),%rax
   20f79:	48 8d 6f 80          	lea    -0x80(%rdi),%rbp
   20f7d:	48 85 c0             	test   %rax,%rax
   20f80:	74 02                	je     20f84 <__cxa_free_exception+0x14>
   20f82:	ff d0                	call   *%rax
   20f84:	48 89 ef             	mov    %rbp,%rdi
   20f87:	5d                   	pop    %rbp
   20f88:	e9 43 ef ff ff       	jmp    1fed0 <_ZL14free_exceptionPc>
   20f8d:	f3 0f 1e fa          	endbr64 
   20f91:	48 89 c7             	mov    %rax,%rdi
   20f94:	e9 d7 10 fe ff       	jmp    2070 <__cxa_free_exception.cold>
   20f99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000020fa0 <_ZL16releaseExceptionPN10__cxxabiv115__cxa_exceptionE>:
   20fa0:	48 b8 01 2b 2b 43 43 	movabs $0x474e5543432b2b01,%rax
   20fa7:	55 4e 47 
   20faa:	48 39 47 60          	cmp    %rax,0x60(%rdi)
   20fae:	74 20                	je     20fd0 <_ZL16releaseExceptionPN10__cxxabiv115__cxa_exceptionE+0x30>
   20fb0:	f0 48 83 2f 01       	lock subq $0x1,(%rdi)
   20fb5:	74 09                	je     20fc0 <_ZL16releaseExceptionPN10__cxxabiv115__cxa_exceptionE+0x20>
   20fb7:	c3                   	ret    
   20fb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   20fbf:	00 
   20fc0:	48 83 ef 80          	sub    $0xffffffffffffff80,%rdi
   20fc4:	e9 a7 ff ff ff       	jmp    20f70 <__cxa_free_exception>
   20fc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   20fd0:	48 83 ef 80          	sub    $0xffffffffffffff80,%rdi
   20fd4:	e9 07 00 00 00       	jmp    20fe0 <__cxa_free_dependent_exception>
   20fd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000020fe0 <__cxa_free_dependent_exception>:
   20fe0:	f3 0f 1e fa          	endbr64 
   20fe4:	55                   	push   %rbp
   20fe5:	48 8b 47 80          	mov    -0x80(%rdi),%rax
   20fe9:	48 8d 6f 80          	lea    -0x80(%rdi),%rbp
   20fed:	48 85 c0             	test   %rax,%rax
   20ff0:	74 1b                	je     2100d <__cxa_free_dependent_exception+0x2d>
   20ff2:	48 ba 01 2b 2b 43 43 	movabs $0x474e5543432b2b01,%rdx
   20ff9:	55 4e 47 
   20ffc:	49 89 e8             	mov    %rbp,%r8
   20fff:	48 39 57 e0          	cmp    %rdx,-0x20(%rdi)
   21003:	74 1b                	je     21020 <__cxa_free_dependent_exception+0x40>
   21005:	4c 89 c7             	mov    %r8,%rdi
   21008:	e8 93 ff ff ff       	call   20fa0 <_ZL16releaseExceptionPN10__cxxabiv115__cxa_exceptionE>
   2100d:	48 89 ef             	mov    %rbp,%rdi
   21010:	5d                   	pop    %rbp
   21011:	e9 ba ee ff ff       	jmp    1fed0 <_ZL14free_exceptionPc>
   21016:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2101d:	00 00 00 
   21020:	4c 8d 40 80          	lea    -0x80(%rax),%r8
   21024:	eb df                	jmp    21005 <__cxa_free_dependent_exception+0x25>
   21026:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2102d:	00 00 00 

0000000000021030 <_ZL17exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception>:
   21030:	f3 0f 1e fa          	endbr64 
   21034:	48 89 f7             	mov    %rsi,%rdi
   21037:	e9 34 ff ff ff       	jmp    20f70 <__cxa_free_exception>
   2103c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000021040 <__cxa_guard_acquire>:
   21040:	f3 0f 1e fa          	endbr64 
   21044:	48 8b 17             	mov    (%rdi),%rdx
   21047:	31 c0                	xor    %eax,%eax
   21049:	80 fa 01             	cmp    $0x1,%dl
   2104c:	74 1e                	je     2106c <__cxa_guard_acquire+0x2c>
   2104e:	48 8d 57 01          	lea    0x1(%rdi),%rdx
   21052:	31 f6                	xor    %esi,%esi
   21054:	b9 01 00 00 00       	mov    $0x1,%ecx
   21059:	89 f0                	mov    %esi,%eax
   2105b:	f0 0f b1 0a          	lock cmpxchg %ecx,(%rdx)
   2105f:	75 0c                	jne    2106d <__cxa_guard_acquire+0x2d>
   21061:	48 8b 07             	mov    (%rdi),%rax
   21064:	3c 01                	cmp    $0x1,%al
   21066:	0f 95 c0             	setne  %al
   21069:	0f b6 c0             	movzbl %al,%eax
   2106c:	c3                   	ret    
   2106d:	48 8b 07             	mov    (%rdi),%rax
   21070:	2c 01                	sub    $0x1,%al
   21072:	75 e5                	jne    21059 <__cxa_guard_acquire+0x19>
   21074:	eb eb                	jmp    21061 <__cxa_guard_acquire+0x21>
   21076:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2107d:	00 00 00 

0000000000021080 <__cxa_guard_abort>:
   21080:	f3 0f 1e fa          	endbr64 
   21084:	c7 47 01 00 00 00 00 	movl   $0x0,0x1(%rdi)
   2108b:	c3                   	ret    
   2108c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000021090 <__cxa_guard_release>:
   21090:	f3 0f 1e fa          	endbr64 
   21094:	c6 07 01             	movb   $0x1,(%rdi)
   21097:	c7 47 01 00 00 00 00 	movl   $0x0,0x1(%rdi)
   2109e:	c3                   	ret    
   2109f:	90                   	nop

00000000000210a0 <_ZNSt9exceptionD1Ev>:
   210a0:	f3 0f 1e fa          	endbr64 
   210a4:	c3                   	ret    
   210a5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   210ac:	00 00 00 
   210af:	90                   	nop

00000000000210b0 <_ZNKSt9exception4whatEv>:
   210b0:	f3 0f 1e fa          	endbr64 
   210b4:	48 8d 05 11 63 00 00 	lea    0x6311(%rip),%rax        # 273cc <__bigtens_D2A+0x4ec>
   210bb:	c3                   	ret    
   210bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000210c0 <_ZNSt9bad_allocD1Ev>:
   210c0:	f3 0f 1e fa          	endbr64 
   210c4:	c3                   	ret    
   210c5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   210cc:	00 00 00 
   210cf:	90                   	nop

00000000000210d0 <_ZNKSt9bad_alloc4whatEv>:
   210d0:	f3 0f 1e fa          	endbr64 
   210d4:	48 8d 05 00 63 00 00 	lea    0x6300(%rip),%rax        # 273db <__bigtens_D2A+0x4fb>
   210db:	c3                   	ret    
   210dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000210e0 <_ZNSt9exceptionD0Ev>:
   210e0:	f3 0f 1e fa          	endbr64 
   210e4:	be 08 00 00 00       	mov    $0x8,%esi
   210e9:	e9 d2 00 00 00       	jmp    211c0 <_ZdlPvm>
   210ee:	66 90                	xchg   %ax,%ax

00000000000210f0 <_ZNSt9bad_allocD0Ev>:
   210f0:	f3 0f 1e fa          	endbr64 
   210f4:	be 08 00 00 00       	mov    $0x8,%esi
   210f9:	e9 c2 00 00 00       	jmp    211c0 <_ZdlPvm>
   210fe:	66 90                	xchg   %ax,%ax

0000000000021100 <_ZNSt9exceptionC1Ev>:
   21100:	f3 0f 1e fa          	endbr64 
   21104:	48 8d 05 9d ea 00 00 	lea    0xea9d(%rip),%rax        # 2fba8 <_ZTVSt9exception+0x10>
   2110b:	48 89 07             	mov    %rax,(%rdi)
   2110e:	c3                   	ret    
   2110f:	90                   	nop

0000000000021110 <_ZNSt9bad_allocC1Ev>:
   21110:	f3 0f 1e fa          	endbr64 
   21114:	48 8d 05 b5 ea 00 00 	lea    0xeab5(%rip),%rax        # 2fbd0 <_ZTVSt9bad_alloc+0x10>
   2111b:	48 89 07             	mov    %rax,(%rdi)
   2111e:	c3                   	ret    
   2111f:	90                   	nop

0000000000021120 <_ZNKSt9type_info14__is_pointer_pEv>:
   21120:	f3 0f 1e fa          	endbr64 
   21124:	31 c0                	xor    %eax,%eax
   21126:	c3                   	ret    
   21127:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2112e:	00 00 

0000000000021130 <_ZNKSt9type_info15__is_function_pEv>:
   21130:	f3 0f 1e fa          	endbr64 
   21134:	31 c0                	xor    %eax,%eax
   21136:	c3                   	ret    
   21137:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2113e:	00 00 

0000000000021140 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
   21140:	f3 0f 1e fa          	endbr64 
   21144:	48 39 fe             	cmp    %rdi,%rsi
   21147:	0f 94 c0             	sete   %al
   2114a:	c3                   	ret    
   2114b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000021150 <_ZN10__cxxabiv117__class_type_infoD1Ev>:
   21150:	f3 0f 1e fa          	endbr64 
   21154:	c3                   	ret    
   21155:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2115c:	00 00 00 
   2115f:	90                   	nop

0000000000021160 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
   21160:	f3 0f 1e fa          	endbr64 
   21164:	c3                   	ret    
   21165:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2116c:	00 00 00 
   2116f:	90                   	nop

0000000000021170 <_ZN10__cxxabiv117__class_type_infoD0Ev>:
   21170:	f3 0f 1e fa          	endbr64 
   21174:	be 10 00 00 00       	mov    $0x10,%esi
   21179:	e9 42 00 00 00       	jmp    211c0 <_ZdlPvm>
   2117e:	66 90                	xchg   %ax,%ax

0000000000021180 <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
   21180:	f3 0f 1e fa          	endbr64 
   21184:	be 18 00 00 00       	mov    $0x18,%esi
   21189:	e9 32 00 00 00       	jmp    211c0 <_ZdlPvm>
   2118e:	66 90                	xchg   %ax,%ax

0000000000021190 <_ZNKSt9type_infoeqERKS_>:
   21190:	f3 0f 1e fa          	endbr64 
   21194:	48 8b 46 08          	mov    0x8(%rsi),%rax
   21198:	48 39 47 08          	cmp    %rax,0x8(%rdi)
   2119c:	0f 94 c0             	sete   %al
   2119f:	c3                   	ret    

00000000000211a0 <_ZdlPv>:
   211a0:	f3 0f 1e fa          	endbr64 
   211a4:	e9 f7 12 ff ff       	jmp    124a0 <dlfree>
   211a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000211b0 <_ZdaPv>:
   211b0:	f3 0f 1e fa          	endbr64 
   211b4:	e9 e7 ff ff ff       	jmp    211a0 <_ZdlPv>
   211b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000211c0 <_ZdlPvm>:
   211c0:	f3 0f 1e fa          	endbr64 
   211c4:	e9 d7 ff ff ff       	jmp    211a0 <_ZdlPv>
   211c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000211d0 <_Znwm>:
   211d0:	f3 0f 1e fa          	endbr64 
   211d4:	55                   	push   %rbp
   211d5:	53                   	push   %rbx
   211d6:	48 89 fb             	mov    %rdi,%rbx
   211d9:	48 83 ec 08          	sub    $0x8,%rsp
   211dd:	e8 4e f8 fe ff       	call   10a30 <dlmalloc>
   211e2:	48 85 c0             	test   %rax,%rax
   211e5:	75 23                	jne    2120a <_Znwm+0x3a>
   211e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   211ee:	00 00 
   211f0:	e8 3b 00 00 00       	call   21230 <_Z9call_newhv>
   211f5:	85 c0                	test   %eax,%eax
   211f7:	0f 84 91 0e fe ff    	je     208e <_Znwm.cold>
   211fd:	48 89 df             	mov    %rbx,%rdi
   21200:	e8 2b f8 fe ff       	call   10a30 <dlmalloc>
   21205:	48 85 c0             	test   %rax,%rax
   21208:	74 e6                	je     211f0 <_Znwm+0x20>
   2120a:	48 83 c4 08          	add    $0x8,%rsp
   2120e:	5b                   	pop    %rbx
   2120f:	5d                   	pop    %rbp
   21210:	c3                   	ret    
   21211:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   21218:	00 00 00 
   2121b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000021220 <_Znam>:
   21220:	f3 0f 1e fa          	endbr64 
   21224:	e9 a7 ff ff ff       	jmp    211d0 <_Znwm>
   21229:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000021230 <_Z9call_newhv>:
   21230:	f3 0f 1e fa          	endbr64 
   21234:	53                   	push   %rbx
   21235:	48 8d 3d 2c 66 02 00 	lea    0x2662c(%rip),%rdi        # 47868 <_ZStL12handler_lock>
   2123c:	e8 2f ee fe ff       	call   10070 <sgx_spin_lock>
   21241:	48 8b 1d 18 66 02 00 	mov    0x26618(%rip),%rbx        # 47860 <_ZStL9new_handl>
   21248:	48 8d 3d 19 66 02 00 	lea    0x26619(%rip),%rdi        # 47868 <_ZStL12handler_lock>
   2124f:	e8 bc ee fe ff       	call   10110 <sgx_spin_unlock>
   21254:	31 c0                	xor    %eax,%eax
   21256:	48 85 db             	test   %rbx,%rbx
   21259:	74 07                	je     21262 <_Z9call_newhv+0x32>
   2125b:	ff d3                	call   *%rbx
   2125d:	b8 01 00 00 00       	mov    $0x1,%eax
   21262:	5b                   	pop    %rbx
   21263:	c3                   	ret    
   21264:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2126b:	00 00 00 
   2126e:	66 90                	xchg   %ax,%ax

0000000000021270 <_ZNKSt11logic_error4whatEv>:
   21270:	f3 0f 1e fa          	endbr64 
   21274:	48 8b 47 08          	mov    0x8(%rdi),%rax
   21278:	c3                   	ret    
   21279:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000021280 <_ZNKSt13runtime_error4whatEv>:
   21280:	f3 0f 1e fa          	endbr64 
   21284:	48 8b 47 08          	mov    0x8(%rdi),%rax
   21288:	c3                   	ret    
   21289:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000021290 <_ZNSt11logic_errorD1Ev>:
   21290:	f3 0f 1e fa          	endbr64 
   21294:	48 8d 05 9d e9 00 00 	lea    0xe99d(%rip),%rax        # 2fc38 <_ZTVSt11logic_error+0x10>
   2129b:	55                   	push   %rbp
   2129c:	48 89 fd             	mov    %rdi,%rbp
   2129f:	48 89 07             	mov    %rax,(%rdi)
   212a2:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   212a6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   212ab:	f0 0f c1 47 f8       	lock xadd %eax,-0x8(%rdi)
   212b0:	83 e8 01             	sub    $0x1,%eax
   212b3:	78 0b                	js     212c0 <_ZNSt11logic_errorD1Ev+0x30>
   212b5:	48 89 ef             	mov    %rbp,%rdi
   212b8:	5d                   	pop    %rbp
   212b9:	e9 e2 fd ff ff       	jmp    210a0 <_ZNSt9exceptionD1Ev>
   212be:	66 90                	xchg   %ax,%ax
   212c0:	48 83 ef 18          	sub    $0x18,%rdi
   212c4:	e8 d7 fe ff ff       	call   211a0 <_ZdlPv>
   212c9:	48 89 ef             	mov    %rbp,%rdi
   212cc:	5d                   	pop    %rbp
   212cd:	e9 ce fd ff ff       	jmp    210a0 <_ZNSt9exceptionD1Ev>
   212d2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   212d9:	00 00 00 
   212dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000212e0 <_ZNSt12length_errorD1Ev>:
   212e0:	f3 0f 1e fa          	endbr64 
   212e4:	48 8d 05 4d e9 00 00 	lea    0xe94d(%rip),%rax        # 2fc38 <_ZTVSt11logic_error+0x10>
   212eb:	55                   	push   %rbp
   212ec:	48 89 fd             	mov    %rdi,%rbp
   212ef:	48 89 07             	mov    %rax,(%rdi)
   212f2:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   212f6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   212fb:	f0 0f c1 47 f8       	lock xadd %eax,-0x8(%rdi)
   21300:	83 e8 01             	sub    $0x1,%eax
   21303:	78 0b                	js     21310 <_ZNSt12length_errorD1Ev+0x30>
   21305:	48 89 ef             	mov    %rbp,%rdi
   21308:	5d                   	pop    %rbp
   21309:	e9 92 fd ff ff       	jmp    210a0 <_ZNSt9exceptionD1Ev>
   2130e:	66 90                	xchg   %ax,%ax
   21310:	48 83 ef 18          	sub    $0x18,%rdi
   21314:	e8 87 fe ff ff       	call   211a0 <_ZdlPv>
   21319:	48 89 ef             	mov    %rbp,%rdi
   2131c:	5d                   	pop    %rbp
   2131d:	e9 7e fd ff ff       	jmp    210a0 <_ZNSt9exceptionD1Ev>
   21322:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   21329:	00 00 00 
   2132c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000021330 <_ZNSt12out_of_rangeD1Ev>:
   21330:	f3 0f 1e fa          	endbr64 
   21334:	48 8d 05 fd e8 00 00 	lea    0xe8fd(%rip),%rax        # 2fc38 <_ZTVSt11logic_error+0x10>
   2133b:	55                   	push   %rbp
   2133c:	48 89 fd             	mov    %rdi,%rbp
   2133f:	48 89 07             	mov    %rax,(%rdi)
   21342:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   21346:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2134b:	f0 0f c1 47 f8       	lock xadd %eax,-0x8(%rdi)
   21350:	83 e8 01             	sub    $0x1,%eax
   21353:	78 0b                	js     21360 <_ZNSt12out_of_rangeD1Ev+0x30>
   21355:	48 89 ef             	mov    %rbp,%rdi
   21358:	5d                   	pop    %rbp
   21359:	e9 42 fd ff ff       	jmp    210a0 <_ZNSt9exceptionD1Ev>
   2135e:	66 90                	xchg   %ax,%ax
   21360:	48 83 ef 18          	sub    $0x18,%rdi
   21364:	e8 37 fe ff ff       	call   211a0 <_ZdlPv>
   21369:	48 89 ef             	mov    %rbp,%rdi
   2136c:	5d                   	pop    %rbp
   2136d:	e9 2e fd ff ff       	jmp    210a0 <_ZNSt9exceptionD1Ev>
   21372:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   21379:	00 00 00 
   2137c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000021380 <_ZNSt13runtime_errorD1Ev>:
   21380:	f3 0f 1e fa          	endbr64 
   21384:	48 8d 05 25 e9 00 00 	lea    0xe925(%rip),%rax        # 2fcb0 <_ZTVSt13runtime_error+0x10>
   2138b:	55                   	push   %rbp
   2138c:	48 89 fd             	mov    %rdi,%rbp
   2138f:	48 89 07             	mov    %rax,(%rdi)
   21392:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   21396:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2139b:	f0 0f c1 47 f8       	lock xadd %eax,-0x8(%rdi)
   213a0:	83 e8 01             	sub    $0x1,%eax
   213a3:	78 0b                	js     213b0 <_ZNSt13runtime_errorD1Ev+0x30>
   213a5:	48 89 ef             	mov    %rbp,%rdi
   213a8:	5d                   	pop    %rbp
   213a9:	e9 f2 fc ff ff       	jmp    210a0 <_ZNSt9exceptionD1Ev>
   213ae:	66 90                	xchg   %ax,%ax
   213b0:	48 83 ef 18          	sub    $0x18,%rdi
   213b4:	e8 e7 fd ff ff       	call   211a0 <_ZdlPv>
   213b9:	48 89 ef             	mov    %rbp,%rdi
   213bc:	5d                   	pop    %rbp
   213bd:	e9 de fc ff ff       	jmp    210a0 <_ZNSt9exceptionD1Ev>
   213c2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   213c9:	00 00 00 
   213cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000213d0 <_ZNSt12length_errorD0Ev>:
   213d0:	f3 0f 1e fa          	endbr64 
   213d4:	48 8d 05 5d e8 00 00 	lea    0xe85d(%rip),%rax        # 2fc38 <_ZTVSt11logic_error+0x10>
   213db:	55                   	push   %rbp
   213dc:	48 89 fd             	mov    %rdi,%rbp
   213df:	48 89 07             	mov    %rax,(%rdi)
   213e2:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   213e6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   213eb:	f0 0f c1 47 f8       	lock xadd %eax,-0x8(%rdi)
   213f0:	83 e8 01             	sub    $0x1,%eax
   213f3:	78 1b                	js     21410 <_ZNSt12length_errorD0Ev+0x40>
   213f5:	48 89 ef             	mov    %rbp,%rdi
   213f8:	e8 a3 fc ff ff       	call   210a0 <_ZNSt9exceptionD1Ev>
   213fd:	48 89 ef             	mov    %rbp,%rdi
   21400:	be 10 00 00 00       	mov    $0x10,%esi
   21405:	5d                   	pop    %rbp
   21406:	e9 b5 fd ff ff       	jmp    211c0 <_ZdlPvm>
   2140b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   21410:	48 83 ef 18          	sub    $0x18,%rdi
   21414:	e8 87 fd ff ff       	call   211a0 <_ZdlPv>
   21419:	eb da                	jmp    213f5 <_ZNSt12length_errorD0Ev+0x25>
   2141b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000021420 <_ZNSt12out_of_rangeD0Ev>:
   21420:	f3 0f 1e fa          	endbr64 
   21424:	48 8d 05 0d e8 00 00 	lea    0xe80d(%rip),%rax        # 2fc38 <_ZTVSt11logic_error+0x10>
   2142b:	55                   	push   %rbp
   2142c:	48 89 fd             	mov    %rdi,%rbp
   2142f:	48 89 07             	mov    %rax,(%rdi)
   21432:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   21436:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2143b:	f0 0f c1 47 f8       	lock xadd %eax,-0x8(%rdi)
   21440:	83 e8 01             	sub    $0x1,%eax
   21443:	78 1b                	js     21460 <_ZNSt12out_of_rangeD0Ev+0x40>
   21445:	48 89 ef             	mov    %rbp,%rdi
   21448:	e8 53 fc ff ff       	call   210a0 <_ZNSt9exceptionD1Ev>
   2144d:	48 89 ef             	mov    %rbp,%rdi
   21450:	be 10 00 00 00       	mov    $0x10,%esi
   21455:	5d                   	pop    %rbp
   21456:	e9 65 fd ff ff       	jmp    211c0 <_ZdlPvm>
   2145b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   21460:	48 83 ef 18          	sub    $0x18,%rdi
   21464:	e8 37 fd ff ff       	call   211a0 <_ZdlPv>
   21469:	eb da                	jmp    21445 <_ZNSt12out_of_rangeD0Ev+0x25>
   2146b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000021470 <_ZNSt13runtime_errorD0Ev>:
   21470:	f3 0f 1e fa          	endbr64 
   21474:	48 8d 05 35 e8 00 00 	lea    0xe835(%rip),%rax        # 2fcb0 <_ZTVSt13runtime_error+0x10>
   2147b:	55                   	push   %rbp
   2147c:	48 89 fd             	mov    %rdi,%rbp
   2147f:	48 89 07             	mov    %rax,(%rdi)
   21482:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   21486:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   2148b:	f0 0f c1 47 f8       	lock xadd %eax,-0x8(%rdi)
   21490:	83 e8 01             	sub    $0x1,%eax
   21493:	78 1b                	js     214b0 <_ZNSt13runtime_errorD0Ev+0x40>
   21495:	48 89 ef             	mov    %rbp,%rdi
   21498:	e8 03 fc ff ff       	call   210a0 <_ZNSt9exceptionD1Ev>
   2149d:	48 89 ef             	mov    %rbp,%rdi
   214a0:	be 10 00 00 00       	mov    $0x10,%esi
   214a5:	5d                   	pop    %rbp
   214a6:	e9 15 fd ff ff       	jmp    211c0 <_ZdlPvm>
   214ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   214b0:	48 83 ef 18          	sub    $0x18,%rdi
   214b4:	e8 e7 fc ff ff       	call   211a0 <_ZdlPv>
   214b9:	eb da                	jmp    21495 <_ZNSt13runtime_errorD0Ev+0x25>
   214bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000214c0 <_ZNSt11logic_errorD0Ev>:
   214c0:	f3 0f 1e fa          	endbr64 
   214c4:	48 8d 05 6d e7 00 00 	lea    0xe76d(%rip),%rax        # 2fc38 <_ZTVSt11logic_error+0x10>
   214cb:	55                   	push   %rbp
   214cc:	48 89 fd             	mov    %rdi,%rbp
   214cf:	48 89 07             	mov    %rax,(%rdi)
   214d2:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   214d6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   214db:	f0 0f c1 47 f8       	lock xadd %eax,-0x8(%rdi)
   214e0:	83 e8 01             	sub    $0x1,%eax
   214e3:	78 1b                	js     21500 <_ZNSt11logic_errorD0Ev+0x40>
   214e5:	48 89 ef             	mov    %rbp,%rdi
   214e8:	e8 b3 fb ff ff       	call   210a0 <_ZNSt9exceptionD1Ev>
   214ed:	48 89 ef             	mov    %rbp,%rdi
   214f0:	be 10 00 00 00       	mov    $0x10,%esi
   214f5:	5d                   	pop    %rbp
   214f6:	e9 c5 fc ff ff       	jmp    211c0 <_ZdlPvm>
   214fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   21500:	48 83 ef 18          	sub    $0x18,%rdi
   21504:	e8 97 fc ff ff       	call   211a0 <_ZdlPv>
   21509:	eb da                	jmp    214e5 <_ZNSt11logic_errorD0Ev+0x25>
   2150b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000021510 <_ZNSt11logic_errorC1EPKc>:
   21510:	f3 0f 1e fa          	endbr64 
   21514:	41 55                	push   %r13
   21516:	49 89 f5             	mov    %rsi,%r13
   21519:	41 54                	push   %r12
   2151b:	49 89 fc             	mov    %rdi,%r12
   2151e:	55                   	push   %rbp
   2151f:	53                   	push   %rbx
   21520:	48 83 ec 08          	sub    $0x8,%rsp
   21524:	e8 d7 fb ff ff       	call   21100 <_ZNSt9exceptionC1Ev>
   21529:	48 8d 05 08 e7 00 00 	lea    0xe708(%rip),%rax        # 2fc38 <_ZTVSt11logic_error+0x10>
   21530:	4c 89 ef             	mov    %r13,%rdi
   21533:	49 89 04 24          	mov    %rax,(%r12)
   21537:	e8 54 25 ff ff       	call   13a90 <strlen>
   2153c:	48 8d 78 19          	lea    0x19(%rax),%rdi
   21540:	48 89 c5             	mov    %rax,%rbp
   21543:	e8 88 fc ff ff       	call   211d0 <_Znwm>
   21548:	48 89 28             	mov    %rbp,(%rax)
   2154b:	48 8d 58 18          	lea    0x18(%rax),%rbx
   2154f:	48 8d 55 01          	lea    0x1(%rbp),%rdx
   21553:	4c 89 ee             	mov    %r13,%rsi
   21556:	48 89 68 08          	mov    %rbp,0x8(%rax)
   2155a:	48 89 df             	mov    %rbx,%rdi
   2155d:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
   21564:	e8 87 22 ff ff       	call   137f0 <memcpy>
   21569:	49 89 5c 24 08       	mov    %rbx,0x8(%r12)
   2156e:	48 83 c4 08          	add    $0x8,%rsp
   21572:	5b                   	pop    %rbx
   21573:	5d                   	pop    %rbp
   21574:	41 5c                	pop    %r12
   21576:	41 5d                	pop    %r13
   21578:	c3                   	ret    
   21579:	f3 0f 1e fa          	endbr64 
   2157d:	48 89 c5             	mov    %rax,%rbp
   21580:	e9 35 0b fe ff       	jmp    20ba <_ZNSt11logic_errorC2EPKc.cold>
   21585:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2158c:	00 00 00 
   2158f:	90                   	nop

0000000000021590 <_ZNSt13runtime_errorC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE>:
   21590:	f3 0f 1e fa          	endbr64 
   21594:	41 55                	push   %r13
   21596:	41 54                	push   %r12
   21598:	49 89 fc             	mov    %rdi,%r12
   2159b:	55                   	push   %rbp
   2159c:	53                   	push   %rbx
   2159d:	48 89 f3             	mov    %rsi,%rbx
   215a0:	4c 8d 6b 01          	lea    0x1(%rbx),%r13
   215a4:	48 83 ec 08          	sub    $0x8,%rsp
   215a8:	e8 53 fb ff ff       	call   21100 <_ZNSt9exceptionC1Ev>
   215ad:	48 8d 05 fc e6 00 00 	lea    0xe6fc(%rip),%rax        # 2fcb0 <_ZTVSt13runtime_error+0x10>
   215b4:	49 89 04 24          	mov    %rax,(%r12)
   215b8:	f6 03 01             	testb  $0x1,(%rbx)
   215bb:	74 04                	je     215c1 <_ZNSt13runtime_errorC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE+0x31>
   215bd:	4c 8b 6b 10          	mov    0x10(%rbx),%r13
   215c1:	4c 89 ef             	mov    %r13,%rdi
   215c4:	e8 c7 24 ff ff       	call   13a90 <strlen>
   215c9:	48 8d 78 19          	lea    0x19(%rax),%rdi
   215cd:	48 89 c5             	mov    %rax,%rbp
   215d0:	e8 fb fb ff ff       	call   211d0 <_Znwm>
   215d5:	48 89 28             	mov    %rbp,(%rax)
   215d8:	48 8d 58 18          	lea    0x18(%rax),%rbx
   215dc:	48 8d 55 01          	lea    0x1(%rbp),%rdx
   215e0:	4c 89 ee             	mov    %r13,%rsi
   215e3:	48 89 68 08          	mov    %rbp,0x8(%rax)
   215e7:	48 89 df             	mov    %rbx,%rdi
   215ea:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
   215f1:	e8 fa 21 ff ff       	call   137f0 <memcpy>
   215f6:	49 89 5c 24 08       	mov    %rbx,0x8(%r12)
   215fb:	48 83 c4 08          	add    $0x8,%rsp
   215ff:	5b                   	pop    %rbx
   21600:	5d                   	pop    %rbp
   21601:	41 5c                	pop    %r12
   21603:	41 5d                	pop    %r13
   21605:	c3                   	ret    
   21606:	f3 0f 1e fa          	endbr64 
   2160a:	48 89 c5             	mov    %rax,%rbp
   2160d:	e9 b8 0a fe ff       	jmp    20ca <_ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE.cold>
   21612:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   21619:	00 00 00 
   2161c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000021620 <_ZNSt13runtime_errorC1EPKc>:
   21620:	f3 0f 1e fa          	endbr64 
   21624:	41 55                	push   %r13
   21626:	49 89 f5             	mov    %rsi,%r13
   21629:	41 54                	push   %r12
   2162b:	49 89 fc             	mov    %rdi,%r12
   2162e:	55                   	push   %rbp
   2162f:	53                   	push   %rbx
   21630:	48 83 ec 08          	sub    $0x8,%rsp
   21634:	e8 c7 fa ff ff       	call   21100 <_ZNSt9exceptionC1Ev>
   21639:	48 8d 05 70 e6 00 00 	lea    0xe670(%rip),%rax        # 2fcb0 <_ZTVSt13runtime_error+0x10>
   21640:	4c 89 ef             	mov    %r13,%rdi
   21643:	49 89 04 24          	mov    %rax,(%r12)
   21647:	e8 44 24 ff ff       	call   13a90 <strlen>
   2164c:	48 8d 78 19          	lea    0x19(%rax),%rdi
   21650:	48 89 c5             	mov    %rax,%rbp
   21653:	e8 78 fb ff ff       	call   211d0 <_Znwm>
   21658:	48 89 28             	mov    %rbp,(%rax)
   2165b:	48 8d 58 18          	lea    0x18(%rax),%rbx
   2165f:	48 8d 55 01          	lea    0x1(%rbp),%rdx
   21663:	4c 89 ee             	mov    %r13,%rsi
   21666:	48 89 68 08          	mov    %rbp,0x8(%rax)
   2166a:	48 89 df             	mov    %rbx,%rdi
   2166d:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
   21674:	e8 77 21 ff ff       	call   137f0 <memcpy>
   21679:	49 89 5c 24 08       	mov    %rbx,0x8(%r12)
   2167e:	48 83 c4 08          	add    $0x8,%rsp
   21682:	5b                   	pop    %rbx
   21683:	5d                   	pop    %rbp
   21684:	41 5c                	pop    %r12
   21686:	41 5d                	pop    %r13
   21688:	c3                   	ret    
   21689:	f3 0f 1e fa          	endbr64 
   2168d:	48 89 c5             	mov    %rax,%rbp
   21690:	e9 45 0a fe ff       	jmp    20da <_ZNSt13runtime_errorC2EPKc.cold>
   21695:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2169c:	00 00 00 
   2169f:	90                   	nop

00000000000216a0 <_ZNSt13runtime_erroraSERKS_>:
   216a0:	f3 0f 1e fa          	endbr64 
   216a4:	41 54                	push   %r12
   216a6:	49 89 fc             	mov    %rdi,%r12
   216a9:	48 8b 46 08          	mov    0x8(%rsi),%rax
   216ad:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   216b1:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   216b6:	f0 83 40 f8 01       	lock addl $0x1,-0x8(%rax)
   216bb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   216c0:	f0 0f c1 47 f8       	lock xadd %eax,-0x8(%rdi)
   216c5:	83 e8 01             	sub    $0x1,%eax
   216c8:	78 06                	js     216d0 <_ZNSt13runtime_erroraSERKS_+0x30>
   216ca:	4c 89 e0             	mov    %r12,%rax
   216cd:	41 5c                	pop    %r12
   216cf:	c3                   	ret    
   216d0:	48 83 ef 18          	sub    $0x18,%rdi
   216d4:	e8 c7 fa ff ff       	call   211a0 <_ZdlPv>
   216d9:	4c 89 e0             	mov    %r12,%rax
   216dc:	41 5c                	pop    %r12
   216de:	c3                   	ret    
   216df:	90                   	nop

00000000000216e0 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev>:
   216e0:	f3 0f 1e fa          	endbr64 
   216e4:	f6 07 01             	testb  $0x1,(%rdi)
   216e7:	75 07                	jne    216f0 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev+0x10>
   216e9:	c3                   	ret    
   216ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   216f0:	48 83 ec 08          	sub    $0x8,%rsp
   216f4:	48 8b 37             	mov    (%rdi),%rsi
   216f7:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   216fb:	48 83 e6 fe          	and    $0xfffffffffffffffe,%rsi
   216ff:	e8 bc fa ff ff       	call   211c0 <_ZdlPvm>
   21704:	48 83 c4 08          	add    $0x8,%rsp
   21708:	c3                   	ret    
   21709:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000021710 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm>:
   21710:	f3 0f 1e fa          	endbr64 
   21714:	41 56                	push   %r14
   21716:	41 55                	push   %r13
   21718:	41 54                	push   %r12
   2171a:	55                   	push   %rbp
   2171b:	48 89 fd             	mov    %rdi,%rbp
   2171e:	53                   	push   %rbx
   2171f:	48 83 fa ef          	cmp    $0xffffffffffffffef,%rdx
   21723:	77 6a                	ja     2178f <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm+0x7f>
   21725:	49 89 f6             	mov    %rsi,%r14
   21728:	48 89 d3             	mov    %rdx,%rbx
   2172b:	48 83 fa 16          	cmp    $0x16,%rdx
   2172f:	77 1f                	ja     21750 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm+0x40>
   21731:	8d 04 12             	lea    (%rdx,%rdx,1),%eax
   21734:	4c 8d 67 01          	lea    0x1(%rdi),%r12
   21738:	88 07                	mov    %al,(%rdi)
   2173a:	48 85 d2             	test   %rdx,%rdx
   2173d:	75 34                	jne    21773 <_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm+0x63>
   2173f:	41 c6 04 1c 00       	movb   $0x0,(%r12,%rbx,1)
   21744:	5b                   	pop    %rbx
   21745:	5d                   	pop    %rbp
   21746:	41 5c                	pop    %r12
   21748:	41 5d                	pop    %r13
   2174a:	41 5e                	pop    %r14
   2174c:	c3                   	ret    
   2174d:	0f 1f 00             	nopl   (%rax)
   21750:	4c 8d 6a 10          	lea    0x10(%rdx),%r13
   21754:	49 83 e5 f0          	and    $0xfffffffffffffff0,%r13
   21758:	4c 89 ef             	mov    %r13,%rdi
   2175b:	49 83 cd 01          	or     $0x1,%r13
   2175f:	e8 6c fa ff ff       	call   211d0 <_Znwm>
   21764:	4c 89 6d 00          	mov    %r13,0x0(%rbp)
   21768:	48 89 45 10          	mov    %rax,0x10(%rbp)
   2176c:	49 89 c4             	mov    %rax,%r12
   2176f:	48 89 5d 08          	mov    %rbx,0x8(%rbp)
   21773:	48 89 da             	mov    %rbx,%rdx
   21776:	4c 89 f6             	mov    %r14,%rsi
   21779:	4c 89 e7             	mov    %r12,%rdi
   2177c:	e8 6f 20 ff ff       	call   137f0 <memcpy>
   21781:	41 c6 04 1c 00       	movb   $0x0,(%r12,%rbx,1)
   21786:	5b                   	pop    %rbx
   21787:	5d                   	pop    %rbp
   21788:	41 5c                	pop    %r12
   2178a:	41 5d                	pop    %r13
   2178c:	41 5e                	pop    %r14
   2178e:	c3                   	ret    
   2178f:	e8 56 09 fe ff       	call   20ea <_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv>
   21794:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2179b:	00 00 00 
   2179e:	66 90                	xchg   %ax,%ax

00000000000217a0 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm>:
   217a0:	f3 0f 1e fa          	endbr64 
   217a4:	0f b6 07             	movzbl (%rdi),%eax
   217a7:	41 89 c2             	mov    %eax,%r10d
   217aa:	41 83 e2 01          	and    $0x1,%r10d
   217ae:	74 68                	je     21818 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x78>
   217b0:	48 8b 47 08          	mov    0x8(%rdi),%rax
   217b4:	48 39 c6             	cmp    %rax,%rsi
   217b7:	0f 87 89 00 00 00    	ja     21846 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0xa6>
   217bd:	49 83 f8 ff          	cmp    $0xffffffffffffffff,%r8
   217c1:	0f 84 7f 00 00 00    	je     21846 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0xa6>
   217c7:	48 29 f0             	sub    %rsi,%rax
   217ca:	48 39 d0             	cmp    %rdx,%rax
   217cd:	48 0f 46 d0          	cmovbe %rax,%rdx
   217d1:	48 8d 47 01          	lea    0x1(%rdi),%rax
   217d5:	49 39 d0             	cmp    %rdx,%r8
   217d8:	49 89 d1             	mov    %rdx,%r9
   217db:	4d 0f 46 c8          	cmovbe %r8,%r9
   217df:	45 84 d2             	test   %r10b,%r10b
   217e2:	75 3c                	jne    21820 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x80>
   217e4:	4d 85 c9             	test   %r9,%r9
   217e7:	74 1c                	je     21805 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x65>
   217e9:	48 01 c6             	add    %rax,%rsi
   217ec:	31 c0                	xor    %eax,%eax
   217ee:	66 90                	xchg   %ax,%ax
   217f0:	0f b6 3c 01          	movzbl (%rcx,%rax,1),%edi
   217f4:	40 38 3c 06          	cmp    %dil,(%rsi,%rax,1)
   217f8:	72 36                	jb     21830 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x90>
   217fa:	77 44                	ja     21840 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0xa0>
   217fc:	48 83 c0 01          	add    $0x1,%rax
   21800:	4c 39 c8             	cmp    %r9,%rax
   21803:	75 eb                	jne    217f0 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x50>
   21805:	49 39 d0             	cmp    %rdx,%r8
   21808:	77 26                	ja     21830 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x90>
   2180a:	0f 92 c0             	setb   %al
   2180d:	0f b6 c0             	movzbl %al,%eax
   21810:	c3                   	ret    
   21811:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   21818:	48 d1 e8             	shr    %rax
   2181b:	83 e0 7f             	and    $0x7f,%eax
   2181e:	eb 94                	jmp    217b4 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x14>
   21820:	48 8b 47 10          	mov    0x10(%rdi),%rax
   21824:	eb be                	jmp    217e4 <_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm+0x44>
   21826:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2182d:	00 00 00 
   21830:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   21835:	c3                   	ret    
   21836:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2183d:	00 00 00 
   21840:	b8 01 00 00 00       	mov    $0x1,%eax
   21845:	c3                   	ret    
   21846:	50                   	push   %rax
   21847:	e8 fa 08 fe ff       	call   2146 <_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv>
   2184c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000021850 <expand>:
   21850:	55                   	push   %rbp
   21851:	48 89 fd             	mov    %rdi,%rbp
   21854:	53                   	push   %rbx
   21855:	48 83 ec 08          	sub    $0x8,%rsp
   21859:	48 8b 5f 10          	mov    0x10(%rdi),%rbx
   2185d:	48 89 df             	mov    %rbx,%rdi
   21860:	e8 cb f1 fe ff       	call   10a30 <dlmalloc>
   21865:	48 85 c0             	test   %rax,%rax
   21868:	74 45                	je     218af <expand+0x5f>
   2186a:	4c 8b 45 08          	mov    0x8(%rbp),%r8
   2186e:	4c 29 c3             	sub    %r8,%rbx
   21871:	48 89 df             	mov    %rbx,%rdi
   21874:	48 01 c7             	add    %rax,%rdi
   21877:	72 2f                	jb     218a8 <expand+0x58>
   21879:	8b 5d 1c             	mov    0x1c(%rbp),%ebx
   2187c:	48 8b 75 20          	mov    0x20(%rbp),%rsi
   21880:	8d 53 01             	lea    0x1(%rbx),%edx
   21883:	eb 06                	jmp    2188b <expand+0x3b>
   21885:	0f 1f 00             	nopl   (%rax)
   21888:	48 89 c8             	mov    %rcx,%rax
   2188b:	4a 8d 0c 00          	lea    (%rax,%r8,1),%rcx
   2188f:	48 89 30             	mov    %rsi,(%rax)
   21892:	41 89 d1             	mov    %edx,%r9d
   21895:	48 89 c6             	mov    %rax,%rsi
   21898:	83 c2 01             	add    $0x1,%edx
   2189b:	48 39 f9             	cmp    %rdi,%rcx
   2189e:	76 e8                	jbe    21888 <expand+0x38>
   218a0:	48 89 45 20          	mov    %rax,0x20(%rbp)
   218a4:	44 89 4d 1c          	mov    %r9d,0x1c(%rbp)
   218a8:	48 83 c4 08          	add    $0x8,%rsp
   218ac:	5b                   	pop    %rbx
   218ad:	5d                   	pop    %rbp
   218ae:	c3                   	ret    
   218af:	48 8b 05 ba 5f 02 00 	mov    0x25fba(%rip),%rax        # 47870 <pg_size>
   218b6:	48 8b 55 08          	mov    0x8(%rbp),%rdx
   218ba:	48 8d 5c 10 ff       	lea    -0x1(%rax,%rdx,1),%rbx
   218bf:	48 f7 d8             	neg    %rax
   218c2:	48 21 c3             	and    %rax,%rbx
   218c5:	48 89 df             	mov    %rbx,%rdi
   218c8:	e8 63 f1 fe ff       	call   10a30 <dlmalloc>
   218cd:	48 85 c0             	test   %rax,%rax
   218d0:	75 98                	jne    2186a <expand+0x1a>
   218d2:	48 8b 5d 08          	mov    0x8(%rbp),%rbx
   218d6:	48 8d 43 0f          	lea    0xf(%rbx),%rax
   218da:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   218de:	f0 48 0f c1 05 91 5f 	lock xadd %rax,0x25f91(%rip)        # 47878 <sos_memory_freepos>
   218e5:	02 00 
   218e7:	48 8d 15 92 5f 02 00 	lea    0x25f92(%rip),%rdx        # 47880 <sos_memory>
   218ee:	48 01 d0             	add    %rdx,%rax
   218f1:	e9 74 ff ff ff       	jmp    2186a <expand+0x1a>
   218f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   218fd:	00 00 00 

0000000000021900 <_UIx86_64__mempool_init>:
   21900:	f3 0f 1e fa          	endbr64 
   21904:	48 8b 0d 65 5f 02 00 	mov    0x25f65(%rip),%rcx        # 47870 <pg_size>
   2190b:	41 54                	push   %r12
   2190d:	49 89 d4             	mov    %rdx,%r12
   21910:	55                   	push   %rbp
   21911:	48 89 fd             	mov    %rdi,%rbp
   21914:	53                   	push   %rbx
   21915:	48 89 f3             	mov    %rsi,%rbx
   21918:	48 85 c9             	test   %rcx,%rcx
   2191b:	75 0f                	jne    2192c <_UIx86_64__mempool_init+0x2c>
   2191d:	e8 3e 34 00 00       	call   24d60 <getpagesize>
   21922:	48 63 c8             	movslq %eax,%rcx
   21925:	48 89 0d 44 5f 02 00 	mov    %rcx,0x25f44(%rip)        # 47870 <pg_size>
   2192c:	66 0f ef c0          	pxor   %xmm0,%xmm0
   21930:	48 8d 73 0f          	lea    0xf(%rbx),%rsi
   21934:	48 c7 45 20 00 00 00 	movq   $0x0,0x20(%rbp)
   2193b:	00 
   2193c:	0f 11 45 00          	movups %xmm0,0x0(%rbp)
   21940:	48 83 e6 f0          	and    $0xfffffffffffffff0,%rsi
   21944:	c7 45 00 00 00 00 00 	movl   $0x0,0x0(%rbp)
   2194b:	0f 11 45 10          	movups %xmm0,0x10(%rbp)
   2194f:	4d 85 e4             	test   %r12,%r12
   21952:	75 23                	jne    21977 <_UIx86_64__mempool_init+0x77>
   21954:	48 89 c8             	mov    %rcx,%rax
   21957:	31 d2                	xor    %edx,%edx
   21959:	48 f7 f6             	div    %rsi
   2195c:	48 83 f8 03          	cmp    $0x3,%rax
   21960:	77 0e                	ja     21970 <_UIx86_64__mempool_init+0x70>
   21962:	b8 10 00 00 00       	mov    $0x10,%eax
   21967:	41 bc 10 00 00 00    	mov    $0x10,%r12d
   2196d:	eb 0b                	jmp    2197a <_UIx86_64__mempool_init+0x7a>
   2196f:	90                   	nop
   21970:	48 c1 e8 02          	shr    $0x2,%rax
   21974:	49 89 c4             	mov    %rax,%r12
   21977:	44 89 e0             	mov    %r12d,%eax
   2197a:	48 89 75 08          	mov    %rsi,0x8(%rbp)
   2197e:	49 0f af f4          	imul   %r12,%rsi
   21982:	5b                   	pop    %rbx
   21983:	48 89 ef             	mov    %rbp,%rdi
   21986:	89 45 18             	mov    %eax,0x18(%rbp)
   21989:	48 8d 44 71 ff       	lea    -0x1(%rcx,%rsi,2),%rax
   2198e:	48 f7 d9             	neg    %rcx
   21991:	48 21 c1             	and    %rax,%rcx
   21994:	48 89 4d 10          	mov    %rcx,0x10(%rbp)
   21998:	5d                   	pop    %rbp
   21999:	41 5c                	pop    %r12
   2199b:	e9 b0 fe ff ff       	jmp    21850 <expand>

00000000000219a0 <_UIx86_64__mempool_alloc>:
   219a0:	f3 0f 1e fa          	endbr64 
   219a4:	41 54                	push   %r12
   219a6:	55                   	push   %rbp
   219a7:	48 89 fd             	mov    %rdi,%rbp
   219aa:	48 83 ec 08          	sub    $0x8,%rsp
   219ae:	e8 bd e6 fe ff       	call   10070 <sgx_spin_lock>
   219b3:	85 c0                	test   %eax,%eax
   219b5:	75 46                	jne    219fd <_UIx86_64__mempool_alloc+0x5d>
   219b7:	8b 45 1c             	mov    0x1c(%rbp),%eax
   219ba:	3b 45 18             	cmp    0x18(%rbp),%eax
   219bd:	76 31                	jbe    219f0 <_UIx86_64__mempool_alloc+0x50>
   219bf:	4c 8b 65 20          	mov    0x20(%rbp),%r12
   219c3:	83 e8 01             	sub    $0x1,%eax
   219c6:	48 89 ef             	mov    %rbp,%rdi
   219c9:	89 45 1c             	mov    %eax,0x1c(%rbp)
   219cc:	49 8b 04 24          	mov    (%r12),%rax
   219d0:	48 89 45 20          	mov    %rax,0x20(%rbp)
   219d4:	e8 37 e7 fe ff       	call   10110 <sgx_spin_unlock>
   219d9:	85 c0                	test   %eax,%eax
   219db:	75 20                	jne    219fd <_UIx86_64__mempool_alloc+0x5d>
   219dd:	48 83 c4 08          	add    $0x8,%rsp
   219e1:	4c 89 e0             	mov    %r12,%rax
   219e4:	5d                   	pop    %rbp
   219e5:	41 5c                	pop    %r12
   219e7:	c3                   	ret    
   219e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   219ef:	00 
   219f0:	48 89 ef             	mov    %rbp,%rdi
   219f3:	e8 58 fe ff ff       	call   21850 <expand>
   219f8:	8b 45 1c             	mov    0x1c(%rbp),%eax
   219fb:	eb c2                	jmp    219bf <_UIx86_64__mempool_alloc+0x1f>
   219fd:	e8 35 43 00 00       	call   25d37 <abort>
   21a02:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   21a09:	00 00 00 
   21a0c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000021a10 <_UIx86_64__mempool_free>:
   21a10:	f3 0f 1e fa          	endbr64 
   21a14:	55                   	push   %rbp
   21a15:	48 89 fd             	mov    %rdi,%rbp
   21a18:	53                   	push   %rbx
   21a19:	48 89 f3             	mov    %rsi,%rbx
   21a1c:	48 83 ec 08          	sub    $0x8,%rsp
   21a20:	e8 4b e6 fe ff       	call   10070 <sgx_spin_lock>
   21a25:	85 c0                	test   %eax,%eax
   21a27:	75 22                	jne    21a4b <_UIx86_64__mempool_free+0x3b>
   21a29:	48 8b 45 20          	mov    0x20(%rbp),%rax
   21a2d:	48 89 ef             	mov    %rbp,%rdi
   21a30:	48 89 03             	mov    %rax,(%rbx)
   21a33:	83 45 1c 01          	addl   $0x1,0x1c(%rbp)
   21a37:	48 89 5d 20          	mov    %rbx,0x20(%rbp)
   21a3b:	e8 d0 e6 fe ff       	call   10110 <sgx_spin_unlock>
   21a40:	85 c0                	test   %eax,%eax
   21a42:	75 07                	jne    21a4b <_UIx86_64__mempool_free+0x3b>
   21a44:	48 83 c4 08          	add    $0x8,%rsp
   21a48:	5b                   	pop    %rbx
   21a49:	5d                   	pop    %rbp
   21a4a:	c3                   	ret    
   21a4b:	e8 e7 42 00 00       	call   25d37 <abort>

0000000000021a50 <_Ux86_64_is_fpreg>:
   21a50:	f3 0f 1e fa          	endbr64 
   21a54:	31 c0                	xor    %eax,%eax
   21a56:	c3                   	ret    
   21a57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   21a5e:	00 00 

0000000000021a60 <_ULx86_64_fetch_frame>:
   21a60:	f3 0f 1e fa          	endbr64 
   21a64:	31 c0                	xor    %eax,%eax
   21a66:	f6 87 50 01 00 00 04 	testb  $0x4,0x150(%rdi)
   21a6d:	74 16                	je     21a85 <_ULx86_64_fetch_frame+0x25>
   21a6f:	48 8b 97 90 01 00 00 	mov    0x190(%rdi),%rdx
   21a76:	48 85 d2             	test   %rdx,%rdx
   21a79:	74 0a                	je     21a85 <_ULx86_64_fetch_frame+0x25>
   21a7b:	0f b6 42 46          	movzbl 0x46(%rdx),%eax
   21a7f:	c0 e8 02             	shr    $0x2,%al
   21a82:	83 e0 01             	and    $0x1,%eax
   21a85:	89 87 b8 01 00 00    	mov    %eax,0x1b8(%rdi)
   21a8b:	c3                   	ret    
   21a8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000021a90 <_ULx86_64_cache_frame>:
   21a90:	f3 0f 1e fa          	endbr64 
   21a94:	8b 87 b8 01 00 00    	mov    0x1b8(%rdi),%eax
   21a9a:	c3                   	ret    
   21a9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000021aa0 <_ULx86_64_reuse_frame>:
   21aa0:	f3 0f 1e fa          	endbr64 
   21aa4:	89 b7 b8 01 00 00    	mov    %esi,0x1b8(%rdi)
   21aaa:	83 fe 01             	cmp    $0x1,%esi
   21aad:	74 01                	je     21ab0 <_ULx86_64_reuse_frame+0x10>
   21aaf:	c3                   	ret    
   21ab0:	48 b8 18 00 00 00 fc 	movabs $0xfffffffc00000018,%rax
   21ab7:	ff ff ff 
   21aba:	48 23 87 b0 01 00 00 	and    0x1b0(%rdi),%rax
   21ac1:	48 83 c8 07          	or     $0x7,%rax
   21ac5:	48 89 87 b0 01 00 00 	mov    %rax,0x1b0(%rdi)
   21acc:	48 8b 47 10          	mov    0x10(%rdi),%rax
   21ad0:	48 89 87 c0 01 00 00 	mov    %rax,0x1c0(%rdi)
   21ad7:	c3                   	ret    
   21ad8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   21adf:	00 

0000000000021ae0 <_ULx86_64_is_signal_frame>:
   21ae0:	f3 0f 1e fa          	endbr64 
   21ae4:	8b 97 b8 01 00 00    	mov    0x1b8(%rdi),%edx
   21aea:	31 c0                	xor    %eax,%eax
   21aec:	85 d2                	test   %edx,%edx
   21aee:	0f 95 c0             	setne  %al
   21af1:	c3                   	ret    
   21af2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   21af9:	00 00 00 
   21afc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000021b00 <_ULx86_64_handle_signal_frame>:
   21b00:	f3 0f 1e fa          	endbr64 
   21b04:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
   21b09:	c3                   	ret    
   21b0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000021b10 <_ULx86_64_r_uc_addr>:
   21b10:	f3 0f 1e fa          	endbr64 
   21b14:	83 fe 10             	cmp    $0x10,%esi
   21b17:	0f 87 85 06 fe ff    	ja     21a2 <_ULx86_64_r_uc_addr.cold>
   21b1d:	48 8d 15 dc 59 00 00 	lea    0x59dc(%rip),%rdx        # 27500 <_ZNSt3__119piecewise_constructE+0x2>
   21b24:	89 f6                	mov    %esi,%esi
   21b26:	48 63 04 b2          	movslq (%rdx,%rsi,4),%rax
   21b2a:	48 01 d0             	add    %rdx,%rax
   21b2d:	3e ff e0             	notrack jmp *%rax
   21b30:	48 8d 47 60          	lea    0x60(%rdi),%rax
   21b34:	c3                   	ret    
   21b35:	0f 1f 00             	nopl   (%rax)
   21b38:	48 8d 87 a8 00 00 00 	lea    0xa8(%rdi),%rax
   21b3f:	c3                   	ret    
   21b40:	48 8d 87 90 00 00 00 	lea    0x90(%rdi),%rax
   21b47:	c3                   	ret    
   21b48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   21b4f:	00 
   21b50:	48 8d 87 88 00 00 00 	lea    0x88(%rdi),%rax
   21b57:	c3                   	ret    
   21b58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   21b5f:	00 
   21b60:	48 8d 87 98 00 00 00 	lea    0x98(%rdi),%rax
   21b67:	c3                   	ret    
   21b68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   21b6f:	00 
   21b70:	48 8d 87 80 00 00 00 	lea    0x80(%rdi),%rax
   21b77:	c3                   	ret    
   21b78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   21b7f:	00 
   21b80:	48 8d 47 70          	lea    0x70(%rdi),%rax
   21b84:	c3                   	ret    
   21b85:	0f 1f 00             	nopl   (%rax)
   21b88:	48 8d 47 68          	lea    0x68(%rdi),%rax
   21b8c:	c3                   	ret    
   21b8d:	0f 1f 00             	nopl   (%rax)
   21b90:	48 8d 47 78          	lea    0x78(%rdi),%rax
   21b94:	c3                   	ret    
   21b95:	0f 1f 00             	nopl   (%rax)
   21b98:	48 8d 87 a0 00 00 00 	lea    0xa0(%rdi),%rax
   21b9f:	c3                   	ret    
   21ba0:	48 8d 47 28          	lea    0x28(%rdi),%rax
   21ba4:	c3                   	ret    
   21ba5:	0f 1f 00             	nopl   (%rax)
   21ba8:	48 8d 47 30          	lea    0x30(%rdi),%rax
   21bac:	c3                   	ret    
   21bad:	0f 1f 00             	nopl   (%rax)
   21bb0:	48 8d 47 38          	lea    0x38(%rdi),%rax
   21bb4:	c3                   	ret    
   21bb5:	0f 1f 00             	nopl   (%rax)
   21bb8:	48 8d 47 40          	lea    0x40(%rdi),%rax
   21bbc:	c3                   	ret    
   21bbd:	0f 1f 00             	nopl   (%rax)
   21bc0:	48 8d 47 48          	lea    0x48(%rdi),%rax
   21bc4:	c3                   	ret    
   21bc5:	0f 1f 00             	nopl   (%rax)
   21bc8:	48 8d 47 50          	lea    0x50(%rdi),%rax
   21bcc:	c3                   	ret    
   21bcd:	0f 1f 00             	nopl   (%rax)
   21bd0:	48 8d 47 58          	lea    0x58(%rdi),%rax
   21bd4:	c3                   	ret    
   21bd5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   21bdc:	00 00 00 
   21bdf:	90                   	nop

0000000000021be0 <_ULx86_64_sigreturn>:
   21be0:	f3 0f 1e fa          	endbr64 
   21be4:	50                   	push   %rax
   21be5:	58                   	pop    %rax
   21be6:	48 83 ec 08          	sub    $0x8,%rsp
   21bea:	48 8b b7 d0 01 00 00 	mov    0x1d0(%rdi),%rsi
   21bf1:	48 8b 8f c0 01 00 00 	mov    0x1c0(%rdi),%rcx
   21bf8:	f3 0f 6f 46 28       	movdqu 0x28(%rsi),%xmm0
   21bfd:	0f 11 41 28          	movups %xmm0,0x28(%rcx)
   21c01:	f3 0f 6f 4e 38       	movdqu 0x38(%rsi),%xmm1
   21c06:	0f 11 49 38          	movups %xmm1,0x38(%rcx)
   21c0a:	f3 0f 6f 56 48       	movdqu 0x48(%rsi),%xmm2
   21c0f:	0f 11 51 48          	movups %xmm2,0x48(%rcx)
   21c13:	f3 0f 6f 5e 58       	movdqu 0x58(%rsi),%xmm3
   21c18:	0f 11 59 58          	movups %xmm3,0x58(%rcx)
   21c1c:	f3 0f 6f 66 68       	movdqu 0x68(%rsi),%xmm4
   21c21:	0f 11 61 68          	movups %xmm4,0x68(%rcx)
   21c25:	f3 0f 6f 6e 78       	movdqu 0x78(%rsi),%xmm5
   21c2a:	0f 11 69 78          	movups %xmm5,0x78(%rcx)
   21c2e:	f3 0f 6f b6 88 00 00 	movdqu 0x88(%rsi),%xmm6
   21c35:	00 
   21c36:	0f 11 b1 88 00 00 00 	movups %xmm6,0x88(%rcx)
   21c3d:	f3 0f 6f be 98 00 00 	movdqu 0x98(%rsi),%xmm7
   21c44:	00 
   21c45:	0f 11 b9 98 00 00 00 	movups %xmm7,0x98(%rcx)
   21c4c:	48 8b 96 a8 00 00 00 	mov    0xa8(%rsi),%rdx
   21c53:	48 89 91 a8 00 00 00 	mov    %rdx,0xa8(%rcx)
   21c5a:	48 89 cc             	mov    %rcx,%rsp
   21c5d:	48 c7 c0 0f 00 00 00 	mov    $0xf,%rax
   21c64:	0f 05                	syscall 
   21c66:	e8 cc 40 00 00       	call   25d37 <abort>
   21c6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000021c70 <_ULx86_64_Ifind_dynamic_proc_info>:
   21c70:	f3 0f 1e fa          	endbr64 
   21c74:	48 39 3d f5 04 01 00 	cmp    %rdi,0x104f5(%rip)        # 32170 <_ULx86_64_local_addr_space>
   21c7b:	75 73                	jne    21cf0 <_ULx86_64_Ifind_dynamic_proc_info+0x80>
   21c7d:	41 56                	push   %r14
   21c7f:	4d 89 c6             	mov    %r8,%r14
   21c82:	41 55                	push   %r13
   21c84:	49 89 d5             	mov    %rdx,%r13
   21c87:	41 54                	push   %r12
   21c89:	49 89 fc             	mov    %rdi,%r12
   21c8c:	55                   	push   %rbp
   21c8d:	48 89 f5             	mov    %rsi,%rbp
   21c90:	53                   	push   %rbx
   21c91:	89 cb                	mov    %ecx,%ebx
   21c93:	e8 08 25 00 00       	call   241a0 <_U_dyn_info_list_addr>
   21c98:	48 8b 48 08          	mov    0x8(%rax),%rcx
   21c9c:	48 85 c9             	test   %rcx,%rcx
   21c9f:	74 1b                	je     21cbc <_ULx86_64_Ifind_dynamic_proc_info+0x4c>
   21ca1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   21ca8:	48 3b 69 10          	cmp    0x10(%rcx),%rbp
   21cac:	72 06                	jb     21cb4 <_ULx86_64_Ifind_dynamic_proc_info+0x44>
   21cae:	48 3b 69 18          	cmp    0x18(%rcx),%rbp
   21cb2:	72 1c                	jb     21cd0 <_ULx86_64_Ifind_dynamic_proc_info+0x60>
   21cb4:	48 8b 09             	mov    (%rcx),%rcx
   21cb7:	48 85 c9             	test   %rcx,%rcx
   21cba:	75 ec                	jne    21ca8 <_ULx86_64_Ifind_dynamic_proc_info+0x38>
   21cbc:	5b                   	pop    %rbx
   21cbd:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
   21cc2:	5d                   	pop    %rbp
   21cc3:	41 5c                	pop    %r12
   21cc5:	41 5d                	pop    %r13
   21cc7:	41 5e                	pop    %r14
   21cc9:	c3                   	ret    
   21cca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   21cd0:	4d 89 f1             	mov    %r14,%r9
   21cd3:	41 89 d8             	mov    %ebx,%r8d
   21cd6:	4c 89 ea             	mov    %r13,%rdx
   21cd9:	5b                   	pop    %rbx
   21cda:	48 89 ee             	mov    %rbp,%rsi
   21cdd:	4c 89 e7             	mov    %r12,%rdi
   21ce0:	5d                   	pop    %rbp
   21ce1:	41 5c                	pop    %r12
   21ce3:	41 5d                	pop    %r13
   21ce5:	41 5e                	pop    %r14
   21ce7:	e9 c4 24 00 00       	jmp    241b0 <_ULx86_64_Iextract_dynamic_proc_info>
   21cec:	0f 1f 40 00          	nopl   0x0(%rax)
   21cf0:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
   21cf5:	c3                   	ret    
   21cf6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   21cfd:	00 00 00 

0000000000021d00 <_Ux86_64_get_accessors>:
   21d00:	f3 0f 1e fa          	endbr64 
   21d04:	8b 05 9e 04 03 00    	mov    0x3049e(%rip),%eax        # 521a8 <_ULx86_64_init_done>
   21d0a:	41 54                	push   %r12
   21d0c:	49 89 fc             	mov    %rdi,%r12
   21d0f:	85 c0                	test   %eax,%eax
   21d11:	74 0d                	je     21d20 <_Ux86_64_get_accessors+0x20>
   21d13:	4c 89 e0             	mov    %r12,%rax
   21d16:	41 5c                	pop    %r12
   21d18:	c3                   	ret    
   21d19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   21d20:	e8 2b 05 00 00       	call   22250 <_ULx86_64_init>
   21d25:	4c 89 e0             	mov    %r12,%rax
   21d28:	41 5c                	pop    %r12
   21d2a:	c3                   	ret    
   21d2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000021d30 <_ULx86_64_Iput_dynamic_unwind_info>:
   21d30:	f3 0f 1e fa          	endbr64 
   21d34:	8b 46 30             	mov    0x30(%rsi),%eax
   21d37:	83 e8 01             	sub    $0x1,%eax
   21d3a:	83 f8 01             	cmp    $0x1,%eax
   21d3d:	76 01                	jbe    21d40 <_ULx86_64_Iput_dynamic_unwind_info+0x10>
   21d3f:	c3                   	ret    
   21d40:	e9 3b 22 00 00       	jmp    23f80 <_ULx86_64_dwarf_put_unwind_info>
   21d45:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   21d4c:	00 00 00 
   21d4f:	90                   	nop

0000000000021d50 <_ULx86_64_get_reg>:
   21d50:	f3 0f 1e fa          	endbr64 
   21d54:	83 fe 10             	cmp    $0x10,%esi
   21d57:	74 07                	je     21d60 <_ULx86_64_get_reg+0x10>
   21d59:	31 c9                	xor    %ecx,%ecx
   21d5b:	e9 d0 08 00 00       	jmp    22630 <_ULx86_64_access_reg>
   21d60:	48 8b 47 18          	mov    0x18(%rdi),%rax
   21d64:	48 89 02             	mov    %rax,(%rdx)
   21d67:	31 c0                	xor    %eax,%eax
   21d69:	c3                   	ret    
   21d6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000021d70 <_Unwind_Backtrace>:
   21d70:	f3 0f 1e fa          	endbr64 
   21d74:	41 55                	push   %r13
   21d76:	41 54                	push   %r12
   21d78:	49 89 f4             	mov    %rsi,%r12
   21d7b:	55                   	push   %rbp
   21d7c:	48 89 fd             	mov    %rdi,%rbp
   21d7f:	53                   	push   %rbx
   21d80:	48 81 ec e8 07 00 00 	sub    $0x7e8,%rsp
   21d87:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   21d8e:	00 00 
   21d90:	48 89 84 24 d8 07 00 	mov    %rax,0x7d8(%rsp)
   21d97:	00 
   21d98:	31 c0                	xor    %eax,%eax
   21d9a:	49 89 e5             	mov    %rsp,%r13
   21d9d:	c7 84 24 c8 07 00 00 	movl   $0x0,0x7c8(%rsp)
   21da4:	00 00 00 00 
   21da8:	4c 89 ef             	mov    %r13,%rdi
   21dab:	e8 49 c2 ff ff       	call   1dff9 <_Ux86_64_getcontext>
   21db0:	85 c0                	test   %eax,%eax
   21db2:	78 1c                	js     21dd0 <_Unwind_Backtrace+0x60>
   21db4:	48 8d 9c 24 d0 03 00 	lea    0x3d0(%rsp),%rbx
   21dbb:	00 
   21dbc:	4c 89 ee             	mov    %r13,%rsi
   21dbf:	48 89 df             	mov    %rbx,%rdi
   21dc2:	e8 29 bc ff ff       	call   1d9f0 <_ULx86_64_init_local>
   21dc7:	85 c0                	test   %eax,%eax
   21dc9:	79 41                	jns    21e0c <_Unwind_Backtrace+0x9c>
   21dcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   21dd0:	b8 03 00 00 00       	mov    $0x3,%eax
   21dd5:	48 8b 94 24 d8 07 00 	mov    0x7d8(%rsp),%rdx
   21ddc:	00 
   21ddd:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   21de4:	00 00 
   21de6:	75 39                	jne    21e21 <_Unwind_Backtrace+0xb1>
   21de8:	48 81 c4 e8 07 00 00 	add    $0x7e8,%rsp
   21def:	5b                   	pop    %rbx
   21df0:	5d                   	pop    %rbp
   21df1:	41 5c                	pop    %r12
   21df3:	41 5d                	pop    %r13
   21df5:	c3                   	ret    
   21df6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   21dfd:	00 00 00 
   21e00:	4c 89 e6             	mov    %r12,%rsi
   21e03:	48 89 df             	mov    %rbx,%rdi
   21e06:	ff d5                	call   *%rbp
   21e08:	85 c0                	test   %eax,%eax
   21e0a:	75 c4                	jne    21dd0 <_Unwind_Backtrace+0x60>
   21e0c:	48 89 df             	mov    %rbx,%rdi
   21e0f:	e8 2c be ff ff       	call   1dc40 <_ULx86_64_step>
   21e14:	85 c0                	test   %eax,%eax
   21e16:	7f e8                	jg     21e00 <_Unwind_Backtrace+0x90>
   21e18:	b8 05 00 00 00       	mov    $0x5,%eax
   21e1d:	74 b6                	je     21dd5 <_Unwind_Backtrace+0x65>
   21e1f:	eb af                	jmp    21dd0 <_Unwind_Backtrace+0x60>
   21e21:	e8 1a 1d ff ff       	call   13b40 <__stack_chk_fail>
   21e26:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   21e2d:	00 00 00 

0000000000021e30 <_Unwind_GetDataRelBase>:
   21e30:	f3 0f 1e fa          	endbr64 
   21e34:	48 83 ec 58          	sub    $0x58,%rsp
   21e38:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   21e3f:	00 00 
   21e41:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   21e46:	31 c0                	xor    %eax,%eax
   21e48:	48 89 e6             	mov    %rsp,%rsi
   21e4b:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
   21e52:	00 00 
   21e54:	e8 a7 bb ff ff       	call   1da00 <_ULx86_64_get_proc_info>
   21e59:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
   21e5e:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   21e63:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   21e6a:	00 00 
   21e6c:	75 05                	jne    21e73 <_Unwind_GetDataRelBase+0x43>
   21e6e:	48 83 c4 58          	add    $0x58,%rsp
   21e72:	c3                   	ret    
   21e73:	e8 c8 1c ff ff       	call   13b40 <__stack_chk_fail>
   21e78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   21e7f:	00 

0000000000021e80 <_Unwind_GetIP>:
   21e80:	f3 0f 1e fa          	endbr64 
   21e84:	48 83 ec 18          	sub    $0x18,%rsp
   21e88:	be 10 00 00 00       	mov    $0x10,%esi
   21e8d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   21e94:	00 00 
   21e96:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   21e9b:	31 c0                	xor    %eax,%eax
   21e9d:	48 89 e2             	mov    %rsp,%rdx
   21ea0:	e8 ab fe ff ff       	call   21d50 <_ULx86_64_get_reg>
   21ea5:	48 8b 04 24          	mov    (%rsp),%rax
   21ea9:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
   21eae:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   21eb5:	00 00 
   21eb7:	75 05                	jne    21ebe <_Unwind_GetIP+0x3e>
   21eb9:	48 83 c4 18          	add    $0x18,%rsp
   21ebd:	c3                   	ret    
   21ebe:	e8 7d 1c ff ff       	call   13b40 <__stack_chk_fail>
   21ec3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   21eca:	00 00 00 
   21ecd:	0f 1f 00             	nopl   (%rax)

0000000000021ed0 <_Unwind_GetLanguageSpecificData>:
   21ed0:	f3 0f 1e fa          	endbr64 
   21ed4:	48 83 ec 58          	sub    $0x58,%rsp
   21ed8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   21edf:	00 00 
   21ee1:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   21ee6:	31 c0                	xor    %eax,%eax
   21ee8:	48 89 e6             	mov    %rsp,%rsi
   21eeb:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   21ef2:	00 00 
   21ef4:	e8 07 bb ff ff       	call   1da00 <_ULx86_64_get_proc_info>
   21ef9:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   21efe:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   21f03:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   21f0a:	00 00 
   21f0c:	75 05                	jne    21f13 <_Unwind_GetLanguageSpecificData+0x43>
   21f0e:	48 83 c4 58          	add    $0x58,%rsp
   21f12:	c3                   	ret    
   21f13:	e8 28 1c ff ff       	call   13b40 <__stack_chk_fail>
   21f18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   21f1f:	00 

0000000000021f20 <_Unwind_GetRegionStart>:
   21f20:	f3 0f 1e fa          	endbr64 
   21f24:	48 83 ec 58          	sub    $0x58,%rsp
   21f28:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   21f2f:	00 00 
   21f31:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   21f36:	31 c0                	xor    %eax,%eax
   21f38:	48 89 e6             	mov    %rsp,%rsi
   21f3b:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
   21f42:	00 
   21f43:	e8 b8 ba ff ff       	call   1da00 <_ULx86_64_get_proc_info>
   21f48:	48 8b 04 24          	mov    (%rsp),%rax
   21f4c:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
   21f51:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   21f58:	00 00 
   21f5a:	75 05                	jne    21f61 <_Unwind_GetRegionStart+0x41>
   21f5c:	48 83 c4 58          	add    $0x58,%rsp
   21f60:	c3                   	ret    
   21f61:	e8 da 1b ff ff       	call   13b40 <__stack_chk_fail>
   21f66:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   21f6d:	00 00 00 

0000000000021f70 <_Unwind_GetTextRelBase>:
   21f70:	f3 0f 1e fa          	endbr64 
   21f74:	31 c0                	xor    %eax,%eax
   21f76:	c3                   	ret    
   21f77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   21f7e:	00 00 

0000000000021f80 <_Unwind_RaiseException>:
   21f80:	f3 0f 1e fa          	endbr64 
   21f84:	41 57                	push   %r15
   21f86:	41 56                	push   %r14
   21f88:	41 55                	push   %r13
   21f8a:	41 54                	push   %r12
   21f8c:	55                   	push   %rbp
   21f8d:	53                   	push   %rbx
   21f8e:	48 89 fb             	mov    %rdi,%rbx
   21f91:	48 81 ec a8 08 00 00 	sub    $0x8a8,%rsp
   21f98:	4c 8b 37             	mov    (%rdi),%r14
   21f9b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   21fa2:	00 00 
   21fa4:	48 89 84 24 98 08 00 	mov    %rax,0x898(%rsp)
   21fab:	00 
   21fac:	31 c0                	xor    %eax,%eax
   21fae:	4c 8d ac 24 c0 00 00 	lea    0xc0(%rsp),%r13
   21fb5:	00 
   21fb6:	c7 84 24 88 08 00 00 	movl   $0x0,0x888(%rsp)
   21fbd:	00 00 00 00 
   21fc1:	4c 89 ef             	mov    %r13,%rdi
   21fc4:	e8 30 c0 ff ff       	call   1dff9 <_Ux86_64_getcontext>
   21fc9:	85 c0                	test   %eax,%eax
   21fcb:	78 53                	js     22020 <_Unwind_RaiseException+0xa0>
   21fcd:	48 8d ac 24 90 04 00 	lea    0x490(%rsp),%rbp
   21fd4:	00 
   21fd5:	4c 89 ee             	mov    %r13,%rsi
   21fd8:	48 89 ef             	mov    %rbp,%rdi
   21fdb:	e8 10 ba ff ff       	call   1d9f0 <_ULx86_64_init_local>
   21fe0:	85 c0                	test   %eax,%eax
   21fe2:	78 3c                	js     22020 <_Unwind_RaiseException+0xa0>
   21fe4:	4c 8d 64 24 20       	lea    0x20(%rsp),%r12
   21fe9:	eb 1e                	jmp    22009 <_Unwind_RaiseException+0x89>
   21feb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   21ff0:	4c 89 e6             	mov    %r12,%rsi
   21ff3:	48 89 ef             	mov    %rbp,%rdi
   21ff6:	e8 05 ba ff ff       	call   1da00 <_ULx86_64_get_proc_info>
   21ffb:	85 c0                	test   %eax,%eax
   21ffd:	78 21                	js     22020 <_Unwind_RaiseException+0xa0>
   21fff:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   22004:	48 85 c0             	test   %rax,%rax
   22007:	75 47                	jne    22050 <_Unwind_RaiseException+0xd0>
   22009:	48 89 ef             	mov    %rbp,%rdi
   2200c:	e8 2f bc ff ff       	call   1dc40 <_ULx86_64_step>
   22011:	85 c0                	test   %eax,%eax
   22013:	7f db                	jg     21ff0 <_Unwind_RaiseException+0x70>
   22015:	b8 05 00 00 00       	mov    $0x5,%eax
   2201a:	74 09                	je     22025 <_Unwind_RaiseException+0xa5>
   2201c:	0f 1f 40 00          	nopl   0x0(%rax)
   22020:	b8 03 00 00 00       	mov    $0x3,%eax
   22025:	48 8b 8c 24 98 08 00 	mov    0x898(%rsp),%rcx
   2202c:	00 
   2202d:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   22034:	00 00 
   22036:	0f 85 2f 01 00 00    	jne    2216b <_Unwind_RaiseException+0x1eb>
   2203c:	48 81 c4 a8 08 00 00 	add    $0x8a8,%rsp
   22043:	5b                   	pop    %rbx
   22044:	5d                   	pop    %rbp
   22045:	41 5c                	pop    %r12
   22047:	41 5d                	pop    %r13
   22049:	41 5e                	pop    %r14
   2204b:	41 5f                	pop    %r15
   2204d:	c3                   	ret    
   2204e:	66 90                	xchg   %ax,%ax
   22050:	49 89 e8             	mov    %rbp,%r8
   22053:	48 89 d9             	mov    %rbx,%rcx
   22056:	4c 89 f2             	mov    %r14,%rdx
   22059:	be 01 00 00 00       	mov    $0x1,%esi
   2205e:	bf 01 00 00 00       	mov    $0x1,%edi
   22063:	ff d0                	call   *%rax
   22065:	83 f8 08             	cmp    $0x8,%eax
   22068:	74 9f                	je     22009 <_Unwind_RaiseException+0x89>
   2206a:	83 f8 06             	cmp    $0x6,%eax
   2206d:	75 b1                	jne    22020 <_Unwind_RaiseException+0xa0>
   2206f:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   22074:	be 10 00 00 00       	mov    $0x10,%esi
   22079:	48 89 ef             	mov    %rbp,%rdi
   2207c:	e8 cf fc ff ff       	call   21d50 <_ULx86_64_get_reg>
   22081:	85 c0                	test   %eax,%eax
   22083:	78 9b                	js     22020 <_Unwind_RaiseException+0xa0>
   22085:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
   2208a:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   22091:	00 
   22092:	4c 89 ee             	mov    %r13,%rsi
   22095:	48 89 ef             	mov    %rbp,%rdi
   22098:	48 89 43 18          	mov    %rax,0x18(%rbx)
   2209c:	e8 4f b9 ff ff       	call   1d9f0 <_ULx86_64_init_local>
   220a1:	85 c0                	test   %eax,%eax
   220a3:	0f 88 77 ff ff ff    	js     22020 <_Unwind_RaiseException+0xa0>
   220a9:	4c 8b 6b 10          	mov    0x10(%rbx),%r13
   220ad:	48 8b 43 18          	mov    0x18(%rbx),%rax
   220b1:	4c 8d 74 24 70       	lea    0x70(%rsp),%r14
   220b6:	4c 8b 3b             	mov    (%rbx),%r15
   220b9:	49 83 fd 01          	cmp    $0x1,%r13
   220bd:	48 89 04 24          	mov    %rax,(%rsp)
   220c1:	45 19 e4             	sbb    %r12d,%r12d
   220c4:	41 83 e4 f8          	and    $0xfffffff8,%r12d
   220c8:	41 83 c4 0a          	add    $0xa,%r12d
   220cc:	eb 48                	jmp    22116 <_Unwind_RaiseException+0x196>
   220ce:	4d 85 ed             	test   %r13,%r13
   220d1:	74 1c                	je     220ef <_Unwind_RaiseException+0x16f>
   220d3:	4c 8b 0c 24          	mov    (%rsp),%r9
   220d7:	49 89 e8             	mov    %rbp,%r8
   220da:	48 89 d9             	mov    %rbx,%rcx
   220dd:	4c 89 fa             	mov    %r15,%rdx
   220e0:	44 89 e6             	mov    %r12d,%esi
   220e3:	bf 01 00 00 00       	mov    $0x1,%edi
   220e8:	41 ff d5             	call   *%r13
   220eb:	85 c0                	test   %eax,%eax
   220ed:	75 49                	jne    22138 <_Unwind_RaiseException+0x1b8>
   220ef:	8b 84 24 88 08 00 00 	mov    0x888(%rsp),%eax
   220f6:	85 c0                	test   %eax,%eax
   220f8:	75 3e                	jne    22138 <_Unwind_RaiseException+0x1b8>
   220fa:	4c 89 f6             	mov    %r14,%rsi
   220fd:	48 89 ef             	mov    %rbp,%rdi
   22100:	e8 fb b8 ff ff       	call   1da00 <_ULx86_64_get_proc_info>
   22105:	85 c0                	test   %eax,%eax
   22107:	78 2f                	js     22138 <_Unwind_RaiseException+0x1b8>
   22109:	4c 8b 8c 24 88 00 00 	mov    0x88(%rsp),%r9
   22110:	00 
   22111:	4d 85 c9             	test   %r9,%r9
   22114:	75 2c                	jne    22142 <_Unwind_RaiseException+0x1c2>
   22116:	48 89 ef             	mov    %rbp,%rdi
   22119:	e8 22 bb ff ff       	call   1dc40 <_ULx86_64_step>
   2211e:	85 c0                	test   %eax,%eax
   22120:	7f ac                	jg     220ce <_Unwind_RaiseException+0x14e>
   22122:	75 14                	jne    22138 <_Unwind_RaiseException+0x1b8>
   22124:	c7 84 24 88 08 00 00 	movl   $0x1,0x888(%rsp)
   2212b:	01 00 00 00 
   2212f:	41 83 cc 10          	or     $0x10,%r12d
   22133:	4d 85 ed             	test   %r13,%r13
   22136:	75 9b                	jne    220d3 <_Unwind_RaiseException+0x153>
   22138:	b8 02 00 00 00       	mov    $0x2,%eax
   2213d:	e9 e3 fe ff ff       	jmp    22025 <_Unwind_RaiseException+0xa5>
   22142:	4d 85 ed             	test   %r13,%r13
   22145:	74 3b                	je     22182 <_Unwind_RaiseException+0x202>
   22147:	49 89 e8             	mov    %rbp,%r8
   2214a:	48 89 d9             	mov    %rbx,%rcx
   2214d:	4c 89 fa             	mov    %r15,%rdx
   22150:	44 89 e6             	mov    %r12d,%esi
   22153:	bf 01 00 00 00       	mov    $0x1,%edi
   22158:	41 ff d1             	call   *%r9
   2215b:	83 f8 08             	cmp    $0x8,%eax
   2215e:	75 10                	jne    22170 <_Unwind_RaiseException+0x1f0>
   22160:	41 f6 c4 04          	test   $0x4,%r12b
   22164:	74 b0                	je     22116 <_Unwind_RaiseException+0x196>
   22166:	e8 cc 3b 00 00       	call   25d37 <abort>
   2216b:	e8 d0 19 ff ff       	call   13b40 <__stack_chk_fail>
   22170:	83 f8 07             	cmp    $0x7,%eax
   22173:	75 c3                	jne    22138 <_Unwind_RaiseException+0x1b8>
   22175:	48 89 ef             	mov    %rbp,%rdi
   22178:	e8 73 b9 ff ff       	call   1daf0 <_ULx86_64_resume>
   2217d:	e8 b5 3b 00 00       	call   25d37 <abort>
   22182:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
   22187:	be 10 00 00 00       	mov    $0x10,%esi
   2218c:	48 89 ef             	mov    %rbp,%rdi
   2218f:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   22194:	e8 b7 fb ff ff       	call   21d50 <_ULx86_64_get_reg>
   22199:	85 c0                	test   %eax,%eax
   2219b:	78 9b                	js     22138 <_Unwind_RaiseException+0x1b8>
   2219d:	48 8b 04 24          	mov    (%rsp),%rax
   221a1:	48 3b 44 24 18       	cmp    0x18(%rsp),%rax
   221a6:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   221ab:	75 9a                	jne    22147 <_Unwind_RaiseException+0x1c7>
   221ad:	41 83 cc 04          	or     $0x4,%r12d
   221b1:	eb 94                	jmp    22147 <_Unwind_RaiseException+0x1c7>
   221b3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   221ba:	00 00 00 
   221bd:	0f 1f 00             	nopl   (%rax)

00000000000221c0 <_Unwind_SetGR>:
   221c0:	f3 0f 1e fa          	endbr64 
   221c4:	e9 67 20 00 00       	jmp    24230 <_ULx86_64_set_reg>
   221c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000221d0 <_Unwind_SetIP>:
   221d0:	f3 0f 1e fa          	endbr64 
   221d4:	48 89 f2             	mov    %rsi,%rdx
   221d7:	be 10 00 00 00       	mov    $0x10,%esi
   221dc:	e9 4f 20 00 00       	jmp    24230 <_ULx86_64_set_reg>

00000000000221e1 <_Ux86_64_setcontext>:
   221e1:	4c 8b 87 a8 01 00 00 	mov    0x1a8(%rdi),%r8
   221e8:	41 d9 20             	fldenv (%r8)
   221eb:	41 0f ae 50 18       	ldmxcsr 0x18(%r8)
   221f0:	4c 8b 47 28          	mov    0x28(%rdi),%r8
   221f4:	4c 8b 4f 30          	mov    0x30(%rdi),%r9
   221f8:	48 8b 9f 80 00 00 00 	mov    0x80(%rdi),%rbx
   221ff:	48 8b 6f 78          	mov    0x78(%rdi),%rbp
   22203:	4c 8b 67 48          	mov    0x48(%rdi),%r12
   22207:	4c 8b 6f 50          	mov    0x50(%rdi),%r13
   2220b:	4c 8b 77 58          	mov    0x58(%rdi),%r14
   2220f:	4c 8b 7f 60          	mov    0x60(%rdi),%r15
   22213:	48 8b 77 70          	mov    0x70(%rdi),%rsi
   22217:	48 8b 97 88 00 00 00 	mov    0x88(%rdi),%rdx
   2221e:	48 8b 87 90 00 00 00 	mov    0x90(%rdi),%rax
   22225:	48 8b 8f 98 00 00 00 	mov    0x98(%rdi),%rcx
   2222c:	48 8b a7 a0 00 00 00 	mov    0xa0(%rdi),%rsp
   22233:	48 8b 8f a8 00 00 00 	mov    0xa8(%rdi),%rcx
   2223a:	51                   	push   %rcx
   2223b:	48 8b 8f 98 00 00 00 	mov    0x98(%rdi),%rcx
   22242:	48 8b 7f 68          	mov    0x68(%rdi),%rdi
   22246:	c3                   	ret    
   22247:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2224e:	00 00 

0000000000022250 <_ULx86_64_init>:
   22250:	f3 0f 1e fa          	endbr64 
   22254:	48 83 ec 08          	sub    $0x8,%rsp
   22258:	48 8d 3d 21 96 02 00 	lea    0x29621(%rip),%rdi        # 4b880 <_ULx86_64_lock>
   2225f:	e8 0c de fe ff       	call   10070 <sgx_spin_lock>
   22264:	85 c0                	test   %eax,%eax
   22266:	75 3d                	jne    222a5 <_ULx86_64_init+0x55>
   22268:	8b 05 3a ff 02 00    	mov    0x2ff3a(%rip),%eax        # 521a8 <_ULx86_64_init_done>
   2226e:	85 c0                	test   %eax,%eax
   22270:	75 1e                	jne    22290 <_ULx86_64_init+0x40>
   22272:	e8 b9 1e 00 00       	call   24130 <_UIx86_64_mi_init>
   22277:	e8 04 dc ff ff       	call   1fe80 <_Ux86_64_dwarf_init>
   2227c:	e8 bf 02 00 00       	call   22540 <_ULx86_64_init_mem_validate>
   22281:	e8 da 02 00 00       	call   22560 <_ULx86_64_local_addr_space_init>
   22286:	c7 05 18 ff 02 00 01 	movl   $0x1,0x2ff18(%rip)        # 521a8 <_ULx86_64_init_done>
   2228d:	00 00 00 
   22290:	48 8d 3d e9 95 02 00 	lea    0x295e9(%rip),%rdi        # 4b880 <_ULx86_64_lock>
   22297:	e8 74 de fe ff       	call   10110 <sgx_spin_unlock>
   2229c:	85 c0                	test   %eax,%eax
   2229e:	75 05                	jne    222a5 <_ULx86_64_init+0x55>
   222a0:	48 83 c4 08          	add    $0x8,%rsp
   222a4:	c3                   	ret    
   222a5:	e8 8d 3a 00 00       	call   25d37 <abort>
   222aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000222b0 <put_unwind_info>:
   222b0:	f3 0f 1e fa          	endbr64 
   222b4:	c3                   	ret    
   222b5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   222bc:	00 00 00 
   222bf:	90                   	nop

00000000000222c0 <get_static_proc_name>:
   222c0:	f3 0f 1e fa          	endbr64 
   222c4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   222c9:	c3                   	ret    
   222ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000222d0 <msync_validate>:
   222d0:	f3 0f 1e fa          	endbr64 
   222d4:	41 54                	push   %r12
   222d6:	49 89 f4             	mov    %rsi,%r12
   222d9:	55                   	push   %rbp
   222da:	48 89 fd             	mov    %rdi,%rbp
   222dd:	48 83 ec 08          	sub    $0x8,%rsp
   222e1:	e8 ba 81 fe ff       	call   a4a0 <sgx_is_within_enclave>
   222e6:	85 c0                	test   %eax,%eax
   222e8:	74 22                	je     2230c <msync_validate+0x3c>
   222ea:	4c 89 e6             	mov    %r12,%rsi
   222ed:	48 89 ef             	mov    %rbp,%rdi
   222f0:	ba 01 00 00 00       	mov    $0x1,%edx
   222f5:	e8 36 1d 00 00       	call   24030 <msync>
   222fa:	85 c0                	test   %eax,%eax
   222fc:	0f 95 c0             	setne  %al
   222ff:	48 83 c4 08          	add    $0x8,%rsp
   22303:	0f b6 c0             	movzbl %al,%eax
   22306:	5d                   	pop    %rbp
   22307:	41 5c                	pop    %r12
   22309:	f7 d8                	neg    %eax
   2230b:	c3                   	ret    
   2230c:	e8 26 3a 00 00       	call   25d37 <abort>
   22311:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   22318:	00 00 00 
   2231b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000022320 <access_fpreg>:
   22320:	f3 0f 1e fa          	endbr64 
   22324:	41 55                	push   %r13
   22326:	89 f7                	mov    %esi,%edi
   22328:	41 54                	push   %r12
   2232a:	41 89 cc             	mov    %ecx,%r12d
   2232d:	55                   	push   %rbp
   2232e:	89 f5                	mov    %esi,%ebp
   22330:	53                   	push   %rbx
   22331:	48 89 d3             	mov    %rdx,%rbx
   22334:	48 83 ec 08          	sub    $0x8,%rsp
   22338:	4d 8b a8 d0 01 00 00 	mov    0x1d0(%r8),%r13
   2233f:	e8 0c f7 ff ff       	call   21a50 <_Ux86_64_is_fpreg>
   22344:	85 c0                	test   %eax,%eax
   22346:	74 40                	je     22388 <access_fpreg+0x68>
   22348:	89 ee                	mov    %ebp,%esi
   2234a:	4c 89 ef             	mov    %r13,%rdi
   2234d:	e8 be f7 ff ff       	call   21b10 <_ULx86_64_r_uc_addr>
   22352:	48 85 c0             	test   %rax,%rax
   22355:	74 31                	je     22388 <access_fpreg+0x68>
   22357:	45 85 e4             	test   %r12d,%r12d
   2235a:	75 14                	jne    22370 <access_fpreg+0x50>
   2235c:	db 28                	fldt   (%rax)
   2235e:	31 c0                	xor    %eax,%eax
   22360:	db 3b                	fstpt  (%rbx)
   22362:	48 83 c4 08          	add    $0x8,%rsp
   22366:	5b                   	pop    %rbx
   22367:	5d                   	pop    %rbp
   22368:	41 5c                	pop    %r12
   2236a:	41 5d                	pop    %r13
   2236c:	c3                   	ret    
   2236d:	0f 1f 00             	nopl   (%rax)
   22370:	db 2b                	fldt   (%rbx)
   22372:	db 38                	fstpt  (%rax)
   22374:	48 83 c4 08          	add    $0x8,%rsp
   22378:	31 c0                	xor    %eax,%eax
   2237a:	5b                   	pop    %rbx
   2237b:	5d                   	pop    %rbp
   2237c:	41 5c                	pop    %r12
   2237e:	41 5d                	pop    %r13
   22380:	c3                   	ret    
   22381:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   22388:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   2238d:	eb d3                	jmp    22362 <access_fpreg+0x42>
   2238f:	90                   	nop

0000000000022390 <access_reg>:
   22390:	f3 0f 1e fa          	endbr64 
   22394:	41 56                	push   %r14
   22396:	89 f7                	mov    %esi,%edi
   22398:	41 55                	push   %r13
   2239a:	41 89 cd             	mov    %ecx,%r13d
   2239d:	41 54                	push   %r12
   2239f:	55                   	push   %rbp
   223a0:	89 f5                	mov    %esi,%ebp
   223a2:	53                   	push   %rbx
   223a3:	48 89 d3             	mov    %rdx,%rbx
   223a6:	4d 8b b0 d0 01 00 00 	mov    0x1d0(%r8),%r14
   223ad:	e8 9e f6 ff ff       	call   21a50 <_Ux86_64_is_fpreg>
   223b2:	85 c0                	test   %eax,%eax
   223b4:	75 42                	jne    223f8 <access_reg+0x68>
   223b6:	89 ee                	mov    %ebp,%esi
   223b8:	4c 89 f7             	mov    %r14,%rdi
   223bb:	41 89 c4             	mov    %eax,%r12d
   223be:	e8 4d f7 ff ff       	call   21b10 <_ULx86_64_r_uc_addr>
   223c3:	48 85 c0             	test   %rax,%rax
   223c6:	74 30                	je     223f8 <access_reg+0x68>
   223c8:	45 85 ed             	test   %r13d,%r13d
   223cb:	75 13                	jne    223e0 <access_reg+0x50>
   223cd:	48 8b 00             	mov    (%rax),%rax
   223d0:	48 89 03             	mov    %rax,(%rbx)
   223d3:	5b                   	pop    %rbx
   223d4:	44 89 e0             	mov    %r12d,%eax
   223d7:	5d                   	pop    %rbp
   223d8:	41 5c                	pop    %r12
   223da:	41 5d                	pop    %r13
   223dc:	41 5e                	pop    %r14
   223de:	c3                   	ret    
   223df:	90                   	nop
   223e0:	48 8b 13             	mov    (%rbx),%rdx
   223e3:	48 89 10             	mov    %rdx,(%rax)
   223e6:	44 89 e0             	mov    %r12d,%eax
   223e9:	5b                   	pop    %rbx
   223ea:	5d                   	pop    %rbp
   223eb:	41 5c                	pop    %r12
   223ed:	41 5d                	pop    %r13
   223ef:	41 5e                	pop    %r14
   223f1:	c3                   	ret    
   223f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   223f8:	41 bc fd ff ff ff    	mov    $0xfffffffd,%r12d
   223fe:	eb d3                	jmp    223d3 <access_reg+0x43>

0000000000022400 <access_mem>:
   22400:	f3 0f 1e fa          	endbr64 
   22404:	41 55                	push   %r13
   22406:	41 54                	push   %r12
   22408:	55                   	push   %rbp
   22409:	48 89 d5             	mov    %rdx,%rbp
   2240c:	53                   	push   %rbx
   2240d:	48 89 f3             	mov    %rsi,%rbx
   22410:	48 83 ec 08          	sub    $0x8,%rsp
   22414:	85 c9                	test   %ecx,%ecx
   22416:	75 28                	jne    22440 <access_mem+0x40>
   22418:	4d 85 c0             	test   %r8,%r8
   2241b:	74 0b                	je     22428 <access_mem+0x28>
   2241d:	41 8b 80 c8 01 00 00 	mov    0x1c8(%r8),%eax
   22424:	85 c0                	test   %eax,%eax
   22426:	75 30                	jne    22458 <access_mem+0x58>
   22428:	48 8b 03             	mov    (%rbx),%rax
   2242b:	48 89 45 00          	mov    %rax,0x0(%rbp)
   2242f:	31 c0                	xor    %eax,%eax
   22431:	48 83 c4 08          	add    $0x8,%rsp
   22435:	5b                   	pop    %rbx
   22436:	5d                   	pop    %rbp
   22437:	41 5c                	pop    %r12
   22439:	41 5d                	pop    %r13
   2243b:	c3                   	ret    
   2243c:	0f 1f 40 00          	nopl   0x0(%rax)
   22440:	48 8b 02             	mov    (%rdx),%rax
   22443:	48 89 06             	mov    %rax,(%rsi)
   22446:	48 83 c4 08          	add    $0x8,%rsp
   2244a:	31 c0                	xor    %eax,%eax
   2244c:	5b                   	pop    %rbx
   2244d:	5d                   	pop    %rbp
   2244e:	41 5c                	pop    %r12
   22450:	41 5d                	pop    %r13
   22452:	c3                   	ret    
   22453:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   22458:	48 8d 46 07          	lea    0x7(%rsi),%rax
   2245c:	49 89 dd             	mov    %rbx,%r13
   2245f:	48 31 f0             	xor    %rsi,%rax
   22462:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   22468:	48 83 f8 01          	cmp    $0x1,%rax
   2246c:	48 19 f6             	sbb    %rsi,%rsi
   2246f:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
   22476:	48 81 c6 00 20 00 00 	add    $0x2000,%rsi
   2247d:	49 81 e5 00 f0 ff ff 	and    $0xfffffffffffff000,%r13
   22484:	0f 84 87 00 00 00    	je     22511 <access_mem+0x111>
   2248a:	4c 8d 25 0f 94 02 00 	lea    0x2940f(%rip),%r12        # 4b8a0 <last_good_addr>
   22491:	4c 89 e0             	mov    %r12,%rax
   22494:	49 8d 4c 24 20       	lea    0x20(%r12),%rcx
   22499:	48 8b 10             	mov    (%rax),%rdx
   2249c:	48 85 d2             	test   %rdx,%rdx
   2249f:	74 05                	je     224a6 <access_mem+0xa6>
   224a1:	49 39 d5             	cmp    %rdx,%r13
   224a4:	74 82                	je     22428 <access_mem+0x28>
   224a6:	48 83 c0 08          	add    $0x8,%rax
   224aa:	48 39 c8             	cmp    %rcx,%rax
   224ad:	75 ea                	jne    22499 <access_mem+0x99>
   224af:	4c 89 ef             	mov    %r13,%rdi
   224b2:	ff 15 08 94 02 00    	call   *0x29408(%rip)        # 4b8c0 <mem_validate_func>
   224b8:	83 f8 ff             	cmp    $0xffffffff,%eax
   224bb:	74 54                	je     22511 <access_mem+0x111>
   224bd:	8b 05 c1 93 02 00    	mov    0x293c1(%rip),%eax        # 4b884 <lga_victim>
   224c3:	b9 04 00 00 00       	mov    $0x4,%ecx
   224c8:	48 63 d0             	movslq %eax,%rdx
   224cb:	49 83 3c d4 00       	cmpq   $0x0,(%r12,%rdx,8)
   224d0:	74 36                	je     22508 <access_mem+0x108>
   224d2:	83 c0 01             	add    $0x1,%eax
   224d5:	99                   	cltd   
   224d6:	c1 ea 1e             	shr    $0x1e,%edx
   224d9:	01 d0                	add    %edx,%eax
   224db:	83 e0 03             	and    $0x3,%eax
   224de:	29 d0                	sub    %edx,%eax
   224e0:	83 e9 01             	sub    $0x1,%ecx
   224e3:	75 e3                	jne    224c8 <access_mem+0xc8>
   224e5:	48 63 d0             	movslq %eax,%rdx
   224e8:	83 c0 01             	add    $0x1,%eax
   224eb:	4d 89 2c d4          	mov    %r13,(%r12,%rdx,8)
   224ef:	99                   	cltd   
   224f0:	c1 ea 1e             	shr    $0x1e,%edx
   224f3:	01 d0                	add    %edx,%eax
   224f5:	83 e0 03             	and    $0x3,%eax
   224f8:	29 d0                	sub    %edx,%eax
   224fa:	89 05 84 93 02 00    	mov    %eax,0x29384(%rip)        # 4b884 <lga_victim>
   22500:	e9 23 ff ff ff       	jmp    22428 <access_mem+0x28>
   22505:	0f 1f 00             	nopl   (%rax)
   22508:	4d 89 2c d4          	mov    %r13,(%r12,%rdx,8)
   2250c:	e9 17 ff ff ff       	jmp    22428 <access_mem+0x28>
   22511:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   22516:	e9 16 ff ff ff       	jmp    22431 <access_mem+0x31>
   2251b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000022520 <get_dyn_info_list_addr>:
   22520:	f3 0f 1e fa          	endbr64 
   22524:	53                   	push   %rbx
   22525:	48 89 f3             	mov    %rsi,%rbx
   22528:	e8 73 1c 00 00       	call   241a0 <_U_dyn_info_list_addr>
   2252d:	48 89 03             	mov    %rax,(%rbx)
   22530:	31 c0                	xor    %eax,%eax
   22532:	5b                   	pop    %rbx
   22533:	c3                   	ret    
   22534:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2253b:	00 00 00 
   2253e:	66 90                	xchg   %ax,%ax

0000000000022540 <_ULx86_64_init_mem_validate>:
   22540:	f3 0f 1e fa          	endbr64 
   22544:	48 8d 05 85 fd ff ff 	lea    -0x27b(%rip),%rax        # 222d0 <msync_validate>
   2254b:	48 89 05 6e 93 02 00 	mov    %rax,0x2936e(%rip)        # 4b8c0 <mem_validate_func>
   22552:	c3                   	ret    
   22553:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2255a:	00 00 00 
   2255d:	0f 1f 00             	nopl   (%rax)

0000000000022560 <_ULx86_64_local_addr_space_init>:
   22560:	f3 0f 1e fa          	endbr64 
   22564:	48 83 ec 08          	sub    $0x8,%rsp
   22568:	48 8d 3d 71 93 02 00 	lea    0x29371(%rip),%rdi        # 4b8e0 <local_addr_space>
   2256f:	ba 90 66 00 00       	mov    $0x6690,%edx
   22574:	31 f6                	xor    %esi,%esi
   22576:	e8 95 14 ff ff       	call   13a10 <memset>
   2257b:	31 d2                	xor    %edx,%edx
   2257d:	31 f6                	xor    %esi,%esi
   2257f:	c7 05 97 93 02 00 01 	movl   $0x1,0x29397(%rip)        # 4b920 <local_addr_space+0x40>
   22586:	00 00 00 
   22589:	48 89 c7             	mov    %rax,%rdi
   2258c:	48 8d 05 dd 18 00 00 	lea    0x18dd(%rip),%rax        # 23e70 <_ULx86_64_dwarf_find_proc_info>
   22593:	48 89 05 46 93 02 00 	mov    %rax,0x29346(%rip)        # 4b8e0 <local_addr_space>
   2259a:	48 8d 05 0f fd ff ff 	lea    -0x2f1(%rip),%rax        # 222b0 <put_unwind_info>
   225a1:	48 89 05 40 93 02 00 	mov    %rax,0x29340(%rip)        # 4b8e8 <local_addr_space+0x8>
   225a8:	48 8d 05 71 ff ff ff 	lea    -0x8f(%rip),%rax        # 22520 <get_dyn_info_list_addr>
   225af:	48 89 05 3a 93 02 00 	mov    %rax,0x2933a(%rip)        # 4b8f0 <local_addr_space+0x10>
   225b6:	48 8d 05 43 fe ff ff 	lea    -0x1bd(%rip),%rax        # 22400 <access_mem>
   225bd:	48 89 05 34 93 02 00 	mov    %rax,0x29334(%rip)        # 4b8f8 <local_addr_space+0x18>
   225c4:	48 8d 05 c5 fd ff ff 	lea    -0x23b(%rip),%rax        # 22390 <access_reg>
   225cb:	48 89 05 2e 93 02 00 	mov    %rax,0x2932e(%rip)        # 4b900 <local_addr_space+0x20>
   225d2:	48 8d 05 47 fd ff ff 	lea    -0x2b9(%rip),%rax        # 22320 <access_fpreg>
   225d9:	48 89 05 28 93 02 00 	mov    %rax,0x29328(%rip)        # 4b908 <local_addr_space+0x28>
   225e0:	48 8d 05 b9 b4 ff ff 	lea    -0x4b47(%rip),%rax        # 1daa0 <_ULx86_64_local_resume>
   225e7:	48 89 05 22 93 02 00 	mov    %rax,0x29322(%rip)        # 4b910 <local_addr_space+0x30>
   225ee:	48 8d 05 cb fc ff ff 	lea    -0x335(%rip),%rax        # 222c0 <get_static_proc_name>
   225f5:	48 89 05 1c 93 02 00 	mov    %rax,0x2931c(%rip)        # 4b918 <local_addr_space+0x38>
   225fc:	e8 3f 1b 00 00       	call   24140 <_Ux86_64_flush_cache>
   22601:	66 0f ef c0          	pxor   %xmm0,%xmm0
   22605:	c7 05 75 92 02 00 00 	movl   $0x0,0x29275(%rip)        # 4b884 <lga_victim>
   2260c:	00 00 00 
   2260f:	0f 29 05 8a 92 02 00 	movaps %xmm0,0x2928a(%rip)        # 4b8a0 <last_good_addr>
   22616:	0f 29 05 93 92 02 00 	movaps %xmm0,0x29293(%rip)        # 4b8b0 <last_good_addr+0x10>
   2261d:	48 83 c4 08          	add    $0x8,%rsp
   22621:	c3                   	ret    
   22622:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   22629:	00 00 00 
   2262c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000022630 <_ULx86_64_access_reg>:
   22630:	f3 0f 1e fa          	endbr64 
   22634:	48 83 ec 18          	sub    $0x18,%rsp
   22638:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2263f:	00 00 
   22641:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   22646:	31 c0                	xor    %eax,%eax
   22648:	83 fe 11             	cmp    $0x11,%esi
   2264b:	0f 87 54 fb fd ff    	ja     21a5 <_ULx86_64_access_reg.cold>
   22651:	4c 8d 05 0c 4f 00 00 	lea    0x4f0c(%rip),%r8        # 27564 <_ULx86_64_dwarf_to_unw_regnum_map+0x14>
   22658:	41 89 c9             	mov    %ecx,%r9d
   2265b:	89 f1                	mov    %esi,%ecx
   2265d:	49 63 04 88          	movslq (%r8,%rcx,4),%rax
   22661:	4c 01 c0             	add    %r8,%rax
   22664:	3e ff e0             	notrack jmp *%rax
   22667:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2266e:	00 00 
   22670:	45 85 c9             	test   %r9d,%r9d
   22673:	0f 85 7d 02 00 00    	jne    228f6 <_ULx86_64_access_reg+0x2c6>
   22679:	48 8b 47 10          	mov    0x10(%rdi),%rax
   2267d:	48 89 02             	mov    %rax,(%rdx)
   22680:	31 c0                	xor    %eax,%eax
   22682:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   22688:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   2268d:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
   22694:	00 00 
   22696:	0f 85 64 02 00 00    	jne    22900 <_ULx86_64_access_reg+0x2d0>
   2269c:	48 83 c4 18          	add    $0x18,%rsp
   226a0:	c3                   	ret    
   226a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   226a8:	89 f1                	mov    %esi,%ecx
   226aa:	b8 01 00 00 00       	mov    $0x1,%eax
   226af:	d3 e0                	shl    %cl,%eax
   226b1:	8b 4f 38             	mov    0x38(%rdi),%ecx
   226b4:	45 85 c9             	test   %r9d,%r9d
   226b7:	0f 85 fb 01 00 00    	jne    228b8 <_ULx86_64_access_reg+0x288>
   226bd:	85 c1                	test   %eax,%ecx
   226bf:	0f 85 0b 02 00 00    	jne    228d0 <_ULx86_64_access_reg+0x2a0>
   226c5:	48 63 c6             	movslq %esi,%rax
   226c8:	48 83 c0 04          	add    $0x4,%rax
   226cc:	48 c1 e0 04          	shl    $0x4,%rax
   226d0:	48 01 f8             	add    %rdi,%rax
   226d3:	48 8b 30             	mov    (%rax),%rsi
   226d6:	48 8b 40 08          	mov    0x8(%rax),%rax
   226da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   226e0:	48 85 f6             	test   %rsi,%rsi
   226e3:	0f 84 03 02 00 00    	je     228ec <_ULx86_64_access_reg+0x2bc>
   226e9:	a8 02                	test   $0x2,%al
   226eb:	0f 85 97 01 00 00    	jne    22888 <_ULx86_64_access_reg+0x258>
   226f1:	48 85 c0             	test   %rax,%rax
   226f4:	0f 84 a6 01 00 00    	je     228a0 <_ULx86_64_access_reg+0x270>
   226fa:	48 89 32             	mov    %rsi,(%rdx)
   226fd:	31 c0                	xor    %eax,%eax
   226ff:	eb 87                	jmp    22688 <_ULx86_64_access_reg+0x58>
   22701:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   22708:	48 8b 77 60          	mov    0x60(%rdi),%rsi
   2270c:	48 8b 47 68          	mov    0x68(%rdi),%rax
   22710:	45 85 c9             	test   %r9d,%r9d
   22713:	74 cb                	je     226e0 <_ULx86_64_access_reg+0xb0>
   22715:	48 8b 12             	mov    (%rdx),%rdx
   22718:	48 89 14 24          	mov    %rdx,(%rsp)
   2271c:	48 85 f6             	test   %rsi,%rsi
   2271f:	0f 84 bd 01 00 00    	je     228e2 <_ULx86_64_access_reg+0x2b2>
   22725:	4c 8b 4f 08          	mov    0x8(%rdi),%r9
   22729:	4c 8b 07             	mov    (%rdi),%r8
   2272c:	48 89 e2             	mov    %rsp,%rdx
   2272f:	b9 01 00 00 00       	mov    $0x1,%ecx
   22734:	4c 89 cf             	mov    %r9,%rdi
   22737:	a8 02                	test   $0x2,%al
   22739:	0f 84 39 01 00 00    	je     22878 <_ULx86_64_access_reg+0x248>
   2273f:	41 ff 51 20          	call   *0x20(%r9)
   22743:	e9 40 ff ff ff       	jmp    22688 <_ULx86_64_access_reg+0x58>
   22748:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2274f:	00 
   22750:	48 8b b7 a0 00 00 00 	mov    0xa0(%rdi),%rsi
   22757:	48 8b 87 a8 00 00 00 	mov    0xa8(%rdi),%rax
   2275e:	eb b0                	jmp    22710 <_ULx86_64_access_reg+0xe0>
   22760:	45 85 c9             	test   %r9d,%r9d
   22763:	74 07                	je     2276c <_ULx86_64_access_reg+0x13c>
   22765:	48 8b 02             	mov    (%rdx),%rax
   22768:	48 89 47 18          	mov    %rax,0x18(%rdi)
   2276c:	48 8b b7 40 01 00 00 	mov    0x140(%rdi),%rsi
   22773:	48 8b 87 48 01 00 00 	mov    0x148(%rdi),%rax
   2277a:	eb 94                	jmp    22710 <_ULx86_64_access_reg+0xe0>
   2277c:	0f 1f 40 00          	nopl   0x0(%rax)
   22780:	48 8b b7 30 01 00 00 	mov    0x130(%rdi),%rsi
   22787:	48 8b 87 38 01 00 00 	mov    0x138(%rdi),%rax
   2278e:	eb 80                	jmp    22710 <_ULx86_64_access_reg+0xe0>
   22790:	48 8b b7 80 00 00 00 	mov    0x80(%rdi),%rsi
   22797:	48 8b 87 88 00 00 00 	mov    0x88(%rdi),%rax
   2279e:	e9 6d ff ff ff       	jmp    22710 <_ULx86_64_access_reg+0xe0>
   227a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   227a8:	48 8b b7 90 00 00 00 	mov    0x90(%rdi),%rsi
   227af:	48 8b 87 98 00 00 00 	mov    0x98(%rdi),%rax
   227b6:	e9 55 ff ff ff       	jmp    22710 <_ULx86_64_access_reg+0xe0>
   227bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   227c0:	48 8b 77 70          	mov    0x70(%rdi),%rsi
   227c4:	48 8b 47 78          	mov    0x78(%rdi),%rax
   227c8:	e9 43 ff ff ff       	jmp    22710 <_ULx86_64_access_reg+0xe0>
   227cd:	0f 1f 00             	nopl   (%rax)
   227d0:	48 8b b7 c0 00 00 00 	mov    0xc0(%rdi),%rsi
   227d7:	48 8b 87 c8 00 00 00 	mov    0xc8(%rdi),%rax
   227de:	e9 2d ff ff ff       	jmp    22710 <_ULx86_64_access_reg+0xe0>
   227e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   227e8:	48 8b b7 d0 00 00 00 	mov    0xd0(%rdi),%rsi
   227ef:	48 8b 87 d8 00 00 00 	mov    0xd8(%rdi),%rax
   227f6:	e9 15 ff ff ff       	jmp    22710 <_ULx86_64_access_reg+0xe0>
   227fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   22800:	48 8b b7 e0 00 00 00 	mov    0xe0(%rdi),%rsi
   22807:	48 8b 87 e8 00 00 00 	mov    0xe8(%rdi),%rax
   2280e:	e9 fd fe ff ff       	jmp    22710 <_ULx86_64_access_reg+0xe0>
   22813:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   22818:	48 8b b7 f0 00 00 00 	mov    0xf0(%rdi),%rsi
   2281f:	48 8b 87 f8 00 00 00 	mov    0xf8(%rdi),%rax
   22826:	e9 e5 fe ff ff       	jmp    22710 <_ULx86_64_access_reg+0xe0>
   2282b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   22830:	48 8b b7 00 01 00 00 	mov    0x100(%rdi),%rsi
   22837:	48 8b 87 08 01 00 00 	mov    0x108(%rdi),%rax
   2283e:	e9 cd fe ff ff       	jmp    22710 <_ULx86_64_access_reg+0xe0>
   22843:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   22848:	48 8b b7 10 01 00 00 	mov    0x110(%rdi),%rsi
   2284f:	48 8b 87 18 01 00 00 	mov    0x118(%rdi),%rax
   22856:	e9 b5 fe ff ff       	jmp    22710 <_ULx86_64_access_reg+0xe0>
   2285b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   22860:	48 8b b7 20 01 00 00 	mov    0x120(%rdi),%rsi
   22867:	48 8b 87 28 01 00 00 	mov    0x128(%rdi),%rax
   2286e:	e9 9d fe ff ff       	jmp    22710 <_ULx86_64_access_reg+0xe0>
   22873:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   22878:	41 ff 51 18          	call   *0x18(%r9)
   2287c:	e9 07 fe ff ff       	jmp    22688 <_ULx86_64_access_reg+0x58>
   22881:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   22888:	48 8b 47 08          	mov    0x8(%rdi),%rax
   2288c:	4c 8b 07             	mov    (%rdi),%r8
   2288f:	31 c9                	xor    %ecx,%ecx
   22891:	48 89 c7             	mov    %rax,%rdi
   22894:	ff 50 20             	call   *0x20(%rax)
   22897:	e9 ec fd ff ff       	jmp    22688 <_ULx86_64_access_reg+0x58>
   2289c:	0f 1f 40 00          	nopl   0x0(%rax)
   228a0:	48 8b 47 08          	mov    0x8(%rdi),%rax
   228a4:	4c 8b 07             	mov    (%rdi),%r8
   228a7:	31 c9                	xor    %ecx,%ecx
   228a9:	48 89 c7             	mov    %rax,%rdi
   228ac:	ff 50 18             	call   *0x18(%rax)
   228af:	e9 d4 fd ff ff       	jmp    22688 <_ULx86_64_access_reg+0x58>
   228b4:	0f 1f 40 00          	nopl   0x0(%rax)
   228b8:	48 8b 12             	mov    (%rdx),%rdx
   228bb:	09 c8                	or     %ecx,%eax
   228bd:	48 63 f6             	movslq %esi,%rsi
   228c0:	48 89 54 f7 28       	mov    %rdx,0x28(%rdi,%rsi,8)
   228c5:	89 47 38             	mov    %eax,0x38(%rdi)
   228c8:	31 c0                	xor    %eax,%eax
   228ca:	e9 b9 fd ff ff       	jmp    22688 <_ULx86_64_access_reg+0x58>
   228cf:	90                   	nop
   228d0:	48 63 f6             	movslq %esi,%rsi
   228d3:	48 8b 44 f7 28       	mov    0x28(%rdi,%rsi,8),%rax
   228d8:	48 89 02             	mov    %rax,(%rdx)
   228db:	31 c0                	xor    %eax,%eax
   228dd:	e9 a6 fd ff ff       	jmp    22688 <_ULx86_64_access_reg+0x58>
   228e2:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   228e7:	e9 9c fd ff ff       	jmp    22688 <_ULx86_64_access_reg+0x58>
   228ec:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   228f1:	e9 92 fd ff ff       	jmp    22688 <_ULx86_64_access_reg+0x58>
   228f6:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   228fb:	e9 88 fd ff ff       	jmp    22688 <_ULx86_64_access_reg+0x58>
   22900:	e8 3b 12 ff ff       	call   13b40 <__stack_chk_fail>
   22905:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2290c:	00 00 00 
   2290f:	90                   	nop

0000000000022910 <_ULx86_64_access_fpreg>:
   22910:	f3 0f 1e fa          	endbr64 
   22914:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   22919:	c3                   	ret    
   2291a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000022920 <_ULx86_64_stash_frame>:
   22920:	f3 0f 1e fa          	endbr64 
   22924:	41 57                	push   %r15
   22926:	41 56                	push   %r14
   22928:	41 55                	push   %r13
   2292a:	41 54                	push   %r12
   2292c:	55                   	push   %rbp
   2292d:	48 89 fd             	mov    %rdi,%rbp
   22930:	53                   	push   %rbx
   22931:	48 89 f3             	mov    %rsi,%rbx
   22934:	48 83 ec 18          	sub    $0x18,%rsp
   22938:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2293f:	00 00 
   22941:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   22946:	31 c0                	xor    %eax,%eax
   22948:	80 7e 19 04          	cmpb   $0x4,0x19(%rsi)
   2294c:	0f 84 6e 01 00 00    	je     22ac0 <_ULx86_64_stash_frame+0x1a0>
   22952:	f6 85 b0 01 00 00 07 	testb  $0x7,0x1b0(%rbp)
   22959:	74 25                	je     22980 <_ULx86_64_stash_frame+0x60>
   2295b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   22960:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
   22967:	00 00 
   22969:	0f 85 5d 02 00 00    	jne    22bcc <_ULx86_64_stash_frame+0x2ac>
   2296f:	48 83 c4 18          	add    $0x18,%rsp
   22973:	5b                   	pop    %rbx
   22974:	5d                   	pop    %rbp
   22975:	41 5c                	pop    %r12
   22977:	41 5d                	pop    %r13
   22979:	41 5e                	pop    %r14
   2297b:	41 5f                	pop    %r15
   2297d:	c3                   	ret    
   2297e:	66 90                	xchg   %ax,%ax
   22980:	80 7b 19 03          	cmpb   $0x3,0x19(%rbx)
   22984:	75 d5                	jne    2295b <_ULx86_64_stash_frame+0x3b>
   22986:	4c 8b a3 a8 00 00 00 	mov    0xa8(%rbx),%r12
   2298d:	49 8d 44 24 fa       	lea    -0x6(%r12),%rax
   22992:	48 83 f8 01          	cmp    $0x1,%rax
   22996:	77 c3                	ja     2295b <_ULx86_64_stash_frame+0x3b>
   22998:	4c 8b ab b0 00 00 00 	mov    0xb0(%rbx),%r13
   2299f:	4c 89 ef             	mov    %r13,%rdi
   229a2:	e8 c9 23 00 00       	call   24d70 <labs>
   229a7:	48 3d ff ff ff 0f    	cmp    $0xfffffff,%rax
   229ad:	7f ac                	jg     2295b <_ULx86_64_stash_frame+0x3b>
   229af:	48 8b 13             	mov    (%rbx),%rdx
   229b2:	48 8b 45 10          	mov    0x10(%rbp),%rax
   229b6:	48 c1 e2 04          	shl    $0x4,%rdx
   229ba:	48 83 e8 08          	sub    $0x8,%rax
   229be:	48 39 44 2a 40       	cmp    %rax,0x40(%rdx,%rbp,1)
   229c3:	75 96                	jne    2295b <_ULx86_64_stash_frame+0x3b>
   229c5:	44 0f b6 73 0e       	movzbl 0xe(%rbx),%r14d
   229ca:	41 80 fe 01          	cmp    $0x1,%r14b
   229ce:	0f 86 4a 01 00 00    	jbe    22b1e <_ULx86_64_stash_frame+0x1fe>
   229d4:	41 80 fe 02          	cmp    $0x2,%r14b
   229d8:	75 81                	jne    2295b <_ULx86_64_stash_frame+0x3b>
   229da:	4c 8b 7b 50          	mov    0x50(%rbx),%r15
   229de:	4c 89 ff             	mov    %r15,%rdi
   229e1:	e8 8a 23 00 00       	call   24d70 <labs>
   229e6:	48 3d ff 3f 00 00    	cmp    $0x3fff,%rax
   229ec:	0f 8f 69 ff ff ff    	jg     2295b <_ULx86_64_stash_frame+0x3b>
   229f2:	49 83 ff ff          	cmp    $0xffffffffffffffff,%r15
   229f6:	0f 84 5f ff ff ff    	je     2295b <_ULx86_64_stash_frame+0x3b>
   229fc:	0f b6 43 0f          	movzbl 0xf(%rbx),%eax
   22a00:	3c 01                	cmp    $0x1,%al
   22a02:	0f 86 67 01 00 00    	jbe    22b6f <_ULx86_64_stash_frame+0x24f>
   22a08:	3c 02                	cmp    $0x2,%al
   22a0a:	0f 85 4b ff ff ff    	jne    2295b <_ULx86_64_stash_frame+0x3b>
   22a10:	4c 8b 7b 58          	mov    0x58(%rbx),%r15
   22a14:	4c 89 ff             	mov    %r15,%rdi
   22a17:	e8 54 23 00 00       	call   24d70 <labs>
   22a1c:	48 3d ff 3f 00 00    	cmp    $0x3fff,%rax
   22a22:	0f 8f 33 ff ff ff    	jg     2295b <_ULx86_64_stash_frame+0x3b>
   22a28:	49 83 ff ff          	cmp    $0xffffffffffffffff,%r15
   22a2c:	0f 84 29 ff ff ff    	je     2295b <_ULx86_64_stash_frame+0x3b>
   22a32:	31 c0                	xor    %eax,%eax
   22a34:	49 83 fc 07          	cmp    $0x7,%r12
   22a38:	4c 89 ea             	mov    %r13,%rdx
   22a3b:	b9 ff ff ff 1f       	mov    $0x1fffffff,%ecx
   22a40:	0f 94 c0             	sete   %al
   22a43:	48 c1 e2 05          	shl    $0x5,%rdx
   22a47:	48 c1 e0 04          	shl    $0x4,%rax
   22a4b:	48 c1 e1 05          	shl    $0x5,%rcx
   22a4f:	48 21 ca             	and    %rcx,%rdx
   22a52:	48 83 c8 06          	or     $0x6,%rax
   22a56:	48 09 d0             	or     %rdx,%rax
   22a59:	48 ba 08 00 00 00 fc 	movabs $0xfffffffc00000008,%rdx
   22a60:	ff ff ff 
   22a63:	48 23 95 b0 01 00 00 	and    0x1b0(%rbp),%rdx
   22a6a:	48 09 d0             	or     %rdx,%rax
   22a6d:	48 89 85 b0 01 00 00 	mov    %rax,0x1b0(%rbp)
   22a74:	41 80 fe 02          	cmp    $0x2,%r14b
   22a78:	75 26                	jne    22aa0 <_ULx86_64_stash_frame+0x180>
   22a7a:	8b 43 50             	mov    0x50(%rbx),%eax
   22a7d:	25 ff 7f 00 00       	and    $0x7fff,%eax
   22a82:	8d 14 85 00 00 00 00 	lea    0x0(,%rax,4),%edx
   22a89:	8b 85 b4 01 00 00    	mov    0x1b4(%rbp),%eax
   22a8f:	25 03 00 fe ff       	and    $0xfffe0003,%eax
   22a94:	09 d0                	or     %edx,%eax
   22a96:	89 85 b4 01 00 00    	mov    %eax,0x1b4(%rbp)
   22a9c:	4c 8b 7b 58          	mov    0x58(%rbx),%r15
   22aa0:	0f b7 85 b6 01 00 00 	movzwl 0x1b6(%rbp),%eax
   22aa7:	45 01 ff             	add    %r15d,%r15d
   22aaa:	83 e0 01             	and    $0x1,%eax
   22aad:	44 09 f8             	or     %r15d,%eax
   22ab0:	66 89 85 b6 01 00 00 	mov    %ax,0x1b6(%rbp)
   22ab7:	e9 9f fe ff ff       	jmp    2295b <_ULx86_64_stash_frame+0x3b>
   22abc:	0f 1f 40 00          	nopl   0x0(%rax)
   22ac0:	80 7e 0e 04          	cmpb   $0x4,0xe(%rsi)
   22ac4:	0f 85 91 fe ff ff    	jne    2295b <_ULx86_64_stash_frame+0x3b>
   22aca:	48 8b 56 50          	mov    0x50(%rsi),%rdx
   22ace:	48 8b b6 a8 00 00 00 	mov    0xa8(%rsi),%rsi
   22ad5:	48 89 e1             	mov    %rsp,%rcx
   22ad8:	e8 03 01 00 00       	call   22be0 <_ULx86_64_dwarf_stack_aligned>
   22add:	85 c0                	test   %eax,%eax
   22adf:	0f 84 6d fe ff ff    	je     22952 <_ULx86_64_stash_frame+0x32>
   22ae5:	48 ba e0 ff ff ff 03 	movabs $0x3ffffffe0,%rdx
   22aec:	00 00 00 
   22aef:	48 8b 04 24          	mov    (%rsp),%rax
   22af3:	48 c1 e0 05          	shl    $0x5,%rax
   22af7:	48 21 d0             	and    %rdx,%rax
   22afa:	48 ba 08 00 00 00 fc 	movabs $0xfffffffc00000008,%rdx
   22b01:	ff ff ff 
   22b04:	48 23 95 b0 01 00 00 	and    0x1b0(%rbp),%rdx
   22b0b:	48 83 c8 05          	or     $0x5,%rax
   22b0f:	48 09 d0             	or     %rdx,%rax
   22b12:	48 89 85 b0 01 00 00 	mov    %rax,0x1b0(%rbp)
   22b19:	e9 34 fe ff ff       	jmp    22952 <_ULx86_64_stash_frame+0x32>
   22b1e:	0f b6 43 0f          	movzbl 0xf(%rbx),%eax
   22b22:	3c 01                	cmp    $0x1,%al
   22b24:	0f 87 de fe ff ff    	ja     22a08 <_ULx86_64_stash_frame+0xe8>
   22b2a:	48 ba e0 ff ff ff 03 	movabs $0x3ffffffe0,%rdx
   22b31:	00 00 00 
   22b34:	31 c0                	xor    %eax,%eax
   22b36:	49 83 fc 07          	cmp    $0x7,%r12
   22b3a:	0f 94 c0             	sete   %al
   22b3d:	49 c1 e5 05          	shl    $0x5,%r13
   22b41:	48 c1 e0 04          	shl    $0x4,%rax
   22b45:	49 21 d5             	and    %rdx,%r13
   22b48:	48 ba 08 00 00 00 fc 	movabs $0xfffffffc00000008,%rdx
   22b4f:	ff ff ff 
   22b52:	48 23 95 b0 01 00 00 	and    0x1b0(%rbp),%rdx
   22b59:	48 83 c8 06          	or     $0x6,%rax
   22b5d:	4c 09 e8             	or     %r13,%rax
   22b60:	48 09 d0             	or     %rdx,%rax
   22b63:	48 89 85 b0 01 00 00 	mov    %rax,0x1b0(%rbp)
   22b6a:	e9 ec fd ff ff       	jmp    2295b <_ULx86_64_stash_frame+0x3b>
   22b6f:	31 c0                	xor    %eax,%eax
   22b71:	49 83 fc 07          	cmp    $0x7,%r12
   22b75:	4c 89 ea             	mov    %r13,%rdx
   22b78:	b9 ff ff ff 1f       	mov    $0x1fffffff,%ecx
   22b7d:	0f 94 c0             	sete   %al
   22b80:	48 c1 e1 05          	shl    $0x5,%rcx
   22b84:	48 c1 e0 04          	shl    $0x4,%rax
   22b88:	48 c1 e2 05          	shl    $0x5,%rdx
   22b8c:	48 21 ca             	and    %rcx,%rdx
   22b8f:	48 83 c8 06          	or     $0x6,%rax
   22b93:	b9 ff 7f 00 00       	mov    $0x7fff,%ecx
   22b98:	48 09 d0             	or     %rdx,%rax
   22b9b:	4c 89 fa             	mov    %r15,%rdx
   22b9e:	48 c1 e1 22          	shl    $0x22,%rcx
   22ba2:	48 c1 e2 22          	shl    $0x22,%rdx
   22ba6:	48 21 ca             	and    %rcx,%rdx
   22ba9:	48 09 d0             	or     %rdx,%rax
   22bac:	48 ba 08 00 00 00 00 	movabs $0xfffe000000000008,%rdx
   22bb3:	00 fe ff 
   22bb6:	48 23 95 b0 01 00 00 	and    0x1b0(%rbp),%rdx
   22bbd:	48 09 d0             	or     %rdx,%rax
   22bc0:	48 89 85 b0 01 00 00 	mov    %rax,0x1b0(%rbp)
   22bc7:	e9 8f fd ff ff       	jmp    2295b <_ULx86_64_stash_frame+0x3b>
   22bcc:	e8 6f 0f ff ff       	call   13b40 <__stack_chk_fail>
   22bd1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   22bd8:	00 00 00 
   22bdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000022be0 <_ULx86_64_dwarf_stack_aligned>:
   22be0:	f3 0f 1e fa          	endbr64 
   22be4:	41 54                	push   %r12
   22be6:	49 89 f4             	mov    %rsi,%r12
   22be9:	55                   	push   %rbp
   22bea:	48 89 cd             	mov    %rcx,%rbp
   22bed:	53                   	push   %rbx
   22bee:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   22bf2:	48 89 d3             	mov    %rdx,%rbx
   22bf5:	e8 06 f1 ff ff       	call   21d00 <_Ux86_64_get_accessors>
   22bfa:	31 c9                	xor    %ecx,%ecx
   22bfc:	31 ff                	xor    %edi,%edi
   22bfe:	66 90                	xchg   %ax,%ax
   22c00:	0f b6 13             	movzbl (%rbx),%edx
   22c03:	49 89 d8             	mov    %rbx,%r8
   22c06:	48 83 c3 01          	add    $0x1,%rbx
   22c0a:	48 89 d0             	mov    %rdx,%rax
   22c0d:	83 e0 7f             	and    $0x7f,%eax
   22c10:	48 d3 e0             	shl    %cl,%rax
   22c13:	48 83 c1 07          	add    $0x7,%rcx
   22c17:	48 09 c7             	or     %rax,%rdi
   22c1a:	84 d2                	test   %dl,%dl
   22c1c:	78 e2                	js     22c00 <_ULx86_64_dwarf_stack_aligned+0x20>
   22c1e:	31 c0                	xor    %eax,%eax
   22c20:	48 83 ff 02          	cmp    $0x2,%rdi
   22c24:	75 05                	jne    22c2b <_ULx86_64_dwarf_stack_aligned+0x4b>
   22c26:	80 3b 76             	cmpb   $0x76,(%rbx)
   22c29:	74 05                	je     22c30 <_ULx86_64_dwarf_stack_aligned+0x50>
   22c2b:	5b                   	pop    %rbx
   22c2c:	5d                   	pop    %rbp
   22c2d:	41 5c                	pop    %r12
   22c2f:	c3                   	ret    
   22c30:	49 83 c0 02          	add    $0x2,%r8
   22c34:	31 c9                	xor    %ecx,%ecx
   22c36:	45 31 c9             	xor    %r9d,%r9d
   22c39:	41 0f b6 10          	movzbl (%r8),%edx
   22c3d:	49 83 c0 01          	add    $0x1,%r8
   22c41:	48 89 d0             	mov    %rdx,%rax
   22c44:	83 e0 7f             	and    $0x7f,%eax
   22c47:	48 d3 e0             	shl    %cl,%rax
   22c4a:	48 83 c1 07          	add    $0x7,%rcx
   22c4e:	49 09 c1             	or     %rax,%r9
   22c51:	84 d2                	test   %dl,%dl
   22c53:	78 e4                	js     22c39 <_ULx86_64_dwarf_stack_aligned+0x59>
   22c55:	48 83 f9 3f          	cmp    $0x3f,%rcx
   22c59:	77 07                	ja     22c62 <_ULx86_64_dwarf_stack_aligned+0x82>
   22c5b:	31 c0                	xor    %eax,%eax
   22c5d:	83 e2 40             	and    $0x40,%edx
   22c60:	75 c9                	jne    22c2b <_ULx86_64_dwarf_stack_aligned+0x4b>
   22c62:	31 c0                	xor    %eax,%eax
   22c64:	4d 85 c9             	test   %r9,%r9
   22c67:	75 c2                	jne    22c2b <_ULx86_64_dwarf_stack_aligned+0x4b>
   22c69:	31 c9                	xor    %ecx,%ecx
   22c6b:	31 f6                	xor    %esi,%esi
   22c6d:	0f 1f 00             	nopl   (%rax)
   22c70:	41 0f b6 14 24       	movzbl (%r12),%edx
   22c75:	4c 89 e7             	mov    %r12,%rdi
   22c78:	49 83 c4 01          	add    $0x1,%r12
   22c7c:	48 89 d0             	mov    %rdx,%rax
   22c7f:	83 e0 7f             	and    $0x7f,%eax
   22c82:	48 d3 e0             	shl    %cl,%rax
   22c85:	48 83 c1 07          	add    $0x7,%rcx
   22c89:	48 09 c6             	or     %rax,%rsi
   22c8c:	84 d2                	test   %dl,%dl
   22c8e:	78 e0                	js     22c70 <_ULx86_64_dwarf_stack_aligned+0x90>
   22c90:	31 c0                	xor    %eax,%eax
   22c92:	48 83 fe 03          	cmp    $0x3,%rsi
   22c96:	75 93                	jne    22c2b <_ULx86_64_dwarf_stack_aligned+0x4b>
   22c98:	41 80 3c 24 76       	cmpb   $0x76,(%r12)
   22c9d:	75 8c                	jne    22c2b <_ULx86_64_dwarf_stack_aligned+0x4b>
   22c9f:	48 83 c7 02          	add    $0x2,%rdi
   22ca3:	31 c9                	xor    %ecx,%ecx
   22ca5:	0f b6 07             	movzbl (%rdi),%eax
   22ca8:	48 83 c7 01          	add    $0x1,%rdi
   22cac:	48 89 c2             	mov    %rax,%rdx
   22caf:	83 e2 7f             	and    $0x7f,%edx
   22cb2:	48 d3 e2             	shl    %cl,%rdx
   22cb5:	48 83 c1 07          	add    $0x7,%rcx
   22cb9:	49 09 d1             	or     %rdx,%r9
   22cbc:	84 c0                	test   %al,%al
   22cbe:	78 e5                	js     22ca5 <_ULx86_64_dwarf_stack_aligned+0xc5>
   22cc0:	48 83 f9 3f          	cmp    $0x3f,%rcx
   22cc4:	77 0e                	ja     22cd4 <_ULx86_64_dwarf_stack_aligned+0xf4>
   22cc6:	a8 40                	test   $0x40,%al
   22cc8:	74 0a                	je     22cd4 <_ULx86_64_dwarf_stack_aligned+0xf4>
   22cca:	48 83 c8 ff          	or     $0xffffffffffffffff,%rax
   22cce:	48 d3 e0             	shl    %cl,%rax
   22cd1:	49 09 c1             	or     %rax,%r9
   22cd4:	31 c0                	xor    %eax,%eax
   22cd6:	80 3f 06             	cmpb   $0x6,(%rdi)
   22cd9:	0f 85 4c ff ff ff    	jne    22c2b <_ULx86_64_dwarf_stack_aligned+0x4b>
   22cdf:	4c 89 4d 00          	mov    %r9,0x0(%rbp)
   22ce3:	b8 01 00 00 00       	mov    $0x1,%eax
   22ce8:	e9 3e ff ff ff       	jmp    22c2b <_ULx86_64_dwarf_stack_aligned+0x4b>
   22ced:	0f 1f 00             	nopl   (%rax)

0000000000022cf0 <_ULx86_64_dwarf_eval_expr>:
   22cf0:	f3 0f 1e fa          	endbr64 
   22cf4:	41 57                	push   %r15
   22cf6:	49 89 ff             	mov    %rdi,%r15
   22cf9:	41 56                	push   %r14
   22cfb:	4d 89 c6             	mov    %r8,%r14
   22cfe:	41 55                	push   %r13
   22d00:	41 54                	push   %r12
   22d02:	49 89 f4             	mov    %rsi,%r12
   22d05:	55                   	push   %rbp
   22d06:	53                   	push   %rbx
   22d07:	48 89 d3             	mov    %rdx,%rbx
   22d0a:	48 81 ec 58 02 00 00 	sub    $0x258,%rsp
   22d11:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
   22d16:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   22d1a:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   22d1f:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
   22d24:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   22d2b:	00 00 
   22d2d:	48 89 84 24 48 02 00 	mov    %rax,0x248(%rsp)
   22d34:	00 
   22d35:	31 c0                	xor    %eax,%eax
   22d37:	e8 c4 ef ff ff       	call   21d00 <_Ux86_64_get_accessors>
   22d3c:	49 8b 0c 24          	mov    (%r12),%rcx
   22d40:	49 8b 47 10          	mov    0x10(%r15),%rax
   22d44:	41 c7 06 00 00 00 00 	movl   $0x0,(%r14)
   22d4b:	4c 8d 1c 19          	lea    (%rcx,%rbx,1),%r11
   22d4f:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   22d54:	4c 39 d9             	cmp    %r11,%rcx
   22d57:	0f 83 19 01 00 00    	jae    22e76 <_ULx86_64_dwarf_eval_expr+0x186>
   22d5d:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   22d64:	00 00 
   22d66:	31 ed                	xor    %ebp,%ebp
   22d68:	bb 01 00 00 00       	mov    $0x1,%ebx
   22d6d:	4c 8d 05 cc 4a 00 00 	lea    0x4acc(%rip),%r8        # 27840 <operands>
   22d74:	4c 8d 35 99 4a 00 00 	lea    0x4a99(%rip),%r14        # 27814 <_ULx86_64_dwarf_to_unw_regnum_map+0x2c4>
   22d7b:	4c 8d 2d 7a 4a 00 00 	lea    0x4a7a(%rip),%r13        # 277fc <_ULx86_64_dwarf_to_unw_regnum_map+0x2ac>
   22d82:	4c 8d 3d 23 48 00 00 	lea    0x4823(%rip),%r15        # 275ac <_ULx86_64_dwarf_to_unw_regnum_map+0x5c>
   22d89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   22d90:	0f b6 39             	movzbl (%rcx),%edi
   22d93:	48 8d 71 01          	lea    0x1(%rcx),%rsi
   22d97:	49 89 34 24          	mov    %rsi,(%r12)
   22d9b:	40 0f b6 d7          	movzbl %dil,%edx
   22d9f:	89 f8                	mov    %edi,%eax
   22da1:	41 0f b6 14 10       	movzbl (%r8,%rdx,1),%edx
   22da6:	41 89 d1             	mov    %edx,%r9d
   22da9:	41 c0 e9 06          	shr    $0x6,%r9b
   22dad:	0f 85 d5 00 00 00    	jne    22e88 <_ULx86_64_dwarf_eval_expr+0x198>
   22db3:	83 e8 03             	sub    $0x3,%eax
   22db6:	3c 93                	cmp    $0x93,%al
   22db8:	77 4b                	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   22dba:	0f b6 c0             	movzbl %al,%eax
   22dbd:	49 63 04 87          	movslq (%r15,%rax,4),%rax
   22dc1:	4c 01 f8             	add    %r15,%rax
   22dc4:	3e ff e0             	notrack jmp *%rax
   22dc7:	31 f6                	xor    %esi,%esi
   22dc9:	48 83 fd 10          	cmp    $0x10,%rbp
   22dcd:	77 0b                	ja     22dda <_ULx86_64_dwarf_eval_expr+0xea>
   22dcf:	48 8d 05 7a 47 00 00 	lea    0x477a(%rip),%rax        # 27550 <_ULx86_64_dwarf_to_unw_regnum_map>
   22dd6:	0f b6 34 28          	movzbl (%rax,%rbp,1),%esi
   22dda:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   22ddf:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   22de4:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   22de9:	e8 62 ef ff ff       	call   21d50 <_ULx86_64_get_reg>
   22dee:	85 c0                	test   %eax,%eax
   22df0:	78 18                	js     22e0a <_ULx86_64_dwarf_eval_expr+0x11a>
   22df2:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   22df7:	48 03 54 24 38       	add    0x38(%rsp),%rdx
   22dfc:	83 fb 3f             	cmp    $0x3f,%ebx
   22dff:	0f 86 88 02 00 00    	jbe    2308d <_ULx86_64_dwarf_eval_expr+0x39d>
   22e05:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   22e0a:	48 8b bc 24 48 02 00 	mov    0x248(%rsp),%rdi
   22e11:	00 
   22e12:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   22e19:	00 00 
   22e1b:	0f 85 4b 0a 00 00    	jne    2386c <_ULx86_64_dwarf_eval_expr+0xb7c>
   22e21:	48 81 c4 58 02 00 00 	add    $0x258,%rsp
   22e28:	5b                   	pop    %rbx
   22e29:	5d                   	pop    %rbp
   22e2a:	41 5c                	pop    %r12
   22e2c:	41 5d                	pop    %r13
   22e2e:	41 5e                	pop    %r14
   22e30:	41 5f                	pop    %r15
   22e32:	c3                   	ret    
   22e33:	8d 43 ff             	lea    -0x1(%rbx),%eax
   22e36:	83 f8 3f             	cmp    $0x3f,%eax
   22e39:	77 ca                	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   22e3b:	48 8b 54 c4 40       	mov    0x40(%rsp,%rax,8),%rdx
   22e40:	48 85 d2             	test   %rdx,%rdx
   22e43:	79 03                	jns    22e48 <_ULx86_64_dwarf_eval_expr+0x158>
   22e45:	48 f7 da             	neg    %rdx
   22e48:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   22e4d:	48 89 54 c4 40       	mov    %rdx,0x40(%rsp,%rax,8)
   22e52:	49 8b 0c 24          	mov    (%r12),%rcx
   22e56:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   22e5d:	00 00 00 
   22e60:	4c 39 d9             	cmp    %r11,%rcx
   22e63:	0f 82 27 ff ff ff    	jb     22d90 <_ULx86_64_dwarf_eval_expr+0xa0>
   22e69:	83 eb 01             	sub    $0x1,%ebx
   22e6c:	83 fb 3f             	cmp    $0x3f,%ebx
   22e6f:	77 94                	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   22e71:	48 8b 44 dc 40       	mov    0x40(%rsp,%rbx,8),%rax
   22e76:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   22e7b:	48 89 07             	mov    %rax,(%rdi)
   22e7e:	31 c0                	xor    %eax,%eax
   22e80:	eb 88                	jmp    22e0a <_ULx86_64_dwarf_eval_expr+0x11a>
   22e82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   22e88:	41 89 d2             	mov    %edx,%r10d
   22e8b:	41 c0 ea 03          	shr    $0x3,%r10b
   22e8f:	41 83 e2 07          	and    $0x7,%r10d
   22e93:	41 80 fa 07          	cmp    $0x7,%r10b
   22e97:	0f 84 b6 00 00 00    	je     22f53 <_ULx86_64_dwarf_eval_expr+0x263>
   22e9d:	41 80 fa 05          	cmp    $0x5,%r10b
   22ea1:	0f 87 5e ff ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   22ea7:	45 0f b6 d2          	movzbl %r10b,%r10d
   22eab:	4f 63 54 95 00       	movslq 0x0(%r13,%r10,4),%r10
   22eb0:	4d 01 ea             	add    %r13,%r10
   22eb3:	3e 41 ff e2          	notrack jmp *%r10
   22eb7:	31 c9                	xor    %ecx,%ecx
   22eb9:	31 ed                	xor    %ebp,%ebp
   22ebb:	44 0f b6 16          	movzbl (%rsi),%r10d
   22ebf:	48 83 c6 01          	add    $0x1,%rsi
   22ec3:	49 89 34 24          	mov    %rsi,(%r12)
   22ec7:	44 88 54 24 18       	mov    %r10b,0x18(%rsp)
   22ecc:	41 83 e2 7f          	and    $0x7f,%r10d
   22ed0:	49 d3 e2             	shl    %cl,%r10
   22ed3:	48 83 c1 07          	add    $0x7,%rcx
   22ed7:	4c 09 d5             	or     %r10,%rbp
   22eda:	80 7c 24 18 00       	cmpb   $0x0,0x18(%rsp)
   22edf:	78 da                	js     22ebb <_ULx86_64_dwarf_eval_expr+0x1cb>
   22ee1:	41 83 e1 02          	and    $0x2,%r9d
   22ee5:	0f 84 c8 fe ff ff    	je     22db3 <_ULx86_64_dwarf_eval_expr+0xc3>
   22eeb:	83 e2 07             	and    $0x7,%edx
   22eee:	80 fa 07             	cmp    $0x7,%dl
   22ef1:	0f 84 a5 00 00 00    	je     22f9c <_ULx86_64_dwarf_eval_expr+0x2ac>
   22ef7:	80 fa 05             	cmp    $0x5,%dl
   22efa:	0f 87 05 ff ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   22f00:	0f b6 d2             	movzbl %dl,%edx
   22f03:	49 63 14 96          	movslq (%r14,%rdx,4),%rdx
   22f07:	4c 01 f2             	add    %r14,%rdx
   22f0a:	3e ff e2             	notrack jmp *%rdx
   22f0d:	31 c9                	xor    %ecx,%ecx
   22f0f:	31 ed                	xor    %ebp,%ebp
   22f11:	44 0f b6 16          	movzbl (%rsi),%r10d
   22f15:	48 83 c6 01          	add    $0x1,%rsi
   22f19:	49 89 34 24          	mov    %rsi,(%r12)
   22f1d:	44 88 54 24 18       	mov    %r10b,0x18(%rsp)
   22f22:	41 83 e2 7f          	and    $0x7f,%r10d
   22f26:	49 d3 e2             	shl    %cl,%r10
   22f29:	48 83 c1 07          	add    $0x7,%rcx
   22f2d:	4c 09 d5             	or     %r10,%rbp
   22f30:	80 7c 24 18 00       	cmpb   $0x0,0x18(%rsp)
   22f35:	78 da                	js     22f11 <_ULx86_64_dwarf_eval_expr+0x221>
   22f37:	48 83 f9 3f          	cmp    $0x3f,%rcx
   22f3b:	77 a4                	ja     22ee1 <_ULx86_64_dwarf_eval_expr+0x1f1>
   22f3d:	f6 44 24 18 40       	testb  $0x40,0x18(%rsp)
   22f42:	74 9d                	je     22ee1 <_ULx86_64_dwarf_eval_expr+0x1f1>
   22f44:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
   22f4b:	48 d3 e6             	shl    %cl,%rsi
   22f4e:	48 09 f5             	or     %rsi,%rbp
   22f51:	eb 8e                	jmp    22ee1 <_ULx86_64_dwarf_eval_expr+0x1f1>
   22f53:	48 83 c1 09          	add    $0x9,%rcx
   22f57:	41 83 e1 02          	and    $0x2,%r9d
   22f5b:	48 8b 2e             	mov    (%rsi),%rbp
   22f5e:	49 89 0c 24          	mov    %rcx,(%r12)
   22f62:	0f 84 4b fe ff ff    	je     22db3 <_ULx86_64_dwarf_eval_expr+0xc3>
   22f68:	eb 81                	jmp    22eeb <_ULx86_64_dwarf_eval_expr+0x1fb>
   22f6a:	f7 c5 00 00 00 80    	test   $0x80000000,%ebp
   22f70:	74 0e                	je     22f80 <_ULx86_64_dwarf_eval_expr+0x290>
   22f72:	48 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%rax
   22f79:	ff ff ff 
   22f7c:	48 09 c5             	or     %rax,%rbp
   22f7f:	90                   	nop
   22f80:	83 fb 3f             	cmp    $0x3f,%ebx
   22f83:	0f 87 7c fe ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   22f89:	89 d8                	mov    %ebx,%eax
   22f8b:	49 8b 0c 24          	mov    (%r12),%rcx
   22f8f:	83 c3 01             	add    $0x1,%ebx
   22f92:	48 89 6c c4 40       	mov    %rbp,0x40(%rsp,%rax,8)
   22f97:	e9 c4 fe ff ff       	jmp    22e60 <_ULx86_64_dwarf_eval_expr+0x170>
   22f9c:	49 8b 14 24          	mov    (%r12),%rdx
   22fa0:	48 8b 32             	mov    (%rdx),%rsi
   22fa3:	48 83 c2 08          	add    $0x8,%rdx
   22fa7:	49 89 14 24          	mov    %rdx,(%r12)
   22fab:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   22fb0:	e9 fe fd ff ff       	jmp    22db3 <_ULx86_64_dwarf_eval_expr+0xc3>
   22fb5:	48 83 c1 02          	add    $0x2,%rcx
   22fb9:	0f b6 2e             	movzbl (%rsi),%ebp
   22fbc:	49 89 0c 24          	mov    %rcx,(%r12)
   22fc0:	e9 1c ff ff ff       	jmp    22ee1 <_ULx86_64_dwarf_eval_expr+0x1f1>
   22fc5:	48 83 c1 03          	add    $0x3,%rcx
   22fc9:	0f b7 2e             	movzwl (%rsi),%ebp
   22fcc:	49 89 0c 24          	mov    %rcx,(%r12)
   22fd0:	e9 0c ff ff ff       	jmp    22ee1 <_ULx86_64_dwarf_eval_expr+0x1f1>
   22fd5:	48 83 c1 05          	add    $0x5,%rcx
   22fd9:	8b 2e                	mov    (%rsi),%ebp
   22fdb:	49 89 0c 24          	mov    %rcx,(%r12)
   22fdf:	e9 fd fe ff ff       	jmp    22ee1 <_ULx86_64_dwarf_eval_expr+0x1f1>
   22fe4:	0f 1f 40 00          	nopl   0x0(%rax)
   22fe8:	83 ef 30             	sub    $0x30,%edi
   22feb:	48 63 ff             	movslq %edi,%rdi
   22fee:	83 fb 3f             	cmp    $0x3f,%ebx
   22ff1:	0f 87 0e fe ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   22ff7:	89 d8                	mov    %ebx,%eax
   22ff9:	49 8b 0c 24          	mov    (%r12),%rcx
   22ffd:	83 c3 01             	add    $0x1,%ebx
   23000:	48 89 7c c4 40       	mov    %rdi,0x40(%rsp,%rax,8)
   23005:	e9 56 fe ff ff       	jmp    22e60 <_ULx86_64_dwarf_eval_expr+0x170>
   2300a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   23010:	83 ef 50             	sub    $0x50,%edi
   23013:	31 c0                	xor    %eax,%eax
   23015:	83 ff 10             	cmp    $0x10,%edi
   23018:	7f 0e                	jg     23028 <_ULx86_64_dwarf_eval_expr+0x338>
   2301a:	48 63 ff             	movslq %edi,%rdi
   2301d:	48 8d 05 2c 45 00 00 	lea    0x452c(%rip),%rax        # 27550 <_ULx86_64_dwarf_to_unw_regnum_map>
   23024:	0f b6 04 38          	movzbl (%rax,%rdi,1),%eax
   23028:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   2302d:	48 89 07             	mov    %rax,(%rdi)
   23030:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   23035:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   2303b:	31 c0                	xor    %eax,%eax
   2303d:	e9 c8 fd ff ff       	jmp    22e0a <_ULx86_64_dwarf_eval_expr+0x11a>
   23042:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   23048:	83 ef 70             	sub    $0x70,%edi
   2304b:	31 f6                	xor    %esi,%esi
   2304d:	83 ff 10             	cmp    $0x10,%edi
   23050:	7f 0e                	jg     23060 <_ULx86_64_dwarf_eval_expr+0x370>
   23052:	48 63 ff             	movslq %edi,%rdi
   23055:	48 8d 05 f4 44 00 00 	lea    0x44f4(%rip),%rax        # 27550 <_ULx86_64_dwarf_to_unw_regnum_map>
   2305c:	0f b6 34 38          	movzbl (%rax,%rdi,1),%esi
   23060:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
   23065:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   2306a:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   2306f:	e8 dc ec ff ff       	call   21d50 <_ULx86_64_get_reg>
   23074:	85 c0                	test   %eax,%eax
   23076:	0f 88 8e fd ff ff    	js     22e0a <_ULx86_64_dwarf_eval_expr+0x11a>
   2307c:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
   23081:	48 01 ea             	add    %rbp,%rdx
   23084:	83 fb 3f             	cmp    $0x3f,%ebx
   23087:	0f 87 78 fd ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   2308d:	89 d8                	mov    %ebx,%eax
   2308f:	49 8b 0c 24          	mov    (%r12),%rcx
   23093:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   23098:	83 c3 01             	add    $0x1,%ebx
   2309b:	48 89 54 c4 40       	mov    %rdx,0x40(%rsp,%rax,8)
   230a0:	4c 8d 05 99 47 00 00 	lea    0x4799(%rip),%r8        # 27840 <operands>
   230a7:	e9 b4 fd ff ff       	jmp    22e60 <_ULx86_64_dwarf_eval_expr+0x170>
   230ac:	8d 43 ff             	lea    -0x1(%rbx),%eax
   230af:	83 f8 3f             	cmp    $0x3f,%eax
   230b2:	0f 87 4d fd ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   230b8:	89 c6                	mov    %eax,%esi
   230ba:	48 8b 44 f4 40       	mov    0x40(%rsp,%rsi,8),%rax
   230bf:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   230c4:	48 83 fd 04          	cmp    $0x4,%rbp
   230c8:	0f 87 5a 06 00 00    	ja     23728 <_ULx86_64_dwarf_eval_expr+0xa38>
   230ce:	48 83 fd 02          	cmp    $0x2,%rbp
   230d2:	0f 87 74 07 00 00    	ja     2384c <_ULx86_64_dwarf_eval_expr+0xb5c>
   230d8:	48 83 fd 01          	cmp    $0x1,%rbp
   230dc:	0f 84 59 07 00 00    	je     2383b <_ULx86_64_dwarf_eval_expr+0xb4b>
   230e2:	48 83 fd 02          	cmp    $0x2,%rbp
   230e6:	0f 85 19 fd ff ff    	jne    22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   230ec:	0f b7 10             	movzwl (%rax),%edx
   230ef:	48 83 c0 02          	add    $0x2,%rax
   230f3:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   230f8:	48 89 54 f4 40       	mov    %rdx,0x40(%rsp,%rsi,8)
   230fd:	49 8b 0c 24          	mov    (%r12),%rcx
   23101:	e9 5a fd ff ff       	jmp    22e60 <_ULx86_64_dwarf_eval_expr+0x170>
   23106:	8d 43 ff             	lea    -0x1(%rbx),%eax
   23109:	83 f8 3f             	cmp    $0x3f,%eax
   2310c:	0f 87 f3 fc ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   23112:	89 c2                	mov    %eax,%edx
   23114:	8d 43 fe             	lea    -0x2(%rbx),%eax
   23117:	48 8b 74 d4 40       	mov    0x40(%rsp,%rdx,8),%rsi
   2311c:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
   23121:	83 f8 3f             	cmp    $0x3f,%eax
   23124:	0f 87 db fc ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   2312a:	89 c1                	mov    %eax,%ecx
   2312c:	8d 43 fd             	lea    -0x3(%rbx),%eax
   2312f:	48 8b 7c cc 40       	mov    0x40(%rsp,%rcx,8),%rdi
   23134:	83 f8 3f             	cmp    $0x3f,%eax
   23137:	0f 87 c8 fc ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   2313d:	4c 8b 4c c4 40       	mov    0x40(%rsp,%rax,8),%r9
   23142:	48 89 74 c4 40       	mov    %rsi,0x40(%rsp,%rax,8)
   23147:	4c 89 4c cc 40       	mov    %r9,0x40(%rsp,%rcx,8)
   2314c:	49 8b 0c 24          	mov    (%r12),%rcx
   23150:	48 89 7c d4 40       	mov    %rdi,0x40(%rsp,%rdx,8)
   23155:	e9 06 fd ff ff       	jmp    22e60 <_ULx86_64_dwarf_eval_expr+0x170>
   2315a:	8d 43 ff             	lea    -0x1(%rbx),%eax
   2315d:	83 f8 3f             	cmp    $0x3f,%eax
   23160:	0f 87 9f fc ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   23166:	89 c2                	mov    %eax,%edx
   23168:	83 eb 02             	sub    $0x2,%ebx
   2316b:	48 8b 54 d4 40       	mov    0x40(%rsp,%rdx,8),%rdx
   23170:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   23175:	83 fb 3f             	cmp    $0x3f,%ebx
   23178:	0f 87 87 fc ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   2317e:	48 21 54 dc 40       	and    %rdx,0x40(%rsp,%rbx,8)
   23183:	49 8b 0c 24          	mov    (%r12),%rcx
   23187:	89 c3                	mov    %eax,%ebx
   23189:	e9 d2 fc ff ff       	jmp    22e60 <_ULx86_64_dwarf_eval_expr+0x170>
   2318e:	8d 43 ff             	lea    -0x1(%rbx),%eax
   23191:	83 f8 3f             	cmp    $0x3f,%eax
   23194:	0f 87 6b fc ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   2319a:	48 8b 54 c4 40       	mov    0x40(%rsp,%rax,8),%rdx
   2319f:	83 fb 40             	cmp    $0x40,%ebx
   231a2:	0f 84 5d fc ff ff    	je     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   231a8:	89 d8                	mov    %ebx,%eax
   231aa:	49 8b 0c 24          	mov    (%r12),%rcx
   231ae:	83 c3 01             	add    $0x1,%ebx
   231b1:	48 89 54 c4 40       	mov    %rdx,0x40(%rsp,%rax,8)
   231b6:	e9 a5 fc ff ff       	jmp    22e60 <_ULx86_64_dwarf_eval_expr+0x170>
   231bb:	83 eb 01             	sub    $0x1,%ebx
   231be:	83 fb 3f             	cmp    $0x3f,%ebx
   231c1:	0f 86 8b fc ff ff    	jbe    22e52 <_ULx86_64_dwarf_eval_expr+0x162>
   231c7:	e9 39 fc ff ff       	jmp    22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   231cc:	0f 1f 40 00          	nopl   0x0(%rax)
   231d0:	8d 43 fe             	lea    -0x2(%rbx),%eax
   231d3:	83 f8 3f             	cmp    $0x3f,%eax
   231d6:	0f 87 29 fc ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   231dc:	48 8b 54 c4 40       	mov    0x40(%rsp,%rax,8),%rdx
   231e1:	83 fb 3f             	cmp    $0x3f,%ebx
   231e4:	76 c2                	jbe    231a8 <_ULx86_64_dwarf_eval_expr+0x4b8>
   231e6:	e9 1a fc ff ff       	jmp    22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   231eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   231f0:	8d 43 ff             	lea    -0x1(%rbx),%eax
   231f3:	29 e8                	sub    %ebp,%eax
   231f5:	83 f8 3f             	cmp    $0x3f,%eax
   231f8:	76 e2                	jbe    231dc <_ULx86_64_dwarf_eval_expr+0x4ec>
   231fa:	e9 06 fc ff ff       	jmp    22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   231ff:	90                   	nop
   23200:	8d 43 ff             	lea    -0x1(%rbx),%eax
   23203:	83 f8 3f             	cmp    $0x3f,%eax
   23206:	0f 87 f9 fb ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   2320c:	48 8b 4c c4 40       	mov    0x40(%rsp,%rax,8),%rcx
   23211:	8d 53 fe             	lea    -0x2(%rbx),%edx
   23214:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   23219:	83 fa 3f             	cmp    $0x3f,%edx
   2321c:	0f 87 e3 fb ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   23222:	48 8b 74 d4 40       	mov    0x40(%rsp,%rdx,8),%rsi
   23227:	48 89 4c d4 40       	mov    %rcx,0x40(%rsp,%rdx,8)
   2322c:	49 8b 0c 24          	mov    (%r12),%rcx
   23230:	48 89 74 c4 40       	mov    %rsi,0x40(%rsp,%rax,8)
   23235:	e9 26 fc ff ff       	jmp    22e60 <_ULx86_64_dwarf_eval_expr+0x170>
   2323a:	8d 43 ff             	lea    -0x1(%rbx),%eax
   2323d:	83 f8 3f             	cmp    $0x3f,%eax
   23240:	0f 87 bf fb ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   23246:	48 8b 54 c4 40       	mov    0x40(%rsp,%rax,8),%rdx
   2324b:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   23250:	48 8b 0a             	mov    (%rdx),%rcx
   23253:	48 83 c2 08          	add    $0x8,%rdx
   23257:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   2325c:	48 89 4c c4 40       	mov    %rcx,0x40(%rsp,%rax,8)
   23261:	49 8b 0c 24          	mov    (%r12),%rcx
   23265:	e9 f6 fb ff ff       	jmp    22e60 <_ULx86_64_dwarf_eval_expr+0x170>
   2326a:	31 c0                	xor    %eax,%eax
   2326c:	48 83 fd 10          	cmp    $0x10,%rbp
   23270:	0f 87 b2 fd ff ff    	ja     23028 <_ULx86_64_dwarf_eval_expr+0x338>
   23276:	48 8d 05 d3 42 00 00 	lea    0x42d3(%rip),%rax        # 27550 <_ULx86_64_dwarf_to_unw_regnum_map>
   2327d:	0f b6 04 28          	movzbl (%rax,%rbp,1),%eax
   23281:	e9 a2 fd ff ff       	jmp    23028 <_ULx86_64_dwarf_eval_expr+0x338>
   23286:	8d 73 ff             	lea    -0x1(%rbx),%esi
   23289:	83 fe 3f             	cmp    $0x3f,%esi
   2328c:	0f 87 73 fb ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   23292:	89 f0                	mov    %esi,%eax
   23294:	83 eb 02             	sub    $0x2,%ebx
   23297:	48 8b 4c c4 40       	mov    0x40(%rsp,%rax,8),%rcx
   2329c:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   232a1:	83 fb 3f             	cmp    $0x3f,%ebx
   232a4:	0f 87 5b fb ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   232aa:	48 85 c9             	test   %rcx,%rcx
   232ad:	74 12                	je     232c1 <_ULx86_64_dwarf_eval_expr+0x5d1>
   232af:	48 8b 44 dc 40       	mov    0x40(%rsp,%rbx,8),%rax
   232b4:	48 99                	cqto   
   232b6:	48 f7 f9             	idiv   %rcx
   232b9:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   232be:	48 89 c1             	mov    %rax,%rcx
   232c1:	48 89 4c dc 40       	mov    %rcx,0x40(%rsp,%rbx,8)
   232c6:	49 8b 0c 24          	mov    (%r12),%rcx
   232ca:	89 f3                	mov    %esi,%ebx
   232cc:	e9 8f fb ff ff       	jmp    22e60 <_ULx86_64_dwarf_eval_expr+0x170>
   232d1:	8d 53 ff             	lea    -0x1(%rbx),%edx
   232d4:	83 fa 3f             	cmp    $0x3f,%edx
   232d7:	0f 87 28 fb ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   232dd:	89 d0                	mov    %edx,%eax
   232df:	83 eb 02             	sub    $0x2,%ebx
   232e2:	48 8b 44 c4 40       	mov    0x40(%rsp,%rax,8),%rax
   232e7:	83 fb 3f             	cmp    $0x3f,%ebx
   232ea:	0f 87 15 fb ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   232f0:	48 8b 7c dc 40       	mov    0x40(%rsp,%rbx,8),%rdi
   232f5:	49 8b 0c 24          	mov    (%r12),%rcx
   232f9:	48 29 c7             	sub    %rax,%rdi
   232fc:	48 89 7c dc 40       	mov    %rdi,0x40(%rsp,%rbx,8)
   23301:	89 d3                	mov    %edx,%ebx
   23303:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
   23308:	e9 53 fb ff ff       	jmp    22e60 <_ULx86_64_dwarf_eval_expr+0x170>
   2330d:	8d 73 ff             	lea    -0x1(%rbx),%esi
   23310:	83 fe 3f             	cmp    $0x3f,%esi
   23313:	0f 87 ec fa ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   23319:	89 f0                	mov    %esi,%eax
   2331b:	83 eb 02             	sub    $0x2,%ebx
   2331e:	48 8b 54 c4 40       	mov    0x40(%rsp,%rax,8),%rdx
   23323:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   23328:	83 fb 3f             	cmp    $0x3f,%ebx
   2332b:	0f 87 d4 fa ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   23331:	48 85 d2             	test   %rdx,%rdx
   23334:	74 12                	je     23348 <_ULx86_64_dwarf_eval_expr+0x658>
   23336:	48 8b 44 dc 40       	mov    0x40(%rsp,%rbx,8),%rax
   2333b:	48 89 d7             	mov    %rdx,%rdi
   2333e:	31 d2                	xor    %edx,%edx
   23340:	48 f7 f7             	div    %rdi
   23343:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   23348:	48 89 54 dc 40       	mov    %rdx,0x40(%rsp,%rbx,8)
   2334d:	49 8b 0c 24          	mov    (%r12),%rcx
   23351:	89 f3                	mov    %esi,%ebx
   23353:	e9 08 fb ff ff       	jmp    22e60 <_ULx86_64_dwarf_eval_expr+0x170>
   23358:	8d 53 ff             	lea    -0x1(%rbx),%edx
   2335b:	83 fa 3f             	cmp    $0x3f,%edx
   2335e:	0f 87 a1 fa ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   23364:	89 d0                	mov    %edx,%eax
   23366:	83 eb 02             	sub    $0x2,%ebx
   23369:	48 8b 44 c4 40       	mov    0x40(%rsp,%rax,8),%rax
   2336e:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   23373:	83 fb 3f             	cmp    $0x3f,%ebx
   23376:	0f 87 89 fa ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   2337c:	48 85 c0             	test   %rax,%rax
   2337f:	74 0b                	je     2338c <_ULx86_64_dwarf_eval_expr+0x69c>
   23381:	48 0f af 44 dc 40    	imul   0x40(%rsp,%rbx,8),%rax
   23387:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2338c:	48 89 44 dc 40       	mov    %rax,0x40(%rsp,%rbx,8)
   23391:	49 8b 0c 24          	mov    (%r12),%rcx
   23395:	89 d3                	mov    %edx,%ebx
   23397:	e9 c4 fa ff ff       	jmp    22e60 <_ULx86_64_dwarf_eval_expr+0x170>
   2339c:	8d 43 ff             	lea    -0x1(%rbx),%eax
   2339f:	83 f8 3f             	cmp    $0x3f,%eax
   233a2:	0f 87 5d fa ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   233a8:	48 f7 5c c4 40       	negq   0x40(%rsp,%rax,8)
   233ad:	49 8b 0c 24          	mov    (%r12),%rcx
   233b1:	e9 aa fa ff ff       	jmp    22e60 <_ULx86_64_dwarf_eval_expr+0x170>
   233b6:	8d 43 ff             	lea    -0x1(%rbx),%eax
   233b9:	83 f8 3f             	cmp    $0x3f,%eax
   233bc:	0f 87 43 fa ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   233c2:	48 f7 54 c4 40       	notq   0x40(%rsp,%rax,8)
   233c7:	49 8b 0c 24          	mov    (%r12),%rcx
   233cb:	e9 90 fa ff ff       	jmp    22e60 <_ULx86_64_dwarf_eval_expr+0x170>
   233d0:	8d 43 ff             	lea    -0x1(%rbx),%eax
   233d3:	83 f8 3f             	cmp    $0x3f,%eax
   233d6:	0f 87 29 fa ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   233dc:	89 c2                	mov    %eax,%edx
   233de:	83 eb 02             	sub    $0x2,%ebx
   233e1:	48 8b 54 d4 40       	mov    0x40(%rsp,%rdx,8),%rdx
   233e6:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   233eb:	83 fb 3f             	cmp    $0x3f,%ebx
   233ee:	0f 87 11 fa ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   233f4:	48 09 54 dc 40       	or     %rdx,0x40(%rsp,%rbx,8)
   233f9:	49 8b 0c 24          	mov    (%r12),%rcx
   233fd:	89 c3                	mov    %eax,%ebx
   233ff:	e9 5c fa ff ff       	jmp    22e60 <_ULx86_64_dwarf_eval_expr+0x170>
   23404:	8d 43 ff             	lea    -0x1(%rbx),%eax
   23407:	83 f8 3f             	cmp    $0x3f,%eax
   2340a:	0f 87 f5 f9 ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   23410:	89 c2                	mov    %eax,%edx
   23412:	83 eb 02             	sub    $0x2,%ebx
   23415:	48 8b 54 d4 40       	mov    0x40(%rsp,%rdx,8),%rdx
   2341a:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   2341f:	83 fb 3f             	cmp    $0x3f,%ebx
   23422:	0f 87 dd f9 ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   23428:	48 01 54 dc 40       	add    %rdx,0x40(%rsp,%rbx,8)
   2342d:	49 8b 0c 24          	mov    (%r12),%rcx
   23431:	89 c3                	mov    %eax,%ebx
   23433:	e9 28 fa ff ff       	jmp    22e60 <_ULx86_64_dwarf_eval_expr+0x170>
   23438:	8d 43 ff             	lea    -0x1(%rbx),%eax
   2343b:	83 f8 3f             	cmp    $0x3f,%eax
   2343e:	0f 87 c1 f9 ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   23444:	48 8b 54 c4 40       	mov    0x40(%rsp,%rax,8),%rdx
   23449:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   2344e:	48 01 ea             	add    %rbp,%rdx
   23451:	e9 f7 f9 ff ff       	jmp    22e4d <_ULx86_64_dwarf_eval_expr+0x15d>
   23456:	8d 43 ff             	lea    -0x1(%rbx),%eax
   23459:	83 f8 3f             	cmp    $0x3f,%eax
   2345c:	0f 87 a3 f9 ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   23462:	89 c2                	mov    %eax,%edx
   23464:	83 eb 02             	sub    $0x2,%ebx
   23467:	48 8b 4c d4 40       	mov    0x40(%rsp,%rdx,8),%rcx
   2346c:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   23471:	83 fb 3f             	cmp    $0x3f,%ebx
   23474:	0f 87 8b f9 ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   2347a:	48 d3 64 dc 40       	shlq   %cl,0x40(%rsp,%rbx,8)
   2347f:	49 8b 0c 24          	mov    (%r12),%rcx
   23483:	89 c3                	mov    %eax,%ebx
   23485:	e9 d6 f9 ff ff       	jmp    22e60 <_ULx86_64_dwarf_eval_expr+0x170>
   2348a:	8d 43 ff             	lea    -0x1(%rbx),%eax
   2348d:	83 f8 3f             	cmp    $0x3f,%eax
   23490:	0f 87 6f f9 ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   23496:	89 c2                	mov    %eax,%edx
   23498:	83 eb 02             	sub    $0x2,%ebx
   2349b:	48 8b 4c d4 40       	mov    0x40(%rsp,%rdx,8),%rcx
   234a0:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   234a5:	83 fb 3f             	cmp    $0x3f,%ebx
   234a8:	0f 87 57 f9 ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   234ae:	48 d3 6c dc 40       	shrq   %cl,0x40(%rsp,%rbx,8)
   234b3:	49 8b 0c 24          	mov    (%r12),%rcx
   234b7:	89 c3                	mov    %eax,%ebx
   234b9:	e9 a2 f9 ff ff       	jmp    22e60 <_ULx86_64_dwarf_eval_expr+0x170>
   234be:	8d 43 ff             	lea    -0x1(%rbx),%eax
   234c1:	83 f8 3f             	cmp    $0x3f,%eax
   234c4:	0f 87 3b f9 ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   234ca:	89 c2                	mov    %eax,%edx
   234cc:	83 eb 02             	sub    $0x2,%ebx
   234cf:	48 8b 4c d4 40       	mov    0x40(%rsp,%rdx,8),%rcx
   234d4:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   234d9:	83 fb 3f             	cmp    $0x3f,%ebx
   234dc:	0f 87 23 f9 ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   234e2:	48 d3 7c dc 40       	sarq   %cl,0x40(%rsp,%rbx,8)
   234e7:	49 8b 0c 24          	mov    (%r12),%rcx
   234eb:	89 c3                	mov    %eax,%ebx
   234ed:	e9 6e f9 ff ff       	jmp    22e60 <_ULx86_64_dwarf_eval_expr+0x170>
   234f2:	8d 43 ff             	lea    -0x1(%rbx),%eax
   234f5:	83 f8 3f             	cmp    $0x3f,%eax
   234f8:	0f 87 07 f9 ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   234fe:	89 c2                	mov    %eax,%edx
   23500:	83 eb 02             	sub    $0x2,%ebx
   23503:	48 8b 54 d4 40       	mov    0x40(%rsp,%rdx,8),%rdx
   23508:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
   2350d:	83 fb 3f             	cmp    $0x3f,%ebx
   23510:	0f 87 ef f8 ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   23516:	48 31 54 dc 40       	xor    %rdx,0x40(%rsp,%rbx,8)
   2351b:	49 8b 0c 24          	mov    (%r12),%rcx
   2351f:	89 c3                	mov    %eax,%ebx
   23521:	e9 3a f9 ff ff       	jmp    22e60 <_ULx86_64_dwarf_eval_expr+0x170>
   23526:	83 eb 01             	sub    $0x1,%ebx
   23529:	83 fb 3f             	cmp    $0x3f,%ebx
   2352c:	0f 87 d3 f8 ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   23532:	89 d8                	mov    %ebx,%eax
   23534:	49 8b 0c 24          	mov    (%r12),%rcx
   23538:	48 8b 44 c4 40       	mov    0x40(%rsp,%rax,8),%rax
   2353d:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   23542:	48 85 c0             	test   %rax,%rax
   23545:	0f 84 15 f9 ff ff    	je     22e60 <_ULx86_64_dwarf_eval_expr+0x170>
   2354b:	48 0f bf c5          	movswq %bp,%rax
   2354f:	48 01 c1             	add    %rax,%rcx
   23552:	49 89 0c 24          	mov    %rcx,(%r12)
   23556:	e9 05 f9 ff ff       	jmp    22e60 <_ULx86_64_dwarf_eval_expr+0x170>
   2355b:	8d 53 ff             	lea    -0x1(%rbx),%edx
   2355e:	83 fa 3f             	cmp    $0x3f,%edx
   23561:	0f 87 9e f8 ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   23567:	89 d0                	mov    %edx,%eax
   23569:	83 eb 02             	sub    $0x2,%ebx
   2356c:	48 8b 44 c4 40       	mov    0x40(%rsp,%rax,8),%rax
   23571:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   23576:	83 fb 3f             	cmp    $0x3f,%ebx
   23579:	0f 87 86 f8 ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   2357f:	48 39 44 dc 40       	cmp    %rax,0x40(%rsp,%rbx,8)
   23584:	49 8b 0c 24          	mov    (%r12),%rcx
   23588:	0f 94 c0             	sete   %al
   2358b:	0f b6 c0             	movzbl %al,%eax
   2358e:	48 89 44 dc 40       	mov    %rax,0x40(%rsp,%rbx,8)
   23593:	89 d3                	mov    %edx,%ebx
   23595:	e9 c6 f8 ff ff       	jmp    22e60 <_ULx86_64_dwarf_eval_expr+0x170>
   2359a:	8d 53 ff             	lea    -0x1(%rbx),%edx
   2359d:	83 fa 3f             	cmp    $0x3f,%edx
   235a0:	0f 87 5f f8 ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   235a6:	89 d0                	mov    %edx,%eax
   235a8:	83 eb 02             	sub    $0x2,%ebx
   235ab:	48 8b 44 c4 40       	mov    0x40(%rsp,%rax,8),%rax
   235b0:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   235b5:	83 fb 3f             	cmp    $0x3f,%ebx
   235b8:	0f 87 47 f8 ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   235be:	48 3b 44 dc 40       	cmp    0x40(%rsp,%rbx,8),%rax
   235c3:	49 8b 0c 24          	mov    (%r12),%rcx
   235c7:	0f 9e c0             	setle  %al
   235ca:	0f b6 c0             	movzbl %al,%eax
   235cd:	48 89 44 dc 40       	mov    %rax,0x40(%rsp,%rbx,8)
   235d2:	89 d3                	mov    %edx,%ebx
   235d4:	e9 87 f8 ff ff       	jmp    22e60 <_ULx86_64_dwarf_eval_expr+0x170>
   235d9:	8d 53 ff             	lea    -0x1(%rbx),%edx
   235dc:	83 fa 3f             	cmp    $0x3f,%edx
   235df:	0f 87 20 f8 ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   235e5:	89 d0                	mov    %edx,%eax
   235e7:	83 eb 02             	sub    $0x2,%ebx
   235ea:	48 8b 44 c4 40       	mov    0x40(%rsp,%rax,8),%rax
   235ef:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   235f4:	83 fb 3f             	cmp    $0x3f,%ebx
   235f7:	0f 87 08 f8 ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   235fd:	48 3b 44 dc 40       	cmp    0x40(%rsp,%rbx,8),%rax
   23602:	49 8b 0c 24          	mov    (%r12),%rcx
   23606:	0f 9c c0             	setl   %al
   23609:	0f b6 c0             	movzbl %al,%eax
   2360c:	48 89 44 dc 40       	mov    %rax,0x40(%rsp,%rbx,8)
   23611:	89 d3                	mov    %edx,%ebx
   23613:	e9 48 f8 ff ff       	jmp    22e60 <_ULx86_64_dwarf_eval_expr+0x170>
   23618:	8d 53 ff             	lea    -0x1(%rbx),%edx
   2361b:	83 fa 3f             	cmp    $0x3f,%edx
   2361e:	0f 87 e1 f7 ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   23624:	89 d0                	mov    %edx,%eax
   23626:	83 eb 02             	sub    $0x2,%ebx
   23629:	48 8b 44 c4 40       	mov    0x40(%rsp,%rax,8),%rax
   2362e:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   23633:	83 fb 3f             	cmp    $0x3f,%ebx
   23636:	0f 87 c9 f7 ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   2363c:	48 3b 44 dc 40       	cmp    0x40(%rsp,%rbx,8),%rax
   23641:	49 8b 0c 24          	mov    (%r12),%rcx
   23645:	0f 9d c0             	setge  %al
   23648:	0f b6 c0             	movzbl %al,%eax
   2364b:	48 89 44 dc 40       	mov    %rax,0x40(%rsp,%rbx,8)
   23650:	89 d3                	mov    %edx,%ebx
   23652:	e9 09 f8 ff ff       	jmp    22e60 <_ULx86_64_dwarf_eval_expr+0x170>
   23657:	8d 53 ff             	lea    -0x1(%rbx),%edx
   2365a:	83 fa 3f             	cmp    $0x3f,%edx
   2365d:	0f 87 a2 f7 ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   23663:	89 d0                	mov    %edx,%eax
   23665:	83 eb 02             	sub    $0x2,%ebx
   23668:	48 8b 44 c4 40       	mov    0x40(%rsp,%rax,8),%rax
   2366d:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   23672:	83 fb 3f             	cmp    $0x3f,%ebx
   23675:	0f 87 8a f7 ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   2367b:	48 3b 44 dc 40       	cmp    0x40(%rsp,%rbx,8),%rax
   23680:	49 8b 0c 24          	mov    (%r12),%rcx
   23684:	0f 9f c0             	setg   %al
   23687:	0f b6 c0             	movzbl %al,%eax
   2368a:	48 89 44 dc 40       	mov    %rax,0x40(%rsp,%rbx,8)
   2368f:	89 d3                	mov    %edx,%ebx
   23691:	e9 ca f7 ff ff       	jmp    22e60 <_ULx86_64_dwarf_eval_expr+0x170>
   23696:	8d 53 ff             	lea    -0x1(%rbx),%edx
   23699:	83 fa 3f             	cmp    $0x3f,%edx
   2369c:	0f 87 63 f7 ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   236a2:	89 d0                	mov    %edx,%eax
   236a4:	83 eb 02             	sub    $0x2,%ebx
   236a7:	48 8b 44 c4 40       	mov    0x40(%rsp,%rax,8),%rax
   236ac:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   236b1:	83 fb 3f             	cmp    $0x3f,%ebx
   236b4:	0f 87 4b f7 ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   236ba:	48 39 44 dc 40       	cmp    %rax,0x40(%rsp,%rbx,8)
   236bf:	0f 95 c0             	setne  %al
   236c2:	0f b6 c0             	movzbl %al,%eax
   236c5:	e9 c2 fc ff ff       	jmp    2338c <_ULx86_64_dwarf_eval_expr+0x69c>
   236ca:	48 0f bf cd          	movswq %bp,%rcx
   236ce:	49 03 0c 24          	add    (%r12),%rcx
   236d2:	49 89 0c 24          	mov    %rcx,(%r12)
   236d6:	e9 85 f7 ff ff       	jmp    22e60 <_ULx86_64_dwarf_eval_expr+0x170>
   236db:	48 89 e8             	mov    %rbp,%rax
   236de:	48 0d 00 ff ff ff    	or     $0xffffffffffffff00,%rax
   236e4:	40 f6 c5 80          	test   $0x80,%bpl
   236e8:	48 0f 45 e8          	cmovne %rax,%rbp
   236ec:	83 fb 3f             	cmp    $0x3f,%ebx
   236ef:	0f 86 94 f8 ff ff    	jbe    22f89 <_ULx86_64_dwarf_eval_expr+0x299>
   236f5:	e9 0b f7 ff ff       	jmp    22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   236fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   23700:	48 89 e8             	mov    %rbp,%rax
   23703:	48 0d 00 00 ff ff    	or     $0xffffffffffff0000,%rax
   23709:	f7 c5 00 80 00 00    	test   $0x8000,%ebp
   2370f:	48 0f 45 e8          	cmovne %rax,%rbp
   23713:	83 fb 3f             	cmp    $0x3f,%ebx
   23716:	0f 86 6d f8 ff ff    	jbe    22f89 <_ULx86_64_dwarf_eval_expr+0x299>
   2371c:	e9 e4 f6 ff ff       	jmp    22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   23721:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   23728:	48 8d 55 fb          	lea    -0x5(%rbp),%rdx
   2372c:	48 83 fa 03          	cmp    $0x3,%rdx
   23730:	0f 87 cf f6 ff ff    	ja     22e05 <_ULx86_64_dwarf_eval_expr+0x115>
   23736:	48 8b 10             	mov    (%rax),%rdx
   23739:	48 83 c0 08          	add    $0x8,%rax
   2373d:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   23742:	48 83 fd 08          	cmp    $0x8,%rbp
   23746:	0f 84 ac f9 ff ff    	je     230f8 <_ULx86_64_dwarf_eval_expr+0x408>
   2374c:	8d 0c ed 00 00 00 00 	lea    0x0(,%rbp,8),%ecx
   23753:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   2375a:	48 d3 e0             	shl    %cl,%rax
   2375d:	48 21 c2             	and    %rax,%rdx
   23760:	e9 93 f9 ff ff       	jmp    230f8 <_ULx86_64_dwarf_eval_expr+0x408>
   23765:	49 8b 14 24          	mov    (%r12),%rdx
   23769:	31 c9                	xor    %ecx,%ecx
   2376b:	45 31 d2             	xor    %r10d,%r10d
   2376e:	66 90                	xchg   %ax,%ax
   23770:	44 0f b6 0a          	movzbl (%rdx),%r9d
   23774:	48 83 c2 01          	add    $0x1,%rdx
   23778:	49 89 14 24          	mov    %rdx,(%r12)
   2377c:	4c 89 ce             	mov    %r9,%rsi
   2377f:	83 e6 7f             	and    $0x7f,%esi
   23782:	48 d3 e6             	shl    %cl,%rsi
   23785:	48 83 c1 07          	add    $0x7,%rcx
   23789:	49 09 f2             	or     %rsi,%r10
   2378c:	45 84 c9             	test   %r9b,%r9b
   2378f:	78 df                	js     23770 <_ULx86_64_dwarf_eval_expr+0xa80>
   23791:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   23796:	e9 18 f6 ff ff       	jmp    22db3 <_ULx86_64_dwarf_eval_expr+0xc3>
   2379b:	49 8b 14 24          	mov    (%r12),%rdx
   2379f:	31 c9                	xor    %ecx,%ecx
   237a1:	45 31 d2             	xor    %r10d,%r10d
   237a4:	0f 1f 40 00          	nopl   0x0(%rax)
   237a8:	44 0f b6 0a          	movzbl (%rdx),%r9d
   237ac:	48 83 c2 01          	add    $0x1,%rdx
   237b0:	49 89 14 24          	mov    %rdx,(%r12)
   237b4:	4c 89 ce             	mov    %r9,%rsi
   237b7:	83 e6 7f             	and    $0x7f,%esi
   237ba:	48 d3 e6             	shl    %cl,%rsi
   237bd:	48 83 c1 07          	add    $0x7,%rcx
   237c1:	49 09 f2             	or     %rsi,%r10
   237c4:	45 84 c9             	test   %r9b,%r9b
   237c7:	78 df                	js     237a8 <_ULx86_64_dwarf_eval_expr+0xab8>
   237c9:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   237ce:	48 83 f9 3f          	cmp    $0x3f,%rcx
   237d2:	0f 87 db f5 ff ff    	ja     22db3 <_ULx86_64_dwarf_eval_expr+0xc3>
   237d8:	41 83 e1 40          	and    $0x40,%r9d
   237dc:	0f 84 d1 f5 ff ff    	je     22db3 <_ULx86_64_dwarf_eval_expr+0xc3>
   237e2:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   237e9:	48 d3 e2             	shl    %cl,%rdx
   237ec:	49 09 d2             	or     %rdx,%r10
   237ef:	eb a0                	jmp    23791 <_ULx86_64_dwarf_eval_expr+0xaa1>
   237f1:	49 8b 14 24          	mov    (%r12),%rdx
   237f5:	0f b7 32             	movzwl (%rdx),%esi
   237f8:	48 83 c2 02          	add    $0x2,%rdx
   237fc:	49 89 14 24          	mov    %rdx,(%r12)
   23800:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   23805:	e9 a9 f5 ff ff       	jmp    22db3 <_ULx86_64_dwarf_eval_expr+0xc3>
   2380a:	49 8b 14 24          	mov    (%r12),%rdx
   2380e:	0f b6 32             	movzbl (%rdx),%esi
   23811:	48 83 c2 01          	add    $0x1,%rdx
   23815:	49 89 14 24          	mov    %rdx,(%r12)
   23819:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   2381e:	e9 90 f5 ff ff       	jmp    22db3 <_ULx86_64_dwarf_eval_expr+0xc3>
   23823:	49 8b 14 24          	mov    (%r12),%rdx
   23827:	8b 32                	mov    (%rdx),%esi
   23829:	48 83 c2 04          	add    $0x4,%rdx
   2382d:	49 89 14 24          	mov    %rdx,(%r12)
   23831:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   23836:	e9 78 f5 ff ff       	jmp    22db3 <_ULx86_64_dwarf_eval_expr+0xc3>
   2383b:	0f b6 10             	movzbl (%rax),%edx
   2383e:	48 83 c0 01          	add    $0x1,%rax
   23842:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   23847:	e9 ac f8 ff ff       	jmp    230f8 <_ULx86_64_dwarf_eval_expr+0x408>
   2384c:	8b 10                	mov    (%rax),%edx
   2384e:	48 83 c0 04          	add    $0x4,%rax
   23852:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   23857:	89 d0                	mov    %edx,%eax
   23859:	81 e2 ff ff ff 00    	and    $0xffffff,%edx
   2385f:	48 83 fd 03          	cmp    $0x3,%rbp
   23863:	48 0f 45 d0          	cmovne %rax,%rdx
   23867:	e9 8c f8 ff ff       	jmp    230f8 <_ULx86_64_dwarf_eval_expr+0x408>
   2386c:	e8 cf 02 ff ff       	call   13b40 <__stack_chk_fail>
   23871:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   23878:	00 00 00 
   2387b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000023880 <_ULx86_64_dwarf_callback>:
   23880:	f3 0f 1e fa          	endbr64 
   23884:	41 57                	push   %r15
   23886:	41 56                	push   %r14
   23888:	41 55                	push   %r13
   2388a:	41 54                	push   %r12
   2388c:	55                   	push   %rbp
   2388d:	53                   	push   %rbx
   2388e:	48 83 ec 68          	sub    $0x68,%rsp
   23892:	4c 8b 2a             	mov    (%rdx),%r13
   23895:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   2389c:	00 00 
   2389e:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
   238a3:	31 c0                	xor    %eax,%eax
   238a5:	48 83 fe 19          	cmp    $0x19,%rsi
   238a9:	0f 86 97 03 00 00    	jbe    23c46 <_ULx86_64_dwarf_callback+0x3c6>
   238af:	0f b7 4f 18          	movzwl 0x18(%rdi),%ecx
   238b3:	49 89 d6             	mov    %rdx,%r14
   238b6:	48 8b 47 10          	mov    0x10(%rdi),%rax
   238ba:	48 89 fd             	mov    %rdi,%rbp
   238bd:	4c 8b 27             	mov    (%rdi),%r12
   238c0:	48 8d 51 ff          	lea    -0x1(%rcx),%rdx
   238c4:	48 85 c9             	test   %rcx,%rcx
   238c7:	0f 84 8b 02 00 00    	je     23b58 <_ULx86_64_dwarf_callback+0x2d8>
   238cd:	31 db                	xor    %ebx,%ebx
   238cf:	45 31 ff             	xor    %r15d,%r15d
   238d2:	31 f6                	xor    %esi,%esi
   238d4:	31 ff                	xor    %edi,%edi
   238d6:	eb 29                	jmp    23901 <_ULx86_64_dwarf_callback+0x81>
   238d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   238df:	00 
   238e0:	81 f9 50 e5 74 64    	cmp    $0x6474e550,%ecx
   238e6:	0f 84 94 02 00 00    	je     23b80 <_ULx86_64_dwarf_callback+0x300>
   238ec:	83 f9 02             	cmp    $0x2,%ecx
   238ef:	48 0f 44 f0          	cmove  %rax,%rsi
   238f3:	48 83 ea 01          	sub    $0x1,%rdx
   238f7:	48 83 c0 38          	add    $0x38,%rax
   238fb:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   238ff:	74 3a                	je     2393b <_ULx86_64_dwarf_callback+0xbb>
   23901:	8b 08                	mov    (%rax),%ecx
   23903:	83 f9 01             	cmp    $0x1,%ecx
   23906:	75 d8                	jne    238e0 <_ULx86_64_dwarf_callback+0x60>
   23908:	48 8b 48 10          	mov    0x10(%rax),%rcx
   2390c:	4c 01 e1             	add    %r12,%rcx
   2390f:	49 39 cd             	cmp    %rcx,%r13
   23912:	72 0e                	jb     23922 <_ULx86_64_dwarf_callback+0xa2>
   23914:	4c 8b 40 28          	mov    0x28(%rax),%r8
   23918:	49 01 c8             	add    %rcx,%r8
   2391b:	4d 39 e8             	cmp    %r13,%r8
   2391e:	4c 0f 47 f8          	cmova  %rax,%r15
   23922:	48 03 48 20          	add    0x20(%rax),%rcx
   23926:	48 39 cb             	cmp    %rcx,%rbx
   23929:	48 0f 42 d9          	cmovb  %rcx,%rbx
   2392d:	48 83 ea 01          	sub    $0x1,%rdx
   23931:	48 83 c0 38          	add    $0x38,%rax
   23935:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   23939:	75 c6                	jne    23901 <_ULx86_64_dwarf_callback+0x81>
   2393b:	4d 85 ff             	test   %r15,%r15
   2393e:	0f 84 14 02 00 00    	je     23b58 <_ULx86_64_dwarf_callback+0x2d8>
   23944:	48 85 ff             	test   %rdi,%rdi
   23947:	0f 84 55 03 00 00    	je     23ca2 <_ULx86_64_dwarf_callback+0x422>
   2394d:	4d 89 e3             	mov    %r12,%r11
   23950:	4c 03 5f 10          	add    0x10(%rdi),%r11
   23954:	0f 84 fe 01 00 00    	je     23b58 <_ULx86_64_dwarf_callback+0x2d8>
   2395a:	41 8b 46 10          	mov    0x10(%r14),%eax
   2395e:	4d 8b 56 08          	mov    0x8(%r14),%r10
   23962:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   23966:	48 85 f6             	test   %rsi,%rsi
   23969:	0f 84 31 02 00 00    	je     23ba0 <_ULx86_64_dwarf_callback+0x320>
   2396f:	48 8b 46 10          	mov    0x10(%rsi),%rax
   23973:	4c 01 e0             	add    %r12,%rax
   23976:	48 8b 10             	mov    (%rax),%rdx
   23979:	48 85 d2             	test   %rdx,%rdx
   2397c:	75 1b                	jne    23999 <_ULx86_64_dwarf_callback+0x119>
   2397e:	e9 0d 02 00 00       	jmp    23b90 <_ULx86_64_dwarf_callback+0x310>
   23983:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   23988:	48 8b 50 10          	mov    0x10(%rax),%rdx
   2398c:	48 83 c0 10          	add    $0x10,%rax
   23990:	48 85 d2             	test   %rdx,%rdx
   23993:	0f 84 f7 01 00 00    	je     23b90 <_ULx86_64_dwarf_callback+0x310>
   23999:	48 83 fa 03          	cmp    $0x3,%rdx
   2399d:	75 e9                	jne    23988 <_ULx86_64_dwarf_callback+0x108>
   2399f:	48 8b 40 08          	mov    0x8(%rax),%rax
   239a3:	49 89 46 38          	mov    %rax,0x38(%r14)
   239a7:	49 89 42 20          	mov    %rax,0x20(%r10)
   239ab:	41 80 3b 01          	cmpb   $0x1,(%r11)
   239af:	0f 85 a3 01 00 00    	jne    23b58 <_ULx86_64_dwarf_callback+0x2d8>
   239b5:	48 8b 3d b4 e7 00 00 	mov    0xe7b4(%rip),%rdi        # 32170 <_ULx86_64_local_addr_space>
   239bc:	4c 89 1c 24          	mov    %r11,(%rsp)
   239c0:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   239c5:	e8 36 e3 ff ff       	call   21d00 <_Ux86_64_get_accessors>
   239ca:	4c 8b 1c 24          	mov    (%rsp),%r11
   239ce:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   239d3:	48 83 ec 08          	sub    $0x8,%rsp
   239d7:	48 89 c6             	mov    %rax,%rsi
   239da:	48 8b 3d 8f e7 00 00 	mov    0xe78f(%rip),%rdi        # 32170 <_ULx86_64_local_addr_space>
   239e1:	49 8d 43 04          	lea    0x4(%r11),%rax
   239e5:	4c 89 5c 24 28       	mov    %r11,0x28(%rsp)
   239ea:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   239ef:	41 0f b6 4b 01       	movzbl 0x1(%r11),%ecx
   239f4:	6a 00                	push   $0x0
   239f6:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   239fb:	4d 89 d0             	mov    %r10,%r8
   239fe:	4c 8d 4c 24 50       	lea    0x50(%rsp),%r9
   23a03:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
   23a08:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   23a0d:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   23a12:	e8 b9 c2 ff ff       	call   1fcd0 <_ULx86_64_dwarf_read_encoded_pointer>
   23a17:	41 5b                	pop    %r11
   23a19:	5a                   	pop    %rdx
   23a1a:	85 c0                	test   %eax,%eax
   23a1c:	0f 88 38 01 00 00    	js     23b5a <_ULx86_64_dwarf_callback+0x2da>
   23a22:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
   23a27:	48 83 ec 08          	sub    $0x8,%rsp
   23a2b:	48 8b 3d 3e e7 00 00 	mov    0xe73e(%rip),%rdi        # 32170 <_ULx86_64_local_addr_space>
   23a32:	41 0f b6 4b 02       	movzbl 0x2(%r11),%ecx
   23a37:	6a 00                	push   $0x0
   23a39:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
   23a3e:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   23a43:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   23a48:	4c 8d 4c 24 58       	lea    0x58(%rsp),%r9
   23a4d:	4d 89 d0             	mov    %r10,%r8
   23a50:	e8 7b c2 ff ff       	call   1fcd0 <_ULx86_64_dwarf_read_encoded_pointer>
   23a55:	41 59                	pop    %r9
   23a57:	41 5a                	pop    %r10
   23a59:	85 c0                	test   %eax,%eax
   23a5b:	0f 88 f9 00 00 00    	js     23b5a <_ULx86_64_dwarf_callback+0x2da>
   23a61:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
   23a66:	41 80 7b 03 3b       	cmpb   $0x3b,0x3(%r11)
   23a6b:	0f 84 3e 01 00 00    	je     23baf <_ULx86_64_dwarf_callback+0x32f>
   23a71:	41 80 7b 02 ff       	cmpb   $0xff,0x2(%r11)
   23a76:	41 0f b6 43 01       	movzbl 0x1(%r11),%eax
   23a7b:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   23a80:	0f 84 73 01 00 00    	je     23bf9 <_ULx86_64_dwarf_callback+0x379>
   23a86:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   23a8b:	3c ff                	cmp    $0xff,%al
   23a8d:	0f 84 0f 02 00 00    	je     23ca2 <_ULx86_64_dwarf_callback+0x422>
   23a93:	4c 8b 25 d6 e6 00 00 	mov    0xe6d6(%rip),%r12        # 32170 <_ULx86_64_local_addr_space>
   23a9a:	4c 8b 7c 24 48       	mov    0x48(%rsp),%r15
   23a9f:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
   23aa4:	4c 89 e7             	mov    %r12,%rdi
   23aa7:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
   23aac:	4c 89 04 24          	mov    %r8,(%rsp)
   23ab0:	e8 4b e2 ff ff       	call   21d00 <_Ux86_64_get_accessors>
   23ab5:	4c 8b 04 24          	mov    (%rsp),%r8
   23ab9:	4d 85 ff             	test   %r15,%r15
   23abc:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   23ac1:	48 89 c5             	mov    %rax,%rbp
   23ac4:	4c 89 44 24 50       	mov    %r8,0x50(%rsp)
   23ac9:	0f 84 89 00 00 00    	je     23b58 <_ULx86_64_dwarf_callback+0x2d8>
   23acf:	45 31 ff             	xor    %r15d,%r15d
   23ad2:	48 8d 54 24 50       	lea    0x50(%rsp),%rdx
   23ad7:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   23adc:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   23ae1:	4c 89 fb             	mov    %r15,%rbx
   23ae4:	4d 89 c5             	mov    %r8,%r13
   23ae7:	49 89 d7             	mov    %rdx,%r15
   23aea:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
   23aef:	4d 89 d6             	mov    %r10,%r14
   23af2:	4c 89 04 24          	mov    %r8,(%rsp)
   23af6:	eb 52                	jmp    23b4a <_ULx86_64_dwarf_callback+0x2ca>
   23af8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   23aff:	00 
   23b00:	6a 00                	push   $0x0
   23b02:	4d 89 e8             	mov    %r13,%r8
   23b05:	4c 89 e7             	mov    %r12,%rdi
   23b08:	45 31 c9             	xor    %r9d,%r9d
   23b0b:	6a 00                	push   $0x0
   23b0d:	4c 89 f1             	mov    %r14,%rcx
   23b10:	4c 89 fa             	mov    %r15,%rdx
   23b13:	48 89 ee             	mov    %rbp,%rsi
   23b16:	e8 45 07 00 00       	call   24260 <_ULx86_64_dwarf_extract_proc_info_from_fde>
   23b1b:	5f                   	pop    %rdi
   23b1c:	41 58                	pop    %r8
   23b1e:	85 c0                	test   %eax,%eax
   23b20:	78 36                	js     23b58 <_ULx86_64_dwarf_callback+0x2d8>
   23b22:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   23b27:	49 3b 06             	cmp    (%r14),%rax
   23b2a:	72 0a                	jb     23b36 <_ULx86_64_dwarf_callback+0x2b6>
   23b2c:	49 3b 46 08          	cmp    0x8(%r14),%rax
   23b30:	0f 82 1a 01 00 00    	jb     23c50 <_ULx86_64_dwarf_callback+0x3d0>
   23b36:	48 83 c3 01          	add    $0x1,%rbx
   23b3a:	48 39 5c 24 20       	cmp    %rbx,0x20(%rsp)
   23b3f:	76 17                	jbe    23b58 <_ULx86_64_dwarf_callback+0x2d8>
   23b41:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
   23b46:	48 89 04 24          	mov    %rax,(%rsp)
   23b4a:	48 8b 3c 24          	mov    (%rsp),%rdi
   23b4e:	48 39 7c 24 10       	cmp    %rdi,0x10(%rsp)
   23b53:	77 ab                	ja     23b00 <_ULx86_64_dwarf_callback+0x280>
   23b55:	0f 1f 00             	nopl   (%rax)
   23b58:	31 c0                	xor    %eax,%eax
   23b5a:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
   23b5f:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   23b66:	00 00 
   23b68:	0f 85 39 01 00 00    	jne    23ca7 <_ULx86_64_dwarf_callback+0x427>
   23b6e:	48 83 c4 68          	add    $0x68,%rsp
   23b72:	5b                   	pop    %rbx
   23b73:	5d                   	pop    %rbp
   23b74:	41 5c                	pop    %r12
   23b76:	41 5d                	pop    %r13
   23b78:	41 5e                	pop    %r14
   23b7a:	41 5f                	pop    %r15
   23b7c:	c3                   	ret    
   23b7d:	0f 1f 00             	nopl   (%rax)
   23b80:	48 89 c7             	mov    %rax,%rdi
   23b83:	e9 6b fd ff ff       	jmp    238f3 <_ULx86_64_dwarf_callback+0x73>
   23b88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   23b8f:	00 
   23b90:	49 8b 46 38          	mov    0x38(%r14),%rax
   23b94:	e9 0e fe ff ff       	jmp    239a7 <_ULx86_64_dwarf_callback+0x127>
   23b99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   23ba0:	49 c7 46 38 00 00 00 	movq   $0x0,0x38(%r14)
   23ba7:	00 
   23ba8:	31 c0                	xor    %eax,%eax
   23baa:	e9 f8 fd ff ff       	jmp    239a7 <_ULx86_64_dwarf_callback+0x127>
   23baf:	48 8b 45 08          	mov    0x8(%rbp),%rax
   23bb3:	4d 03 67 10          	add    0x10(%r15),%r12
   23bb7:	41 c7 46 40 02 00 00 	movl   $0x2,0x40(%r14)
   23bbe:	00 
   23bbf:	4d 89 66 28          	mov    %r12,0x28(%r14)
   23bc3:	4d 03 67 28          	add    0x28(%r15),%r12
   23bc7:	49 89 46 48          	mov    %rax,0x48(%r14)
   23bcb:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   23bd0:	4d 89 66 30          	mov    %r12,0x30(%r14)
   23bd4:	49 89 46 60          	mov    %rax,0x60(%r14)
   23bd8:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   23bdf:	ff ff 1f 
   23be2:	48 23 44 24 48       	and    0x48(%rsp),%rax
   23be7:	49 89 46 58          	mov    %rax,0x58(%r14)
   23beb:	b8 01 00 00 00       	mov    $0x1,%eax
   23bf0:	4d 89 5e 50          	mov    %r11,0x50(%r14)
   23bf4:	e9 61 ff ff ff       	jmp    23b5a <_ULx86_64_dwarf_callback+0x2da>
   23bf9:	48 c7 44 24 48 ff ff 	movq   $0xffffffffffffffff,0x48(%rsp)
   23c00:	ff ff 
   23c02:	3c ff                	cmp    $0xff,%al
   23c04:	0f 84 98 00 00 00    	je     23ca2 <_ULx86_64_dwarf_callback+0x422>
   23c0a:	4c 8b 25 5f e5 00 00 	mov    0xe55f(%rip),%r12        # 32170 <_ULx86_64_local_addr_space>
   23c11:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
   23c16:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   23c1b:	4c 89 e7             	mov    %r12,%rdi
   23c1e:	4c 89 04 24          	mov    %r8,(%rsp)
   23c22:	e8 d9 e0 ff ff       	call   21d00 <_Ux86_64_get_accessors>
   23c27:	4c 8b 04 24          	mov    (%rsp),%r8
   23c2b:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   23c30:	48 c7 44 24 20 ff ff 	movq   $0xffffffffffffffff,0x20(%rsp)
   23c37:	ff ff 
   23c39:	48 89 c5             	mov    %rax,%rbp
   23c3c:	4c 89 44 24 50       	mov    %r8,0x50(%rsp)
   23c41:	e9 89 fe ff ff       	jmp    23acf <_ULx86_64_dwarf_callback+0x24f>
   23c46:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   23c4b:	e9 0a ff ff ff       	jmp    23b5a <_ULx86_64_dwarf_callback+0x2da>
   23c50:	8b 74 24 0c          	mov    0xc(%rsp),%esi
   23c54:	4d 89 f2             	mov    %r14,%r10
   23c57:	4d 89 e8             	mov    %r13,%r8
   23c5a:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
   23c5f:	4c 89 fa             	mov    %r15,%rdx
   23c62:	85 f6                	test   %esi,%esi
   23c64:	74 2a                	je     23c90 <_ULx86_64_dwarf_callback+0x410>
   23c66:	48 8b 04 24          	mov    (%rsp),%rax
   23c6a:	4c 89 d1             	mov    %r10,%rcx
   23c6d:	48 89 ee             	mov    %rbp,%rsi
   23c70:	4c 89 e7             	mov    %r12,%rdi
   23c73:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
   23c78:	6a 00                	push   $0x0
   23c7a:	6a 00                	push   $0x0
   23c7c:	44 8b 4c 24 1c       	mov    0x1c(%rsp),%r9d
   23c81:	e8 da 05 00 00       	call   24260 <_ULx86_64_dwarf_extract_proc_info_from_fde>
   23c86:	5a                   	pop    %rdx
   23c87:	59                   	pop    %rcx
   23c88:	85 c0                	test   %eax,%eax
   23c8a:	0f 88 c8 fe ff ff    	js     23b58 <_ULx86_64_dwarf_callback+0x2d8>
   23c90:	41 c7 46 14 01 00 00 	movl   $0x1,0x14(%r14)
   23c97:	00 
   23c98:	b8 01 00 00 00       	mov    $0x1,%eax
   23c9d:	e9 b8 fe ff ff       	jmp    23b5a <_ULx86_64_dwarf_callback+0x2da>
   23ca2:	e8 90 20 00 00       	call   25d37 <abort>
   23ca7:	e8 94 fe fe ff       	call   13b40 <__stack_chk_fail>
   23cac:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000023cb0 <_ULx86_64_dwarf_search_unwind_table>:
   23cb0:	f3 0f 1e fa          	endbr64 
   23cb4:	41 57                	push   %r15
   23cb6:	45 89 c2             	mov    %r8d,%r10d
   23cb9:	41 56                	push   %r14
   23cbb:	41 55                	push   %r13
   23cbd:	49 89 cd             	mov    %rcx,%r13
   23cc0:	41 54                	push   %r12
   23cc2:	49 89 f4             	mov    %rsi,%r12
   23cc5:	55                   	push   %rbp
   23cc6:	48 89 d5             	mov    %rdx,%rbp
   23cc9:	53                   	push   %rbx
   23cca:	48 83 ec 38          	sub    $0x38,%rsp
   23cce:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   23cd3:	4c 8b 4a 48          	mov    0x48(%rdx),%r9
   23cd7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   23cde:	00 00 
   23ce0:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   23ce5:	31 c0                	xor    %eax,%eax
   23ce7:	8b 42 28             	mov    0x28(%rdx),%eax
   23cea:	83 e8 02             	sub    $0x2,%eax
   23ced:	83 e0 fd             	and    $0xfffffffd,%eax
   23cf0:	0f 85 32 01 00 00    	jne    23e28 <_ULx86_64_dwarf_search_unwind_table+0x178>
   23cf6:	48 8b 42 40          	mov    0x40(%rdx),%rax
   23cfa:	49 89 fe             	mov    %rdi,%r14
   23cfd:	45 31 c0             	xor    %r8d,%r8d
   23d00:	48 8d 1c c5 00 00 00 	lea    0x0(,%rax,8),%rbx
   23d07:	00 
   23d08:	4c 89 f7             	mov    %r14,%rdi
   23d0b:	44 89 54 24 14       	mov    %r10d,0x14(%rsp)
   23d10:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
   23d15:	4c 89 0c 24          	mov    %r9,(%rsp)
   23d19:	e8 e2 df ff ff       	call   21d00 <_Ux86_64_get_accessors>
   23d1e:	4c 8b 7d 38          	mov    0x38(%rbp),%r15
   23d22:	83 7d 28 04          	cmpl   $0x4,0x28(%rbp)
   23d26:	48 89 c6             	mov    %rax,%rsi
   23d29:	4c 8b 0c 24          	mov    (%rsp),%r9
   23d2d:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
   23d32:	44 8b 54 24 14       	mov    0x14(%rsp),%r10d
   23d37:	4c 89 f8             	mov    %r15,%rax
   23d3a:	75 04                	jne    23d40 <_ULx86_64_dwarf_search_unwind_table+0x90>
   23d3c:	48 8b 45 10          	mov    0x10(%rbp),%rax
   23d40:	44 89 e1             	mov    %r12d,%ecx
   23d43:	48 c1 eb 03          	shr    $0x3,%rbx
   23d47:	31 ff                	xor    %edi,%edi
   23d49:	29 c1                	sub    %eax,%ecx
   23d4b:	4c 39 35 1e e4 00 00 	cmp    %r14,0xe41e(%rip)        # 32170 <_ULx86_64_local_addr_space>
   23d52:	89 c8                	mov    %ecx,%eax
   23d54:	74 1e                	je     23d74 <_ULx86_64_dwarf_search_unwind_table+0xc4>
   23d56:	e9 05 01 00 00       	jmp    23e60 <_ULx86_64_dwarf_search_unwind_table+0x1b0>
   23d5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   23d60:	48 8d 14 3b          	lea    (%rbx,%rdi,1),%rdx
   23d64:	48 d1 ea             	shr    %rdx
   23d67:	41 3b 04 d1          	cmp    (%r9,%rdx,8),%eax
   23d6b:	0f 8d a7 00 00 00    	jge    23e18 <_ULx86_64_dwarf_search_unwind_table+0x168>
   23d71:	48 89 d3             	mov    %rdx,%rbx
   23d74:	48 39 fb             	cmp    %rdi,%rbx
   23d77:	77 e7                	ja     23d60 <_ULx86_64_dwarf_search_unwind_table+0xb0>
   23d79:	48 85 db             	test   %rbx,%rbx
   23d7c:	0f 84 de 00 00 00    	je     23e60 <_ULx86_64_dwarf_search_unwind_table+0x1b0>
   23d82:	49 8d 44 d9 f8       	lea    -0x8(%r9,%rbx,8),%rax
   23d87:	48 85 c0             	test   %rax,%rax
   23d8a:	0f 84 d0 00 00 00    	je     23e60 <_ULx86_64_dwarf_search_unwind_table+0x1b0>
   23d90:	48 63 40 04          	movslq 0x4(%rax),%rax
   23d94:	4d 85 c0             	test   %r8,%r8
   23d97:	0f 85 b3 00 00 00    	jne    23e50 <_ULx86_64_dwarf_search_unwind_table+0x1a0>
   23d9d:	4c 01 f8             	add    %r15,%rax
   23da0:	4d 89 f8             	mov    %r15,%r8
   23da3:	31 ff                	xor    %edi,%edi
   23da5:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   23daa:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
   23daf:	4c 89 e9             	mov    %r13,%rcx
   23db2:	45 89 d1             	mov    %r10d,%r9d
   23db5:	ff 74 24 18          	push   0x18(%rsp)
   23db9:	57                   	push   %rdi
   23dba:	4c 89 f7             	mov    %r14,%rdi
   23dbd:	e8 9e 04 00 00       	call   24260 <_ULx86_64_dwarf_extract_proc_info_from_fde>
   23dc2:	5a                   	pop    %rdx
   23dc3:	59                   	pop    %rcx
   23dc4:	85 c0                	test   %eax,%eax
   23dc6:	78 2a                	js     23df2 <_ULx86_64_dwarf_search_unwind_table+0x142>
   23dc8:	83 7d 28 01          	cmpl   $0x1,0x28(%rbp)
   23dcc:	49 8b 45 00          	mov    0x0(%r13),%rax
   23dd0:	75 13                	jne    23de5 <_ULx86_64_dwarf_search_unwind_table+0x135>
   23dd2:	4c 01 f8             	add    %r15,%rax
   23dd5:	4d 01 7d 08          	add    %r15,0x8(%r13)
   23dd9:	49 89 45 00          	mov    %rax,0x0(%r13)
   23ddd:	49 c7 45 28 20 00 00 	movq   $0x20,0x28(%r13)
   23de4:	00 
   23de5:	49 39 c4             	cmp    %rax,%r12
   23de8:	72 76                	jb     23e60 <_ULx86_64_dwarf_search_unwind_table+0x1b0>
   23dea:	4d 39 65 08          	cmp    %r12,0x8(%r13)
   23dee:	76 70                	jbe    23e60 <_ULx86_64_dwarf_search_unwind_table+0x1b0>
   23df0:	31 c0                	xor    %eax,%eax
   23df2:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
   23df7:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   23dfe:	00 00 
   23e00:	75 65                	jne    23e67 <_ULx86_64_dwarf_search_unwind_table+0x1b7>
   23e02:	48 83 c4 38          	add    $0x38,%rsp
   23e06:	5b                   	pop    %rbx
   23e07:	5d                   	pop    %rbp
   23e08:	41 5c                	pop    %r12
   23e0a:	41 5d                	pop    %r13
   23e0c:	41 5e                	pop    %r14
   23e0e:	41 5f                	pop    %r15
   23e10:	c3                   	ret    
   23e11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   23e18:	48 8d 7a 01          	lea    0x1(%rdx),%rdi
   23e1c:	e9 53 ff ff ff       	jmp    23d74 <_ULx86_64_dwarf_search_unwind_table+0xc4>
   23e21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   23e28:	49 8b 41 28          	mov    0x28(%r9),%rax
   23e2c:	4d 8b 41 10          	mov    0x10(%r9),%r8
   23e30:	4c 8b 35 39 e3 00 00 	mov    0xe339(%rip),%r14        # 32170 <_ULx86_64_local_addr_space>
   23e37:	4d 8b 49 20          	mov    0x20(%r9),%r9
   23e3b:	48 8d 1c c5 00 00 00 	lea    0x0(,%rax,8),%rbx
   23e42:	00 
   23e43:	e9 c0 fe ff ff       	jmp    23d08 <_ULx86_64_dwarf_search_unwind_table+0x58>
   23e48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   23e4f:	00 
   23e50:	4c 01 c0             	add    %r8,%rax
   23e53:	bf 01 00 00 00       	mov    $0x1,%edi
   23e58:	e9 48 ff ff ff       	jmp    23da5 <_ULx86_64_dwarf_search_unwind_table+0xf5>
   23e5d:	0f 1f 00             	nopl   (%rax)
   23e60:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
   23e65:	eb 8b                	jmp    23df2 <_ULx86_64_dwarf_search_unwind_table+0x142>
   23e67:	e8 d4 fc fe ff       	call   13b40 <__stack_chk_fail>
   23e6c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000023e70 <_ULx86_64_dwarf_find_proc_info>:
   23e70:	f3 0f 1e fa          	endbr64 
   23e74:	41 56                	push   %r14
   23e76:	4d 89 c6             	mov    %r8,%r14
   23e79:	41 55                	push   %r13
   23e7b:	49 89 fd             	mov    %rdi,%r13
   23e7e:	41 54                	push   %r12
   23e80:	49 89 d4             	mov    %rdx,%r12
   23e83:	55                   	push   %rbp
   23e84:	48 89 f5             	mov    %rsi,%rbp
   23e87:	53                   	push   %rbx
   23e88:	89 cb                	mov    %ecx,%ebx
   23e8a:	b9 15 00 00 00       	mov    $0x15,%ecx
   23e8f:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
   23e96:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   23e9d:	00 00 
   23e9f:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   23ea6:	00 
   23ea7:	31 c0                	xor    %eax,%eax
   23ea9:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
   23eae:	48 89 e6             	mov    %rsp,%rsi
   23eb1:	48 89 2c 24          	mov    %rbp,(%rsp)
   23eb5:	48 89 d7             	mov    %rdx,%rdi
   23eb8:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
   23ebd:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   23ec0:	48 8d 3d b9 f9 ff ff 	lea    -0x647(%rip),%rdi        # 23880 <_ULx86_64_dwarf_callback>
   23ec7:	89 5c 24 10          	mov    %ebx,0x10(%rsp)
   23ecb:	c7 44 24 40 ff ff ff 	movl   $0xffffffff,0x40(%rsp)
   23ed2:	ff 
   23ed3:	c7 84 24 90 00 00 00 	movl   $0xffffffff,0x90(%rsp)
   23eda:	ff ff ff ff 
   23ede:	e8 ad 00 00 00       	call   23f90 <dl_iterate_phdr>
   23ee3:	85 c0                	test   %eax,%eax
   23ee5:	0f 8e 85 00 00 00    	jle    23f70 <_ULx86_64_dwarf_find_proc_info+0x100>
   23eeb:	8b 54 24 14          	mov    0x14(%rsp),%edx
   23eef:	31 c0                	xor    %eax,%eax
   23ef1:	85 d2                	test   %edx,%edx
   23ef3:	75 2a                	jne    23f1f <_ULx86_64_dwarf_find_proc_info+0xaf>
   23ef5:	83 7c 24 40 ff       	cmpl   $0xffffffff,0x40(%rsp)
   23efa:	75 4c                	jne    23f48 <_ULx86_64_dwarf_find_proc_info+0xd8>
   23efc:	83 bc 24 90 00 00 00 	cmpl   $0xffffffff,0x90(%rsp)
   23f03:	ff 
   23f04:	74 6a                	je     23f70 <_ULx86_64_dwarf_find_proc_info+0x100>
   23f06:	48 8d 54 24 68       	lea    0x68(%rsp),%rdx
   23f0b:	4d 89 f1             	mov    %r14,%r9
   23f0e:	41 89 d8             	mov    %ebx,%r8d
   23f11:	4c 89 e1             	mov    %r12,%rcx
   23f14:	48 89 ee             	mov    %rbp,%rsi
   23f17:	4c 89 ef             	mov    %r13,%rdi
   23f1a:	e8 91 fd ff ff       	call   23cb0 <_ULx86_64_dwarf_search_unwind_table>
   23f1f:	48 8b 9c 24 b8 00 00 	mov    0xb8(%rsp),%rbx
   23f26:	00 
   23f27:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
   23f2e:	00 00 
   23f30:	75 45                	jne    23f77 <_ULx86_64_dwarf_find_proc_info+0x107>
   23f32:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
   23f39:	5b                   	pop    %rbx
   23f3a:	5d                   	pop    %rbp
   23f3b:	41 5c                	pop    %r12
   23f3d:	41 5d                	pop    %r13
   23f3f:	41 5e                	pop    %r14
   23f41:	c3                   	ret    
   23f42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   23f48:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
   23f4d:	4d 89 f1             	mov    %r14,%r9
   23f50:	41 89 d8             	mov    %ebx,%r8d
   23f53:	4c 89 e1             	mov    %r12,%rcx
   23f56:	48 89 ee             	mov    %rbp,%rsi
   23f59:	4c 89 ef             	mov    %r13,%rdi
   23f5c:	e8 4f fd ff ff       	call   23cb0 <_ULx86_64_dwarf_search_unwind_table>
   23f61:	83 f8 f6             	cmp    $0xfffffff6,%eax
   23f64:	75 b9                	jne    23f1f <_ULx86_64_dwarf_find_proc_info+0xaf>
   23f66:	83 bc 24 90 00 00 00 	cmpl   $0xffffffff,0x90(%rsp)
   23f6d:	ff 
   23f6e:	75 96                	jne    23f06 <_ULx86_64_dwarf_find_proc_info+0x96>
   23f70:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
   23f75:	eb a8                	jmp    23f1f <_ULx86_64_dwarf_find_proc_info+0xaf>
   23f77:	e8 c4 fb fe ff       	call   13b40 <__stack_chk_fail>
   23f7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000023f80 <_ULx86_64_dwarf_put_unwind_info>:
   23f80:	f3 0f 1e fa          	endbr64 
   23f84:	c3                   	ret    
   23f85:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   23f8c:	00 00 00 
   23f8f:	90                   	nop

0000000000023f90 <dl_iterate_phdr>:
   23f90:	f3 0f 1e fa          	endbr64 
   23f94:	41 54                	push   %r12
   23f96:	66 0f ef c0          	pxor   %xmm0,%xmm0
   23f9a:	49 89 f4             	mov    %rsi,%r12
   23f9d:	55                   	push   %rbp
   23f9e:	53                   	push   %rbx
   23f9f:	48 89 fb             	mov    %rdi,%rbx
   23fa2:	48 83 ec 50          	sub    $0x50,%rsp
   23fa6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   23fad:	00 00 
   23faf:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   23fb4:	31 c0                	xor    %eax,%eax
   23fb6:	0f 29 04 24          	movaps %xmm0,(%rsp)
   23fba:	48 89 e5             	mov    %rsp,%rbp
   23fbd:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   23fc2:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
   23fc7:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
   23fcc:	e8 27 19 00 00       	call   258f8 <get_enclave_base>
   23fd1:	48 8d 0d ca 2b 00 00 	lea    0x2bca(%rip),%rcx        # 26ba2 <g_dyn_entry_table+0xba2>
   23fd8:	be 40 00 00 00       	mov    $0x40,%esi
   23fdd:	48 89 ef             	mov    %rbp,%rdi
   23fe0:	48 8b 50 20          	mov    0x20(%rax),%rdx
   23fe4:	48 89 04 24          	mov    %rax,(%rsp)
   23fe8:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
   23fed:	48 01 c2             	add    %rax,%rdx
   23ff0:	0f b7 40 38          	movzwl 0x38(%rax),%eax
   23ff4:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   23ff9:	4c 89 e2             	mov    %r12,%rdx
   23ffc:	66 89 44 24 18       	mov    %ax,0x18(%rsp)
   24001:	ff d3                	call   *%rbx
   24003:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
   24008:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   2400f:	00 00 
   24011:	75 09                	jne    2401c <dl_iterate_phdr+0x8c>
   24013:	48 83 c4 50          	add    $0x50,%rsp
   24017:	5b                   	pop    %rbx
   24018:	5d                   	pop    %rbp
   24019:	41 5c                	pop    %r12
   2401b:	c3                   	ret    
   2401c:	e8 1f fb fe ff       	call   13b40 <__stack_chk_fail>
   24021:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   24028:	00 00 00 
   2402b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000024030 <msync>:
   24030:	f3 0f 1e fa          	endbr64 
   24034:	31 c0                	xor    %eax,%eax
   24036:	c3                   	ret    
   24037:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2403e:	00 00 

0000000000024040 <_ZNKSt9type_info10__do_catchEPKS_PPvj>:
   24040:	f3 0f 1e fa          	endbr64 
   24044:	48 39 f7             	cmp    %rsi,%rdi
   24047:	74 5f                	je     240a8 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x68>
   24049:	48 85 ff             	test   %rdi,%rdi
   2404c:	74 42                	je     24090 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x50>
   2404e:	41 54                	push   %r12
   24050:	31 c9                	xor    %ecx,%ecx
   24052:	49 89 d4             	mov    %rdx,%r12
   24055:	48 8d 15 9c bb 00 00 	lea    0xbb9c(%rip),%rdx        # 2fbf8 <_ZTIN10__cxxabiv117__class_type_infoE>
   2405c:	55                   	push   %rbp
   2405d:	48 89 f5             	mov    %rsi,%rbp
   24060:	48 8d 35 81 bb 00 00 	lea    0xbb81(%rip),%rsi        # 2fbe8 <_ZTISt9type_info>
   24067:	48 83 ec 08          	sub    $0x8,%rsp
   2406b:	e8 a0 00 00 00       	call   24110 <__dynamic_cast>
   24070:	48 89 c6             	mov    %rax,%rsi
   24073:	48 85 c0             	test   %rax,%rax
   24076:	74 20                	je     24098 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x58>
   24078:	48 8b 45 00          	mov    0x0(%rbp),%rax
   2407c:	4c 89 e2             	mov    %r12,%rdx
   2407f:	48 89 ef             	mov    %rbp,%rdi
   24082:	48 8b 40 28          	mov    0x28(%rax),%rax
   24086:	48 83 c4 08          	add    $0x8,%rsp
   2408a:	5d                   	pop    %rbp
   2408b:	41 5c                	pop    %r12
   2408d:	ff e0                	jmp    *%rax
   2408f:	90                   	nop
   24090:	31 c0                	xor    %eax,%eax
   24092:	c3                   	ret    
   24093:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   24098:	48 83 c4 08          	add    $0x8,%rsp
   2409c:	31 c0                	xor    %eax,%eax
   2409e:	5d                   	pop    %rbp
   2409f:	41 5c                	pop    %r12
   240a1:	c3                   	ret    
   240a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   240a8:	b8 01 00 00 00       	mov    $0x1,%eax
   240ad:	c3                   	ret    
   240ae:	66 90                	xchg   %ax,%ax

00000000000240b0 <_ZNK10__cxxabiv117__class_type_info7cast_toEPvPKS0_>:
   240b0:	f3 0f 1e fa          	endbr64 
   240b4:	48 39 fa             	cmp    %rdi,%rdx
   240b7:	b8 00 00 00 00       	mov    $0x0,%eax
   240bc:	48 0f 44 c6          	cmove  %rsi,%rax
   240c0:	c3                   	ret    
   240c1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   240c8:	00 00 00 
   240cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000240d0 <_ZNK10__cxxabiv120__si_class_type_info7cast_toEPvPKNS_17__class_type_infoE>:
   240d0:	f3 0f 1e fa          	endbr64 
   240d4:	48 39 d7             	cmp    %rdx,%rdi
   240d7:	74 0f                	je     240e8 <_ZNK10__cxxabiv120__si_class_type_info7cast_toEPvPKNS_17__class_type_infoE+0x18>
   240d9:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   240dd:	48 8b 07             	mov    (%rdi),%rax
   240e0:	ff 60 30             	jmp    *0x30(%rax)
   240e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   240e8:	48 89 f0             	mov    %rsi,%rax
   240eb:	c3                   	ret    
   240ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000240f0 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPPv>:
   240f0:	f3 0f 1e fa          	endbr64 
   240f4:	48 39 f7             	cmp    %rsi,%rdi
   240f7:	74 0f                	je     24108 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPPv+0x18>
   240f9:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   240fd:	48 8b 07             	mov    (%rdi),%rax
   24100:	ff 60 28             	jmp    *0x28(%rax)
   24103:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   24108:	b8 01 00 00 00       	mov    $0x1,%eax
   2410d:	c3                   	ret    
   2410e:	66 90                	xchg   %ax,%ax

0000000000024110 <__dynamic_cast>:
   24110:	f3 0f 1e fa          	endbr64 
   24114:	48 8b 07             	mov    (%rdi),%rax
   24117:	4c 8b 40 f8          	mov    -0x8(%rax),%r8
   2411b:	48 8b 70 f0          	mov    -0x10(%rax),%rsi
   2411f:	49 8b 00             	mov    (%r8),%rax
   24122:	48 01 fe             	add    %rdi,%rsi
   24125:	4c 89 c7             	mov    %r8,%rdi
   24128:	48 8b 40 30          	mov    0x30(%rax),%rax
   2412c:	ff e0                	jmp    *%rax
   2412e:	66 90                	xchg   %ax,%ax

0000000000024130 <_UIx86_64_mi_init>:
   24130:	f3 0f 1e fa          	endbr64 
   24134:	c3                   	ret    
   24135:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2413c:	00 00 00 
   2413f:	90                   	nop

0000000000024140 <_Ux86_64_flush_cache>:
   24140:	f3 0f 1e fa          	endbr64 
   24144:	55                   	push   %rbp
   24145:	48 89 fd             	mov    %rdi,%rbp
   24148:	53                   	push   %rbx
   24149:	48 83 ec 08          	sub    $0x8,%rsp
   2414d:	48 8b 9f 88 66 00 00 	mov    0x6688(%rdi),%rbx
   24154:	48 c7 47 50 00 00 00 	movq   $0x0,0x50(%rdi)
   2415b:	00 
   2415c:	48 85 db             	test   %rbx,%rbx
   2415f:	74 27                	je     24188 <_Ux86_64_flush_cache+0x48>
   24161:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   24168:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   2416c:	48 85 ff             	test   %rdi,%rdi
   2416f:	74 05                	je     24176 <_Ux86_64_flush_cache+0x36>
   24171:	e8 2a e3 fe ff       	call   124a0 <dlfree>
   24176:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   2417a:	e8 21 e3 fe ff       	call   124a0 <dlfree>
   2417f:	48 8b 5b 30          	mov    0x30(%rbx),%rbx
   24183:	48 85 db             	test   %rbx,%rbx
   24186:	75 e0                	jne    24168 <_Ux86_64_flush_cache+0x28>
   24188:	48 c7 85 88 66 00 00 	movq   $0x0,0x6688(%rbp)
   2418f:	00 00 00 00 
   24193:	f0 83 45 44 01       	lock addl $0x1,0x44(%rbp)
   24198:	48 83 c4 08          	add    $0x8,%rsp
   2419c:	5b                   	pop    %rbx
   2419d:	5d                   	pop    %rbp
   2419e:	c3                   	ret    
   2419f:	90                   	nop

00000000000241a0 <_U_dyn_info_list_addr>:
   241a0:	f3 0f 1e fa          	endbr64 
   241a4:	48 8d 05 05 e0 02 00 	lea    0x2e005(%rip),%rax        # 521b0 <_U_dyn_info_list>
   241ab:	c3                   	ret    
   241ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000241b0 <_ULx86_64_Iextract_dynamic_proc_info>:
   241b0:	f3 0f 1e fa          	endbr64 
   241b4:	48 8b 41 10          	mov    0x10(%rcx),%rax
   241b8:	49 89 d2             	mov    %rdx,%r10
   241bb:	48 89 ca             	mov    %rcx,%rdx
   241be:	49 89 02             	mov    %rax,(%r10)
   241c1:	48 8b 41 18          	mov    0x18(%rcx),%rax
   241c5:	49 89 42 08          	mov    %rax,0x8(%r10)
   241c9:	48 8b 41 20          	mov    0x20(%rcx),%rax
   241cd:	49 89 42 20          	mov    %rax,0x20(%r10)
   241d1:	8b 41 28             	mov    0x28(%rcx),%eax
   241d4:	41 89 42 30          	mov    %eax,0x30(%r10)
   241d8:	85 c0                	test   %eax,%eax
   241da:	74 14                	je     241f0 <_ULx86_64_Iextract_dynamic_proc_info+0x40>
   241dc:	83 e8 01             	sub    $0x1,%eax
   241df:	83 f8 03             	cmp    $0x3,%eax
   241e2:	77 3c                	ja     24220 <_ULx86_64_Iextract_dynamic_proc_info+0x70>
   241e4:	4c 89 d1             	mov    %r10,%rcx
   241e7:	e9 c4 fa ff ff       	jmp    23cb0 <_ULx86_64_dwarf_search_unwind_table>
   241ec:	0f 1f 40 00          	nopl   0x0(%rax)
   241f0:	48 8b 49 38          	mov    0x38(%rcx),%rcx
   241f4:	45 85 c0             	test   %r8d,%r8d
   241f7:	49 c7 42 10 00 00 00 	movq   $0x0,0x10(%r10)
   241fe:	00 
   241ff:	49 89 4a 18          	mov    %rcx,0x18(%r10)
   24203:	8b 4a 40             	mov    0x40(%rdx),%ecx
   24206:	41 c7 42 34 00 00 00 	movl   $0x0,0x34(%r10)
   2420d:	00 
   2420e:	49 89 4a 28          	mov    %rcx,0x28(%r10)
   24212:	b9 00 00 00 00       	mov    $0x0,%ecx
   24217:	48 0f 44 d1          	cmove  %rcx,%rdx
   2421b:	49 89 52 38          	mov    %rdx,0x38(%r10)
   2421f:	c3                   	ret    
   24220:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   24225:	c3                   	ret    
   24226:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2422d:	00 00 00 

0000000000024230 <_ULx86_64_set_reg>:
   24230:	f3 0f 1e fa          	endbr64 
   24234:	48 83 ec 18          	sub    $0x18,%rsp
   24238:	b9 01 00 00 00       	mov    $0x1,%ecx
   2423d:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   24242:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
   24247:	e8 e4 e3 ff ff       	call   22630 <_ULx86_64_access_reg>
   2424c:	48 83 c4 18          	add    $0x18,%rsp
   24250:	c3                   	ret    
   24251:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   24258:	00 00 00 
   2425b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000024260 <_ULx86_64_dwarf_extract_proc_info_from_fde>:
   24260:	f3 0f 1e fa          	endbr64 
   24264:	41 57                	push   %r15
   24266:	66 0f ef c0          	pxor   %xmm0,%xmm0
   2426a:	41 56                	push   %r14
   2426c:	49 89 fe             	mov    %rdi,%r14
   2426f:	41 55                	push   %r13
   24271:	49 89 f5             	mov    %rsi,%r13
   24274:	41 54                	push   %r12
   24276:	55                   	push   %rbp
   24277:	48 89 cd             	mov    %rcx,%rbp
   2427a:	53                   	push   %rbx
   2427b:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   24282:	48 8b 0a             	mov    (%rdx),%rcx
   24285:	44 89 4c 24 0c       	mov    %r9d,0xc(%rsp)
   2428a:	8b b4 24 e0 00 00 00 	mov    0xe0(%rsp),%esi
   24291:	4c 8b bc 24 e8 00 00 	mov    0xe8(%rsp),%r15
   24298:	00 
   24299:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   242a0:	00 00 
   242a2:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
   242a9:	00 
   242aa:	31 c0                	xor    %eax,%eax
   242ac:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
   242b1:	48 8d 41 04          	lea    0x4(%rcx),%rax
   242b5:	48 c7 84 24 80 00 00 	movq   $0x0,0x80(%rsp)
   242bc:	00 00 00 00 00 
   242c1:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
   242c6:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
   242cb:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
   242d0:	8b 19                	mov    (%rcx),%ebx
   242d2:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   242d7:	83 fb ff             	cmp    $0xffffffff,%ebx
   242da:	0f 84 70 04 00 00    	je     24750 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x4f0>
   242e0:	85 db                	test   %ebx,%ebx
   242e2:	0f 84 e2 05 00 00    	je     248ca <_ULx86_64_dwarf_extract_proc_info_from_fde+0x66a>
   242e8:	48 8d 3c 03          	lea    (%rbx,%rax,1),%rdi
   242ec:	48 83 c1 08          	add    $0x8,%rcx
   242f0:	48 89 3a             	mov    %rdi,(%rdx)
   242f3:	48 63 51 fc          	movslq -0x4(%rcx),%rdx
   242f7:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
   242fc:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   24301:	85 f6                	test   %esi,%esi
   24303:	0f 85 17 02 00 00    	jne    24520 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x2c0>
   24309:	48 29 d0             	sub    %rdx,%rax
   2430c:	49 89 c0             	mov    %rax,%r8
   2430f:	48 85 d2             	test   %rdx,%rdx
   24312:	0f 84 e4 03 00 00    	je     246fc <_ULx86_64_dwarf_extract_proc_info_from_fde+0x49c>
   24318:	c6 84 24 85 00 00 00 	movb   $0xff,0x85(%rsp)
   2431f:	ff 
   24320:	8b 00                	mov    (%rax),%eax
   24322:	49 8d 48 04          	lea    0x4(%r8),%rcx
   24326:	45 31 c9             	xor    %r9d,%r9d
   24329:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
   24330:	00 00 
   24332:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   24337:	83 f8 ff             	cmp    $0xffffffff,%eax
   2433a:	0f 84 19 02 00 00    	je     24559 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x2f9>
   24340:	48 8d 14 08          	lea    (%rax,%rcx,1),%rdx
   24344:	8b 09                	mov    (%rcx),%ecx
   24346:	49 8d 40 08          	lea    0x8(%r8),%rax
   2434a:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2434f:	44 39 c9             	cmp    %r9d,%ecx
   24352:	0f 85 38 02 00 00    	jne    24590 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x330>
   24358:	0f b6 30             	movzbl (%rax),%esi
   2435b:	48 89 54 24 48       	mov    %rdx,0x48(%rsp)
   24360:	48 83 c0 01          	add    $0x1,%rax
   24364:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   24369:	8d 56 fd             	lea    -0x3(%rsi),%edx
   2436c:	80 fa 01             	cmp    $0x1,%dl
   2436f:	76 0a                	jbe    2437b <_ULx86_64_dwarf_extract_proc_info_from_fde+0x11b>
   24371:	40 80 fe 01          	cmp    $0x1,%sil
   24375:	0f 85 45 05 00 00    	jne    248c0 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x660>
   2437b:	c7 84 24 93 00 00 00 	movl   $0x0,0x93(%rsp)
   24382:	00 00 00 00 
   24386:	31 d2                	xor    %edx,%edx
   24388:	4c 8d 84 24 92 00 00 	lea    0x92(%rsp),%r8
   2438f:	00 
   24390:	c6 84 24 97 00 00 00 	movb   $0x0,0x97(%rsp)
   24397:	00 
   24398:	eb 10                	jmp    243aa <_ULx86_64_dwarf_extract_proc_info_from_fde+0x14a>
   2439a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   243a0:	48 83 fa 03          	cmp    $0x3,%rdx
   243a4:	0f 86 5e 03 00 00    	jbe    24708 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x4a8>
   243aa:	0f b6 08             	movzbl (%rax),%ecx
   243ad:	48 83 c0 01          	add    $0x1,%rax
   243b1:	84 c9                	test   %cl,%cl
   243b3:	75 eb                	jne    243a0 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x140>
   243b5:	31 c9                	xor    %ecx,%ecx
   243b7:	45 31 c0             	xor    %r8d,%r8d
   243ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   243c0:	0f b6 38             	movzbl (%rax),%edi
   243c3:	48 83 c0 01          	add    $0x1,%rax
   243c7:	48 89 fa             	mov    %rdi,%rdx
   243ca:	83 e2 7f             	and    $0x7f,%edx
   243cd:	48 d3 e2             	shl    %cl,%rdx
   243d0:	48 83 c1 07          	add    $0x7,%rcx
   243d4:	49 09 d0             	or     %rdx,%r8
   243d7:	40 84 ff             	test   %dil,%dil
   243da:	78 e4                	js     243c0 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x160>
   243dc:	4c 89 44 24 60       	mov    %r8,0x60(%rsp)
   243e1:	31 c9                	xor    %ecx,%ecx
   243e3:	45 31 c0             	xor    %r8d,%r8d
   243e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   243ed:	00 00 00 
   243f0:	44 0f b6 10          	movzbl (%rax),%r10d
   243f4:	49 89 c1             	mov    %rax,%r9
   243f7:	48 83 c0 01          	add    $0x1,%rax
   243fb:	4c 89 d2             	mov    %r10,%rdx
   243fe:	83 e2 7f             	and    $0x7f,%edx
   24401:	48 d3 e2             	shl    %cl,%rdx
   24404:	48 83 c1 07          	add    $0x7,%rcx
   24408:	49 09 d0             	or     %rdx,%r8
   2440b:	45 84 d2             	test   %r10b,%r10b
   2440e:	78 e0                	js     243f0 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x190>
   24410:	48 83 f9 3f          	cmp    $0x3f,%rcx
   24414:	77 0a                	ja     24420 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x1c0>
   24416:	41 83 e2 40          	and    $0x40,%r10d
   2441a:	0f 85 d8 03 00 00    	jne    247f8 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x598>
   24420:	4c 89 44 24 68       	mov    %r8,0x68(%rsp)
   24425:	31 c9                	xor    %ecx,%ecx
   24427:	45 31 c0             	xor    %r8d,%r8d
   2442a:	40 80 fe 01          	cmp    $0x1,%sil
   2442e:	0f 84 6c 03 00 00    	je     247a0 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x540>
   24434:	0f 1f 40 00          	nopl   0x0(%rax)
   24438:	0f b6 30             	movzbl (%rax),%esi
   2443b:	48 83 c0 01          	add    $0x1,%rax
   2443f:	48 89 f2             	mov    %rsi,%rdx
   24442:	83 e2 7f             	and    $0x7f,%edx
   24445:	48 d3 e2             	shl    %cl,%rdx
   24448:	48 83 c1 07          	add    $0x7,%rcx
   2444c:	49 09 d0             	or     %rdx,%r8
   2444f:	40 84 f6             	test   %sil,%sil
   24452:	78 e4                	js     24438 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x1d8>
   24454:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   24459:	0f b6 84 24 93 00 00 	movzbl 0x93(%rsp),%eax
   24460:	00 
   24461:	31 d2                	xor    %edx,%edx
   24463:	4c 89 44 24 70       	mov    %r8,0x70(%rsp)
   24468:	3c 7a                	cmp    $0x7a,%al
   2446a:	0f 84 53 03 00 00    	je     247c3 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x563>
   24470:	bb 04 00 00 00       	mov    $0x4,%ebx
   24475:	4d 89 fa             	mov    %r15,%r10
   24478:	49 89 ef             	mov    %rbp,%r15
   2447b:	4c 8d 9c 24 98 00 00 	lea    0x98(%rsp),%r11
   24482:	00 
   24483:	89 dd                	mov    %ebx,%ebp
   24485:	4c 8d a4 14 93 00 00 	lea    0x93(%rsp,%rdx,1),%r12
   2448c:	00 
   2448d:	4c 8d 4c 24 78       	lea    0x78(%rsp),%r9
   24492:	4c 89 db             	mov    %r11,%rbx
   24495:	84 c0                	test   %al,%al
   24497:	74 79                	je     24512 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x2b2>
   24499:	3c 52                	cmp    $0x52,%al
   2449b:	0f 84 77 02 00 00    	je     24718 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x4b8>
   244a1:	0f 87 21 01 00 00    	ja     245c8 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x368>
   244a7:	3c 4c                	cmp    $0x4c,%al
   244a9:	0f 84 81 02 00 00    	je     24730 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x4d0>
   244af:	3c 50                	cmp    $0x50,%al
   244b1:	0f 85 29 01 00 00    	jne    245e0 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x380>
   244b7:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   244bc:	48 8d 54 24 38       	lea    0x38(%rsp),%rdx
   244c1:	4d 89 f8             	mov    %r15,%r8
   244c4:	4c 89 ee             	mov    %r13,%rsi
   244c7:	48 83 ec 08          	sub    $0x8,%rsp
   244cb:	4c 89 f7             	mov    %r14,%rdi
   244ce:	0f b6 08             	movzbl (%rax),%ecx
   244d1:	48 83 c0 01          	add    $0x1,%rax
   244d5:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
   244da:	41 52                	push   %r10
   244dc:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   244e1:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
   244e6:	e8 e5 b7 ff ff       	call   1fcd0 <_ULx86_64_dwarf_read_encoded_pointer>
   244eb:	41 5a                	pop    %r10
   244ed:	41 5b                	pop    %r11
   244ef:	85 c0                	test   %eax,%eax
   244f1:	4c 8b 0c 24          	mov    (%rsp),%r9
   244f5:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   244fa:	0f 88 98 00 00 00    	js     24598 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   24500:	49 83 c4 01          	add    $0x1,%r12
   24504:	4c 39 e3             	cmp    %r12,%rbx
   24507:	74 09                	je     24512 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x2b2>
   24509:	41 0f b6 04 24       	movzbl (%r12),%eax
   2450e:	84 c0                	test   %al,%al
   24510:	75 87                	jne    24499 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x239>
   24512:	89 eb                	mov    %ebp,%ebx
   24514:	4c 89 fd             	mov    %r15,%rbp
   24517:	4d 89 d7             	mov    %r10,%r15
   2451a:	e9 d3 00 00 00       	jmp    245f2 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x392>
   2451f:	90                   	nop
   24520:	49 01 d0             	add    %rdx,%r8
   24523:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   24527:	0f 84 cf 01 00 00    	je     246fc <_ULx86_64_dwarf_extract_proc_info_from_fde+0x49c>
   2452d:	c6 84 24 85 00 00 00 	movb   $0xff,0x85(%rsp)
   24534:	ff 
   24535:	41 8b 00             	mov    (%r8),%eax
   24538:	49 8d 48 04          	lea    0x4(%r8),%rcx
   2453c:	41 b9 ff ff ff ff    	mov    $0xffffffff,%r9d
   24542:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
   24549:	00 00 
   2454b:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
   24550:	83 f8 ff             	cmp    $0xffffffff,%eax
   24553:	0f 85 e7 fd ff ff    	jne    24340 <_ULx86_64_dwarf_extract_proc_info_from_fde+0xe0>
   24559:	48 8b 11             	mov    (%rcx),%rdx
   2455c:	49 8d 40 0c          	lea    0xc(%r8),%rax
   24560:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   24565:	49 8b 48 0c          	mov    0xc(%r8),%rcx
   24569:	48 01 c2             	add    %rax,%rdx
   2456c:	85 f6                	test   %esi,%esi
   2456e:	49 8d 40 14          	lea    0x14(%r8),%rax
   24572:	40 0f 95 c6          	setne  %sil
   24576:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   2457b:	40 0f b6 f6          	movzbl %sil,%esi
   2457f:	48 01 f1             	add    %rsi,%rcx
   24582:	0f 84 d0 fd ff ff    	je     24358 <_ULx86_64_dwarf_extract_proc_info_from_fde+0xf8>
   24588:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2458f:	00 
   24590:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   24595:	0f 1f 00             	nopl   (%rax)
   24598:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   2459f:	00 
   245a0:	64 48 33 3c 25 28 00 	xor    %fs:0x28,%rdi
   245a7:	00 00 
   245a9:	0f 85 25 03 00 00    	jne    248d4 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x674>
   245af:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   245b6:	5b                   	pop    %rbx
   245b7:	5d                   	pop    %rbp
   245b8:	41 5c                	pop    %r12
   245ba:	41 5d                	pop    %r13
   245bc:	41 5e                	pop    %r14
   245be:	41 5f                	pop    %r15
   245c0:	c3                   	ret    
   245c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   245c8:	3c 53                	cmp    $0x53,%al
   245ca:	75 14                	jne    245e0 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x380>
   245cc:	80 8c 24 86 00 00 00 	orb    $0x6,0x86(%rsp)
   245d3:	06 
   245d4:	e9 27 ff ff ff       	jmp    24500 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x2a0>
   245d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   245e0:	89 eb                	mov    %ebp,%ebx
   245e2:	4c 89 fd             	mov    %r15,%rbp
   245e5:	4d 89 d7             	mov    %r10,%r15
   245e8:	f6 84 24 86 00 00 00 	testb  $0x1,0x86(%rsp)
   245ef:	01 
   245f0:	74 9e                	je     24590 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x330>
   245f2:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   245f7:	48 8d 54 24 30       	lea    0x30(%rsp),%rdx
   245fc:	49 89 e8             	mov    %rbp,%r8
   245ff:	0f b6 cb             	movzbl %bl,%ecx
   24602:	88 9c 24 84 00 00 00 	mov    %bl,0x84(%rsp)
   24609:	48 83 ec 08          	sub    $0x8,%rsp
   2460d:	4c 89 ee             	mov    %r13,%rsi
   24610:	4c 89 f7             	mov    %r14,%rdi
   24613:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
   24618:	41 57                	push   %r15
   2461a:	4c 8d 4c 24 38       	lea    0x38(%rsp),%r9
   2461f:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   24624:	e8 a7 b6 ff ff       	call   1fcd0 <_ULx86_64_dwarf_read_encoded_pointer>
   24629:	41 58                	pop    %r8
   2462b:	41 59                	pop    %r9
   2462d:	85 c0                	test   %eax,%eax
   2462f:	48 8b 14 24          	mov    (%rsp),%rdx
   24633:	0f 88 5f ff ff ff    	js     24598 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   24639:	48 83 ec 08          	sub    $0x8,%rsp
   2463d:	89 d9                	mov    %ebx,%ecx
   2463f:	4c 89 ee             	mov    %r13,%rsi
   24642:	4c 89 f7             	mov    %r14,%rdi
   24645:	41 57                	push   %r15
   24647:	83 e1 0f             	and    $0xf,%ecx
   2464a:	49 89 e8             	mov    %rbp,%r8
   2464d:	4c 8d 4c 24 48       	lea    0x48(%rsp),%r9
   24652:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   24657:	e8 74 b6 ff ff       	call   1fcd0 <_ULx86_64_dwarf_read_encoded_pointer>
   2465c:	5e                   	pop    %rsi
   2465d:	5f                   	pop    %rdi
   2465e:	85 c0                	test   %eax,%eax
   24660:	0f 88 32 ff ff ff    	js     24598 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   24666:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   2466b:	45 31 e4             	xor    %r12d,%r12d
   2466e:	48 8b 14 24          	mov    (%rsp),%rdx
   24672:	48 89 45 00          	mov    %rax,0x0(%rbp)
   24676:	48 03 44 24 38       	add    0x38(%rsp),%rax
   2467b:	48 89 45 08          	mov    %rax,0x8(%rbp)
   2467f:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
   24684:	f6 84 24 86 00 00 00 	testb  $0x1,0x86(%rsp)
   2468b:	01 
   2468c:	48 89 45 18          	mov    %rax,0x18(%rbp)
   24690:	74 34                	je     246c6 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x466>
   24692:	4c 8b 64 24 30       	mov    0x30(%rsp),%r12
   24697:	31 c9                	xor    %ecx,%ecx
   24699:	45 31 c0             	xor    %r8d,%r8d
   2469c:	0f 1f 40 00          	nopl   0x0(%rax)
   246a0:	41 0f b6 34 24       	movzbl (%r12),%esi
   246a5:	49 83 c4 01          	add    $0x1,%r12
   246a9:	48 89 f0             	mov    %rsi,%rax
   246ac:	83 e0 7f             	and    $0x7f,%eax
   246af:	48 d3 e0             	shl    %cl,%rax
   246b2:	48 83 c1 07          	add    $0x7,%rcx
   246b6:	49 09 c0             	or     %rax,%r8
   246b9:	40 84 f6             	test   %sil,%sil
   246bc:	78 e2                	js     246a0 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x440>
   246be:	4c 89 64 24 30       	mov    %r12,0x30(%rsp)
   246c3:	4d 01 c4             	add    %r8,%r12
   246c6:	48 83 ec 08          	sub    $0x8,%rsp
   246ca:	4c 8d 4d 10          	lea    0x10(%rbp),%r9
   246ce:	49 89 e8             	mov    %rbp,%r8
   246d1:	4c 89 ee             	mov    %r13,%rsi
   246d4:	0f b6 8c 24 8d 00 00 	movzbl 0x8d(%rsp),%ecx
   246db:	00 
   246dc:	41 57                	push   %r15
   246de:	4c 89 f7             	mov    %r14,%rdi
   246e1:	e8 ea b5 ff ff       	call   1fcd0 <_ULx86_64_dwarf_read_encoded_pointer>
   246e6:	5a                   	pop    %rdx
   246e7:	59                   	pop    %rcx
   246e8:	85 c0                	test   %eax,%eax
   246ea:	0f 88 a8 fe ff ff    	js     24598 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   246f0:	8b 44 24 0c          	mov    0xc(%rsp),%eax
   246f4:	85 c0                	test   %eax,%eax
   246f6:	0f 85 14 01 00 00    	jne    24810 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x5b0>
   246fc:	31 c0                	xor    %eax,%eax
   246fe:	e9 95 fe ff ff       	jmp    24598 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   24703:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   24708:	48 83 c2 01          	add    $0x1,%rdx
   2470c:	41 88 0c 10          	mov    %cl,(%r8,%rdx,1)
   24710:	e9 95 fc ff ff       	jmp    243aa <_ULx86_64_dwarf_extract_proc_info_from_fde+0x14a>
   24715:	0f 1f 00             	nopl   (%rax)
   24718:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   2471d:	0f b6 28             	movzbl (%rax),%ebp
   24720:	48 83 c0 01          	add    $0x1,%rax
   24724:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   24729:	e9 d2 fd ff ff       	jmp    24500 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x2a0>
   2472e:	66 90                	xchg   %ax,%ax
   24730:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   24735:	0f b6 10             	movzbl (%rax),%edx
   24738:	48 83 c0 01          	add    $0x1,%rax
   2473c:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   24741:	88 94 24 85 00 00 00 	mov    %dl,0x85(%rsp)
   24748:	e9 b3 fd ff ff       	jmp    24500 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x2a0>
   2474d:	0f 1f 00             	nopl   (%rax)
   24750:	48 8b 59 04          	mov    0x4(%rcx),%rbx
   24754:	48 8d 41 0c          	lea    0xc(%rcx),%rax
   24758:	48 83 c1 14          	add    $0x14,%rcx
   2475c:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   24761:	48 01 c3             	add    %rax,%rbx
   24764:	48 89 1a             	mov    %rbx,(%rdx)
   24767:	48 8b 51 f8          	mov    -0x8(%rcx),%rdx
   2476b:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
   24770:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   24775:	85 f6                	test   %esi,%esi
   24777:	0f 84 8c fb ff ff    	je     24309 <_ULx86_64_dwarf_extract_proc_info_from_fde+0xa9>
   2477d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   24782:	48 39 c2             	cmp    %rax,%rdx
   24785:	0f 84 71 ff ff ff    	je     246fc <_ULx86_64_dwarf_extract_proc_info_from_fde+0x49c>
   2478b:	49 01 d0             	add    %rdx,%r8
   2478e:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   24792:	0f 85 95 fd ff ff    	jne    2452d <_ULx86_64_dwarf_extract_proc_info_from_fde+0x2cd>
   24798:	31 c0                	xor    %eax,%eax
   2479a:	e9 f9 fd ff ff       	jmp    24598 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   2479f:	90                   	nop
   247a0:	0f b6 00             	movzbl (%rax),%eax
   247a3:	49 83 c1 02          	add    $0x2,%r9
   247a7:	31 d2                	xor    %edx,%edx
   247a9:	4c 89 4c 24 38       	mov    %r9,0x38(%rsp)
   247ae:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
   247b3:	0f b6 84 24 93 00 00 	movzbl 0x93(%rsp),%eax
   247ba:	00 
   247bb:	3c 7a                	cmp    $0x7a,%al
   247bd:	0f 85 ad fc ff ff    	jne    24470 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x210>
   247c3:	80 8c 24 86 00 00 00 	orb    $0x1,0x86(%rsp)
   247ca:	01 
   247cb:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
   247d0:	0f b6 10             	movzbl (%rax),%edx
   247d3:	48 83 c0 01          	add    $0x1,%rax
   247d7:	84 d2                	test   %dl,%dl
   247d9:	78 f5                	js     247d0 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x570>
   247db:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
   247e0:	ba 01 00 00 00       	mov    $0x1,%edx
   247e5:	0f b6 84 24 94 00 00 	movzbl 0x94(%rsp),%eax
   247ec:	00 
   247ed:	e9 7e fc ff ff       	jmp    24470 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x210>
   247f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   247f8:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
   247ff:	48 d3 e2             	shl    %cl,%rdx
   24802:	49 09 d0             	or     %rdx,%r8
   24805:	e9 16 fc ff ff       	jmp    24420 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x1c0>
   2480a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   24810:	48 b8 01 00 00 00 48 	movabs $0x4800000001,%rax
   24817:	00 00 00 
   2481a:	48 8d 3d 1f d9 02 00 	lea    0x2d91f(%rip),%rdi        # 52140 <dwarf_cie_info_pool>
   24821:	48 89 45 30          	mov    %rax,0x30(%rbp)
   24825:	e8 76 d1 ff ff       	call   219a0 <_UIx86_64__mempool_alloc>
   2482a:	48 89 45 38          	mov    %rax,0x38(%rbp)
   2482e:	48 85 c0             	test   %rax,%rax
   24831:	0f 84 a2 00 00 00    	je     248d9 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x679>
   24837:	0f b6 94 24 86 00 00 	movzbl 0x86(%rsp),%edx
   2483e:	00 
   2483f:	f6 c2 02             	test   $0x2,%dl
   24842:	74 25                	je     24869 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x609>
   24844:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
   24849:	0f b7 31             	movzwl (%rcx),%esi
   2484c:	48 83 c1 04          	add    $0x4,%rcx
   24850:	66 89 b4 24 80 00 00 	mov    %si,0x80(%rsp)
   24857:	00 
   24858:	0f b7 71 fe          	movzwl -0x2(%rcx),%esi
   2485c:	48 89 4c 24 30       	mov    %rcx,0x30(%rsp)
   24861:	66 89 b4 24 82 00 00 	mov    %si,0x82(%rsp)
   24868:	00 
   24869:	66 0f 6f 4c 24 40    	movdqa 0x40(%rsp),%xmm1
   2486f:	83 e2 01             	and    $0x1,%edx
   24872:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
   24877:	4c 0f 44 64 24 30    	cmove  0x30(%rsp),%r12
   2487d:	48 89 5c 24 58       	mov    %rbx,0x58(%rsp)
   24882:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
   24887:	0f 11 08             	movups %xmm1,(%rax)
   2488a:	66 0f 6f 54 24 50    	movdqa 0x50(%rsp),%xmm2
   24890:	0f 11 50 10          	movups %xmm2,0x10(%rax)
   24894:	66 0f 6f 5c 24 60    	movdqa 0x60(%rsp),%xmm3
   2489a:	0f 11 58 20          	movups %xmm3,0x20(%rax)
   2489e:	66 0f 6f 64 24 70    	movdqa 0x70(%rsp),%xmm4
   248a4:	0f 11 60 30          	movups %xmm4,0x30(%rax)
   248a8:	48 8b 94 24 80 00 00 	mov    0x80(%rsp),%rdx
   248af:	00 
   248b0:	48 89 50 40          	mov    %rdx,0x40(%rax)
   248b4:	31 c0                	xor    %eax,%eax
   248b6:	e9 dd fc ff ff       	jmp    24598 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   248bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   248c0:	b8 f7 ff ff ff       	mov    $0xfffffff7,%eax
   248c5:	e9 ce fc ff ff       	jmp    24598 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   248ca:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
   248cf:	e9 c4 fc ff ff       	jmp    24598 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   248d4:	e8 67 f2 fe ff       	call   13b40 <__stack_chk_fail>
   248d9:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   248de:	e9 b5 fc ff ff       	jmp    24598 <_ULx86_64_dwarf_extract_proc_info_from_fde+0x338>
   248e3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   248ea:	00 00 00 
   248ed:	0f 1f 00             	nopl   (%rax)

00000000000248f0 <sgx_init_crypto_lib>:
   248f0:	f3 0f 1e fa          	endbr64 
   248f4:	e9 07 00 00 00       	jmp    24900 <init_ipp_cpuid>
   248f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000024900 <init_ipp_cpuid>:
   24900:	f3 0f 1e fa          	endbr64 
   24904:	48 83 3d e4 b6 00 00 	cmpq   $0x0,0xb6e4(%rip)        # 2fff0 <ippcpSetCpuFeatures>
   2490b:	00 
   2490c:	0f 84 3e 02 00 00    	je     24b50 <init_ipp_cpuid+0x250>
   24912:	48 89 f8             	mov    %rdi,%rax
   24915:	f6 c4 02             	test   $0x2,%ah
   24918:	0f 84 3a 02 00 00    	je     24b58 <init_ipp_cpuid+0x258>
   2491e:	48 89 fa             	mov    %rdi,%rdx
   24921:	48 83 ec 08          	sub    $0x8,%rsp
   24925:	48 b9 00 00 00 00 08 	movabs $0x800000000,%rcx
   2492c:	00 00 00 
   2492f:	81 e2 00 08 00 00    	and    $0x800,%edx
   24935:	48 83 fa 01          	cmp    $0x1,%rdx
   24939:	48 19 ff             	sbb    %rdi,%rdi
   2493c:	48 83 e7 e0          	and    $0xffffffffffffffe0,%rdi
   24940:	48 83 c7 7f          	add    $0x7f,%rdi
   24944:	48 89 fa             	mov    %rdi,%rdx
   24947:	80 ca 80             	or     $0x80,%dl
   2494a:	f6 c4 04             	test   $0x4,%ah
   2494d:	48 0f 45 fa          	cmovne %rdx,%rdi
   24951:	48 89 fa             	mov    %rdi,%rdx
   24954:	80 ce 03             	or     $0x3,%dh
   24957:	a9 00 00 01 00       	test   $0x10000,%eax
   2495c:	48 0f 45 fa          	cmovne %rdx,%rdi
   24960:	48 89 fa             	mov    %rdi,%rdx
   24963:	80 ce 04             	or     $0x4,%dh
   24966:	f6 c4 40             	test   $0x40,%ah
   24969:	48 0f 45 fa          	cmovne %rdx,%rdi
   2496d:	48 89 fa             	mov    %rdi,%rdx
   24970:	80 ce 08             	or     $0x8,%dh
   24973:	f6 c4 20             	test   $0x20,%ah
   24976:	48 0f 45 fa          	cmovne %rdx,%rdi
   2497a:	48 89 fa             	mov    %rdi,%rdx
   2497d:	80 ce 20             	or     $0x20,%dh
   24980:	a9 00 00 02 00       	test   $0x20000,%eax
   24985:	48 0f 45 fa          	cmovne %rdx,%rdi
   24989:	48 89 fa             	mov    %rdi,%rdx
   2498c:	80 ce 40             	or     $0x40,%dh
   2498f:	f6 c4 80             	test   $0x80,%ah
   24992:	48 0f 45 fa          	cmovne %rdx,%rdi
   24996:	48 89 fa             	mov    %rdi,%rdx
   24999:	80 ce 80             	or     $0x80,%dh
   2499c:	a9 00 00 80 00       	test   $0x800000,%eax
   249a1:	48 0f 45 fa          	cmovne %rdx,%rdi
   249a5:	48 89 fa             	mov    %rdi,%rdx
   249a8:	48 81 ca 00 00 01 00 	or     $0x10000,%rdx
   249af:	a9 00 00 00 10       	test   $0x10000000,%eax
   249b4:	48 0f 45 fa          	cmovne %rdx,%rdi
   249b8:	48 89 fa             	mov    %rdi,%rdx
   249bb:	48 81 ca 00 00 02 00 	or     $0x20000,%rdx
   249c2:	a9 00 00 00 20       	test   $0x20000000,%eax
   249c7:	48 0f 45 fa          	cmovne %rdx,%rdi
   249cb:	48 89 fa             	mov    %rdi,%rdx
   249ce:	48 81 ca 00 00 08 00 	or     $0x80000,%rdx
   249d5:	48 85 c8             	test   %rcx,%rax
   249d8:	48 0f 45 fa          	cmovne %rdx,%rdi
   249dc:	a9 00 00 00 08       	test   $0x8000000,%eax
   249e1:	74 0d                	je     249f0 <init_ipp_cpuid+0xf0>
   249e3:	48 ba 00 00 10 00 02 	movabs $0x200100000,%rdx
   249ea:	00 00 00 
   249ed:	48 09 d7             	or     %rdx,%rdi
   249f0:	48 b9 00 00 00 00 02 	movabs $0x200000000,%rcx
   249f7:	00 00 00 
   249fa:	48 89 fa             	mov    %rdi,%rdx
   249fd:	48 81 ca 00 00 80 00 	or     $0x800000,%rdx
   24a04:	48 85 c8             	test   %rcx,%rax
   24a07:	48 b9 00 00 00 00 01 	movabs $0x100000000,%rcx
   24a0e:	00 00 00 
   24a11:	48 0f 45 fa          	cmovne %rdx,%rdi
   24a15:	48 89 fa             	mov    %rdi,%rdx
   24a18:	48 81 ca 00 00 40 00 	or     $0x400000,%rdx
   24a1f:	48 85 c8             	test   %rcx,%rax
   24a22:	48 b9 00 00 00 00 04 	movabs $0x400000000,%rcx
   24a29:	00 00 00 
   24a2c:	48 0f 45 fa          	cmovne %rdx,%rdi
   24a30:	48 89 fa             	mov    %rdi,%rdx
   24a33:	48 81 ca 00 00 20 00 	or     $0x200000,%rdx
   24a3a:	48 85 c8             	test   %rcx,%rax
   24a3d:	48 b9 00 00 00 00 20 	movabs $0x2000000000,%rcx
   24a44:	00 00 00 
   24a47:	48 0f 45 fa          	cmovne %rdx,%rdi
   24a4b:	48 89 fa             	mov    %rdi,%rdx
   24a4e:	48 81 ca 00 00 00 02 	or     $0x2000000,%rdx
   24a55:	a9 00 00 00 01       	test   $0x1000000,%eax
   24a5a:	48 0f 45 fa          	cmovne %rdx,%rdi
   24a5e:	48 89 fa             	mov    %rdi,%rdx
   24a61:	48 81 ca 00 00 00 01 	or     $0x1000000,%rdx
   24a68:	48 85 c8             	test   %rcx,%rax
   24a6b:	48 b9 00 00 00 00 40 	movabs $0x4000000000,%rcx
   24a72:	00 00 00 
   24a75:	48 0f 45 fa          	cmovne %rdx,%rdi
   24a79:	48 89 fa             	mov    %rdi,%rdx
   24a7c:	48 81 ca 00 00 00 04 	or     $0x4000000,%rdx
   24a83:	48 85 c8             	test   %rcx,%rax
   24a86:	48 b9 00 00 00 00 80 	movabs $0x8000000000,%rcx
   24a8d:	00 00 00 
   24a90:	48 0f 45 fa          	cmovne %rdx,%rdi
   24a94:	48 89 fa             	mov    %rdi,%rdx
   24a97:	48 81 ca 00 00 00 08 	or     $0x8000000,%rdx
   24a9e:	48 85 c8             	test   %rcx,%rax
   24aa1:	48 b9 00 00 00 00 00 	movabs $0x20000000000,%rcx
   24aa8:	02 00 00 
   24aab:	48 0f 45 fa          	cmovne %rdx,%rdi
   24aaf:	48 89 fa             	mov    %rdi,%rdx
   24ab2:	48 81 ca 00 00 00 40 	or     $0x40000000,%rdx
   24ab9:	48 85 c8             	test   %rcx,%rax
   24abc:	48 b9 00 00 00 00 00 	movabs $0x10000000000,%rcx
   24ac3:	01 00 00 
   24ac6:	48 0f 45 fa          	cmovne %rdx,%rdi
   24aca:	48 89 fa             	mov    %rdi,%rdx
   24acd:	48 81 ca 00 00 00 20 	or     $0x20000000,%rdx
   24ad4:	48 85 c8             	test   %rcx,%rax
   24ad7:	48 0f 45 fa          	cmovne %rdx,%rdi
   24adb:	48 0f ba e0 2e       	bt     $0x2e,%rax
   24ae0:	73 05                	jae    24ae7 <init_ipp_cpuid+0x1e7>
   24ae2:	48 0f ba ef 23       	bts    $0x23,%rdi
   24ae7:	a9 00 00 00 40       	test   $0x40000000,%eax
   24aec:	74 05                	je     24af3 <init_ipp_cpuid+0x1f3>
   24aee:	48 0f ba ef 20       	bts    $0x20,%rdi
   24af3:	48 0f ba e0 2d       	bt     $0x2d,%rax
   24af8:	73 05                	jae    24aff <init_ipp_cpuid+0x1ff>
   24afa:	48 0f ba ef 22       	bts    $0x22,%rdi
   24aff:	48 0f ba e0 2c       	bt     $0x2c,%rax
   24b04:	73 05                	jae    24b0b <init_ipp_cpuid+0x20b>
   24b06:	48 0f ba ef 25       	bts    $0x25,%rdi
   24b0b:	48 0f ba e0 2f       	bt     $0x2f,%rax
   24b10:	72 1e                	jb     24b30 <init_ipp_cpuid+0x230>
   24b12:	48 0f ba ef 3f       	bts    $0x3f,%rdi
   24b17:	e8 fc d4 fd ff       	call   2018 <ippcpSetCpuFeatures@plt>
   24b1c:	85 c0                	test   %eax,%eax
   24b1e:	75 23                	jne    24b43 <init_ipp_cpuid+0x243>
   24b20:	31 c0                	xor    %eax,%eax
   24b22:	48 83 c4 08          	add    $0x8,%rsp
   24b26:	c3                   	ret    
   24b27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   24b2e:	00 00 
   24b30:	48 0f ba ef 24       	bts    $0x24,%rdi
   24b35:	48 0f ba ef 3f       	bts    $0x3f,%rdi
   24b3a:	e8 d9 d4 fd ff       	call   2018 <ippcpSetCpuFeatures@plt>
   24b3f:	85 c0                	test   %eax,%eax
   24b41:	74 dd                	je     24b20 <init_ipp_cpuid+0x220>
   24b43:	b8 02 00 00 00       	mov    $0x2,%eax
   24b48:	48 83 c4 08          	add    $0x8,%rsp
   24b4c:	c3                   	ret    
   24b4d:	0f 1f 00             	nopl   (%rax)
   24b50:	31 c0                	xor    %eax,%eax
   24b52:	c3                   	ret    
   24b53:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   24b58:	b8 02 00 00 00       	mov    $0x2,%eax
   24b5d:	c3                   	ret    
   24b5e:	66 90                	xchg   %ax,%ax

0000000000024b60 <sgx_create_report>:
   24b60:	f3 0f 1e fa          	endbr64 
   24b64:	55                   	push   %rbp
   24b65:	48 89 e5             	mov    %rsp,%rbp
   24b68:	41 57                	push   %r15
   24b6a:	41 56                	push   %r14
   24b6c:	41 55                	push   %r13
   24b6e:	49 89 f5             	mov    %rsi,%r13
   24b71:	31 f6                	xor    %esi,%esi
   24b73:	41 54                	push   %r12
   24b75:	53                   	push   %rbx
   24b76:	48 89 d3             	mov    %rdx,%rbx
   24b79:	ba 40 00 00 00       	mov    $0x40,%edx
   24b7e:	48 81 e4 00 fe ff ff 	and    $0xfffffffffffffe00,%rsp
   24b85:	48 81 ec 00 08 00 00 	sub    $0x800,%rsp
   24b8c:	48 89 bc 24 78 01 00 	mov    %rdi,0x178(%rsp)
   24b93:	00 
   24b94:	4c 8d bc 24 80 01 00 	lea    0x180(%rsp),%r15
   24b9b:	00 
   24b9c:	4c 8d b4 24 00 04 00 	lea    0x400(%rsp),%r14
   24ba3:	00 
   24ba4:	4c 89 ff             	mov    %r15,%rdi
   24ba7:	4c 8d a4 24 00 02 00 	lea    0x200(%rsp),%r12
   24bae:	00 
   24baf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   24bb6:	00 00 
   24bb8:	48 89 84 24 f8 07 00 	mov    %rax,0x7f8(%rsp)
   24bbf:	00 
   24bc0:	31 c0                	xor    %eax,%eax
   24bc2:	e8 f9 3d ff ff       	call   189c0 <__memset>
   24bc7:	ba 00 02 00 00       	mov    $0x200,%edx
   24bcc:	31 f6                	xor    %esi,%esi
   24bce:	4c 89 f7             	mov    %r14,%rdi
   24bd1:	e8 ea 3d ff ff       	call   189c0 <__memset>
   24bd6:	ba b0 01 00 00       	mov    $0x1b0,%edx
   24bdb:	31 f6                	xor    %esi,%esi
   24bdd:	4c 89 e7             	mov    %r12,%rdi
   24be0:	e8 db 3d ff ff       	call   189c0 <__memset>
   24be5:	4c 8b 84 24 78 01 00 	mov    0x178(%rsp),%r8
   24bec:	00 
   24bed:	4d 85 c0             	test   %r8,%r8
   24bf0:	74 2b                	je     24c1d <sgx_create_report+0xbd>
   24bf2:	be 00 02 00 00       	mov    $0x200,%esi
   24bf7:	4c 89 c7             	mov    %r8,%rdi
   24bfa:	e8 a1 58 fe ff       	call   a4a0 <sgx_is_within_enclave>
   24bff:	85 c0                	test   %eax,%eax
   24c01:	0f 84 b9 00 00 00    	je     24cc0 <sgx_create_report+0x160>
   24c07:	4c 8b 84 24 78 01 00 	mov    0x178(%rsp),%r8
   24c0e:	00 
   24c0f:	b9 40 00 00 00       	mov    $0x40,%ecx
   24c14:	4c 89 f7             	mov    %r14,%rdi
   24c17:	4c 89 c6             	mov    %r8,%rsi
   24c1a:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   24c1d:	4d 85 ed             	test   %r13,%r13
   24c20:	74 4d                	je     24c6f <sgx_create_report+0x10f>
   24c22:	be 40 00 00 00       	mov    $0x40,%esi
   24c27:	4c 89 ef             	mov    %r13,%rdi
   24c2a:	e8 71 58 fe ff       	call   a4a0 <sgx_is_within_enclave>
   24c2f:	85 c0                	test   %eax,%eax
   24c31:	0f 84 89 00 00 00    	je     24cc0 <sgx_create_report+0x160>
   24c37:	f3 41 0f 6f 45 00    	movdqu 0x0(%r13),%xmm0
   24c3d:	f3 41 0f 6f 4d 10    	movdqu 0x10(%r13),%xmm1
   24c43:	f3 41 0f 6f 55 20    	movdqu 0x20(%r13),%xmm2
   24c49:	f3 41 0f 6f 5d 30    	movdqu 0x30(%r13),%xmm3
   24c4f:	0f 29 84 24 80 01 00 	movaps %xmm0,0x180(%rsp)
   24c56:	00 
   24c57:	0f 29 8c 24 90 01 00 	movaps %xmm1,0x190(%rsp)
   24c5e:	00 
   24c5f:	0f 29 94 24 a0 01 00 	movaps %xmm2,0x1a0(%rsp)
   24c66:	00 
   24c67:	0f 29 9c 24 b0 01 00 	movaps %xmm3,0x1b0(%rsp)
   24c6e:	00 
   24c6f:	48 85 db             	test   %rbx,%rbx
   24c72:	74 4c                	je     24cc0 <sgx_create_report+0x160>
   24c74:	be b0 01 00 00       	mov    $0x1b0,%esi
   24c79:	48 89 df             	mov    %rbx,%rdi
   24c7c:	e8 1f 58 fe ff       	call   a4a0 <sgx_is_within_enclave>
   24c81:	85 c0                	test   %eax,%eax
   24c83:	74 3b                	je     24cc0 <sgx_create_report+0x160>
   24c85:	4c 89 e2             	mov    %r12,%rdx
   24c88:	4c 89 fe             	mov    %r15,%rsi
   24c8b:	4c 89 f7             	mov    %r14,%rdi
   24c8e:	e8 ed 0f 00 00       	call   25c80 <do_ereport>
   24c93:	41 89 c0             	mov    %eax,%r8d
   24c96:	b8 01 00 00 00       	mov    $0x1,%eax
   24c9b:	45 85 c0             	test   %r8d,%r8d
   24c9e:	75 25                	jne    24cc5 <sgx_create_report+0x165>
   24ca0:	31 c0                	xor    %eax,%eax
   24ca2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   24ca8:	49 8b 14 c4          	mov    (%r12,%rax,8),%rdx
   24cac:	48 89 14 c3          	mov    %rdx,(%rbx,%rax,8)
   24cb0:	48 83 c0 01          	add    $0x1,%rax
   24cb4:	48 83 f8 36          	cmp    $0x36,%rax
   24cb8:	75 ee                	jne    24ca8 <sgx_create_report+0x148>
   24cba:	31 c0                	xor    %eax,%eax
   24cbc:	eb 07                	jmp    24cc5 <sgx_create_report+0x165>
   24cbe:	66 90                	xchg   %ax,%ax
   24cc0:	b8 02 00 00 00       	mov    $0x2,%eax
   24cc5:	48 8b 8c 24 f8 07 00 	mov    0x7f8(%rsp),%rcx
   24ccc:	00 
   24ccd:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
   24cd4:	00 00 
   24cd6:	75 0f                	jne    24ce7 <sgx_create_report+0x187>
   24cd8:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   24cdc:	5b                   	pop    %rbx
   24cdd:	41 5c                	pop    %r12
   24cdf:	41 5d                	pop    %r13
   24ce1:	41 5e                	pop    %r14
   24ce3:	41 5f                	pop    %r15
   24ce5:	5d                   	pop    %rbp
   24ce6:	c3                   	ret    
   24ce7:	e8 54 ee fe ff       	call   13b40 <__stack_chk_fail>
   24cec:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000024cf0 <sgx_self_report>:
   24cf0:	f3 0f 1e fa          	endbr64 
   24cf4:	48 83 3d b4 d2 02 00 	cmpq   $0x0,0x2d2b4(%rip)        # 51fb0 <_ZZ15sgx_self_reportE7_report+0x30>
   24cfb:	00 
   24cfc:	74 12                	je     24d10 <sgx_self_report+0x20>
   24cfe:	48 8d 05 7b d2 02 00 	lea    0x2d27b(%rip),%rax        # 51f80 <_ZZ15sgx_self_reportE7_report>
   24d05:	c3                   	ret    
   24d06:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   24d0d:	00 00 00 
   24d10:	48 83 ec 08          	sub    $0x8,%rsp
   24d14:	48 8d 3d 55 d2 02 00 	lea    0x2d255(%rip),%rdi        # 51f70 <_ZZ15sgx_self_reportE11report_lock>
   24d1b:	e8 50 b3 fe ff       	call   10070 <sgx_spin_lock>
   24d20:	48 83 3d 88 d2 02 00 	cmpq   $0x0,0x2d288(%rip)        # 51fb0 <_ZZ15sgx_self_reportE7_report+0x30>
   24d27:	00 
   24d28:	74 1e                	je     24d48 <sgx_self_report+0x58>
   24d2a:	48 8d 3d 3f d2 02 00 	lea    0x2d23f(%rip),%rdi        # 51f70 <_ZZ15sgx_self_reportE11report_lock>
   24d31:	e8 da b3 fe ff       	call   10110 <sgx_spin_unlock>
   24d36:	48 8d 05 43 d2 02 00 	lea    0x2d243(%rip),%rax        # 51f80 <_ZZ15sgx_self_reportE7_report>
   24d3d:	48 83 c4 08          	add    $0x8,%rsp
   24d41:	c3                   	ret    
   24d42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   24d48:	48 8d 15 31 d2 02 00 	lea    0x2d231(%rip),%rdx        # 51f80 <_ZZ15sgx_self_reportE7_report>
   24d4f:	31 f6                	xor    %esi,%esi
   24d51:	31 ff                	xor    %edi,%edi
   24d53:	e8 08 fe ff ff       	call   24b60 <sgx_create_report>
   24d58:	eb d0                	jmp    24d2a <sgx_self_report+0x3a>
   24d5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000024d60 <getpagesize>:
   24d60:	f3 0f 1e fa          	endbr64 
   24d64:	b8 00 10 00 00       	mov    $0x1000,%eax
   24d69:	c3                   	ret    
   24d6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000024d70 <labs>:
   24d70:	f3 0f 1e fa          	endbr64 
   24d74:	48 89 f8             	mov    %rdi,%rax
   24d77:	48 99                	cqto   
   24d79:	48 31 d0             	xor    %rdx,%rax
   24d7c:	48 29 d0             	sub    %rdx,%rax
   24d7f:	c3                   	ret    

Disassembly of section .nipx:

0000000000024e00 <init_enclave>:
   24e00:	f3 0f 1e fa          	endbr64 
   24e04:	41 55                	push   %r13
   24e06:	41 54                	push   %r12
   24e08:	55                   	push   %rbp
   24e09:	53                   	push   %rbx
   24e0a:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
   24e11:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   24e18:	00 00 
   24e1a:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   24e21:	00 
   24e22:	31 c0                	xor    %eax,%eax
   24e24:	48 85 ff             	test   %rdi,%rdi
   24e27:	0f 84 e3 02 00 00    	je     25110 <init_enclave+0x310>
   24e2d:	48 89 f3             	mov    %rsi,%rbx
   24e30:	48 85 f6             	test   %rsi,%rsi
   24e33:	0f 84 d7 02 00 00    	je     25110 <init_enclave+0x310>
   24e39:	48 83 3d 8f b1 00 00 	cmpq   $0x0,0xb18f(%rip)        # 2ffd0 <_Z9pcl_entryPvS_>
   24e40:	00 
   24e41:	48 89 fd             	mov    %rdi,%rbp
   24e44:	74 10                	je     24e56 <init_enclave+0x56>
   24e46:	0f ae e8             	lfence 
   24e49:	e8 c2 d1 fd ff       	call   2010 <_Z9pcl_entryPvS_@plt>
   24e4e:	85 c0                	test   %eax,%eax
   24e50:	0f 85 ba 02 00 00    	jne    25110 <init_enclave+0x310>
   24e56:	48 89 ef             	mov    %rbp,%rdi
   24e59:	e8 c2 78 fe ff       	call   c720 <relocate_enclave>
   24e5e:	85 c0                	test   %eax,%eax
   24e60:	0f 85 aa 02 00 00    	jne    25110 <init_enclave+0x310>
   24e66:	e8 8d 0a 00 00       	call   258f8 <get_enclave_base>
   24e6b:	48 8d 15 ce 2a 00 00 	lea    0x2ace(%rip),%rdx        # 27940 <g_global_data>
   24e72:	48 89 05 67 ae 00 00 	mov    %rax,0xae67(%rip)        # 2fce0 <g_enclave_base>
   24e79:	48 8b 8a d0 06 00 00 	mov    0x6d0(%rdx),%rcx
   24e80:	48 89 0d 51 ae 00 00 	mov    %rcx,0xae51(%rip)        # 2fcd8 <g_enclave_size>
   24e87:	48 8b 8a c0 06 00 00 	mov    0x6c0(%rdx),%rcx
   24e8e:	48 85 c9             	test   %rcx,%rcx
   24e91:	74 1e                	je     24eb1 <init_enclave+0xb1>
   24e93:	48 8b 8a c0 06 00 00 	mov    0x6c0(%rdx),%rcx
   24e9a:	48 39 c8             	cmp    %rcx,%rax
   24e9d:	0f 85 77 02 00 00    	jne    2511a <init_enclave+0x31a>
   24ea3:	48 8b 82 c8 06 00 00 	mov    0x6c8(%rdx),%rax
   24eaa:	48 89 05 2f ae 00 00 	mov    %rax,0xae2f(%rip)        # 2fce0 <g_enclave_base>
   24eb1:	be b0 00 00 00       	mov    $0xb0,%esi
   24eb6:	48 89 df             	mov    %rbx,%rdi
   24eb9:	e8 42 56 fe ff       	call   a500 <sgx_is_outside_enclave>
   24ebe:	85 c0                	test   %eax,%eax
   24ec0:	0f 84 4a 02 00 00    	je     25110 <init_enclave+0x310>
   24ec6:	0f ae e8             	lfence 
   24ec9:	f3 0f 6f 03          	movdqu (%rbx),%xmm0
   24ecd:	f3 0f 6f 4b 10       	movdqu 0x10(%rbx),%xmm1
   24ed2:	f3 0f 6f 53 20       	movdqu 0x20(%rbx),%xmm2
   24ed7:	f3 0f 6f 5b 30       	movdqu 0x30(%rbx),%xmm3
   24edc:	f3 0f 6f 63 40       	movdqu 0x40(%rbx),%xmm4
   24ee1:	0f 29 04 24          	movaps %xmm0,(%rsp)
   24ee5:	f3 0f 6f 6b 50       	movdqu 0x50(%rbx),%xmm5
   24eea:	f3 0f 6f 73 60       	movdqu 0x60(%rbx),%xmm6
   24eef:	0f 29 4c 24 10       	movaps %xmm1,0x10(%rsp)
   24ef4:	f3 0f 6f 7b 70       	movdqu 0x70(%rbx),%xmm7
   24ef9:	f3 0f 6f 83 80 00 00 	movdqu 0x80(%rbx),%xmm0
   24f00:	00 
   24f01:	0f 29 54 24 20       	movaps %xmm2,0x20(%rsp)
   24f06:	f3 0f 6f 8b 90 00 00 	movdqu 0x90(%rbx),%xmm1
   24f0d:	00 
   24f0e:	f3 0f 6f 93 a0 00 00 	movdqu 0xa0(%rbx),%xmm2
   24f15:	00 
   24f16:	0f 29 5c 24 30       	movaps %xmm3,0x30(%rsp)
   24f1b:	0f 29 64 24 40       	movaps %xmm4,0x40(%rsp)
   24f20:	0f 29 6c 24 50       	movaps %xmm5,0x50(%rsp)
   24f25:	0f 29 74 24 60       	movaps %xmm6,0x60(%rsp)
   24f2a:	0f 29 7c 24 70       	movaps %xmm7,0x70(%rsp)
   24f2f:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   24f36:	00 
   24f37:	0f 29 8c 24 90 00 00 	movaps %xmm1,0x90(%rsp)
   24f3e:	00 
   24f3f:	0f 29 94 24 a0 00 00 	movaps %xmm2,0xa0(%rsp)
   24f46:	00 
   24f47:	f6 44 24 13 40       	testb  $0x40,0x13(%rsp)
   24f4c:	0f 85 5e 01 00 00    	jne    250b0 <init_enclave+0x2b0>
   24f52:	ba 14 00 00 00       	mov    $0x14,%edx
   24f57:	b9 9c 00 00 00       	mov    $0x9c,%ecx
   24f5c:	31 c0                	xor    %eax,%eax
   24f5e:	48 01 e1             	add    %rsp,%rcx
   24f61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   24f68:	c6 04 01 00          	movb   $0x0,(%rcx,%rax,1)
   24f6c:	48 83 c0 01          	add    $0x1,%rax
   24f70:	48 39 d0             	cmp    %rdx,%rax
   24f73:	72 f3                	jb     24f68 <init_enclave+0x168>
   24f75:	8b 84 24 ac 00 00 00 	mov    0xac(%rsp),%eax
   24f7c:	89 05 4e ad 00 00    	mov    %eax,0xad4e(%rip)        # 2fcd0 <g_cpu_core_num>
   24f82:	8b 44 24 08          	mov    0x8(%rsp),%eax
   24f86:	89 05 5c ad 00 00    	mov    %eax,0xad5c(%rip)        # 2fce8 <g_sdk_version>
   24f8c:	85 c0                	test   %eax,%eax
   24f8e:	0f 85 4c 01 00 00    	jne    250e0 <init_enclave+0x2e0>
   24f94:	c7 05 4e ad 00 00 00 	movl   $0x0,0xad4e(%rip)        # 2fcec <EDMM_supported>
   24f9b:	00 00 00 
   24f9e:	48 8d 6c 24 0c       	lea    0xc(%rsp),%rbp
   24fa3:	48 89 ef             	mov    %rbp,%rdi
   24fa6:	be 01 00 00 00       	mov    $0x1,%esi
   24fab:	e8 10 6c fe ff       	call   bbc0 <feature_supported>
   24fb0:	44 8b 2d 35 ad 00 00 	mov    0xad35(%rip),%r13d        # 2fcec <EDMM_supported>
   24fb7:	89 05 17 ad 00 00    	mov    %eax,0xad17(%rip)        # 2fcd4 <g_aexnotify_supported>
   24fbd:	e8 8e 6a fe ff       	call   ba50 <get_heap_min_size>
   24fc2:	49 89 c4             	mov    %rax,%r12
   24fc5:	e8 16 6a fe ff       	call   b9e0 <get_heap_size>
   24fca:	48 89 c5             	mov    %rax,%rbp
   24fcd:	e8 ee 69 fe ff       	call   b9c0 <get_heap_base>
   24fd2:	44 89 e9             	mov    %r13d,%ecx
   24fd5:	4c 89 e2             	mov    %r12,%rdx
   24fd8:	48 89 ee             	mov    %rbp,%rsi
   24fdb:	48 89 c7             	mov    %rax,%rdi
   24fde:	e8 cd ae fe ff       	call   feb0 <heap_init>
   24fe3:	85 c0                	test   %eax,%eax
   24fe5:	0f 85 25 01 00 00    	jne    25110 <init_enclave+0x310>
   24feb:	e8 b0 74 fe ff       	call   c4a0 <get_xfeature_state>
   24ff0:	48 8b 3c 24          	mov    (%rsp),%rdi
   24ff4:	48 89 c2             	mov    %rax,%rdx
   24ff7:	48 81 e7 ff e7 ff e1 	and    $0xffffffffe1ffe7ff,%rdi
   24ffe:	f6 44 24 13 40       	testb  $0x40,0x13(%rsp)
   25003:	48 0f 45 bc 24 a4 00 	cmovne 0xa4(%rsp),%rdi
   2500a:	00 00 
   2500c:	83 3d d5 ac 00 00 01 	cmpl   $0x1,0xacd5(%rip)        # 2fce8 <g_sdk_version>
   25013:	7f 0f                	jg     25024 <init_enclave+0x224>
   25015:	48 83 bc 24 9c 00 00 	cmpq   $0x0,0x9c(%rsp)
   2501c:	00 00 
   2501e:	0f 84 dc 00 00 00    	je     25100 <init_enclave+0x300>
   25024:	48 8d 74 24 14       	lea    0x14(%rsp),%rsi
   25029:	e8 02 53 fe ff       	call   a330 <init_optimized_libs>
   2502e:	85 c0                	test   %eax,%eax
   25030:	0f 85 da 00 00 00    	jne    25110 <init_enclave+0x310>
   25036:	e8 95 6a fe ff       	call   bad0 <get_rsrv_size>
   2503b:	48 85 c0             	test   %rax,%rax
   2503e:	74 2b                	je     2506b <init_enclave+0x26b>
   25040:	e8 fb 6a fe ff       	call   bb40 <get_rsrv_min_size>
   25045:	49 89 c4             	mov    %rax,%r12
   25048:	e8 83 6a fe ff       	call   bad0 <get_rsrv_size>
   2504d:	48 89 c5             	mov    %rax,%rbp
   25050:	e8 5b 6a fe ff       	call   bab0 <get_rsrv_base>
   25055:	4c 89 e2             	mov    %r12,%rdx
   25058:	48 89 ee             	mov    %rbp,%rsi
   2505b:	48 89 c7             	mov    %rax,%rdi
   2505e:	e8 8d f3 fe ff       	call   143f0 <rsrv_mem_init>
   25063:	85 c0                	test   %eax,%eax
   25065:	0f 85 a5 00 00 00    	jne    25110 <init_enclave+0x310>
   2506b:	be 08 00 00 00       	mov    $0x8,%esi
   25070:	48 8d 3d 51 ac 00 00 	lea    0xac51(%rip),%rdi        # 2fcc8 <__intel_security_cookie>
   25077:	e8 24 56 fe ff       	call   a6a0 <sgx_read_rand>
   2507c:	85 c0                	test   %eax,%eax
   2507e:	0f 95 c0             	setne  %al
   25081:	0f b6 c0             	movzbl %al,%eax
   25084:	f7 d8                	neg    %eax
   25086:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
   2508d:	00 
   2508e:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
   25095:	00 00 
   25097:	0f 85 82 00 00 00    	jne    2511f <init_enclave+0x31f>
   2509d:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
   250a4:	5b                   	pop    %rbx
   250a5:	5d                   	pop    %rbp
   250a6:	41 5c                	pop    %r12
   250a8:	41 5d                	pop    %r13
   250aa:	c3                   	ret    
   250ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   250b0:	ba b0 00 00 00       	mov    $0xb0,%edx
   250b5:	48 81 bc 24 9c 00 00 	cmpq   $0xb0,0x9c(%rsp)
   250bc:	00 b0 00 00 00 
   250c1:	48 89 d1             	mov    %rdx,%rcx
   250c4:	48 0f 46 8c 24 9c 00 	cmovbe 0x9c(%rsp),%rcx
   250cb:	00 00 
   250cd:	48 29 ca             	sub    %rcx,%rdx
   250d0:	0f 85 86 fe ff ff    	jne    24f5c <init_enclave+0x15c>
   250d6:	e9 9a fe ff ff       	jmp    24f75 <init_enclave+0x175>
   250db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   250e0:	83 f8 04             	cmp    $0x4,%eax
   250e3:	7e 2b                	jle    25110 <init_enclave+0x310>
   250e5:	48 8d 6c 24 0c       	lea    0xc(%rsp),%rbp
   250ea:	31 f6                	xor    %esi,%esi
   250ec:	48 89 ef             	mov    %rbp,%rdi
   250ef:	e8 cc 6a fe ff       	call   bbc0 <feature_supported>
   250f4:	89 05 f2 ab 00 00    	mov    %eax,0xabf2(%rip)        # 2fcec <EDMM_supported>
   250fa:	e9 a4 fe ff ff       	jmp    24fa3 <init_enclave+0x1a3>
   250ff:	90                   	nop
   25100:	31 f6                	xor    %esi,%esi
   25102:	e8 29 52 fe ff       	call   a330 <init_optimized_libs>
   25107:	85 c0                	test   %eax,%eax
   25109:	0f 84 27 ff ff ff    	je     25036 <init_enclave+0x236>
   2510f:	90                   	nop
   25110:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   25115:	e9 6c ff ff ff       	jmp    25086 <init_enclave+0x286>
   2511a:	e8 18 0c 00 00       	call   25d37 <abort>
   2511f:	e8 1c ea fe ff       	call   13b40 <__stack_chk_fail>
   25124:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   2512b:	00 00 00 00 
   2512f:	90                   	nop

0000000000025130 <do_init_enclave>:
   25130:	f3 0f 1e fa          	endbr64 
   25134:	41 55                	push   %r13
   25136:	49 89 f5             	mov    %rsi,%r13
   25139:	41 54                	push   %r12
   2513b:	49 89 fc             	mov    %rdi,%r12
   2513e:	55                   	push   %rbp
   2513f:	e8 b4 07 00 00       	call   258f8 <get_enclave_base>
   25144:	48 89 c5             	mov    %rax,%rbp
   25147:	e8 d7 07 00 00       	call   25923 <lock_enclave>
   2514c:	85 c0                	test   %eax,%eax
   2514e:	74 10                	je     25160 <do_init_enclave+0x30>
   25150:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   25156:	44 89 e0             	mov    %r12d,%eax
   25159:	5d                   	pop    %rbp
   2515a:	41 5c                	pop    %r12
   2515c:	41 5d                	pop    %r13
   2515e:	c3                   	ret    
   2515f:	90                   	nop
   25160:	4c 89 e6             	mov    %r12,%rsi
   25163:	48 89 ef             	mov    %rbp,%rdi
   25166:	e8 95 fc ff ff       	call   24e00 <init_enclave>
   2516b:	85 c0                	test   %eax,%eax
   2516d:	75 e1                	jne    25150 <do_init_enclave+0x20>
   2516f:	be 01 00 00 00       	mov    $0x1,%esi
   25174:	4c 89 ef             	mov    %r13,%rdi
   25177:	e8 f4 60 fe ff       	call   b270 <do_init_thread>
   2517c:	41 89 c4             	mov    %eax,%r12d
   2517f:	85 c0                	test   %eax,%eax
   25181:	75 cd                	jne    25150 <do_init_enclave+0x20>
   25183:	8b 15 63 ab 00 00    	mov    0xab63(%rip),%edx        # 2fcec <EDMM_supported>
   25189:	85 d2                	test   %edx,%edx
   2518b:	0f 84 ef 00 00 00    	je     25280 <do_init_enclave+0x150>
   25191:	e8 ba 68 fe ff       	call   ba50 <get_heap_min_size>
   25196:	4c 8d 2d a3 27 00 00 	lea    0x27a3(%rip),%r13        # 27940 <g_global_data>
   2519d:	31 d2                	xor    %edx,%edx
   2519f:	48 89 c6             	mov    %rax,%rsi
   251a2:	48 89 c1             	mov    %rax,%rcx
   251a5:	49 8b 7d 10          	mov    0x10(%r13),%rdi
   251a9:	48 01 ef             	add    %rbp,%rdi
   251ac:	e8 6f e8 fe ff       	call   13a20 <memset_s>
   251b1:	48 8d 05 60 ab 00 00 	lea    0xab60(%rip),%rax        # 2fd18 <rsrv_mem_min_size>
   251b8:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   251bc:	31 d2                	xor    %edx,%edx
   251be:	48 8b 30             	mov    (%rax),%rsi
   251c1:	48 01 ef             	add    %rbp,%rdi
   251c4:	48 89 f1             	mov    %rsi,%rcx
   251c7:	e8 54 e8 fe ff       	call   13a20 <memset_s>
   251cc:	bf 02 00 00 00       	mov    $0x2,%edi
   251d1:	e8 3f 07 00 00       	call   25915 <set_enclave_state>
   251d6:	8b 05 10 ab 00 00    	mov    0xab10(%rip),%eax        # 2fcec <EDMM_supported>
   251dc:	85 c0                	test   %eax,%eax
   251de:	0f 84 72 ff ff ff    	je     25156 <do_init_enclave+0x26>
   251e4:	41 8b 85 58 01 00 00 	mov    0x158(%r13),%eax
   251eb:	4d 8d a5 60 01 00 00 	lea    0x160(%r13),%r12
   251f2:	48 c1 e0 05          	shl    $0x5,%rax
   251f6:	4c 01 e0             	add    %r12,%rax
   251f9:	4c 39 e0             	cmp    %r12,%rax
   251fc:	77 17                	ja     25215 <do_init_enclave+0xe5>
   251fe:	e9 bd 00 00 00       	jmp    252c0 <do_init_enclave+0x190>
   25203:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   25208:	49 83 c4 20          	add    $0x20,%r12
   2520c:	4c 39 e0             	cmp    %r12,%rax
   2520f:	0f 86 ab 00 00 00    	jbe    252c0 <do_init_enclave+0x190>
   25215:	66 41 83 3c 24 17    	cmpw   $0x17,(%r12)
   2521b:	75 eb                	jne    25208 <do_init_enclave+0xd8>
   2521d:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
   25222:	41 8b 74 24 04       	mov    0x4(%r12),%esi
   25227:	48 01 ef             	add    %rbp,%rdi
   2522a:	48 c1 e6 0c          	shl    $0xc,%rsi
   2522e:	48 01 fe             	add    %rdi,%rsi
   25231:	0f 82 19 ff ff ff    	jb     25150 <do_init_enclave+0x20>
   25237:	e8 e4 ab fe ff       	call   fe20 <sgx_mm_init>
   2523c:	85 c0                	test   %eax,%eax
   2523e:	0f 85 0c ff ff ff    	jne    25150 <do_init_enclave+0x20>
   25244:	49 8b bd d8 06 00 00 	mov    0x6d8(%r13),%rdi
   2524b:	e8 e0 9c fe ff       	call   ef30 <emalloc_init_with_reserved_mem>
   25250:	85 c0                	test   %eax,%eax
   25252:	0f 85 f8 fe ff ff    	jne    25150 <do_init_enclave+0x20>
   25258:	4c 89 e2             	mov    %r12,%rdx
   2525b:	49 8d b5 60 01 00 00 	lea    0x160(%r13),%rsi
   25262:	48 89 ef             	mov    %rbp,%rdi
   25265:	45 31 e4             	xor    %r12d,%r12d
   25268:	e8 a3 4e fe ff       	call   a110 <init_rts_emas>
   2526d:	85 c0                	test   %eax,%eax
   2526f:	41 0f 95 c4          	setne  %r12b
   25273:	e9 de fe ff ff       	jmp    25156 <do_init_enclave+0x26>
   25278:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2527f:	00 
   25280:	4c 8d 2d b9 26 00 00 	lea    0x26b9(%rip),%r13        # 27940 <g_global_data>
   25287:	31 d2                	xor    %edx,%edx
   25289:	49 8b 4d 18          	mov    0x18(%r13),%rcx
   2528d:	49 8b 75 18          	mov    0x18(%r13),%rsi
   25291:	49 8b 7d 10          	mov    0x10(%r13),%rdi
   25295:	48 01 ef             	add    %rbp,%rdi
   25298:	e8 83 e7 fe ff       	call   13a20 <memset_s>
   2529d:	49 8b 4d 28          	mov    0x28(%r13),%rcx
   252a1:	49 8b 75 28          	mov    0x28(%r13),%rsi
   252a5:	31 d2                	xor    %edx,%edx
   252a7:	49 8b 7d 20          	mov    0x20(%r13),%rdi
   252ab:	48 01 ef             	add    %rbp,%rdi
   252ae:	e8 6d e7 fe ff       	call   13a20 <memset_s>
   252b3:	e9 14 ff ff ff       	jmp    251cc <do_init_enclave+0x9c>
   252b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   252bf:	00 
   252c0:	4c 39 e0             	cmp    %r12,%rax
   252c3:	0f 85 54 ff ff ff    	jne    2521d <do_init_enclave+0xed>
   252c9:	31 f6                	xor    %esi,%esi
   252cb:	31 ff                	xor    %edi,%edi
   252cd:	e9 65 ff ff ff       	jmp    25237 <do_init_enclave+0x107>
   252d2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   252d9:	00 00 00 
   252dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000252e0 <sgx_is_enclave_crashed>:
   252e0:	f3 0f 1e fa          	endbr64 
   252e4:	48 83 ec 08          	sub    $0x8,%rsp
   252e8:	e8 17 06 00 00       	call   25904 <get_enclave_state>
   252ed:	83 f8 03             	cmp    $0x3,%eax
   252f0:	0f 94 c0             	sete   %al
   252f3:	48 83 c4 08          	add    $0x8,%rsp
   252f7:	0f b6 c0             	movzbl %al,%eax
   252fa:	c3                   	ret    
   252fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000025300 <enter_enclave>:
   25300:	f3 0f 1e fa          	endbr64 
   25304:	41 55                	push   %r13
   25306:	49 89 d5             	mov    %rdx,%r13
   25309:	41 54                	push   %r12
   2530b:	49 89 f4             	mov    %rsi,%r12
   2530e:	55                   	push   %rbp
   2530f:	89 fd                	mov    %edi,%ebp
   25311:	53                   	push   %rbx
   25312:	89 cb                	mov    %ecx,%ebx
   25314:	48 83 ec 18          	sub    $0x18,%rsp
   25318:	e8 c3 ff ff ff       	call   252e0 <sgx_is_enclave_crashed>
   2531d:	85 c0                	test   %eax,%eax
   2531f:	75 77                	jne    25398 <enter_enclave+0x98>
   25321:	83 fd ff             	cmp    $0xffffffff,%ebp
   25324:	75 32                	jne    25358 <enter_enclave+0x58>
   25326:	85 db                	test   %ebx,%ebx
   25328:	0f 84 2a 01 00 00    	je     25458 <enter_enclave+0x158>
   2532e:	83 fb 01             	cmp    $0x1,%ebx
   25331:	0f 84 f9 00 00 00    	je     25430 <enter_enclave+0x130>
   25337:	bf 03 00 00 00       	mov    $0x3,%edi
   2533c:	e8 d4 05 00 00       	call   25915 <set_enclave_state>
   25341:	b8 01 00 00 00       	mov    $0x1,%eax
   25346:	48 83 c4 18          	add    $0x18,%rsp
   2534a:	5b                   	pop    %rbx
   2534b:	5d                   	pop    %rbp
   2534c:	41 5c                	pop    %r12
   2534e:	41 5d                	pop    %r13
   25350:	c3                   	ret    
   25351:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   25358:	e8 a7 05 00 00       	call   25904 <get_enclave_state>
   2535d:	83 f8 02             	cmp    $0x2,%eax
   25360:	75 d5                	jne    25337 <enter_enclave+0x37>
   25362:	85 db                	test   %ebx,%ebx
   25364:	75 c8                	jne    2532e <enter_enclave+0x2e>
   25366:	85 ed                	test   %ebp,%ebp
   25368:	79 46                	jns    253b0 <enter_enclave+0xb0>
   2536a:	83 fd fa             	cmp    $0xfffffffa,%ebp
   2536d:	74 41                	je     253b0 <enter_enclave+0xb0>
   2536f:	83 fd fe             	cmp    $0xfffffffe,%ebp
   25372:	0f 84 f8 00 00 00    	je     25470 <enter_enclave+0x170>
   25378:	83 fd fc             	cmp    $0xfffffffc,%ebp
   2537b:	0f 84 ff 00 00 00    	je     25480 <enter_enclave+0x180>
   25381:	83 fd fb             	cmp    $0xfffffffb,%ebp
   25384:	75 b1                	jne    25337 <enter_enclave+0x37>
   25386:	4c 89 ef             	mov    %r13,%rdi
   25389:	e8 12 64 fe ff       	call   b7a0 <do_uninit_enclave>
   2538e:	89 c3                	mov    %eax,%ebx
   25390:	e9 82 00 00 00       	jmp    25417 <enter_enclave+0x117>
   25395:	0f 1f 00             	nopl   (%rax)
   25398:	48 83 c4 18          	add    $0x18,%rsp
   2539c:	b8 06 10 00 00       	mov    $0x1006,%eax
   253a1:	5b                   	pop    %rbx
   253a2:	5d                   	pop    %rbp
   253a3:	41 5c                	pop    %r12
   253a5:	41 5d                	pop    %r13
   253a7:	c3                   	ret    
   253a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   253af:	00 
   253b0:	e8 8e 05 00 00       	call   25943 <get_thread_data>
   253b5:	48 85 c0             	test   %rax,%rax
   253b8:	0f 84 d2 00 00 00    	je     25490 <enter_enclave+0x190>
   253be:	48 8b 58 08          	mov    0x8(%rax),%rbx
   253c2:	48 39 58 10          	cmp    %rbx,0x10(%rax)
   253c6:	75 40                	jne    25408 <enter_enclave+0x108>
   253c8:	48 8d 05 71 25 00 00 	lea    0x2571(%rip),%rax        # 27940 <g_global_data>
   253cf:	48 8b 50 38          	mov    0x38(%rax),%rdx
   253d3:	48 85 d2             	test   %rdx,%rdx
   253d6:	74 30                	je     25408 <enter_enclave+0x108>
   253d8:	48 8b 58 50          	mov    0x50(%rax),%rbx
   253dc:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   253e1:	be 08 00 00 00       	mov    $0x8,%esi
   253e6:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   253ed:	00 00 
   253ef:	4c 01 eb             	add    %r13,%rbx
   253f2:	e8 a9 52 fe ff       	call   a6a0 <sgx_read_rand>
   253f7:	85 c0                	test   %eax,%eax
   253f9:	0f 85 9d 00 00 00    	jne    2549c <enter_enclave+0x19c>
   253ff:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   25404:	48 89 43 28          	mov    %rax,0x28(%rbx)
   25408:	4c 89 ea             	mov    %r13,%rdx
   2540b:	4c 89 e6             	mov    %r12,%rsi
   2540e:	89 ef                	mov    %ebp,%edi
   25410:	e8 4b 60 fe ff       	call   b460 <do_ecall>
   25415:	89 c3                	mov    %eax,%ebx
   25417:	89 d8                	mov    %ebx,%eax
   25419:	83 fb 01             	cmp    $0x1,%ebx
   2541c:	0f 84 15 ff ff ff    	je     25337 <enter_enclave+0x37>
   25422:	48 83 c4 18          	add    $0x18,%rsp
   25426:	5b                   	pop    %rbx
   25427:	5d                   	pop    %rbp
   25428:	41 5c                	pop    %r12
   2542a:	41 5d                	pop    %r13
   2542c:	c3                   	ret    
   2542d:	0f 1f 00             	nopl   (%rax)
   25430:	4c 89 ef             	mov    %r13,%rdi
   25433:	e8 c8 6c fe ff       	call   c100 <trts_handle_exception>
   25438:	4c 89 ef             	mov    %r13,%rdi
   2543b:	89 c3                	mov    %eax,%ebx
   2543d:	e8 8e 53 fe ff       	call   a7d0 <check_static_stack_canary>
   25442:	41 89 c0             	mov    %eax,%r8d
   25445:	b8 09 10 00 00       	mov    $0x1009,%eax
   2544a:	45 85 c0             	test   %r8d,%r8d
   2544d:	0f 85 f3 fe ff ff    	jne    25346 <enter_enclave+0x46>
   25453:	eb c2                	jmp    25417 <enter_enclave+0x117>
   25455:	0f 1f 00             	nopl   (%rax)
   25458:	4c 89 ee             	mov    %r13,%rsi
   2545b:	4c 89 e7             	mov    %r12,%rdi
   2545e:	e8 cd fc ff ff       	call   25130 <do_init_enclave>
   25463:	89 c3                	mov    %eax,%ebx
   25465:	eb b0                	jmp    25417 <enter_enclave+0x117>
   25467:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2546e:	00 00 
   25470:	4c 89 e7             	mov    %r12,%rdi
   25473:	e8 88 64 fe ff       	call   b900 <do_oret>
   25478:	89 c3                	mov    %eax,%ebx
   2547a:	eb 9b                	jmp    25417 <enter_enclave+0x117>
   2547c:	0f 1f 40 00          	nopl   0x0(%rax)
   25480:	4c 89 e7             	mov    %r12,%rdi
   25483:	e8 28 62 fe ff       	call   b6b0 <do_ecall_add_thread>
   25488:	89 c3                	mov    %eax,%ebx
   2548a:	eb 8b                	jmp    25417 <enter_enclave+0x117>
   2548c:	0f 1f 40 00          	nopl   0x0(%rax)
   25490:	48 8d 05 a9 24 00 00 	lea    0x24a9(%rip),%rax        # 27940 <g_global_data>
   25497:	e9 3c ff ff ff       	jmp    253d8 <enter_enclave+0xd8>
   2549c:	e8 96 08 00 00       	call   25d37 <abort>

00000000000254a1 <restore_xregs>:
   254a1:	f3 0f 1e fa          	endbr64 
   254a5:	48 89 f9             	mov    %rdi,%rcx
   254a8:	48 8d 05 15 cd 00 00 	lea    0xcd15(%rip),%rax        # 321c4 <g_xsave_enabled>
   254af:	8b 00                	mov    (%rax),%eax
   254b1:	83 f8 00             	cmp    $0x0,%eax
   254b4:	74 16                	je     254cc <restore_xregs+0x2b>
   254b6:	48 31 c0             	xor    %rax,%rax
   254b9:	48 31 d2             	xor    %rdx,%rdx
   254bc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   254c1:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   254c6:	48 0f ae 29          	xrstor64 (%rcx)
   254ca:	eb 04                	jmp    254d0 <restore_xregs+0x2f>
   254cc:	48 0f ae 09          	fxrstor64 (%rcx)
   254d0:	c3                   	ret    

00000000000254d1 <save_xregs>:
   254d1:	f3 0f 1e fa          	endbr64 
   254d5:	48 89 f9             	mov    %rdi,%rcx
   254d8:	48 8d 05 e5 cc 00 00 	lea    0xcce5(%rip),%rax        # 321c4 <g_xsave_enabled>
   254df:	9b                   	fwait
   254e0:	8b 00                	mov    (%rax),%eax
   254e2:	83 f8 00             	cmp    $0x0,%eax
   254e5:	74 16                	je     254fd <save_xregs+0x2c>
   254e7:	48 31 c0             	xor    %rax,%rax
   254ea:	48 31 d2             	xor    %rdx,%rdx
   254ed:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   254f2:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   254f7:	48 0f c7 21          	xsavec64 (%rcx)
   254fb:	eb 04                	jmp    25501 <save_xregs+0x30>
   254fd:	48 0f ae 01          	fxsave64 (%rcx)
   25501:	c3                   	ret    
   25502:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   25509:	00 00 00 
   2550c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   25513:	00 00 00 
   25516:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2551d:	00 00 00 
   25520:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   25527:	00 00 00 
   2552a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   25531:	00 00 00 
   25534:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2553b:	00 00 00 
   2553e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   25545:	00 00 00 
   25548:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2554f:	00 00 00 
   25552:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   25559:	00 00 00 
   2555c:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   25563:	00 00 00 
   25566:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2556d:	00 00 00 
   25570:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   25577:	00 00 00 
   2557a:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   25581:	00 00 00 
   25584:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2558b:	00 00 00 
   2558e:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   25595:	00 00 00 
   25598:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   2559f:	00 00 00 
   255a2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   255a9:	00 00 00 
   255ac:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   255b3:	00 00 00 
   255b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   255bd:	00 00 00 
   255c0:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   255c7:	00 00 00 
   255ca:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   255d1:	00 00 00 
   255d4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   255db:	00 00 00 
   255de:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   255e5:	00 00 00 
   255e8:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   255ef:	00 00 00 
   255f2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   255f9:	00 00 00 
   255fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000025600 <constant_time_apply_sgxstep_mitigation_and_continue_execution>:
   25600:	f3 0f 1e fa          	endbr64 
   25604:	48 8b 67 20          	mov    0x20(%rdi),%rsp
   25608:	48 8b 87 88 00 00 00 	mov    0x88(%rdi),%rax
   2560f:	49 89 c2             	mov    %rax,%r10
   25612:	80 38 c3             	cmpb   $0xc3,(%rax)
   25615:	48 0f 44 04 24       	cmove  (%rsp),%rax
   2561a:	48 89 e5             	mov    %rsp,%rbp
   2561d:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   25622:	48 0f 44 eb          	cmove  %rbx,%rbp
   25626:	48 8d 1d c3 02 00 00 	lea    0x2c3(%rip),%rbx        # 258f0 <__ct_mitigation_end>
   2562d:	48 29 c3             	sub    %rax,%rbx
   25630:	48 81 fb e6 00 00 00 	cmp    $0xe6,%rbx
   25637:	48 0f 42 e5          	cmovb  %rbp,%rsp
   2563b:	48 89 67 20          	mov    %rsp,0x20(%rdi)
   2563f:	4c 0f 42 94 24 78 ff 	cmovb  -0x88(%rsp),%r10
   25646:	ff ff 
   25648:	4c 89 94 24 78 ff ff 	mov    %r10,-0x88(%rsp)
   2564f:	ff 
   25650:	48 8b 87 80 00 00 00 	mov    0x80(%rdi),%rax
   25657:	48 89 84 24 38 ff ff 	mov    %rax,-0xc8(%rsp)
   2565e:	ff 
   2565f:	48 8b 44 24 f8       	mov    -0x8(%rsp),%rax
   25664:	48 0f 42 84 24 30 ff 	cmovb  -0xd0(%rsp),%rax
   2566b:	ff ff 
   2566d:	48 89 84 24 30 ff ff 	mov    %rax,-0xd0(%rsp)
   25674:	ff 
   25675:	48 89 b4 24 28 ff ff 	mov    %rsi,-0xd8(%rsp)
   2567c:	ff 
   2567d:	48 0f 42 94 24 20 ff 	cmovb  -0xe0(%rsp),%rdx
   25684:	ff ff 
   25686:	48 0f 42 8c 24 18 ff 	cmovb  -0xe8(%rsp),%rcx
   2568d:	ff ff 
   2568f:	4c 0f 42 84 24 10 ff 	cmovb  -0xf0(%rsp),%r8
   25696:	ff ff 
   25698:	4c 0f 42 8c 24 08 ff 	cmovb  -0xf8(%rsp),%r9
   2569f:	ff ff 
   256a1:	48 89 94 24 20 ff ff 	mov    %rdx,-0xe0(%rsp)
   256a8:	ff 
   256a9:	48 89 8c 24 18 ff ff 	mov    %rcx,-0xe8(%rsp)
   256b0:	ff 
   256b1:	4c 89 84 24 10 ff ff 	mov    %r8,-0xf0(%rsp)
   256b8:	ff 
   256b9:	4c 89 8c 24 08 ff ff 	mov    %r9,-0xf8(%rsp)
   256c0:	ff 
   256c1:	4c 8b 47 40          	mov    0x40(%rdi),%r8
   256c5:	4c 8b 4f 48          	mov    0x48(%rdi),%r9
   256c9:	4c 8b 57 50          	mov    0x50(%rdi),%r10
   256cd:	4c 8b 5f 58          	mov    0x58(%rdi),%r11
   256d1:	4c 8b 67 60          	mov    0x60(%rdi),%r12
   256d5:	4c 8b 6f 68          	mov    0x68(%rdi),%r13
   256d9:	4c 8b 77 70          	mov    0x70(%rdi),%r14
   256dd:	4c 8b 7f 78          	mov    0x78(%rdi),%r15
   256e1:	48 8b 07             	mov    (%rdi),%rax
   256e4:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   256e8:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   256ec:	48 8b 5f 18          	mov    0x18(%rdi),%rbx
   256f0:	48 8b 6f 28          	mov    0x28(%rdi),%rbp
   256f4:	48 8b 77 30          	mov    0x30(%rdi),%rsi
   256f8:	48 8b 7f 38          	mov    0x38(%rdi),%rdi
   256fc:	48 0f 42 84 24 70 ff 	cmovb  -0x90(%rsp),%rax
   25703:	ff ff 
   25705:	48 0f 42 8c 24 68 ff 	cmovb  -0x98(%rsp),%rcx
   2570c:	ff ff 
   2570e:	48 0f 42 94 24 60 ff 	cmovb  -0xa0(%rsp),%rdx
   25715:	ff ff 
   25717:	48 0f 42 9c 24 58 ff 	cmovb  -0xa8(%rsp),%rbx
   2571e:	ff ff 
   25720:	48 0f 42 ac 24 50 ff 	cmovb  -0xb0(%rsp),%rbp
   25727:	ff ff 
   25729:	48 0f 42 b4 24 48 ff 	cmovb  -0xb8(%rsp),%rsi
   25730:	ff ff 
   25732:	48 0f 42 bc 24 40 ff 	cmovb  -0xc0(%rsp),%rdi
   25739:	ff ff 
   2573b:	48 89 84 24 70 ff ff 	mov    %rax,-0x90(%rsp)
   25742:	ff 
   25743:	48 89 8c 24 68 ff ff 	mov    %rcx,-0x98(%rsp)
   2574a:	ff 
   2574b:	48 89 94 24 60 ff ff 	mov    %rdx,-0xa0(%rsp)
   25752:	ff 
   25753:	48 89 9c 24 58 ff ff 	mov    %rbx,-0xa8(%rsp)
   2575a:	ff 
   2575b:	48 89 ac 24 50 ff ff 	mov    %rbp,-0xb0(%rsp)
   25762:	ff 
   25763:	48 89 b4 24 48 ff ff 	mov    %rsi,-0xb8(%rsp)
   2576a:	ff 
   2576b:	48 89 bc 24 40 ff ff 	mov    %rdi,-0xc0(%rsp)
   25772:	ff 
   25773:	48 8b ac 24 20 ff ff 	mov    -0xe0(%rsp),%rbp
   2577a:	ff 
   2577b:	48 8b b4 24 18 ff ff 	mov    -0xe8(%rsp),%rsi
   25782:	ff 
   25783:	48 8b 94 24 10 ff ff 	mov    -0xf0(%rsp),%rdx
   2578a:	ff 
   2578b:	48 8b bc 24 08 ff ff 	mov    -0xf8(%rsp),%rdi
   25792:	ff 
   25793:	40 d0 ed             	shr    %bpl
   25796:	48 89 eb             	mov    %rbp,%rbx
   25799:	73 07                	jae    257a2 <.restore_flags>
   2579b:	48 81 eb 00 10 00 00 	sub    $0x1000,%rbx

00000000000257a2 <.restore_flags>:
   257a2:	48 8d 84 24 38 ff ff 	lea    -0xc8(%rsp),%rax
   257a9:	ff 
   257aa:	48 94                	xchg   %rax,%rsp
   257ac:	9d                   	popf   
   257ad:	48 94                	xchg   %rax,%rsp
   257af:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   257b6:	00 00 00 00 
   257ba:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   257c1:	00 00 00 00 
   257c5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   257cc:	00 00 00 00 
   257d0:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   257d7:	00 00 00 00 
   257db:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   257e2:	00 00 00 00 
   257e6:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   257ed:	00 00 00 00 
   257f1:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   257f8:	00 00 00 00 
   257fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000025800 <.ct_enable_aexnotify>:
   25800:	48 8b 84 24 28 ff ff 	mov    -0xd8(%rsp),%rax
   25807:	ff 
   25808:	c6 00 01             	movb   $0x1,(%rax)

000000000002580b <__ct_mitigation_begin>:
   2580b:	0f ae e8             	lfence 

000000000002580e <.ct_check_write>:
   2580e:	b9 3f 00 00 00       	mov    $0x3f,%ecx
   25813:	c4 e2 f1 f7 ce       	shlx   %rcx,%rsi,%rcx
   25818:	e3 08                	jrcxz  25822 <.ct_clear_low_bits_of_rdx>
   2581a:	48 8d 76 ff          	lea    -0x1(%rsi),%rsi
   2581e:	8a 02                	mov    (%rdx),%al
   25820:	88 02                	mov    %al,(%rdx)

0000000000025822 <.ct_clear_low_bits_of_rdx>:
   25822:	b9 0c 00 00 00       	mov    $0xc,%ecx
   25827:	c4 e2 f3 f7 d2       	shrx   %rcx,%rdx,%rdx
   2582c:	c4 e2 f1 f7 d2       	shlx   %rcx,%rdx,%rdx

0000000000025831 <.ct_check_execute>:
   25831:	ff d7                	call   *%rdi
   25833:	b9 00 10 00 00       	mov    $0x1000,%ecx
   25838:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   2583f:	00 

0000000000025840 <.ct_warm_caches_and_tlbs>:
   25840:	67 8d 49 c0          	lea    -0x40(%ecx),%ecx
   25844:	8b 04 0e             	mov    (%rsi,%rcx,1),%eax
   25847:	8b 44 0d 00          	mov    0x0(%rbp,%rcx,1),%eax
   2584b:	8b 04 0b             	mov    (%rbx,%rcx,1),%eax
   2584e:	8b 04 0a             	mov    (%rdx,%rcx,1),%eax
   25851:	e3 02                	jrcxz  25855 <.ct_restore_state>
   25853:	eb eb                	jmp    25840 <.ct_warm_caches_and_tlbs>

0000000000025855 <.ct_restore_state>:
   25855:	40 0f b6 ce          	movzbl %sil,%ecx
   25859:	48 8b bc 24 30 ff ff 	mov    -0xd0(%rsp),%rdi
   25860:	ff 
   25861:	48 89 7c 24 f8       	mov    %rdi,-0x8(%rsp)
   25866:	48 8b bc 24 40 ff ff 	mov    -0xc0(%rsp),%rdi
   2586d:	ff 
   2586e:	48 8b b4 24 48 ff ff 	mov    -0xb8(%rsp),%rsi
   25875:	ff 
   25876:	48 8b ac 24 50 ff ff 	mov    -0xb0(%rsp),%rbp
   2587d:	ff 
   2587e:	48 8b 9c 24 58 ff ff 	mov    -0xa8(%rsp),%rbx
   25885:	ff 
   25886:	48 8b 94 24 60 ff ff 	mov    -0xa0(%rsp),%rdx
   2588d:	ff 
   2588e:	48 8b 84 24 70 ff ff 	mov    -0x90(%rsp),%rax
   25895:	ff 
   25896:	e3 50                	jrcxz  258e8 <.ct_restore_rcx>
   25898:	48 8d 24 24          	lea    (%rsp),%rsp
   2589c:	48 8d 24 24          	lea    (%rsp),%rsp
   258a0:	48 8d 24 24          	lea    (%rsp),%rsp
   258a4:	48 8d 24 24          	lea    (%rsp),%rsp
   258a8:	48 8d 24 24          	lea    (%rsp),%rsp
   258ac:	48 8d 24 24          	lea    (%rsp),%rsp
   258b0:	48 8d 24 24          	lea    (%rsp),%rsp
   258b4:	48 8d 24 24          	lea    (%rsp),%rsp
   258b8:	48 8d 24 24          	lea    (%rsp),%rsp
   258bc:	48 8d 24 24          	lea    (%rsp),%rsp
   258c0:	48 8d 24 24          	lea    (%rsp),%rsp
   258c4:	48 8d 24 24          	lea    (%rsp),%rsp
   258c8:	48 8d 24 24          	lea    (%rsp),%rsp
   258cc:	48 8d 24 24          	lea    (%rsp),%rsp
   258d0:	48 8d 24 24          	lea    (%rsp),%rsp
   258d4:	48 8d 24 24          	lea    (%rsp),%rsp
   258d8:	48 8d 24 24          	lea    (%rsp),%rsp
   258dc:	48 8d 24 24          	lea    (%rsp),%rsp
   258e0:	48 8d 24 24          	lea    (%rsp),%rsp
   258e4:	48 8d 24 24          	lea    (%rsp),%rsp

00000000000258e8 <.ct_restore_rcx>:
   258e8:	48 8b 8c 24 68 ff ff 	mov    -0x98(%rsp),%rcx
   258ef:	ff 

00000000000258f0 <__ct_mitigation_end>:
   258f0:	ff a4 24 78 ff ff ff 	jmp    *-0x88(%rsp)

00000000000258f7 <__ct_mitigation_ret>:
   258f7:	c3                   	ret    

00000000000258f8 <get_enclave_base>:
   258f8:	f3 0f 1e fa          	endbr64 
   258fc:	48 8d 05 fd a6 fd ff 	lea    -0x25903(%rip),%rax        # 0 <enclave.so>
   25903:	c3                   	ret    

0000000000025904 <get_enclave_state>:
   25904:	f3 0f 1e fa          	endbr64 
   25908:	48 8d 0d b1 c8 00 00 	lea    0xc8b1(%rip),%rcx        # 321c0 <g_enclave_state>
   2590f:	48 31 c0             	xor    %rax,%rax
   25912:	8b 01                	mov    (%rcx),%eax
   25914:	c3                   	ret    

0000000000025915 <set_enclave_state>:
   25915:	f3 0f 1e fa          	endbr64 
   25919:	48 8d 05 a0 c8 00 00 	lea    0xc8a0(%rip),%rax        # 321c0 <g_enclave_state>
   25920:	89 38                	mov    %edi,(%rax)
   25922:	c3                   	ret    

0000000000025923 <lock_enclave>:
   25923:	f3 0f 1e fa          	endbr64 
   25927:	48 8d 15 92 c8 00 00 	lea    0xc892(%rip),%rdx        # 321c0 <g_enclave_state>
   2592e:	48 31 c0             	xor    %rax,%rax
   25931:	b8 00 00 00 00       	mov    $0x0,%eax
   25936:	48 31 c9             	xor    %rcx,%rcx
   25939:	b9 01 00 00 00       	mov    $0x1,%ecx
   2593e:	f0 0f b1 0a          	lock cmpxchg %ecx,(%rdx)
   25942:	c3                   	ret    

0000000000025943 <get_thread_data>:
   25943:	f3 0f 1e fa          	endbr64 
   25947:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   2594e:	00 00 
   25950:	c3                   	ret    

0000000000025951 <get_stack_guard>:
   25951:	f3 0f 1e fa          	endbr64 
   25955:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
   2595c:	00 00 
   2595e:	c3                   	ret    

000000000002595f <enclave_entry>:
   2595f:	f3 0f 1e fa          	endbr64 
   25963:	48 31 d2             	xor    %rdx,%rdx
   25966:	48 01 d2             	add    %rdx,%rdx
   25969:	fc                   	cld    
   2596a:	4d 31 c0             	xor    %r8,%r8
   2596d:	4d 31 c9             	xor    %r9,%r9
   25970:	4d 31 d2             	xor    %r10,%r10
   25973:	4d 31 db             	xor    %r11,%r11
   25976:	4d 31 e4             	xor    %r12,%r12
   25979:	4d 31 ed             	xor    %r13,%r13
   2597c:	4d 31 f6             	xor    %r14,%r14
   2597f:	4d 31 ff             	xor    %r15,%r15
   25982:	48 83 f8 00          	cmp    $0x0,%rax
   25986:	0f 85 07 01 00 00    	jne    25a93 <enclave_entry+0x134>
   2598c:	65 48 8b 04 25 08 00 	mov    %gs:0x8,%rax
   25993:	00 00 
   25995:	48 83 f8 00          	cmp    $0x0,%rax
   25999:	75 0f                	jne    259aa <enclave_entry+0x4b>
   2599b:	48 89 d8             	mov    %rbx,%rax
   2599e:	48 2d 00 00 01 00    	sub    $0x10000,%rax
   259a4:	48 2d 00 04 00 00    	sub    $0x400,%rax
   259aa:	48 94                	xchg   %rax,%rsp
   259ac:	51                   	push   %rcx
   259ad:	55                   	push   %rbp
   259ae:	48 89 e5             	mov    %rsp,%rbp
   259b1:	9c                   	pushf  
   259b2:	48 f7 14 24          	notq   (%rsp)
   259b6:	48 81 0c 24 00 00 04 	orq    $0x40000,(%rsp)
   259bd:	00 
   259be:	48 f7 14 24          	notq   (%rsp)
   259c2:	9d                   	popf   
   259c3:	48 83 ec 30          	sub    $0x30,%rsp
   259c7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   259cb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   259cf:	48 89 5d e0          	mov    %rbx,-0x20(%rbp)
   259d3:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
   259d7:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
   259db:	48 83 ec 20          	sub    $0x20,%rsp
   259df:	48 8d 3d 5a 26 00 00 	lea    0x265a(%rip),%rdi        # 28040 <SYNTHETIC_STATE>
   259e6:	e8 b6 fa ff ff       	call   254a1 <restore_xregs>
   259eb:	0f ae e8             	lfence 
   259ee:	48 83 c4 20          	add    $0x20,%rsp
   259f2:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   259f6:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   259fa:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   259fe:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   25a02:	e8 f9 f8 ff ff       	call   25300 <enter_enclave>
   25a07:	48 89 c3             	mov    %rax,%rbx
   25a0a:	48 8d 3d 2f 26 00 00 	lea    0x262f(%rip),%rdi        # 28040 <SYNTHETIC_STATE>
   25a11:	e8 8b fa ff ff       	call   254a1 <restore_xregs>
   25a16:	0f ae e8             	lfence 
   25a19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   25a1d:	48 83 f8 00          	cmp    $0x0,%rax
   25a21:	75 2c                	jne    25a4f <enclave_entry+0xf0>
   25a23:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   25a2a:	00 00 
   25a2c:	48 83 f8 00          	cmp    $0x0,%rax
   25a30:	74 1d                	je     25a4f <enclave_entry+0xf0>
   25a32:	48 8b 50 20          	mov    0x20(%rax),%rdx
   25a36:	8a 8a a7 00 00 00    	mov    0xa7(%rdx),%cl
   25a3c:	80 f9 00             	cmp    $0x0,%cl
   25a3f:	74 0e                	je     25a4f <enclave_entry+0xf0>
   25a41:	c6 82 a7 00 00 00 00 	movb   $0x0,0xa7(%rdx)
   25a48:	c7 40 50 01 00 00 00 	movl   $0x1,0x50(%rax)
   25a4f:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   25a56:	48 89 de             	mov    %rbx,%rsi
   25a59:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   25a5d:	48 89 ec             	mov    %rbp,%rsp
   25a60:	5d                   	pop    %rbp
   25a61:	5b                   	pop    %rbx
   25a62:	48 89 d4             	mov    %rdx,%rsp
   25a65:	48 31 c9             	xor    %rcx,%rcx
   25a68:	48 31 d2             	xor    %rdx,%rdx
   25a6b:	4d 31 c0             	xor    %r8,%r8
   25a6e:	4d 31 c9             	xor    %r9,%r9
   25a71:	4d 31 d2             	xor    %r10,%r10
   25a74:	4d 31 db             	xor    %r11,%r11
   25a77:	4d 31 e4             	xor    %r12,%r12
   25a7a:	4d 31 ed             	xor    %r13,%r13
   25a7d:	4d 31 f6             	xor    %r14,%r14
   25a80:	4d 31 ff             	xor    %r15,%r15
   25a83:	48 01 d2             	add    %rdx,%rdx
   25a86:	fc                   	cld    
   25a87:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   25a8e:	0f 01 d7             	enclu  
   25a91:	0f 0b                	ud2    
   25a93:	48 89 c2             	mov    %rax,%rdx
   25a96:	48 89 d8             	mov    %rbx,%rax
   25a99:	48 2d 00 00 01 00    	sub    $0x10000,%rax
   25a9f:	e9 06 ff ff ff       	jmp    259aa <enclave_entry+0x4b>
   25aa4:	0f 0b                	ud2    

0000000000025aa6 <do_ocall>:
   25aa6:	f3 0f 1e fa          	endbr64 
   25aaa:	55                   	push   %rbp
   25aab:	48 89 e5             	mov    %rsp,%rbp
   25aae:	48 89 7d 10          	mov    %rdi,0x10(%rbp)
   25ab2:	48 89 75 18          	mov    %rsi,0x18(%rbp)
   25ab6:	65 48 8b 04 25 38 00 	mov    %gs:0x38,%rax
   25abd:	00 00 
   25abf:	48 29 c4             	sub    %rax,%rsp
   25ac2:	48 c7 c0 3f 00 00 00 	mov    $0x3f,%rax
   25ac9:	48 f7 d0             	not    %rax
   25acc:	48 21 c4             	and    %rax,%rsp
   25acf:	48 89 e1             	mov    %rsp,%rcx
   25ad2:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   25ad9:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
   25ae0:	00 
   25ae1:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
   25ae6:	48 89 74 24 68       	mov    %rsi,0x68(%rsp)
   25aeb:	48 89 7c 24 60       	mov    %rdi,0x60(%rsp)
   25af0:	48 89 6c 24 58       	mov    %rbp,0x58(%rsp)
   25af5:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
   25afa:	4c 89 6c 24 48       	mov    %r13,0x48(%rsp)
   25aff:	4c 89 74 24 40       	mov    %r14,0x40(%rsp)
   25b04:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
   25b09:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   25b10:	00 
   25b11:	65 48 8b 04 25 38 00 	mov    %gs:0x38,%rax
   25b18:	00 00 
   25b1a:	48 89 c1             	mov    %rax,%rcx
   25b1d:	48 c1 e9 02          	shr    $0x2,%rcx
   25b21:	48 31 c0             	xor    %rax,%rax
   25b24:	fc                   	cld    
   25b25:	f3 ab                	rep stos %eax,%es:(%rdi)
   25b27:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   25b2e:	00 
   25b2f:	48 89 3c 24          	mov    %rdi,(%rsp)
   25b33:	e8 99 f9 ff ff       	call   254d1 <save_xregs>
   25b38:	48 8d 3d 01 25 00 00 	lea    0x2501(%rip),%rdi        # 28040 <SYNTHETIC_STATE>
   25b3f:	48 89 3c 24          	mov    %rdi,(%rsp)
   25b43:	e8 59 f9 ff ff       	call   254a1 <restore_xregs>
   25b48:	0f ae e8             	lfence 
   25b4b:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   25b50:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   25b55:	48 c7 c0 44 49 43 4f 	mov    $0x4f434944,%rax
   25b5c:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   25b61:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   25b66:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   25b6d:	00 00 
   25b6f:	48 89 c3             	mov    %rax,%rbx
   25b72:	48 89 e7             	mov    %rsp,%rdi
   25b75:	e8 46 5d fe ff       	call   b8c0 <update_ocall_lastsp>
   25b7a:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   25b7f:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   25b84:	48 8b 53 20          	mov    0x20(%rbx),%rdx
   25b88:	8a 8a a7 00 00 00    	mov    0xa7(%rdx),%cl
   25b8e:	80 f9 00             	cmp    $0x0,%cl
   25b91:	74 0e                	je     25ba1 <do_ocall+0xfb>
   25b93:	c6 82 a7 00 00 00 00 	movb   $0x0,0xa7(%rdx)
   25b9a:	c7 43 50 01 00 00 00 	movl   $0x1,0x50(%rbx)
   25ba1:	48 8b aa 98 00 00 00 	mov    0x98(%rdx),%rbp
   25ba8:	48 8b a2 90 00 00 00 	mov    0x90(%rdx),%rsp
   25baf:	48 8b 58 f8          	mov    -0x8(%rax),%rbx
   25bb3:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   25bba:	48 31 c9             	xor    %rcx,%rcx
   25bbd:	48 31 d2             	xor    %rdx,%rdx
   25bc0:	4d 31 c0             	xor    %r8,%r8
   25bc3:	4d 31 c9             	xor    %r9,%r9
   25bc6:	4d 31 d2             	xor    %r10,%r10
   25bc9:	4d 31 db             	xor    %r11,%r11
   25bcc:	4d 31 e4             	xor    %r12,%r12
   25bcf:	4d 31 ed             	xor    %r13,%r13
   25bd2:	4d 31 f6             	xor    %r14,%r14
   25bd5:	4d 31 ff             	xor    %r15,%r15
   25bd8:	48 01 d2             	add    %rdx,%rdx
   25bdb:	fc                   	cld    
   25bdc:	0f 01 d7             	enclu  

0000000000025bdf <__morestack>:
   25bdf:	f3 0f 1e fa          	endbr64 
   25be3:	55                   	push   %rbp
   25be4:	48 89 e5             	mov    %rsp,%rbp
   25be7:	48 83 ec 20          	sub    $0x20,%rsp
   25beb:	e8 b6 fe ff ff       	call   25aa6 <do_ocall>
   25bf0:	c9                   	leave  
   25bf1:	c3                   	ret    

0000000000025bf2 <asm_oret>:
   25bf2:	f3 0f 1e fa          	endbr64 
   25bf6:	48 89 e3             	mov    %rsp,%rbx
   25bf9:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   25bfe:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   25c03:	48 8b 63 08          	mov    0x8(%rbx),%rsp
   25c07:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   25c0e:	00 
   25c0f:	e8 8d f8 ff ff       	call   254a1 <restore_xregs>
   25c14:	0f ae e8             	lfence 
   25c17:	48 31 c0             	xor    %rax,%rax
   25c1a:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   25c1f:	48 29 f9             	sub    %rdi,%rcx
   25c22:	48 83 e9 08          	sub    $0x8,%rcx
   25c26:	48 c1 e9 02          	shr    $0x2,%rcx
   25c2a:	fc                   	cld    
   25c2b:	f3 ab                	rep stos %eax,%es:(%rdi)
   25c2d:	48 8b 43 10          	mov    0x10(%rbx),%rax
   25c31:	4c 8b 7c 24 38       	mov    0x38(%rsp),%r15
   25c36:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
   25c3b:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
   25c40:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   25c45:	48 8b 6c 24 58       	mov    0x58(%rsp),%rbp
   25c4a:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   25c4f:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   25c54:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
   25c59:	48 89 ec             	mov    %rbp,%rsp
   25c5c:	5d                   	pop    %rbp
   25c5d:	c3                   	ret    
   25c5e:	0f 0b                	ud2    

0000000000025c60 <do_egetkey>:
   25c60:	f3 0f 1e fa          	endbr64 
   25c64:	53                   	push   %rbx
   25c65:	51                   	push   %rcx
   25c66:	52                   	push   %rdx
   25c67:	48 89 fb             	mov    %rdi,%rbx
   25c6a:	48 89 f1             	mov    %rsi,%rcx
   25c6d:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
   25c74:	0f 01 d7             	enclu  
   25c77:	74 03                	je     25c7c <do_egetkey+0x1c>
   25c79:	48 31 c0             	xor    %rax,%rax
   25c7c:	5a                   	pop    %rdx
   25c7d:	59                   	pop    %rcx
   25c7e:	5b                   	pop    %rbx
   25c7f:	c3                   	ret    

0000000000025c80 <do_ereport>:
   25c80:	f3 0f 1e fa          	endbr64 
   25c84:	53                   	push   %rbx
   25c85:	51                   	push   %rcx
   25c86:	52                   	push   %rdx
   25c87:	48 89 fb             	mov    %rdi,%rbx
   25c8a:	48 89 f1             	mov    %rsi,%rcx
   25c8d:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
   25c94:	f8                   	clc    

0000000000025c95 <Lereport_inst>:
   25c95:	0f 01 d7             	enclu  
   25c98:	0f 92 c0             	setb   %al
   25c9b:	5a                   	pop    %rdx
   25c9c:	59                   	pop    %rcx
   25c9d:	5b                   	pop    %rbx
   25c9e:	c3                   	ret    

0000000000025c9f <do_everifyreport2>:
   25c9f:	f3 0f 1e fa          	endbr64 
   25ca3:	53                   	push   %rbx
   25ca4:	51                   	push   %rcx
   25ca5:	52                   	push   %rdx
   25ca6:	48 89 fb             	mov    %rdi,%rbx
   25ca9:	48 89 f1             	mov    %rsi,%rcx
   25cac:	48 c7 c0 08 00 00 00 	mov    $0x8,%rax

0000000000025cb3 <Leverifyreport2_inst>:
   25cb3:	0f 01 d7             	enclu  
   25cb6:	74 03                	je     25cbb <Leverifyreport2_inst+0x8>
   25cb8:	48 31 c0             	xor    %rax,%rax
   25cbb:	5a                   	pop    %rdx
   25cbc:	59                   	pop    %rcx
   25cbd:	5b                   	pop    %rbx
   25cbe:	c3                   	ret    

0000000000025cbf <do_eaccept>:
   25cbf:	f3 0f 1e fa          	endbr64 
   25cc3:	53                   	push   %rbx
   25cc4:	51                   	push   %rcx
   25cc5:	52                   	push   %rdx
   25cc6:	48 89 fb             	mov    %rdi,%rbx
   25cc9:	48 89 f1             	mov    %rsi,%rcx
   25ccc:	b8 05 00 00 00       	mov    $0x5,%eax
   25cd1:	0f 01 d7             	enclu  
   25cd4:	83 f8 00             	cmp    $0x0,%eax
   25cd7:	75 5e                	jne    25d37 <abort>
   25cd9:	5a                   	pop    %rdx
   25cda:	59                   	pop    %rcx
   25cdb:	5b                   	pop    %rbx
   25cdc:	c3                   	ret    

0000000000025cdd <do_eacceptcopy>:
   25cdd:	f3 0f 1e fa          	endbr64 
   25ce1:	53                   	push   %rbx
   25ce2:	51                   	push   %rcx
   25ce3:	52                   	push   %rdx
   25ce4:	48 89 fb             	mov    %rdi,%rbx
   25ce7:	48 89 f1             	mov    %rsi,%rcx
   25cea:	b8 07 00 00 00       	mov    $0x7,%eax
   25cef:	0f 01 d7             	enclu  
   25cf2:	83 f8 00             	cmp    $0x0,%eax
   25cf5:	75 40                	jne    25d37 <abort>
   25cf7:	5a                   	pop    %rdx
   25cf8:	59                   	pop    %rcx
   25cf9:	5b                   	pop    %rbx
   25cfa:	c3                   	ret    

0000000000025cfb <do_emodpe>:
   25cfb:	f3 0f 1e fa          	endbr64 
   25cff:	53                   	push   %rbx
   25d00:	51                   	push   %rcx
   25d01:	52                   	push   %rdx
   25d02:	48 89 fb             	mov    %rdi,%rbx
   25d05:	48 89 f1             	mov    %rsi,%rcx
   25d08:	b8 06 00 00 00       	mov    $0x6,%eax
   25d0d:	0f 01 d7             	enclu  
   25d10:	5a                   	pop    %rdx
   25d11:	59                   	pop    %rcx
   25d12:	5b                   	pop    %rbx
   25d13:	c3                   	ret    

0000000000025d14 <do_rdrand>:
   25d14:	f3 0f 1e fa          	endbr64 
   25d18:	b9 0a 00 00 00       	mov    $0xa,%ecx
   25d1d:	0f c7 f0             	rdrand %eax
   25d20:	72 08                	jb     25d2a <do_rdrand+0x16>
   25d22:	ff c9                	dec    %ecx
   25d24:	75 f7                	jne    25d1d <do_rdrand+0x9>
   25d26:	48 31 c0             	xor    %rax,%rax
   25d29:	c3                   	ret    
   25d2a:	48 89 f9             	mov    %rdi,%rcx
   25d2d:	89 01                	mov    %eax,(%rcx)
   25d2f:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
   25d36:	c3                   	ret    

0000000000025d37 <abort>:
   25d37:	f3 0f 1e fa          	endbr64 
   25d3b:	48 8d 05 7e c4 00 00 	lea    0xc47e(%rip),%rax        # 321c0 <g_enclave_state>
   25d42:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
   25d48:	0f 0b                	ud2    

0000000000025d4a <continue_execution>:
   25d4a:	f3 0f 1e fa          	endbr64 
   25d4e:	48 89 f9             	mov    %rdi,%rcx
   25d51:	48 8b 01             	mov    (%rcx),%rax
   25d54:	50                   	push   %rax
   25d55:	48 8b 41 08          	mov    0x8(%rcx),%rax
   25d59:	50                   	push   %rax
   25d5a:	48 8b 41 20          	mov    0x20(%rcx),%rax
   25d5e:	48 2d 88 00 00 00    	sub    $0x88,%rax
   25d64:	48 8b 51 10          	mov    0x10(%rcx),%rdx
   25d68:	48 8b 59 18          	mov    0x18(%rcx),%rbx
   25d6c:	48 8b 69 28          	mov    0x28(%rcx),%rbp
   25d70:	48 8b 71 30          	mov    0x30(%rcx),%rsi
   25d74:	48 8b 79 38          	mov    0x38(%rcx),%rdi
   25d78:	4c 8b 41 40          	mov    0x40(%rcx),%r8
   25d7c:	4c 8b 49 48          	mov    0x48(%rcx),%r9
   25d80:	4c 8b 51 50          	mov    0x50(%rcx),%r10
   25d84:	4c 8b 59 58          	mov    0x58(%rcx),%r11
   25d88:	4c 8b 61 60          	mov    0x60(%rcx),%r12
   25d8c:	4c 8b 69 68          	mov    0x68(%rcx),%r13
   25d90:	4c 8b 71 70          	mov    0x70(%rcx),%r14
   25d94:	4c 8b 79 78          	mov    0x78(%rcx),%r15
   25d98:	ff b1 80 00 00 00    	push   0x80(%rcx)
   25d9e:	9d                   	popf   
   25d9f:	48 8b 89 88 00 00 00 	mov    0x88(%rcx),%rcx
   25da6:	48 89 08             	mov    %rcx,(%rax)
   25da9:	59                   	pop    %rcx
   25daa:	5c                   	pop    %rsp
   25dab:	48 94                	xchg   %rax,%rsp
   25dad:	c2 80 00             	ret    $0x80

0000000000025db0 <second_phase>:
   25db0:	f3 0f 1e fa          	endbr64 
   25db4:	48 89 f4             	mov    %rsi,%rsp
   25db7:	48 c7 c0 09 00 00 00 	mov    $0x9,%rax
   25dbe:	0f 01 d7             	enclu  
   25dc1:	ff e2                	jmp    *%rdx
